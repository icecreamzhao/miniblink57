// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content/browser/InterfaceRegistrarImpl

#ifndef org_chromium_content_browser_InterfaceRegistrarImpl_JNI
#define org_chromium_content_browser_InterfaceRegistrarImpl_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kInterfaceRegistrarImplClassPath[] = "org/chromium/content/browser/InterfaceRegistrarImpl";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_InterfaceRegistrarImpl_clazz __attribute__((unused))
= 0;
#define InterfaceRegistrarImpl_clazz(env) base::android::LazyGetClass(env, kInterfaceRegistrarImplClassPath, &g_InterfaceRegistrarImpl_clazz)

} // namespace

namespace content {

// Step 2: method stubs.

static base::subtle::AtomicWord
    g_InterfaceRegistrarImpl_createInterfaceRegistryForContext
    = 0;
static void
Java_InterfaceRegistrarImpl_createInterfaceRegistryForContext(JNIEnv* env,
    JniIntWrapper nativeHandle,
    const base::android::JavaRefOrBare<jobject>& applicationContext)
{
    CHECK_CLAZZ(env, InterfaceRegistrarImpl_clazz(env),
        InterfaceRegistrarImpl_clazz(env));
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_STATIC>(
        env, InterfaceRegistrarImpl_clazz(env),
        "createInterfaceRegistryForContext",
        "("
        "I"
        "Landroid/content/Context;"
        ")"
        "V",
        &g_InterfaceRegistrarImpl_createInterfaceRegistryForContext);

    env->CallStaticVoidMethod(InterfaceRegistrarImpl_clazz(env),
        method_id, as_jint(nativeHandle), applicationContext.obj());
    jni_generator::CheckException(env);
}

static base::subtle::AtomicWord
    g_InterfaceRegistrarImpl_createInterfaceRegistryForWebContents
    = 0;
static void
Java_InterfaceRegistrarImpl_createInterfaceRegistryForWebContents(JNIEnv*
                                                                      env,
    JniIntWrapper nativeHandle,
    const base::android::JavaRefOrBare<jobject>& webContents)
{
    CHECK_CLAZZ(env, InterfaceRegistrarImpl_clazz(env),
        InterfaceRegistrarImpl_clazz(env));
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_STATIC>(
        env, InterfaceRegistrarImpl_clazz(env),
        "createInterfaceRegistryForWebContents",
        "("
        "I"
        "Lorg/chromium/content_public/browser/WebContents;"
        ")"
        "V",
        &g_InterfaceRegistrarImpl_createInterfaceRegistryForWebContents);

    env->CallStaticVoidMethod(InterfaceRegistrarImpl_clazz(env),
        method_id, as_jint(nativeHandle), webContents.obj());
    jni_generator::CheckException(env);
}

// Step 3: RegisterNatives.

} // namespace content

#endif // org_chromium_content_browser_InterfaceRegistrarImpl_JNI
