// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: notification_database_data.proto

#ifndef PROTOBUF_notification_5fdatabase_5fdata_2eproto__INCLUDED
#define PROTOBUF_notification_5fdatabase_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace content {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto();
void protobuf_AssignDesc_notification_5fdatabase_5fdata_2eproto();
void protobuf_ShutdownFile_notification_5fdatabase_5fdata_2eproto();

class NotificationDatabaseDataProto;
class NotificationDatabaseDataProto_NotificationAction;
class NotificationDatabaseDataProto_NotificationData;

enum NotificationDatabaseDataProto_NotificationAction_Type {
    NotificationDatabaseDataProto_NotificationAction_Type_BUTTON = 0,
    NotificationDatabaseDataProto_NotificationAction_Type_TEXT = 1
};
bool NotificationDatabaseDataProto_NotificationAction_Type_IsValid(int value);
const NotificationDatabaseDataProto_NotificationAction_Type NotificationDatabaseDataProto_NotificationAction_Type_Type_MIN = NotificationDatabaseDataProto_NotificationAction_Type_BUTTON;
const NotificationDatabaseDataProto_NotificationAction_Type NotificationDatabaseDataProto_NotificationAction_Type_Type_MAX = NotificationDatabaseDataProto_NotificationAction_Type_TEXT;
const int NotificationDatabaseDataProto_NotificationAction_Type_Type_ARRAYSIZE = NotificationDatabaseDataProto_NotificationAction_Type_Type_MAX + 1;

enum NotificationDatabaseDataProto_NotificationData_Direction {
    NotificationDatabaseDataProto_NotificationData_Direction_LEFT_TO_RIGHT = 0,
    NotificationDatabaseDataProto_NotificationData_Direction_RIGHT_TO_LEFT = 1,
    NotificationDatabaseDataProto_NotificationData_Direction_AUTO = 2
};
bool NotificationDatabaseDataProto_NotificationData_Direction_IsValid(int value);
const NotificationDatabaseDataProto_NotificationData_Direction NotificationDatabaseDataProto_NotificationData_Direction_Direction_MIN = NotificationDatabaseDataProto_NotificationData_Direction_LEFT_TO_RIGHT;
const NotificationDatabaseDataProto_NotificationData_Direction NotificationDatabaseDataProto_NotificationData_Direction_Direction_MAX = NotificationDatabaseDataProto_NotificationData_Direction_AUTO;
const int NotificationDatabaseDataProto_NotificationData_Direction_Direction_ARRAYSIZE = NotificationDatabaseDataProto_NotificationData_Direction_Direction_MAX + 1;

// ===================================================================

class NotificationDatabaseDataProto_NotificationAction : public ::google::protobuf::MessageLite {
public:
    NotificationDatabaseDataProto_NotificationAction();
    virtual ~NotificationDatabaseDataProto_NotificationAction();

    NotificationDatabaseDataProto_NotificationAction(const NotificationDatabaseDataProto_NotificationAction& from);

    inline NotificationDatabaseDataProto_NotificationAction& operator=(const NotificationDatabaseDataProto_NotificationAction& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const NotificationDatabaseDataProto_NotificationAction& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const NotificationDatabaseDataProto_NotificationAction* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(NotificationDatabaseDataProto_NotificationAction* other);

    // implements Message ----------------------------------------------

    inline NotificationDatabaseDataProto_NotificationAction* New() const { return New(NULL); }

    NotificationDatabaseDataProto_NotificationAction* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const NotificationDatabaseDataProto_NotificationAction& from);
    void MergeFrom(const NotificationDatabaseDataProto_NotificationAction& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(NotificationDatabaseDataProto_NotificationAction* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef NotificationDatabaseDataProto_NotificationAction_Type Type;
    static const Type BUTTON = NotificationDatabaseDataProto_NotificationAction_Type_BUTTON;
    static const Type TEXT = NotificationDatabaseDataProto_NotificationAction_Type_TEXT;
    static inline bool Type_IsValid(int value)
    {
        return NotificationDatabaseDataProto_NotificationAction_Type_IsValid(value);
    }
    static const Type Type_MIN = NotificationDatabaseDataProto_NotificationAction_Type_Type_MIN;
    static const Type Type_MAX = NotificationDatabaseDataProto_NotificationAction_Type_Type_MAX;
    static const int Type_ARRAYSIZE = NotificationDatabaseDataProto_NotificationAction_Type_Type_ARRAYSIZE;

    // accessors -------------------------------------------------------

    // optional string action = 1;
    bool has_action() const;
    void clear_action();
    static const int kActionFieldNumber = 1;
    const ::std::string& action() const;
    void set_action(const ::std::string& value);
    void set_action(const char* value);
    void set_action(const char* value, size_t size);
    ::std::string* mutable_action();
    ::std::string* release_action();
    void set_allocated_action(::std::string* action);

    // optional string title = 2;
    bool has_title() const;
    void clear_title();
    static const int kTitleFieldNumber = 2;
    const ::std::string& title() const;
    void set_title(const ::std::string& value);
    void set_title(const char* value);
    void set_title(const char* value, size_t size);
    ::std::string* mutable_title();
    ::std::string* release_title();
    void set_allocated_title(::std::string* title);

    // optional string icon = 3;
    bool has_icon() const;
    void clear_icon();
    static const int kIconFieldNumber = 3;
    const ::std::string& icon() const;
    void set_icon(const ::std::string& value);
    void set_icon(const char* value);
    void set_icon(const char* value, size_t size);
    ::std::string* mutable_icon();
    ::std::string* release_icon();
    void set_allocated_icon(::std::string* icon);

    // optional .content.NotificationDatabaseDataProto.NotificationAction.Type type = 4;
    bool has_type() const;
    void clear_type();
    static const int kTypeFieldNumber = 4;
    ::content::NotificationDatabaseDataProto_NotificationAction_Type type() const;
    void set_type(::content::NotificationDatabaseDataProto_NotificationAction_Type value);

    // optional string placeholder = 5;
    bool has_placeholder() const;
    void clear_placeholder();
    static const int kPlaceholderFieldNumber = 5;
    const ::std::string& placeholder() const;
    void set_placeholder(const ::std::string& value);
    void set_placeholder(const char* value);
    void set_placeholder(const char* value, size_t size);
    ::std::string* mutable_placeholder();
    ::std::string* release_placeholder();
    void set_allocated_placeholder(::std::string* placeholder);

    // @@protoc_insertion_point(class_scope:content.NotificationDatabaseDataProto.NotificationAction)
private:
    inline void set_has_action();
    inline void clear_has_action();
    inline void set_has_title();
    inline void clear_has_title();
    inline void set_has_icon();
    inline void clear_has_icon();
    inline void set_has_type();
    inline void clear_has_type();
    inline void set_has_placeholder();
    inline void clear_has_placeholder();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr action_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr icon_;
    ::google::protobuf::internal::ArenaStringPtr placeholder_;
    int type_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto_impl();
#else
    friend void protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto();
#endif
    friend void protobuf_AssignDesc_notification_5fdatabase_5fdata_2eproto();
    friend void protobuf_ShutdownFile_notification_5fdatabase_5fdata_2eproto();

    void InitAsDefaultInstance();
    static NotificationDatabaseDataProto_NotificationAction* default_instance_;
};
// -------------------------------------------------------------------

class NotificationDatabaseDataProto_NotificationData : public ::google::protobuf::MessageLite {
public:
    NotificationDatabaseDataProto_NotificationData();
    virtual ~NotificationDatabaseDataProto_NotificationData();

    NotificationDatabaseDataProto_NotificationData(const NotificationDatabaseDataProto_NotificationData& from);

    inline NotificationDatabaseDataProto_NotificationData& operator=(const NotificationDatabaseDataProto_NotificationData& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const NotificationDatabaseDataProto_NotificationData& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const NotificationDatabaseDataProto_NotificationData* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(NotificationDatabaseDataProto_NotificationData* other);

    // implements Message ----------------------------------------------

    inline NotificationDatabaseDataProto_NotificationData* New() const { return New(NULL); }

    NotificationDatabaseDataProto_NotificationData* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const NotificationDatabaseDataProto_NotificationData& from);
    void MergeFrom(const NotificationDatabaseDataProto_NotificationData& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(NotificationDatabaseDataProto_NotificationData* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef NotificationDatabaseDataProto_NotificationData_Direction Direction;
    static const Direction LEFT_TO_RIGHT = NotificationDatabaseDataProto_NotificationData_Direction_LEFT_TO_RIGHT;
    static const Direction RIGHT_TO_LEFT = NotificationDatabaseDataProto_NotificationData_Direction_RIGHT_TO_LEFT;
    static const Direction AUTO = NotificationDatabaseDataProto_NotificationData_Direction_AUTO;
    static inline bool Direction_IsValid(int value)
    {
        return NotificationDatabaseDataProto_NotificationData_Direction_IsValid(value);
    }
    static const Direction Direction_MIN = NotificationDatabaseDataProto_NotificationData_Direction_Direction_MIN;
    static const Direction Direction_MAX = NotificationDatabaseDataProto_NotificationData_Direction_Direction_MAX;
    static const int Direction_ARRAYSIZE = NotificationDatabaseDataProto_NotificationData_Direction_Direction_ARRAYSIZE;

    // accessors -------------------------------------------------------

    // optional string title = 1;
    bool has_title() const;
    void clear_title();
    static const int kTitleFieldNumber = 1;
    const ::std::string& title() const;
    void set_title(const ::std::string& value);
    void set_title(const char* value);
    void set_title(const char* value, size_t size);
    ::std::string* mutable_title();
    ::std::string* release_title();
    void set_allocated_title(::std::string* title);

    // optional .content.NotificationDatabaseDataProto.NotificationData.Direction direction = 2;
    bool has_direction() const;
    void clear_direction();
    static const int kDirectionFieldNumber = 2;
    ::content::NotificationDatabaseDataProto_NotificationData_Direction direction() const;
    void set_direction(::content::NotificationDatabaseDataProto_NotificationData_Direction value);

    // optional string lang = 3;
    bool has_lang() const;
    void clear_lang();
    static const int kLangFieldNumber = 3;
    const ::std::string& lang() const;
    void set_lang(const ::std::string& value);
    void set_lang(const char* value);
    void set_lang(const char* value, size_t size);
    ::std::string* mutable_lang();
    ::std::string* release_lang();
    void set_allocated_lang(::std::string* lang);

    // optional string body = 4;
    bool has_body() const;
    void clear_body();
    static const int kBodyFieldNumber = 4;
    const ::std::string& body() const;
    void set_body(const ::std::string& value);
    void set_body(const char* value);
    void set_body(const char* value, size_t size);
    ::std::string* mutable_body();
    ::std::string* release_body();
    void set_allocated_body(::std::string* body);

    // optional string tag = 5;
    bool has_tag() const;
    void clear_tag();
    static const int kTagFieldNumber = 5;
    const ::std::string& tag() const;
    void set_tag(const ::std::string& value);
    void set_tag(const char* value);
    void set_tag(const char* value, size_t size);
    ::std::string* mutable_tag();
    ::std::string* release_tag();
    void set_allocated_tag(::std::string* tag);

    // optional string image = 15;
    bool has_image() const;
    void clear_image();
    static const int kImageFieldNumber = 15;
    const ::std::string& image() const;
    void set_image(const ::std::string& value);
    void set_image(const char* value);
    void set_image(const char* value, size_t size);
    ::std::string* mutable_image();
    ::std::string* release_image();
    void set_allocated_image(::std::string* image);

    // optional string icon = 6;
    bool has_icon() const;
    void clear_icon();
    static const int kIconFieldNumber = 6;
    const ::std::string& icon() const;
    void set_icon(const ::std::string& value);
    void set_icon(const char* value);
    void set_icon(const char* value, size_t size);
    ::std::string* mutable_icon();
    ::std::string* release_icon();
    void set_allocated_icon(::std::string* icon);

    // optional string badge = 14;
    bool has_badge() const;
    void clear_badge();
    static const int kBadgeFieldNumber = 14;
    const ::std::string& badge() const;
    void set_badge(const ::std::string& value);
    void set_badge(const char* value);
    void set_badge(const char* value, size_t size);
    ::std::string* mutable_badge();
    ::std::string* release_badge();
    void set_allocated_badge(::std::string* badge);

    // repeated int32 vibration_pattern = 9 [packed = true];
    int vibration_pattern_size() const;
    void clear_vibration_pattern();
    static const int kVibrationPatternFieldNumber = 9;
    ::google::protobuf::int32 vibration_pattern(int index) const;
    void set_vibration_pattern(int index, ::google::protobuf::int32 value);
    void add_vibration_pattern(::google::protobuf::int32 value);
    const ::google::protobuf::RepeatedField<::google::protobuf::int32>&
    vibration_pattern() const;
    ::google::protobuf::RepeatedField<::google::protobuf::int32>*
    mutable_vibration_pattern();

    // optional int64 timestamp = 12;
    bool has_timestamp() const;
    void clear_timestamp();
    static const int kTimestampFieldNumber = 12;
    ::google::protobuf::int64 timestamp() const;
    void set_timestamp(::google::protobuf::int64 value);

    // optional bool renotify = 13;
    bool has_renotify() const;
    void clear_renotify();
    static const int kRenotifyFieldNumber = 13;
    bool renotify() const;
    void set_renotify(bool value);

    // optional bool silent = 7;
    bool has_silent() const;
    void clear_silent();
    static const int kSilentFieldNumber = 7;
    bool silent() const;
    void set_silent(bool value);

    // optional bool require_interaction = 11;
    bool has_require_interaction() const;
    void clear_require_interaction();
    static const int kRequireInteractionFieldNumber = 11;
    bool require_interaction() const;
    void set_require_interaction(bool value);

    // optional bytes data = 8;
    bool has_data() const;
    void clear_data();
    static const int kDataFieldNumber = 8;
    const ::std::string& data() const;
    void set_data(const ::std::string& value);
    void set_data(const char* value);
    void set_data(const void* value, size_t size);
    ::std::string* mutable_data();
    ::std::string* release_data();
    void set_allocated_data(::std::string* data);

    // repeated .content.NotificationDatabaseDataProto.NotificationAction actions = 10;
    int actions_size() const;
    void clear_actions();
    static const int kActionsFieldNumber = 10;
    const ::content::NotificationDatabaseDataProto_NotificationAction& actions(int index) const;
    ::content::NotificationDatabaseDataProto_NotificationAction* mutable_actions(int index);
    ::content::NotificationDatabaseDataProto_NotificationAction* add_actions();
    ::google::protobuf::RepeatedPtrField<::content::NotificationDatabaseDataProto_NotificationAction>*
    mutable_actions();
    const ::google::protobuf::RepeatedPtrField<::content::NotificationDatabaseDataProto_NotificationAction>&
    actions() const;

    // @@protoc_insertion_point(class_scope:content.NotificationDatabaseDataProto.NotificationData)
private:
    inline void set_has_title();
    inline void clear_has_title();
    inline void set_has_direction();
    inline void clear_has_direction();
    inline void set_has_lang();
    inline void clear_has_lang();
    inline void set_has_body();
    inline void clear_has_body();
    inline void set_has_tag();
    inline void clear_has_tag();
    inline void set_has_image();
    inline void clear_has_image();
    inline void set_has_icon();
    inline void clear_has_icon();
    inline void set_has_badge();
    inline void clear_has_badge();
    inline void set_has_timestamp();
    inline void clear_has_timestamp();
    inline void set_has_renotify();
    inline void clear_has_renotify();
    inline void set_has_silent();
    inline void clear_has_silent();
    inline void set_has_require_interaction();
    inline void clear_has_require_interaction();
    inline void set_has_data();
    inline void clear_has_data();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr body_;
    ::google::protobuf::internal::ArenaStringPtr tag_;
    ::google::protobuf::internal::ArenaStringPtr image_;
    ::google::protobuf::internal::ArenaStringPtr icon_;
    ::google::protobuf::internal::ArenaStringPtr badge_;
    ::google::protobuf::RepeatedField<::google::protobuf::int32> vibration_pattern_;
    mutable int _vibration_pattern_cached_byte_size_;
    int direction_;
    bool renotify_;
    bool silent_;
    bool require_interaction_;
    ::google::protobuf::int64 timestamp_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::RepeatedPtrField<::content::NotificationDatabaseDataProto_NotificationAction> actions_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto_impl();
#else
    friend void protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto();
#endif
    friend void protobuf_AssignDesc_notification_5fdatabase_5fdata_2eproto();
    friend void protobuf_ShutdownFile_notification_5fdatabase_5fdata_2eproto();

    void InitAsDefaultInstance();
    static NotificationDatabaseDataProto_NotificationData* default_instance_;
};
// -------------------------------------------------------------------

class NotificationDatabaseDataProto : public ::google::protobuf::MessageLite {
public:
    NotificationDatabaseDataProto();
    virtual ~NotificationDatabaseDataProto();

    NotificationDatabaseDataProto(const NotificationDatabaseDataProto& from);

    inline NotificationDatabaseDataProto& operator=(const NotificationDatabaseDataProto& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const NotificationDatabaseDataProto& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const NotificationDatabaseDataProto* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(NotificationDatabaseDataProto* other);

    // implements Message ----------------------------------------------

    inline NotificationDatabaseDataProto* New() const { return New(NULL); }

    NotificationDatabaseDataProto* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const NotificationDatabaseDataProto& from);
    void MergeFrom(const NotificationDatabaseDataProto& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(NotificationDatabaseDataProto* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef NotificationDatabaseDataProto_NotificationAction NotificationAction;
    typedef NotificationDatabaseDataProto_NotificationData NotificationData;

    // accessors -------------------------------------------------------

    // optional int64 persistent_notification_id = 1;
    bool has_persistent_notification_id() const;
    void clear_persistent_notification_id();
    static const int kPersistentNotificationIdFieldNumber = 1;
    ::google::protobuf::int64 persistent_notification_id() const;
    void set_persistent_notification_id(::google::protobuf::int64 value);

    // optional string notification_id = 5;
    bool has_notification_id() const;
    void clear_notification_id();
    static const int kNotificationIdFieldNumber = 5;
    const ::std::string& notification_id() const;
    void set_notification_id(const ::std::string& value);
    void set_notification_id(const char* value);
    void set_notification_id(const char* value, size_t size);
    ::std::string* mutable_notification_id();
    ::std::string* release_notification_id();
    void set_allocated_notification_id(::std::string* notification_id);

    // optional string origin = 2;
    bool has_origin() const;
    void clear_origin();
    static const int kOriginFieldNumber = 2;
    const ::std::string& origin() const;
    void set_origin(const ::std::string& value);
    void set_origin(const char* value);
    void set_origin(const char* value, size_t size);
    ::std::string* mutable_origin();
    ::std::string* release_origin();
    void set_allocated_origin(::std::string* origin);

    // optional int64 service_worker_registration_id = 3;
    bool has_service_worker_registration_id() const;
    void clear_service_worker_registration_id();
    static const int kServiceWorkerRegistrationIdFieldNumber = 3;
    ::google::protobuf::int64 service_worker_registration_id() const;
    void set_service_worker_registration_id(::google::protobuf::int64 value);

    // optional .content.NotificationDatabaseDataProto.NotificationData notification_data = 4;
    bool has_notification_data() const;
    void clear_notification_data();
    static const int kNotificationDataFieldNumber = 4;
    const ::content::NotificationDatabaseDataProto_NotificationData& notification_data() const;
    ::content::NotificationDatabaseDataProto_NotificationData* mutable_notification_data();
    ::content::NotificationDatabaseDataProto_NotificationData* release_notification_data();
    void set_allocated_notification_data(::content::NotificationDatabaseDataProto_NotificationData* notification_data);

    // @@protoc_insertion_point(class_scope:content.NotificationDatabaseDataProto)
private:
    inline void set_has_persistent_notification_id();
    inline void clear_has_persistent_notification_id();
    inline void set_has_notification_id();
    inline void clear_has_notification_id();
    inline void set_has_origin();
    inline void clear_has_origin();
    inline void set_has_service_worker_registration_id();
    inline void clear_has_service_worker_registration_id();
    inline void set_has_notification_data();
    inline void clear_has_notification_data();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::int64 persistent_notification_id_;
    ::google::protobuf::internal::ArenaStringPtr notification_id_;
    ::google::protobuf::internal::ArenaStringPtr origin_;
    ::google::protobuf::int64 service_worker_registration_id_;
    ::content::NotificationDatabaseDataProto_NotificationData* notification_data_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto_impl();
#else
    friend void protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto();
#endif
    friend void protobuf_AssignDesc_notification_5fdatabase_5fdata_2eproto();
    friend void protobuf_ShutdownFile_notification_5fdatabase_5fdata_2eproto();

    void InitAsDefaultInstance();
    static NotificationDatabaseDataProto* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NotificationDatabaseDataProto_NotificationAction

// optional string action = 1;
inline bool NotificationDatabaseDataProto_NotificationAction::has_action() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationAction::set_has_action()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void NotificationDatabaseDataProto_NotificationAction::clear_has_action()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void NotificationDatabaseDataProto_NotificationAction::clear_action()
{
    action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_action();
}
inline const ::std::string& NotificationDatabaseDataProto_NotificationAction::action() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationAction.action)
    return action_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationAction::set_action(const ::std::string& value)
{
    set_has_action();
    action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationAction.action)
}
inline void NotificationDatabaseDataProto_NotificationAction::set_action(const char* value)
{
    set_has_action();
    action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationAction.action)
}
inline void NotificationDatabaseDataProto_NotificationAction::set_action(const char* value, size_t size)
{
    set_has_action();
    action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationAction.action)
}
inline ::std::string* NotificationDatabaseDataProto_NotificationAction::mutable_action()
{
    set_has_action();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationAction.action)
    return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationDatabaseDataProto_NotificationAction::release_action()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationAction.action)
    clear_has_action();
    return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationAction::set_allocated_action(::std::string* action)
{
    if (action != NULL) {
        set_has_action();
    } else {
        clear_has_action();
    }
    action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationAction.action)
}

// optional string title = 2;
inline bool NotificationDatabaseDataProto_NotificationAction::has_title() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationAction::set_has_title()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void NotificationDatabaseDataProto_NotificationAction::clear_has_title()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void NotificationDatabaseDataProto_NotificationAction::clear_title()
{
    title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_title();
}
inline const ::std::string& NotificationDatabaseDataProto_NotificationAction::title() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationAction.title)
    return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationAction::set_title(const ::std::string& value)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationAction.title)
}
inline void NotificationDatabaseDataProto_NotificationAction::set_title(const char* value)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationAction.title)
}
inline void NotificationDatabaseDataProto_NotificationAction::set_title(const char* value, size_t size)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationAction.title)
}
inline ::std::string* NotificationDatabaseDataProto_NotificationAction::mutable_title()
{
    set_has_title();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationAction.title)
    return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationDatabaseDataProto_NotificationAction::release_title()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationAction.title)
    clear_has_title();
    return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationAction::set_allocated_title(::std::string* title)
{
    if (title != NULL) {
        set_has_title();
    } else {
        clear_has_title();
    }
    title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationAction.title)
}

// optional string icon = 3;
inline bool NotificationDatabaseDataProto_NotificationAction::has_icon() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationAction::set_has_icon()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void NotificationDatabaseDataProto_NotificationAction::clear_has_icon()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void NotificationDatabaseDataProto_NotificationAction::clear_icon()
{
    icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_icon();
}
inline const ::std::string& NotificationDatabaseDataProto_NotificationAction::icon() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationAction.icon)
    return icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationAction::set_icon(const ::std::string& value)
{
    set_has_icon();
    icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationAction.icon)
}
inline void NotificationDatabaseDataProto_NotificationAction::set_icon(const char* value)
{
    set_has_icon();
    icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationAction.icon)
}
inline void NotificationDatabaseDataProto_NotificationAction::set_icon(const char* value, size_t size)
{
    set_has_icon();
    icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationAction.icon)
}
inline ::std::string* NotificationDatabaseDataProto_NotificationAction::mutable_icon()
{
    set_has_icon();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationAction.icon)
    return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationDatabaseDataProto_NotificationAction::release_icon()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationAction.icon)
    clear_has_icon();
    return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationAction::set_allocated_icon(::std::string* icon)
{
    if (icon != NULL) {
        set_has_icon();
    } else {
        clear_has_icon();
    }
    icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationAction.icon)
}

// optional .content.NotificationDatabaseDataProto.NotificationAction.Type type = 4;
inline bool NotificationDatabaseDataProto_NotificationAction::has_type() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationAction::set_has_type()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void NotificationDatabaseDataProto_NotificationAction::clear_has_type()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void NotificationDatabaseDataProto_NotificationAction::clear_type()
{
    type_ = 0;
    clear_has_type();
}
inline ::content::NotificationDatabaseDataProto_NotificationAction_Type NotificationDatabaseDataProto_NotificationAction::type() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationAction.type)
    return static_cast<::content::NotificationDatabaseDataProto_NotificationAction_Type>(type_);
}
inline void NotificationDatabaseDataProto_NotificationAction::set_type(::content::NotificationDatabaseDataProto_NotificationAction_Type value)
{
    assert(::content::NotificationDatabaseDataProto_NotificationAction_Type_IsValid(value));
    set_has_type();
    type_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationAction.type)
}

// optional string placeholder = 5;
inline bool NotificationDatabaseDataProto_NotificationAction::has_placeholder() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationAction::set_has_placeholder()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void NotificationDatabaseDataProto_NotificationAction::clear_has_placeholder()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void NotificationDatabaseDataProto_NotificationAction::clear_placeholder()
{
    placeholder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_placeholder();
}
inline const ::std::string& NotificationDatabaseDataProto_NotificationAction::placeholder() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationAction.placeholder)
    return placeholder_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationAction::set_placeholder(const ::std::string& value)
{
    set_has_placeholder();
    placeholder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationAction.placeholder)
}
inline void NotificationDatabaseDataProto_NotificationAction::set_placeholder(const char* value)
{
    set_has_placeholder();
    placeholder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationAction.placeholder)
}
inline void NotificationDatabaseDataProto_NotificationAction::set_placeholder(const char* value, size_t size)
{
    set_has_placeholder();
    placeholder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationAction.placeholder)
}
inline ::std::string* NotificationDatabaseDataProto_NotificationAction::mutable_placeholder()
{
    set_has_placeholder();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationAction.placeholder)
    return placeholder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationDatabaseDataProto_NotificationAction::release_placeholder()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationAction.placeholder)
    clear_has_placeholder();
    return placeholder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationAction::set_allocated_placeholder(::std::string* placeholder)
{
    if (placeholder != NULL) {
        set_has_placeholder();
    } else {
        clear_has_placeholder();
    }
    placeholder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), placeholder);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationAction.placeholder)
}

// -------------------------------------------------------------------

// NotificationDatabaseDataProto_NotificationData

// optional string title = 1;
inline bool NotificationDatabaseDataProto_NotificationData::has_title() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationData::set_has_title()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_has_title()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_title()
{
    title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_title();
}
inline const ::std::string& NotificationDatabaseDataProto_NotificationData::title() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.title)
    return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_title(const ::std::string& value)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.title)
}
inline void NotificationDatabaseDataProto_NotificationData::set_title(const char* value)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.title)
}
inline void NotificationDatabaseDataProto_NotificationData::set_title(const char* value, size_t size)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.title)
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::mutable_title()
{
    set_has_title();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.title)
    return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::release_title()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.title)
    clear_has_title();
    return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_allocated_title(::std::string* title)
{
    if (title != NULL) {
        set_has_title();
    } else {
        clear_has_title();
    }
    title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.title)
}

// optional .content.NotificationDatabaseDataProto.NotificationData.Direction direction = 2;
inline bool NotificationDatabaseDataProto_NotificationData::has_direction() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationData::set_has_direction()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_has_direction()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_direction()
{
    direction_ = 0;
    clear_has_direction();
}
inline ::content::NotificationDatabaseDataProto_NotificationData_Direction NotificationDatabaseDataProto_NotificationData::direction() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.direction)
    return static_cast<::content::NotificationDatabaseDataProto_NotificationData_Direction>(direction_);
}
inline void NotificationDatabaseDataProto_NotificationData::set_direction(::content::NotificationDatabaseDataProto_NotificationData_Direction value)
{
    assert(::content::NotificationDatabaseDataProto_NotificationData_Direction_IsValid(value));
    set_has_direction();
    direction_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.direction)
}

// optional string lang = 3;
inline bool NotificationDatabaseDataProto_NotificationData::has_lang() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationData::set_has_lang()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_has_lang()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_lang()
{
    lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_lang();
}
inline const ::std::string& NotificationDatabaseDataProto_NotificationData::lang() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.lang)
    return lang_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_lang(const ::std::string& value)
{
    set_has_lang();
    lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.lang)
}
inline void NotificationDatabaseDataProto_NotificationData::set_lang(const char* value)
{
    set_has_lang();
    lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.lang)
}
inline void NotificationDatabaseDataProto_NotificationData::set_lang(const char* value, size_t size)
{
    set_has_lang();
    lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.lang)
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::mutable_lang()
{
    set_has_lang();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.lang)
    return lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::release_lang()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.lang)
    clear_has_lang();
    return lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_allocated_lang(::std::string* lang)
{
    if (lang != NULL) {
        set_has_lang();
    } else {
        clear_has_lang();
    }
    lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.lang)
}

// optional string body = 4;
inline bool NotificationDatabaseDataProto_NotificationData::has_body() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationData::set_has_body()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_has_body()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_body()
{
    body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_body();
}
inline const ::std::string& NotificationDatabaseDataProto_NotificationData::body() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.body)
    return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_body(const ::std::string& value)
{
    set_has_body();
    body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.body)
}
inline void NotificationDatabaseDataProto_NotificationData::set_body(const char* value)
{
    set_has_body();
    body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.body)
}
inline void NotificationDatabaseDataProto_NotificationData::set_body(const char* value, size_t size)
{
    set_has_body();
    body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.body)
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::mutable_body()
{
    set_has_body();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.body)
    return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::release_body()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.body)
    clear_has_body();
    return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_allocated_body(::std::string* body)
{
    if (body != NULL) {
        set_has_body();
    } else {
        clear_has_body();
    }
    body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.body)
}

// optional string tag = 5;
inline bool NotificationDatabaseDataProto_NotificationData::has_tag() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationData::set_has_tag()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_has_tag()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_tag()
{
    tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_tag();
}
inline const ::std::string& NotificationDatabaseDataProto_NotificationData::tag() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.tag)
    return tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_tag(const ::std::string& value)
{
    set_has_tag();
    tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.tag)
}
inline void NotificationDatabaseDataProto_NotificationData::set_tag(const char* value)
{
    set_has_tag();
    tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.tag)
}
inline void NotificationDatabaseDataProto_NotificationData::set_tag(const char* value, size_t size)
{
    set_has_tag();
    tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.tag)
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::mutable_tag()
{
    set_has_tag();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.tag)
    return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::release_tag()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.tag)
    clear_has_tag();
    return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_allocated_tag(::std::string* tag)
{
    if (tag != NULL) {
        set_has_tag();
    } else {
        clear_has_tag();
    }
    tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.tag)
}

// optional string image = 15;
inline bool NotificationDatabaseDataProto_NotificationData::has_image() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationData::set_has_image()
{
    _has_bits_[0] |= 0x00000020u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_has_image()
{
    _has_bits_[0] &= ~0x00000020u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_image()
{
    image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_image();
}
inline const ::std::string& NotificationDatabaseDataProto_NotificationData::image() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.image)
    return image_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_image(const ::std::string& value)
{
    set_has_image();
    image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.image)
}
inline void NotificationDatabaseDataProto_NotificationData::set_image(const char* value)
{
    set_has_image();
    image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.image)
}
inline void NotificationDatabaseDataProto_NotificationData::set_image(const char* value, size_t size)
{
    set_has_image();
    image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.image)
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::mutable_image()
{
    set_has_image();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.image)
    return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::release_image()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.image)
    clear_has_image();
    return image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_allocated_image(::std::string* image)
{
    if (image != NULL) {
        set_has_image();
    } else {
        clear_has_image();
    }
    image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.image)
}

// optional string icon = 6;
inline bool NotificationDatabaseDataProto_NotificationData::has_icon() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationData::set_has_icon()
{
    _has_bits_[0] |= 0x00000040u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_has_icon()
{
    _has_bits_[0] &= ~0x00000040u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_icon()
{
    icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_icon();
}
inline const ::std::string& NotificationDatabaseDataProto_NotificationData::icon() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.icon)
    return icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_icon(const ::std::string& value)
{
    set_has_icon();
    icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.icon)
}
inline void NotificationDatabaseDataProto_NotificationData::set_icon(const char* value)
{
    set_has_icon();
    icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.icon)
}
inline void NotificationDatabaseDataProto_NotificationData::set_icon(const char* value, size_t size)
{
    set_has_icon();
    icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.icon)
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::mutable_icon()
{
    set_has_icon();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.icon)
    return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::release_icon()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.icon)
    clear_has_icon();
    return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_allocated_icon(::std::string* icon)
{
    if (icon != NULL) {
        set_has_icon();
    } else {
        clear_has_icon();
    }
    icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.icon)
}

// optional string badge = 14;
inline bool NotificationDatabaseDataProto_NotificationData::has_badge() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationData::set_has_badge()
{
    _has_bits_[0] |= 0x00000080u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_has_badge()
{
    _has_bits_[0] &= ~0x00000080u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_badge()
{
    badge_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_badge();
}
inline const ::std::string& NotificationDatabaseDataProto_NotificationData::badge() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.badge)
    return badge_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_badge(const ::std::string& value)
{
    set_has_badge();
    badge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.badge)
}
inline void NotificationDatabaseDataProto_NotificationData::set_badge(const char* value)
{
    set_has_badge();
    badge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.badge)
}
inline void NotificationDatabaseDataProto_NotificationData::set_badge(const char* value, size_t size)
{
    set_has_badge();
    badge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.badge)
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::mutable_badge()
{
    set_has_badge();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.badge)
    return badge_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::release_badge()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.badge)
    clear_has_badge();
    return badge_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_allocated_badge(::std::string* badge)
{
    if (badge != NULL) {
        set_has_badge();
    } else {
        clear_has_badge();
    }
    badge_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), badge);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.badge)
}

// repeated int32 vibration_pattern = 9 [packed = true];
inline int NotificationDatabaseDataProto_NotificationData::vibration_pattern_size() const
{
    return vibration_pattern_.size();
}
inline void NotificationDatabaseDataProto_NotificationData::clear_vibration_pattern()
{
    vibration_pattern_.Clear();
}
inline ::google::protobuf::int32 NotificationDatabaseDataProto_NotificationData::vibration_pattern(int index) const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.vibration_pattern)
    return vibration_pattern_.Get(index);
}
inline void NotificationDatabaseDataProto_NotificationData::set_vibration_pattern(int index, ::google::protobuf::int32 value)
{
    vibration_pattern_.Set(index, value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.vibration_pattern)
}
inline void NotificationDatabaseDataProto_NotificationData::add_vibration_pattern(::google::protobuf::int32 value)
{
    vibration_pattern_.Add(value);
    // @@protoc_insertion_point(field_add:content.NotificationDatabaseDataProto.NotificationData.vibration_pattern)
}
inline const ::google::protobuf::RepeatedField<::google::protobuf::int32>&
NotificationDatabaseDataProto_NotificationData::vibration_pattern() const
{
    // @@protoc_insertion_point(field_list:content.NotificationDatabaseDataProto.NotificationData.vibration_pattern)
    return vibration_pattern_;
}
inline ::google::protobuf::RepeatedField<::google::protobuf::int32>*
NotificationDatabaseDataProto_NotificationData::mutable_vibration_pattern()
{
    // @@protoc_insertion_point(field_mutable_list:content.NotificationDatabaseDataProto.NotificationData.vibration_pattern)
    return &vibration_pattern_;
}

// optional int64 timestamp = 12;
inline bool NotificationDatabaseDataProto_NotificationData::has_timestamp() const
{
    return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationData::set_has_timestamp()
{
    _has_bits_[0] |= 0x00000200u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_has_timestamp()
{
    _has_bits_[0] &= ~0x00000200u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_timestamp()
{
    timestamp_ = GOOGLE_LONGLONG(0);
    clear_has_timestamp();
}
inline ::google::protobuf::int64 NotificationDatabaseDataProto_NotificationData::timestamp() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.timestamp)
    return timestamp_;
}
inline void NotificationDatabaseDataProto_NotificationData::set_timestamp(::google::protobuf::int64 value)
{
    set_has_timestamp();
    timestamp_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.timestamp)
}

// optional bool renotify = 13;
inline bool NotificationDatabaseDataProto_NotificationData::has_renotify() const
{
    return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationData::set_has_renotify()
{
    _has_bits_[0] |= 0x00000400u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_has_renotify()
{
    _has_bits_[0] &= ~0x00000400u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_renotify()
{
    renotify_ = false;
    clear_has_renotify();
}
inline bool NotificationDatabaseDataProto_NotificationData::renotify() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.renotify)
    return renotify_;
}
inline void NotificationDatabaseDataProto_NotificationData::set_renotify(bool value)
{
    set_has_renotify();
    renotify_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.renotify)
}

// optional bool silent = 7;
inline bool NotificationDatabaseDataProto_NotificationData::has_silent() const
{
    return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationData::set_has_silent()
{
    _has_bits_[0] |= 0x00000800u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_has_silent()
{
    _has_bits_[0] &= ~0x00000800u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_silent()
{
    silent_ = false;
    clear_has_silent();
}
inline bool NotificationDatabaseDataProto_NotificationData::silent() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.silent)
    return silent_;
}
inline void NotificationDatabaseDataProto_NotificationData::set_silent(bool value)
{
    set_has_silent();
    silent_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.silent)
}

// optional bool require_interaction = 11;
inline bool NotificationDatabaseDataProto_NotificationData::has_require_interaction() const
{
    return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationData::set_has_require_interaction()
{
    _has_bits_[0] |= 0x00001000u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_has_require_interaction()
{
    _has_bits_[0] &= ~0x00001000u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_require_interaction()
{
    require_interaction_ = false;
    clear_has_require_interaction();
}
inline bool NotificationDatabaseDataProto_NotificationData::require_interaction() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.require_interaction)
    return require_interaction_;
}
inline void NotificationDatabaseDataProto_NotificationData::set_require_interaction(bool value)
{
    set_has_require_interaction();
    require_interaction_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.require_interaction)
}

// optional bytes data = 8;
inline bool NotificationDatabaseDataProto_NotificationData::has_data() const
{
    return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void NotificationDatabaseDataProto_NotificationData::set_has_data()
{
    _has_bits_[0] |= 0x00002000u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_has_data()
{
    _has_bits_[0] &= ~0x00002000u;
}
inline void NotificationDatabaseDataProto_NotificationData::clear_data()
{
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_data();
}
inline const ::std::string& NotificationDatabaseDataProto_NotificationData::data() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.data)
    return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_data(const ::std::string& value)
{
    set_has_data();
    data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.data)
}
inline void NotificationDatabaseDataProto_NotificationData::set_data(const char* value)
{
    set_has_data();
    data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.data)
}
inline void NotificationDatabaseDataProto_NotificationData::set_data(const void* value, size_t size)
{
    set_has_data();
    data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.data)
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::mutable_data()
{
    set_has_data();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.data)
    return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationDatabaseDataProto_NotificationData::release_data()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.data)
    clear_has_data();
    return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto_NotificationData::set_allocated_data(::std::string* data)
{
    if (data != NULL) {
        set_has_data();
    } else {
        clear_has_data();
    }
    data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.data)
}

// repeated .content.NotificationDatabaseDataProto.NotificationAction actions = 10;
inline int NotificationDatabaseDataProto_NotificationData::actions_size() const
{
    return actions_.size();
}
inline void NotificationDatabaseDataProto_NotificationData::clear_actions()
{
    actions_.Clear();
}
inline const ::content::NotificationDatabaseDataProto_NotificationAction& NotificationDatabaseDataProto_NotificationData::actions(int index) const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.actions)
    return actions_.Get(index);
}
inline ::content::NotificationDatabaseDataProto_NotificationAction* NotificationDatabaseDataProto_NotificationData::mutable_actions(int index)
{
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.actions)
    return actions_.Mutable(index);
}
inline ::content::NotificationDatabaseDataProto_NotificationAction* NotificationDatabaseDataProto_NotificationData::add_actions()
{
    // @@protoc_insertion_point(field_add:content.NotificationDatabaseDataProto.NotificationData.actions)
    return actions_.Add();
}
inline ::google::protobuf::RepeatedPtrField<::content::NotificationDatabaseDataProto_NotificationAction>*
NotificationDatabaseDataProto_NotificationData::mutable_actions()
{
    // @@protoc_insertion_point(field_mutable_list:content.NotificationDatabaseDataProto.NotificationData.actions)
    return &actions_;
}
inline const ::google::protobuf::RepeatedPtrField<::content::NotificationDatabaseDataProto_NotificationAction>&
NotificationDatabaseDataProto_NotificationData::actions() const
{
    // @@protoc_insertion_point(field_list:content.NotificationDatabaseDataProto.NotificationData.actions)
    return actions_;
}

// -------------------------------------------------------------------

// NotificationDatabaseDataProto

// optional int64 persistent_notification_id = 1;
inline bool NotificationDatabaseDataProto::has_persistent_notification_id() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotificationDatabaseDataProto::set_has_persistent_notification_id()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void NotificationDatabaseDataProto::clear_has_persistent_notification_id()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void NotificationDatabaseDataProto::clear_persistent_notification_id()
{
    persistent_notification_id_ = GOOGLE_LONGLONG(0);
    clear_has_persistent_notification_id();
}
inline ::google::protobuf::int64 NotificationDatabaseDataProto::persistent_notification_id() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.persistent_notification_id)
    return persistent_notification_id_;
}
inline void NotificationDatabaseDataProto::set_persistent_notification_id(::google::protobuf::int64 value)
{
    set_has_persistent_notification_id();
    persistent_notification_id_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.persistent_notification_id)
}

// optional string notification_id = 5;
inline bool NotificationDatabaseDataProto::has_notification_id() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotificationDatabaseDataProto::set_has_notification_id()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void NotificationDatabaseDataProto::clear_has_notification_id()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void NotificationDatabaseDataProto::clear_notification_id()
{
    notification_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_notification_id();
}
inline const ::std::string& NotificationDatabaseDataProto::notification_id() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.notification_id)
    return notification_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto::set_notification_id(const ::std::string& value)
{
    set_has_notification_id();
    notification_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.notification_id)
}
inline void NotificationDatabaseDataProto::set_notification_id(const char* value)
{
    set_has_notification_id();
    notification_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.notification_id)
}
inline void NotificationDatabaseDataProto::set_notification_id(const char* value, size_t size)
{
    set_has_notification_id();
    notification_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.notification_id)
}
inline ::std::string* NotificationDatabaseDataProto::mutable_notification_id()
{
    set_has_notification_id();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.notification_id)
    return notification_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationDatabaseDataProto::release_notification_id()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.notification_id)
    clear_has_notification_id();
    return notification_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto::set_allocated_notification_id(::std::string* notification_id)
{
    if (notification_id != NULL) {
        set_has_notification_id();
    } else {
        clear_has_notification_id();
    }
    notification_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), notification_id);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.notification_id)
}

// optional string origin = 2;
inline bool NotificationDatabaseDataProto::has_origin() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotificationDatabaseDataProto::set_has_origin()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void NotificationDatabaseDataProto::clear_has_origin()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void NotificationDatabaseDataProto::clear_origin()
{
    origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_origin();
}
inline const ::std::string& NotificationDatabaseDataProto::origin() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.origin)
    return origin_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto::set_origin(const ::std::string& value)
{
    set_has_origin();
    origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.origin)
}
inline void NotificationDatabaseDataProto::set_origin(const char* value)
{
    set_has_origin();
    origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.origin)
}
inline void NotificationDatabaseDataProto::set_origin(const char* value, size_t size)
{
    set_has_origin();
    origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.origin)
}
inline ::std::string* NotificationDatabaseDataProto::mutable_origin()
{
    set_has_origin();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.origin)
    return origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationDatabaseDataProto::release_origin()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.origin)
    clear_has_origin();
    return origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationDatabaseDataProto::set_allocated_origin(::std::string* origin)
{
    if (origin != NULL) {
        set_has_origin();
    } else {
        clear_has_origin();
    }
    origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.origin)
}

// optional int64 service_worker_registration_id = 3;
inline bool NotificationDatabaseDataProto::has_service_worker_registration_id() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotificationDatabaseDataProto::set_has_service_worker_registration_id()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void NotificationDatabaseDataProto::clear_has_service_worker_registration_id()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void NotificationDatabaseDataProto::clear_service_worker_registration_id()
{
    service_worker_registration_id_ = GOOGLE_LONGLONG(0);
    clear_has_service_worker_registration_id();
}
inline ::google::protobuf::int64 NotificationDatabaseDataProto::service_worker_registration_id() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.service_worker_registration_id)
    return service_worker_registration_id_;
}
inline void NotificationDatabaseDataProto::set_service_worker_registration_id(::google::protobuf::int64 value)
{
    set_has_service_worker_registration_id();
    service_worker_registration_id_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.service_worker_registration_id)
}

// optional .content.NotificationDatabaseDataProto.NotificationData notification_data = 4;
inline bool NotificationDatabaseDataProto::has_notification_data() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotificationDatabaseDataProto::set_has_notification_data()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void NotificationDatabaseDataProto::clear_has_notification_data()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void NotificationDatabaseDataProto::clear_notification_data()
{
    if (notification_data_ != NULL)
        notification_data_->::content::NotificationDatabaseDataProto_NotificationData::Clear();
    clear_has_notification_data();
}
inline const ::content::NotificationDatabaseDataProto_NotificationData& NotificationDatabaseDataProto::notification_data() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.notification_data)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return notification_data_ != NULL ? *notification_data_ : *default_instance().notification_data_;
#else
    return notification_data_ != NULL ? *notification_data_ : *default_instance_->notification_data_;
#endif
}
inline ::content::NotificationDatabaseDataProto_NotificationData* NotificationDatabaseDataProto::mutable_notification_data()
{
    set_has_notification_data();
    if (notification_data_ == NULL) {
        notification_data_ = new ::content::NotificationDatabaseDataProto_NotificationData;
    }
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.notification_data)
    return notification_data_;
}
inline ::content::NotificationDatabaseDataProto_NotificationData* NotificationDatabaseDataProto::release_notification_data()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.notification_data)
    clear_has_notification_data();
    ::content::NotificationDatabaseDataProto_NotificationData* temp = notification_data_;
    notification_data_ = NULL;
    return temp;
}
inline void NotificationDatabaseDataProto::set_allocated_notification_data(::content::NotificationDatabaseDataProto_NotificationData* notification_data)
{
    delete notification_data_;
    notification_data_ = notification_data;
    if (notification_data) {
        set_has_notification_data();
    } else {
        clear_has_notification_data();
    }
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.notification_data)
}

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// @@protoc_insertion_point(namespace_scope)

} // namespace content

#ifndef SWIG
namespace google {
namespace protobuf {

    template <>
    struct is_proto_enum<::content::NotificationDatabaseDataProto_NotificationAction_Type> : ::google::protobuf::internal::true_type {
    };
    template <>
    struct is_proto_enum<::content::NotificationDatabaseDataProto_NotificationData_Direction> : ::google::protobuf::internal::true_type {
    };

} // namespace protobuf
} // namespace google
#endif // SWIG

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_notification_5fdatabase_5fdata_2eproto__INCLUDED
