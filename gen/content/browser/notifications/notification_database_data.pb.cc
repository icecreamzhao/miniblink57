// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: notification_database_data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "notification_database_data.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace content {

void protobuf_ShutdownFile_notification_5fdatabase_5fdata_2eproto()
{
    delete NotificationDatabaseDataProto::default_instance_;
    delete NotificationDatabaseDataProto_NotificationAction::default_instance_;
    delete NotificationDatabaseDataProto_NotificationData::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    NotificationDatabaseDataProto::default_instance_ = new NotificationDatabaseDataProto();
    NotificationDatabaseDataProto_NotificationAction::default_instance_ = new NotificationDatabaseDataProto_NotificationAction();
    NotificationDatabaseDataProto_NotificationData::default_instance_ = new NotificationDatabaseDataProto_NotificationData();
    NotificationDatabaseDataProto::default_instance_->InitAsDefaultInstance();
    NotificationDatabaseDataProto_NotificationAction::default_instance_->InitAsDefaultInstance();
    NotificationDatabaseDataProto_NotificationData::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_notification_5fdatabase_5fdata_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto_once_);
void protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto_once_,
        &protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_notification_5fdatabase_5fdata_2eproto {
    StaticDescriptorInitializer_notification_5fdatabase_5fdata_2eproto()
    {
        protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto();
    }
} static_descriptor_initializer_notification_5fdatabase_5fdata_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForNotificationDatabaseDataProto(
    NotificationDatabaseDataProto* ptr)
{
    return ptr->mutable_unknown_fields();
}

static ::std::string* MutableUnknownFieldsForNotificationDatabaseDataProto_NotificationAction(
    NotificationDatabaseDataProto_NotificationAction* ptr)
{
    return ptr->mutable_unknown_fields();
}

bool NotificationDatabaseDataProto_NotificationAction_Type_IsValid(int value)
{
    switch (value) {
    case 0:
    case 1:
        return true;
    default:
        return false;
    }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NotificationDatabaseDataProto_NotificationAction_Type NotificationDatabaseDataProto_NotificationAction::BUTTON;
const NotificationDatabaseDataProto_NotificationAction_Type NotificationDatabaseDataProto_NotificationAction::TEXT;
const NotificationDatabaseDataProto_NotificationAction_Type NotificationDatabaseDataProto_NotificationAction::Type_MIN;
const NotificationDatabaseDataProto_NotificationAction_Type NotificationDatabaseDataProto_NotificationAction::Type_MAX;
const int NotificationDatabaseDataProto_NotificationAction::Type_ARRAYSIZE;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotificationDatabaseDataProto_NotificationAction::kActionFieldNumber;
const int NotificationDatabaseDataProto_NotificationAction::kTitleFieldNumber;
const int NotificationDatabaseDataProto_NotificationAction::kIconFieldNumber;
const int NotificationDatabaseDataProto_NotificationAction::kTypeFieldNumber;
const int NotificationDatabaseDataProto_NotificationAction::kPlaceholderFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

NotificationDatabaseDataProto_NotificationAction::NotificationDatabaseDataProto_NotificationAction()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:content.NotificationDatabaseDataProto.NotificationAction)
}

void NotificationDatabaseDataProto_NotificationAction::InitAsDefaultInstance()
{
}

NotificationDatabaseDataProto_NotificationAction::NotificationDatabaseDataProto_NotificationAction(const NotificationDatabaseDataProto_NotificationAction& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:content.NotificationDatabaseDataProto.NotificationAction)
}

void NotificationDatabaseDataProto_NotificationAction::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    type_ = 0;
    placeholder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotificationDatabaseDataProto_NotificationAction::~NotificationDatabaseDataProto_NotificationAction()
{
    // @@protoc_insertion_point(destructor:content.NotificationDatabaseDataProto.NotificationAction)
    SharedDtor();
}

void NotificationDatabaseDataProto_NotificationAction::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    placeholder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void NotificationDatabaseDataProto_NotificationAction::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const NotificationDatabaseDataProto_NotificationAction& NotificationDatabaseDataProto_NotificationAction::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto();
#endif
    return *default_instance_;
}

NotificationDatabaseDataProto_NotificationAction* NotificationDatabaseDataProto_NotificationAction::default_instance_ = NULL;

NotificationDatabaseDataProto_NotificationAction* NotificationDatabaseDataProto_NotificationAction::New(::google::protobuf::Arena* arena) const
{
    NotificationDatabaseDataProto_NotificationAction* n = new NotificationDatabaseDataProto_NotificationAction;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void NotificationDatabaseDataProto_NotificationAction::Clear()
{
    // @@protoc_insertion_point(message_clear_start:content.NotificationDatabaseDataProto.NotificationAction)
    if (_has_bits_[0 / 32] & 31u) {
        if (has_action()) {
            action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_title()) {
            title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_icon()) {
            icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        type_ = 0;
        if (has_placeholder()) {
            placeholder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool NotificationDatabaseDataProto_NotificationAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForNotificationDatabaseDataProto_NotificationAction, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:content.NotificationDatabaseDataProto.NotificationAction)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional string action = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_action()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_title;
            break;
        }

        // optional string title = 2;
        case 2: {
            if (tag == 18) {
            parse_title:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_title()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(26))
                goto parse_icon;
            break;
        }

        // optional string icon = 3;
        case 3: {
            if (tag == 26) {
            parse_icon:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_icon()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(32))
                goto parse_type;
            break;
        }

        // optional .content.NotificationDatabaseDataProto.NotificationAction.Type type = 4;
        case 4: {
            if (tag == 32) {
            parse_type:
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::content::NotificationDatabaseDataProto_NotificationAction_Type_IsValid(value)) {
                    set_type(static_cast<::content::NotificationDatabaseDataProto_NotificationAction_Type>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(32);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(42))
                goto parse_placeholder;
            break;
        }

        // optional string placeholder = 5;
        case 5: {
            if (tag == 42) {
            parse_placeholder:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_placeholder()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:content.NotificationDatabaseDataProto.NotificationAction)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:content.NotificationDatabaseDataProto.NotificationAction)
    return false;
#undef DO_
}

void NotificationDatabaseDataProto_NotificationAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:content.NotificationDatabaseDataProto.NotificationAction)
    // optional string action = 1;
    if (has_action()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->action(), output);
    }

    // optional string title = 2;
    if (has_title()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            2, this->title(), output);
    }

    // optional string icon = 3;
    if (has_icon()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            3, this->icon(), output);
    }

    // optional .content.NotificationDatabaseDataProto.NotificationAction.Type type = 4;
    if (has_type()) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            4, this->type(), output);
    }

    // optional string placeholder = 5;
    if (has_placeholder()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            5, this->placeholder(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:content.NotificationDatabaseDataProto.NotificationAction)
}

int NotificationDatabaseDataProto_NotificationAction::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:content.NotificationDatabaseDataProto.NotificationAction)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 31u) {
        // optional string action = 1;
        if (has_action()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->action());
        }

        // optional string title = 2;
        if (has_title()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->title());
        }

        // optional string icon = 3;
        if (has_icon()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->icon());
        }

        // optional .content.NotificationDatabaseDataProto.NotificationAction.Type type = 4;
        if (has_type()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
        }

        // optional string placeholder = 5;
        if (has_placeholder()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->placeholder());
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void NotificationDatabaseDataProto_NotificationAction::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const NotificationDatabaseDataProto_NotificationAction*>(&from));
}

void NotificationDatabaseDataProto_NotificationAction::MergeFrom(const NotificationDatabaseDataProto_NotificationAction& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:content.NotificationDatabaseDataProto.NotificationAction)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_action()) {
            set_has_action();
            action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
        }
        if (from.has_title()) {
            set_has_title();
            title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
        }
        if (from.has_icon()) {
            set_has_icon();
            icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
        }
        if (from.has_type()) {
            set_type(from.type());
        }
        if (from.has_placeholder()) {
            set_has_placeholder();
            placeholder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.placeholder_);
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void NotificationDatabaseDataProto_NotificationAction::CopyFrom(const NotificationDatabaseDataProto_NotificationAction& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:content.NotificationDatabaseDataProto.NotificationAction)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool NotificationDatabaseDataProto_NotificationAction::IsInitialized() const
{

    return true;
}

void NotificationDatabaseDataProto_NotificationAction::Swap(NotificationDatabaseDataProto_NotificationAction* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void NotificationDatabaseDataProto_NotificationAction::InternalSwap(NotificationDatabaseDataProto_NotificationAction* other)
{
    action_.Swap(&other->action_);
    title_.Swap(&other->title_);
    icon_.Swap(&other->icon_);
    std::swap(type_, other->type_);
    placeholder_.Swap(&other->placeholder_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string NotificationDatabaseDataProto_NotificationAction::GetTypeName() const
{
    return "content.NotificationDatabaseDataProto.NotificationAction";
}

// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForNotificationDatabaseDataProto_NotificationData(
    NotificationDatabaseDataProto_NotificationData* ptr)
{
    return ptr->mutable_unknown_fields();
}

bool NotificationDatabaseDataProto_NotificationData_Direction_IsValid(int value)
{
    switch (value) {
    case 0:
    case 1:
    case 2:
        return true;
    default:
        return false;
    }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NotificationDatabaseDataProto_NotificationData_Direction NotificationDatabaseDataProto_NotificationData::LEFT_TO_RIGHT;
const NotificationDatabaseDataProto_NotificationData_Direction NotificationDatabaseDataProto_NotificationData::RIGHT_TO_LEFT;
const NotificationDatabaseDataProto_NotificationData_Direction NotificationDatabaseDataProto_NotificationData::AUTO;
const NotificationDatabaseDataProto_NotificationData_Direction NotificationDatabaseDataProto_NotificationData::Direction_MIN;
const NotificationDatabaseDataProto_NotificationData_Direction NotificationDatabaseDataProto_NotificationData::Direction_MAX;
const int NotificationDatabaseDataProto_NotificationData::Direction_ARRAYSIZE;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotificationDatabaseDataProto_NotificationData::kTitleFieldNumber;
const int NotificationDatabaseDataProto_NotificationData::kDirectionFieldNumber;
const int NotificationDatabaseDataProto_NotificationData::kLangFieldNumber;
const int NotificationDatabaseDataProto_NotificationData::kBodyFieldNumber;
const int NotificationDatabaseDataProto_NotificationData::kTagFieldNumber;
const int NotificationDatabaseDataProto_NotificationData::kImageFieldNumber;
const int NotificationDatabaseDataProto_NotificationData::kIconFieldNumber;
const int NotificationDatabaseDataProto_NotificationData::kBadgeFieldNumber;
const int NotificationDatabaseDataProto_NotificationData::kVibrationPatternFieldNumber;
const int NotificationDatabaseDataProto_NotificationData::kTimestampFieldNumber;
const int NotificationDatabaseDataProto_NotificationData::kRenotifyFieldNumber;
const int NotificationDatabaseDataProto_NotificationData::kSilentFieldNumber;
const int NotificationDatabaseDataProto_NotificationData::kRequireInteractionFieldNumber;
const int NotificationDatabaseDataProto_NotificationData::kDataFieldNumber;
const int NotificationDatabaseDataProto_NotificationData::kActionsFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

NotificationDatabaseDataProto_NotificationData::NotificationDatabaseDataProto_NotificationData()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:content.NotificationDatabaseDataProto.NotificationData)
}

void NotificationDatabaseDataProto_NotificationData::InitAsDefaultInstance()
{
}

NotificationDatabaseDataProto_NotificationData::NotificationDatabaseDataProto_NotificationData(const NotificationDatabaseDataProto_NotificationData& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:content.NotificationDatabaseDataProto.NotificationData)
}

void NotificationDatabaseDataProto_NotificationData::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    direction_ = 0;
    lang_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    badge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    timestamp_ = GOOGLE_LONGLONG(0);
    renotify_ = false;
    silent_ = false;
    require_interaction_ = false;
    data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotificationDatabaseDataProto_NotificationData::~NotificationDatabaseDataProto_NotificationData()
{
    // @@protoc_insertion_point(destructor:content.NotificationDatabaseDataProto.NotificationData)
    SharedDtor();
}

void NotificationDatabaseDataProto_NotificationData::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    lang_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    badge_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void NotificationDatabaseDataProto_NotificationData::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const NotificationDatabaseDataProto_NotificationData& NotificationDatabaseDataProto_NotificationData::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto();
#endif
    return *default_instance_;
}

NotificationDatabaseDataProto_NotificationData* NotificationDatabaseDataProto_NotificationData::default_instance_ = NULL;

NotificationDatabaseDataProto_NotificationData* NotificationDatabaseDataProto_NotificationData::New(::google::protobuf::Arena* arena) const
{
    NotificationDatabaseDataProto_NotificationData* n = new NotificationDatabaseDataProto_NotificationData;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void NotificationDatabaseDataProto_NotificationData::Clear()
{
// @@protoc_insertion_point(message_clear_start:content.NotificationDatabaseDataProto.NotificationData)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                                                    \
    _Pragma("clang diagnostic push")                                                                                                     \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(NotificationDatabaseDataProto_NotificationData, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<NotificationDatabaseDataProto_NotificationData*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    if (_has_bits_[0 / 32] & 255u) {
        if (has_title()) {
            title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        direction_ = 0;
        if (has_lang()) {
            lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_body()) {
            body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_tag()) {
            tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_image()) {
            image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_icon()) {
            icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_badge()) {
            badge_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }
    if (_has_bits_[8 / 32] & 15872u) {
        ZR_(renotify_, timestamp_);
        if (has_data()) {
            data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }

#undef ZR_HELPER_
#undef ZR_

    vibration_pattern_.Clear();
    actions_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool NotificationDatabaseDataProto_NotificationData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForNotificationDatabaseDataProto_NotificationData, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:content.NotificationDatabaseDataProto.NotificationData)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional string title = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_title()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(16))
                goto parse_direction;
            break;
        }

        // optional .content.NotificationDatabaseDataProto.NotificationData.Direction direction = 2;
        case 2: {
            if (tag == 16) {
            parse_direction:
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::content::NotificationDatabaseDataProto_NotificationData_Direction_IsValid(value)) {
                    set_direction(static_cast<::content::NotificationDatabaseDataProto_NotificationData_Direction>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(16);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(26))
                goto parse_lang;
            break;
        }

        // optional string lang = 3;
        case 3: {
            if (tag == 26) {
            parse_lang:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_lang()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(34))
                goto parse_body;
            break;
        }

        // optional string body = 4;
        case 4: {
            if (tag == 34) {
            parse_body:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_body()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(42))
                goto parse_tag;
            break;
        }

        // optional string tag = 5;
        case 5: {
            if (tag == 42) {
            parse_tag:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_tag()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(50))
                goto parse_icon;
            break;
        }

        // optional string icon = 6;
        case 6: {
            if (tag == 50) {
            parse_icon:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_icon()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(56))
                goto parse_silent;
            break;
        }

        // optional bool silent = 7;
        case 7: {
            if (tag == 56) {
            parse_silent:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                    input, &silent_)));
                set_has_silent();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(66))
                goto parse_data;
            break;
        }

        // optional bytes data = 8;
        case 8: {
            if (tag == 66) {
            parse_data:
                DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                    input, this->mutable_data()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(74))
                goto parse_vibration_pattern;
            break;
        }

        // repeated int32 vibration_pattern = 9 [packed = true];
        case 9: {
            if (tag == 74) {
            parse_vibration_pattern:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, this->mutable_vibration_pattern())));
            } else if (tag == 72) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    1, 74, input, this->mutable_vibration_pattern())));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(82))
                goto parse_actions;
            break;
        }

        // repeated .content.NotificationDatabaseDataProto.NotificationAction actions = 10;
        case 10: {
            if (tag == 82) {
            parse_actions:
                DO_(input->IncrementRecursionDepth());
            parse_loop_actions:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                    input, add_actions()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(82))
                goto parse_loop_actions;
            input->UnsafeDecrementRecursionDepth();
            if (input->ExpectTag(88))
                goto parse_require_interaction;
            break;
        }

        // optional bool require_interaction = 11;
        case 11: {
            if (tag == 88) {
            parse_require_interaction:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                    input, &require_interaction_)));
                set_has_require_interaction();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(96))
                goto parse_timestamp;
            break;
        }

        // optional int64 timestamp = 12;
        case 12: {
            if (tag == 96) {
            parse_timestamp:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &timestamp_)));
                set_has_timestamp();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(104))
                goto parse_renotify;
            break;
        }

        // optional bool renotify = 13;
        case 13: {
            if (tag == 104) {
            parse_renotify:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                    input, &renotify_)));
                set_has_renotify();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(114))
                goto parse_badge;
            break;
        }

        // optional string badge = 14;
        case 14: {
            if (tag == 114) {
            parse_badge:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_badge()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(122))
                goto parse_image;
            break;
        }

        // optional string image = 15;
        case 15: {
            if (tag == 122) {
            parse_image:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_image()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:content.NotificationDatabaseDataProto.NotificationData)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:content.NotificationDatabaseDataProto.NotificationData)
    return false;
#undef DO_
}

void NotificationDatabaseDataProto_NotificationData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:content.NotificationDatabaseDataProto.NotificationData)
    // optional string title = 1;
    if (has_title()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->title(), output);
    }

    // optional .content.NotificationDatabaseDataProto.NotificationData.Direction direction = 2;
    if (has_direction()) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            2, this->direction(), output);
    }

    // optional string lang = 3;
    if (has_lang()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            3, this->lang(), output);
    }

    // optional string body = 4;
    if (has_body()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            4, this->body(), output);
    }

    // optional string tag = 5;
    if (has_tag()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            5, this->tag(), output);
    }

    // optional string icon = 6;
    if (has_icon()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            6, this->icon(), output);
    }

    // optional bool silent = 7;
    if (has_silent()) {
        ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->silent(), output);
    }

    // optional bytes data = 8;
    if (has_data()) {
        ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
            8, this->data(), output);
    }

    // repeated int32 vibration_pattern = 9 [packed = true];
    if (this->vibration_pattern_size() > 0) {
        ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
        output->WriteVarint32(_vibration_pattern_cached_byte_size_);
    }
    for (int i = 0; i < this->vibration_pattern_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
            this->vibration_pattern(i), output);
    }

    // repeated .content.NotificationDatabaseDataProto.NotificationAction actions = 10;
    for (unsigned int i = 0, n = this->actions_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            10, this->actions(i), output);
    }

    // optional bool require_interaction = 11;
    if (has_require_interaction()) {
        ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->require_interaction(), output);
    }

    // optional int64 timestamp = 12;
    if (has_timestamp()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->timestamp(), output);
    }

    // optional bool renotify = 13;
    if (has_renotify()) {
        ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->renotify(), output);
    }

    // optional string badge = 14;
    if (has_badge()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            14, this->badge(), output);
    }

    // optional string image = 15;
    if (has_image()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            15, this->image(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:content.NotificationDatabaseDataProto.NotificationData)
}

int NotificationDatabaseDataProto_NotificationData::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:content.NotificationDatabaseDataProto.NotificationData)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 255u) {
        // optional string title = 1;
        if (has_title()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->title());
        }

        // optional .content.NotificationDatabaseDataProto.NotificationData.Direction direction = 2;
        if (has_direction()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
        }

        // optional string lang = 3;
        if (has_lang()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->lang());
        }

        // optional string body = 4;
        if (has_body()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->body());
        }

        // optional string tag = 5;
        if (has_tag()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->tag());
        }

        // optional string image = 15;
        if (has_image()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->image());
        }

        // optional string icon = 6;
        if (has_icon()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->icon());
        }

        // optional string badge = 14;
        if (has_badge()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->badge());
        }
    }
    if (_has_bits_[9 / 32] & 15872u) {
        // optional int64 timestamp = 12;
        if (has_timestamp()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->timestamp());
        }

        // optional bool renotify = 13;
        if (has_renotify()) {
            total_size += 1 + 1;
        }

        // optional bool silent = 7;
        if (has_silent()) {
            total_size += 1 + 1;
        }

        // optional bool require_interaction = 11;
        if (has_require_interaction()) {
            total_size += 1 + 1;
        }

        // optional bytes data = 8;
        if (has_data()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(this->data());
        }
    }
    // repeated int32 vibration_pattern = 9 [packed = true];
    {
        int data_size = 0;
        for (int i = 0; i < this->vibration_pattern_size(); i++) {
            data_size += ::google::protobuf::internal::WireFormatLite::
                Int32Size(this->vibration_pattern(i));
        }
        if (data_size > 0) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
        }
        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _vibration_pattern_cached_byte_size_ = data_size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
        total_size += data_size;
    }

    // repeated .content.NotificationDatabaseDataProto.NotificationAction actions = 10;
    total_size += 1 * this->actions_size();
    for (int i = 0; i < this->actions_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
            this->actions(i));
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void NotificationDatabaseDataProto_NotificationData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const NotificationDatabaseDataProto_NotificationData*>(&from));
}

void NotificationDatabaseDataProto_NotificationData::MergeFrom(const NotificationDatabaseDataProto_NotificationData& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:content.NotificationDatabaseDataProto.NotificationData)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    vibration_pattern_.MergeFrom(from.vibration_pattern_);
    actions_.MergeFrom(from.actions_);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_title()) {
            set_has_title();
            title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
        }
        if (from.has_direction()) {
            set_direction(from.direction());
        }
        if (from.has_lang()) {
            set_has_lang();
            lang_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_);
        }
        if (from.has_body()) {
            set_has_body();
            body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
        }
        if (from.has_tag()) {
            set_has_tag();
            tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
        }
        if (from.has_image()) {
            set_has_image();
            image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
        }
        if (from.has_icon()) {
            set_has_icon();
            icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
        }
        if (from.has_badge()) {
            set_has_badge();
            badge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.badge_);
        }
    }
    if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
        if (from.has_timestamp()) {
            set_timestamp(from.timestamp());
        }
        if (from.has_renotify()) {
            set_renotify(from.renotify());
        }
        if (from.has_silent()) {
            set_silent(from.silent());
        }
        if (from.has_require_interaction()) {
            set_require_interaction(from.require_interaction());
        }
        if (from.has_data()) {
            set_has_data();
            data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void NotificationDatabaseDataProto_NotificationData::CopyFrom(const NotificationDatabaseDataProto_NotificationData& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:content.NotificationDatabaseDataProto.NotificationData)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool NotificationDatabaseDataProto_NotificationData::IsInitialized() const
{

    return true;
}

void NotificationDatabaseDataProto_NotificationData::Swap(NotificationDatabaseDataProto_NotificationData* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void NotificationDatabaseDataProto_NotificationData::InternalSwap(NotificationDatabaseDataProto_NotificationData* other)
{
    title_.Swap(&other->title_);
    std::swap(direction_, other->direction_);
    lang_.Swap(&other->lang_);
    body_.Swap(&other->body_);
    tag_.Swap(&other->tag_);
    image_.Swap(&other->image_);
    icon_.Swap(&other->icon_);
    badge_.Swap(&other->badge_);
    vibration_pattern_.UnsafeArenaSwap(&other->vibration_pattern_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(renotify_, other->renotify_);
    std::swap(silent_, other->silent_);
    std::swap(require_interaction_, other->require_interaction_);
    data_.Swap(&other->data_);
    actions_.UnsafeArenaSwap(&other->actions_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string NotificationDatabaseDataProto_NotificationData::GetTypeName() const
{
    return "content.NotificationDatabaseDataProto.NotificationData";
}

// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotificationDatabaseDataProto::kPersistentNotificationIdFieldNumber;
const int NotificationDatabaseDataProto::kNotificationIdFieldNumber;
const int NotificationDatabaseDataProto::kOriginFieldNumber;
const int NotificationDatabaseDataProto::kServiceWorkerRegistrationIdFieldNumber;
const int NotificationDatabaseDataProto::kNotificationDataFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

NotificationDatabaseDataProto::NotificationDatabaseDataProto()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:content.NotificationDatabaseDataProto)
}

void NotificationDatabaseDataProto::InitAsDefaultInstance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    notification_data_ = const_cast<::content::NotificationDatabaseDataProto_NotificationData*>(
        ::content::NotificationDatabaseDataProto_NotificationData::internal_default_instance());
#else
    notification_data_ = const_cast<::content::NotificationDatabaseDataProto_NotificationData*>(&::content::NotificationDatabaseDataProto_NotificationData::default_instance());
#endif
}

NotificationDatabaseDataProto::NotificationDatabaseDataProto(const NotificationDatabaseDataProto& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:content.NotificationDatabaseDataProto)
}

void NotificationDatabaseDataProto::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    persistent_notification_id_ = GOOGLE_LONGLONG(0);
    notification_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    origin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    service_worker_registration_id_ = GOOGLE_LONGLONG(0);
    notification_data_ = NULL;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotificationDatabaseDataProto::~NotificationDatabaseDataProto()
{
    // @@protoc_insertion_point(destructor:content.NotificationDatabaseDataProto)
    SharedDtor();
}

void NotificationDatabaseDataProto::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    notification_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    origin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
        delete notification_data_;
    }
}

void NotificationDatabaseDataProto::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const NotificationDatabaseDataProto& NotificationDatabaseDataProto::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_notification_5fdatabase_5fdata_2eproto();
#endif
    return *default_instance_;
}

NotificationDatabaseDataProto* NotificationDatabaseDataProto::default_instance_ = NULL;

NotificationDatabaseDataProto* NotificationDatabaseDataProto::New(::google::protobuf::Arena* arena) const
{
    NotificationDatabaseDataProto* n = new NotificationDatabaseDataProto;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void NotificationDatabaseDataProto::Clear()
{
    // @@protoc_insertion_point(message_clear_start:content.NotificationDatabaseDataProto)
    if (_has_bits_[0 / 32] & 31u) {
        persistent_notification_id_ = GOOGLE_LONGLONG(0);
        if (has_notification_id()) {
            notification_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_origin()) {
            origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        service_worker_registration_id_ = GOOGLE_LONGLONG(0);
        if (has_notification_data()) {
            if (notification_data_ != NULL)
                notification_data_->::content::NotificationDatabaseDataProto_NotificationData::Clear();
        }
    }
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool NotificationDatabaseDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForNotificationDatabaseDataProto, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:content.NotificationDatabaseDataProto)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional int64 persistent_notification_id = 1;
        case 1: {
            if (tag == 8) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &persistent_notification_id_)));
                set_has_persistent_notification_id();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_origin;
            break;
        }

        // optional string origin = 2;
        case 2: {
            if (tag == 18) {
            parse_origin:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_origin()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_service_worker_registration_id;
            break;
        }

        // optional int64 service_worker_registration_id = 3;
        case 3: {
            if (tag == 24) {
            parse_service_worker_registration_id:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &service_worker_registration_id_)));
                set_has_service_worker_registration_id();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(34))
                goto parse_notification_data;
            break;
        }

        // optional .content.NotificationDatabaseDataProto.NotificationData notification_data = 4;
        case 4: {
            if (tag == 34) {
            parse_notification_data:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_notification_data()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(42))
                goto parse_notification_id;
            break;
        }

        // optional string notification_id = 5;
        case 5: {
            if (tag == 42) {
            parse_notification_id:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_notification_id()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:content.NotificationDatabaseDataProto)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:content.NotificationDatabaseDataProto)
    return false;
#undef DO_
}

void NotificationDatabaseDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:content.NotificationDatabaseDataProto)
    // optional int64 persistent_notification_id = 1;
    if (has_persistent_notification_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->persistent_notification_id(), output);
    }

    // optional string origin = 2;
    if (has_origin()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            2, this->origin(), output);
    }

    // optional int64 service_worker_registration_id = 3;
    if (has_service_worker_registration_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->service_worker_registration_id(), output);
    }

    // optional .content.NotificationDatabaseDataProto.NotificationData notification_data = 4;
    if (has_notification_data()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            4, *this->notification_data_, output);
    }

    // optional string notification_id = 5;
    if (has_notification_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            5, this->notification_id(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:content.NotificationDatabaseDataProto)
}

int NotificationDatabaseDataProto::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:content.NotificationDatabaseDataProto)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 31u) {
        // optional int64 persistent_notification_id = 1;
        if (has_persistent_notification_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->persistent_notification_id());
        }

        // optional string notification_id = 5;
        if (has_notification_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->notification_id());
        }

        // optional string origin = 2;
        if (has_origin()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->origin());
        }

        // optional int64 service_worker_registration_id = 3;
        if (has_service_worker_registration_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->service_worker_registration_id());
        }

        // optional .content.NotificationDatabaseDataProto.NotificationData notification_data = 4;
        if (has_notification_data()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->notification_data_);
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void NotificationDatabaseDataProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const NotificationDatabaseDataProto*>(&from));
}

void NotificationDatabaseDataProto::MergeFrom(const NotificationDatabaseDataProto& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:content.NotificationDatabaseDataProto)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_persistent_notification_id()) {
            set_persistent_notification_id(from.persistent_notification_id());
        }
        if (from.has_notification_id()) {
            set_has_notification_id();
            notification_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notification_id_);
        }
        if (from.has_origin()) {
            set_has_origin();
            origin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_);
        }
        if (from.has_service_worker_registration_id()) {
            set_service_worker_registration_id(from.service_worker_registration_id());
        }
        if (from.has_notification_data()) {
            mutable_notification_data()->::content::NotificationDatabaseDataProto_NotificationData::MergeFrom(from.notification_data());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void NotificationDatabaseDataProto::CopyFrom(const NotificationDatabaseDataProto& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:content.NotificationDatabaseDataProto)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool NotificationDatabaseDataProto::IsInitialized() const
{

    return true;
}

void NotificationDatabaseDataProto::Swap(NotificationDatabaseDataProto* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void NotificationDatabaseDataProto::InternalSwap(NotificationDatabaseDataProto* other)
{
    std::swap(persistent_notification_id_, other->persistent_notification_id_);
    notification_id_.Swap(&other->notification_id_);
    origin_.Swap(&other->origin_);
    std::swap(service_worker_registration_id_, other->service_worker_registration_id_);
    std::swap(notification_data_, other->notification_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string NotificationDatabaseDataProto::GetTypeName() const
{
    return "content.NotificationDatabaseDataProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotificationDatabaseDataProto_NotificationAction

// optional string action = 1;
bool NotificationDatabaseDataProto_NotificationAction::has_action() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void NotificationDatabaseDataProto_NotificationAction::set_has_action()
{
    _has_bits_[0] |= 0x00000001u;
}
void NotificationDatabaseDataProto_NotificationAction::clear_has_action()
{
    _has_bits_[0] &= ~0x00000001u;
}
void NotificationDatabaseDataProto_NotificationAction::clear_action()
{
    action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_action();
}
const ::std::string& NotificationDatabaseDataProto_NotificationAction::action() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationAction.action)
    return action_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationAction::set_action(const ::std::string& value)
{
    set_has_action();
    action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationAction.action)
}
void NotificationDatabaseDataProto_NotificationAction::set_action(const char* value)
{
    set_has_action();
    action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationAction.action)
}
void NotificationDatabaseDataProto_NotificationAction::set_action(const char* value, size_t size)
{
    set_has_action();
    action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationAction.action)
}
::std::string* NotificationDatabaseDataProto_NotificationAction::mutable_action()
{
    set_has_action();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationAction.action)
    return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotificationDatabaseDataProto_NotificationAction::release_action()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationAction.action)
    clear_has_action();
    return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationAction::set_allocated_action(::std::string* action)
{
    if (action != NULL) {
        set_has_action();
    } else {
        clear_has_action();
    }
    action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationAction.action)
}

// optional string title = 2;
bool NotificationDatabaseDataProto_NotificationAction::has_title() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void NotificationDatabaseDataProto_NotificationAction::set_has_title()
{
    _has_bits_[0] |= 0x00000002u;
}
void NotificationDatabaseDataProto_NotificationAction::clear_has_title()
{
    _has_bits_[0] &= ~0x00000002u;
}
void NotificationDatabaseDataProto_NotificationAction::clear_title()
{
    title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_title();
}
const ::std::string& NotificationDatabaseDataProto_NotificationAction::title() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationAction.title)
    return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationAction::set_title(const ::std::string& value)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationAction.title)
}
void NotificationDatabaseDataProto_NotificationAction::set_title(const char* value)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationAction.title)
}
void NotificationDatabaseDataProto_NotificationAction::set_title(const char* value, size_t size)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationAction.title)
}
::std::string* NotificationDatabaseDataProto_NotificationAction::mutable_title()
{
    set_has_title();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationAction.title)
    return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotificationDatabaseDataProto_NotificationAction::release_title()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationAction.title)
    clear_has_title();
    return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationAction::set_allocated_title(::std::string* title)
{
    if (title != NULL) {
        set_has_title();
    } else {
        clear_has_title();
    }
    title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationAction.title)
}

// optional string icon = 3;
bool NotificationDatabaseDataProto_NotificationAction::has_icon() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void NotificationDatabaseDataProto_NotificationAction::set_has_icon()
{
    _has_bits_[0] |= 0x00000004u;
}
void NotificationDatabaseDataProto_NotificationAction::clear_has_icon()
{
    _has_bits_[0] &= ~0x00000004u;
}
void NotificationDatabaseDataProto_NotificationAction::clear_icon()
{
    icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_icon();
}
const ::std::string& NotificationDatabaseDataProto_NotificationAction::icon() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationAction.icon)
    return icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationAction::set_icon(const ::std::string& value)
{
    set_has_icon();
    icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationAction.icon)
}
void NotificationDatabaseDataProto_NotificationAction::set_icon(const char* value)
{
    set_has_icon();
    icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationAction.icon)
}
void NotificationDatabaseDataProto_NotificationAction::set_icon(const char* value, size_t size)
{
    set_has_icon();
    icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationAction.icon)
}
::std::string* NotificationDatabaseDataProto_NotificationAction::mutable_icon()
{
    set_has_icon();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationAction.icon)
    return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotificationDatabaseDataProto_NotificationAction::release_icon()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationAction.icon)
    clear_has_icon();
    return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationAction::set_allocated_icon(::std::string* icon)
{
    if (icon != NULL) {
        set_has_icon();
    } else {
        clear_has_icon();
    }
    icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationAction.icon)
}

// optional .content.NotificationDatabaseDataProto.NotificationAction.Type type = 4;
bool NotificationDatabaseDataProto_NotificationAction::has_type() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void NotificationDatabaseDataProto_NotificationAction::set_has_type()
{
    _has_bits_[0] |= 0x00000008u;
}
void NotificationDatabaseDataProto_NotificationAction::clear_has_type()
{
    _has_bits_[0] &= ~0x00000008u;
}
void NotificationDatabaseDataProto_NotificationAction::clear_type()
{
    type_ = 0;
    clear_has_type();
}
::content::NotificationDatabaseDataProto_NotificationAction_Type NotificationDatabaseDataProto_NotificationAction::type() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationAction.type)
    return static_cast<::content::NotificationDatabaseDataProto_NotificationAction_Type>(type_);
}
void NotificationDatabaseDataProto_NotificationAction::set_type(::content::NotificationDatabaseDataProto_NotificationAction_Type value)
{
    assert(::content::NotificationDatabaseDataProto_NotificationAction_Type_IsValid(value));
    set_has_type();
    type_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationAction.type)
}

// optional string placeholder = 5;
bool NotificationDatabaseDataProto_NotificationAction::has_placeholder() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void NotificationDatabaseDataProto_NotificationAction::set_has_placeholder()
{
    _has_bits_[0] |= 0x00000010u;
}
void NotificationDatabaseDataProto_NotificationAction::clear_has_placeholder()
{
    _has_bits_[0] &= ~0x00000010u;
}
void NotificationDatabaseDataProto_NotificationAction::clear_placeholder()
{
    placeholder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_placeholder();
}
const ::std::string& NotificationDatabaseDataProto_NotificationAction::placeholder() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationAction.placeholder)
    return placeholder_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationAction::set_placeholder(const ::std::string& value)
{
    set_has_placeholder();
    placeholder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationAction.placeholder)
}
void NotificationDatabaseDataProto_NotificationAction::set_placeholder(const char* value)
{
    set_has_placeholder();
    placeholder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationAction.placeholder)
}
void NotificationDatabaseDataProto_NotificationAction::set_placeholder(const char* value, size_t size)
{
    set_has_placeholder();
    placeholder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationAction.placeholder)
}
::std::string* NotificationDatabaseDataProto_NotificationAction::mutable_placeholder()
{
    set_has_placeholder();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationAction.placeholder)
    return placeholder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotificationDatabaseDataProto_NotificationAction::release_placeholder()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationAction.placeholder)
    clear_has_placeholder();
    return placeholder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationAction::set_allocated_placeholder(::std::string* placeholder)
{
    if (placeholder != NULL) {
        set_has_placeholder();
    } else {
        clear_has_placeholder();
    }
    placeholder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), placeholder);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationAction.placeholder)
}

// -------------------------------------------------------------------

// NotificationDatabaseDataProto_NotificationData

// optional string title = 1;
bool NotificationDatabaseDataProto_NotificationData::has_title() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void NotificationDatabaseDataProto_NotificationData::set_has_title()
{
    _has_bits_[0] |= 0x00000001u;
}
void NotificationDatabaseDataProto_NotificationData::clear_has_title()
{
    _has_bits_[0] &= ~0x00000001u;
}
void NotificationDatabaseDataProto_NotificationData::clear_title()
{
    title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_title();
}
const ::std::string& NotificationDatabaseDataProto_NotificationData::title() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.title)
    return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_title(const ::std::string& value)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.title)
}
void NotificationDatabaseDataProto_NotificationData::set_title(const char* value)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.title)
}
void NotificationDatabaseDataProto_NotificationData::set_title(const char* value, size_t size)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.title)
}
::std::string* NotificationDatabaseDataProto_NotificationData::mutable_title()
{
    set_has_title();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.title)
    return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotificationDatabaseDataProto_NotificationData::release_title()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.title)
    clear_has_title();
    return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_allocated_title(::std::string* title)
{
    if (title != NULL) {
        set_has_title();
    } else {
        clear_has_title();
    }
    title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.title)
}

// optional .content.NotificationDatabaseDataProto.NotificationData.Direction direction = 2;
bool NotificationDatabaseDataProto_NotificationData::has_direction() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void NotificationDatabaseDataProto_NotificationData::set_has_direction()
{
    _has_bits_[0] |= 0x00000002u;
}
void NotificationDatabaseDataProto_NotificationData::clear_has_direction()
{
    _has_bits_[0] &= ~0x00000002u;
}
void NotificationDatabaseDataProto_NotificationData::clear_direction()
{
    direction_ = 0;
    clear_has_direction();
}
::content::NotificationDatabaseDataProto_NotificationData_Direction NotificationDatabaseDataProto_NotificationData::direction() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.direction)
    return static_cast<::content::NotificationDatabaseDataProto_NotificationData_Direction>(direction_);
}
void NotificationDatabaseDataProto_NotificationData::set_direction(::content::NotificationDatabaseDataProto_NotificationData_Direction value)
{
    assert(::content::NotificationDatabaseDataProto_NotificationData_Direction_IsValid(value));
    set_has_direction();
    direction_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.direction)
}

// optional string lang = 3;
bool NotificationDatabaseDataProto_NotificationData::has_lang() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void NotificationDatabaseDataProto_NotificationData::set_has_lang()
{
    _has_bits_[0] |= 0x00000004u;
}
void NotificationDatabaseDataProto_NotificationData::clear_has_lang()
{
    _has_bits_[0] &= ~0x00000004u;
}
void NotificationDatabaseDataProto_NotificationData::clear_lang()
{
    lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_lang();
}
const ::std::string& NotificationDatabaseDataProto_NotificationData::lang() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.lang)
    return lang_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_lang(const ::std::string& value)
{
    set_has_lang();
    lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.lang)
}
void NotificationDatabaseDataProto_NotificationData::set_lang(const char* value)
{
    set_has_lang();
    lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.lang)
}
void NotificationDatabaseDataProto_NotificationData::set_lang(const char* value, size_t size)
{
    set_has_lang();
    lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.lang)
}
::std::string* NotificationDatabaseDataProto_NotificationData::mutable_lang()
{
    set_has_lang();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.lang)
    return lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotificationDatabaseDataProto_NotificationData::release_lang()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.lang)
    clear_has_lang();
    return lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_allocated_lang(::std::string* lang)
{
    if (lang != NULL) {
        set_has_lang();
    } else {
        clear_has_lang();
    }
    lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.lang)
}

// optional string body = 4;
bool NotificationDatabaseDataProto_NotificationData::has_body() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void NotificationDatabaseDataProto_NotificationData::set_has_body()
{
    _has_bits_[0] |= 0x00000008u;
}
void NotificationDatabaseDataProto_NotificationData::clear_has_body()
{
    _has_bits_[0] &= ~0x00000008u;
}
void NotificationDatabaseDataProto_NotificationData::clear_body()
{
    body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_body();
}
const ::std::string& NotificationDatabaseDataProto_NotificationData::body() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.body)
    return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_body(const ::std::string& value)
{
    set_has_body();
    body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.body)
}
void NotificationDatabaseDataProto_NotificationData::set_body(const char* value)
{
    set_has_body();
    body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.body)
}
void NotificationDatabaseDataProto_NotificationData::set_body(const char* value, size_t size)
{
    set_has_body();
    body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.body)
}
::std::string* NotificationDatabaseDataProto_NotificationData::mutable_body()
{
    set_has_body();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.body)
    return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotificationDatabaseDataProto_NotificationData::release_body()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.body)
    clear_has_body();
    return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_allocated_body(::std::string* body)
{
    if (body != NULL) {
        set_has_body();
    } else {
        clear_has_body();
    }
    body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.body)
}

// optional string tag = 5;
bool NotificationDatabaseDataProto_NotificationData::has_tag() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void NotificationDatabaseDataProto_NotificationData::set_has_tag()
{
    _has_bits_[0] |= 0x00000010u;
}
void NotificationDatabaseDataProto_NotificationData::clear_has_tag()
{
    _has_bits_[0] &= ~0x00000010u;
}
void NotificationDatabaseDataProto_NotificationData::clear_tag()
{
    tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_tag();
}
const ::std::string& NotificationDatabaseDataProto_NotificationData::tag() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.tag)
    return tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_tag(const ::std::string& value)
{
    set_has_tag();
    tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.tag)
}
void NotificationDatabaseDataProto_NotificationData::set_tag(const char* value)
{
    set_has_tag();
    tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.tag)
}
void NotificationDatabaseDataProto_NotificationData::set_tag(const char* value, size_t size)
{
    set_has_tag();
    tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.tag)
}
::std::string* NotificationDatabaseDataProto_NotificationData::mutable_tag()
{
    set_has_tag();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.tag)
    return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotificationDatabaseDataProto_NotificationData::release_tag()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.tag)
    clear_has_tag();
    return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_allocated_tag(::std::string* tag)
{
    if (tag != NULL) {
        set_has_tag();
    } else {
        clear_has_tag();
    }
    tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.tag)
}

// optional string image = 15;
bool NotificationDatabaseDataProto_NotificationData::has_image() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
void NotificationDatabaseDataProto_NotificationData::set_has_image()
{
    _has_bits_[0] |= 0x00000020u;
}
void NotificationDatabaseDataProto_NotificationData::clear_has_image()
{
    _has_bits_[0] &= ~0x00000020u;
}
void NotificationDatabaseDataProto_NotificationData::clear_image()
{
    image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_image();
}
const ::std::string& NotificationDatabaseDataProto_NotificationData::image() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.image)
    return image_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_image(const ::std::string& value)
{
    set_has_image();
    image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.image)
}
void NotificationDatabaseDataProto_NotificationData::set_image(const char* value)
{
    set_has_image();
    image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.image)
}
void NotificationDatabaseDataProto_NotificationData::set_image(const char* value, size_t size)
{
    set_has_image();
    image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.image)
}
::std::string* NotificationDatabaseDataProto_NotificationData::mutable_image()
{
    set_has_image();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.image)
    return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotificationDatabaseDataProto_NotificationData::release_image()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.image)
    clear_has_image();
    return image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_allocated_image(::std::string* image)
{
    if (image != NULL) {
        set_has_image();
    } else {
        clear_has_image();
    }
    image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.image)
}

// optional string icon = 6;
bool NotificationDatabaseDataProto_NotificationData::has_icon() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
void NotificationDatabaseDataProto_NotificationData::set_has_icon()
{
    _has_bits_[0] |= 0x00000040u;
}
void NotificationDatabaseDataProto_NotificationData::clear_has_icon()
{
    _has_bits_[0] &= ~0x00000040u;
}
void NotificationDatabaseDataProto_NotificationData::clear_icon()
{
    icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_icon();
}
const ::std::string& NotificationDatabaseDataProto_NotificationData::icon() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.icon)
    return icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_icon(const ::std::string& value)
{
    set_has_icon();
    icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.icon)
}
void NotificationDatabaseDataProto_NotificationData::set_icon(const char* value)
{
    set_has_icon();
    icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.icon)
}
void NotificationDatabaseDataProto_NotificationData::set_icon(const char* value, size_t size)
{
    set_has_icon();
    icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.icon)
}
::std::string* NotificationDatabaseDataProto_NotificationData::mutable_icon()
{
    set_has_icon();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.icon)
    return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotificationDatabaseDataProto_NotificationData::release_icon()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.icon)
    clear_has_icon();
    return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_allocated_icon(::std::string* icon)
{
    if (icon != NULL) {
        set_has_icon();
    } else {
        clear_has_icon();
    }
    icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.icon)
}

// optional string badge = 14;
bool NotificationDatabaseDataProto_NotificationData::has_badge() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
void NotificationDatabaseDataProto_NotificationData::set_has_badge()
{
    _has_bits_[0] |= 0x00000080u;
}
void NotificationDatabaseDataProto_NotificationData::clear_has_badge()
{
    _has_bits_[0] &= ~0x00000080u;
}
void NotificationDatabaseDataProto_NotificationData::clear_badge()
{
    badge_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_badge();
}
const ::std::string& NotificationDatabaseDataProto_NotificationData::badge() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.badge)
    return badge_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_badge(const ::std::string& value)
{
    set_has_badge();
    badge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.badge)
}
void NotificationDatabaseDataProto_NotificationData::set_badge(const char* value)
{
    set_has_badge();
    badge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.badge)
}
void NotificationDatabaseDataProto_NotificationData::set_badge(const char* value, size_t size)
{
    set_has_badge();
    badge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.badge)
}
::std::string* NotificationDatabaseDataProto_NotificationData::mutable_badge()
{
    set_has_badge();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.badge)
    return badge_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotificationDatabaseDataProto_NotificationData::release_badge()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.badge)
    clear_has_badge();
    return badge_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_allocated_badge(::std::string* badge)
{
    if (badge != NULL) {
        set_has_badge();
    } else {
        clear_has_badge();
    }
    badge_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), badge);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.badge)
}

// repeated int32 vibration_pattern = 9 [packed = true];
int NotificationDatabaseDataProto_NotificationData::vibration_pattern_size() const
{
    return vibration_pattern_.size();
}
void NotificationDatabaseDataProto_NotificationData::clear_vibration_pattern()
{
    vibration_pattern_.Clear();
}
::google::protobuf::int32 NotificationDatabaseDataProto_NotificationData::vibration_pattern(int index) const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.vibration_pattern)
    return vibration_pattern_.Get(index);
}
void NotificationDatabaseDataProto_NotificationData::set_vibration_pattern(int index, ::google::protobuf::int32 value)
{
    vibration_pattern_.Set(index, value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.vibration_pattern)
}
void NotificationDatabaseDataProto_NotificationData::add_vibration_pattern(::google::protobuf::int32 value)
{
    vibration_pattern_.Add(value);
    // @@protoc_insertion_point(field_add:content.NotificationDatabaseDataProto.NotificationData.vibration_pattern)
}
const ::google::protobuf::RepeatedField<::google::protobuf::int32>&
NotificationDatabaseDataProto_NotificationData::vibration_pattern() const
{
    // @@protoc_insertion_point(field_list:content.NotificationDatabaseDataProto.NotificationData.vibration_pattern)
    return vibration_pattern_;
}
::google::protobuf::RepeatedField<::google::protobuf::int32>*
NotificationDatabaseDataProto_NotificationData::mutable_vibration_pattern()
{
    // @@protoc_insertion_point(field_mutable_list:content.NotificationDatabaseDataProto.NotificationData.vibration_pattern)
    return &vibration_pattern_;
}

// optional int64 timestamp = 12;
bool NotificationDatabaseDataProto_NotificationData::has_timestamp() const
{
    return (_has_bits_[0] & 0x00000200u) != 0;
}
void NotificationDatabaseDataProto_NotificationData::set_has_timestamp()
{
    _has_bits_[0] |= 0x00000200u;
}
void NotificationDatabaseDataProto_NotificationData::clear_has_timestamp()
{
    _has_bits_[0] &= ~0x00000200u;
}
void NotificationDatabaseDataProto_NotificationData::clear_timestamp()
{
    timestamp_ = GOOGLE_LONGLONG(0);
    clear_has_timestamp();
}
::google::protobuf::int64 NotificationDatabaseDataProto_NotificationData::timestamp() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.timestamp)
    return timestamp_;
}
void NotificationDatabaseDataProto_NotificationData::set_timestamp(::google::protobuf::int64 value)
{
    set_has_timestamp();
    timestamp_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.timestamp)
}

// optional bool renotify = 13;
bool NotificationDatabaseDataProto_NotificationData::has_renotify() const
{
    return (_has_bits_[0] & 0x00000400u) != 0;
}
void NotificationDatabaseDataProto_NotificationData::set_has_renotify()
{
    _has_bits_[0] |= 0x00000400u;
}
void NotificationDatabaseDataProto_NotificationData::clear_has_renotify()
{
    _has_bits_[0] &= ~0x00000400u;
}
void NotificationDatabaseDataProto_NotificationData::clear_renotify()
{
    renotify_ = false;
    clear_has_renotify();
}
bool NotificationDatabaseDataProto_NotificationData::renotify() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.renotify)
    return renotify_;
}
void NotificationDatabaseDataProto_NotificationData::set_renotify(bool value)
{
    set_has_renotify();
    renotify_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.renotify)
}

// optional bool silent = 7;
bool NotificationDatabaseDataProto_NotificationData::has_silent() const
{
    return (_has_bits_[0] & 0x00000800u) != 0;
}
void NotificationDatabaseDataProto_NotificationData::set_has_silent()
{
    _has_bits_[0] |= 0x00000800u;
}
void NotificationDatabaseDataProto_NotificationData::clear_has_silent()
{
    _has_bits_[0] &= ~0x00000800u;
}
void NotificationDatabaseDataProto_NotificationData::clear_silent()
{
    silent_ = false;
    clear_has_silent();
}
bool NotificationDatabaseDataProto_NotificationData::silent() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.silent)
    return silent_;
}
void NotificationDatabaseDataProto_NotificationData::set_silent(bool value)
{
    set_has_silent();
    silent_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.silent)
}

// optional bool require_interaction = 11;
bool NotificationDatabaseDataProto_NotificationData::has_require_interaction() const
{
    return (_has_bits_[0] & 0x00001000u) != 0;
}
void NotificationDatabaseDataProto_NotificationData::set_has_require_interaction()
{
    _has_bits_[0] |= 0x00001000u;
}
void NotificationDatabaseDataProto_NotificationData::clear_has_require_interaction()
{
    _has_bits_[0] &= ~0x00001000u;
}
void NotificationDatabaseDataProto_NotificationData::clear_require_interaction()
{
    require_interaction_ = false;
    clear_has_require_interaction();
}
bool NotificationDatabaseDataProto_NotificationData::require_interaction() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.require_interaction)
    return require_interaction_;
}
void NotificationDatabaseDataProto_NotificationData::set_require_interaction(bool value)
{
    set_has_require_interaction();
    require_interaction_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.require_interaction)
}

// optional bytes data = 8;
bool NotificationDatabaseDataProto_NotificationData::has_data() const
{
    return (_has_bits_[0] & 0x00002000u) != 0;
}
void NotificationDatabaseDataProto_NotificationData::set_has_data()
{
    _has_bits_[0] |= 0x00002000u;
}
void NotificationDatabaseDataProto_NotificationData::clear_has_data()
{
    _has_bits_[0] &= ~0x00002000u;
}
void NotificationDatabaseDataProto_NotificationData::clear_data()
{
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_data();
}
const ::std::string& NotificationDatabaseDataProto_NotificationData::data() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.data)
    return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_data(const ::std::string& value)
{
    set_has_data();
    data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.NotificationData.data)
}
void NotificationDatabaseDataProto_NotificationData::set_data(const char* value)
{
    set_has_data();
    data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.NotificationData.data)
}
void NotificationDatabaseDataProto_NotificationData::set_data(const void* value, size_t size)
{
    set_has_data();
    data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.NotificationData.data)
}
::std::string* NotificationDatabaseDataProto_NotificationData::mutable_data()
{
    set_has_data();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.data)
    return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotificationDatabaseDataProto_NotificationData::release_data()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.NotificationData.data)
    clear_has_data();
    return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto_NotificationData::set_allocated_data(::std::string* data)
{
    if (data != NULL) {
        set_has_data();
    } else {
        clear_has_data();
    }
    data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.NotificationData.data)
}

// repeated .content.NotificationDatabaseDataProto.NotificationAction actions = 10;
int NotificationDatabaseDataProto_NotificationData::actions_size() const
{
    return actions_.size();
}
void NotificationDatabaseDataProto_NotificationData::clear_actions()
{
    actions_.Clear();
}
const ::content::NotificationDatabaseDataProto_NotificationAction& NotificationDatabaseDataProto_NotificationData::actions(int index) const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.NotificationData.actions)
    return actions_.Get(index);
}
::content::NotificationDatabaseDataProto_NotificationAction* NotificationDatabaseDataProto_NotificationData::mutable_actions(int index)
{
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.NotificationData.actions)
    return actions_.Mutable(index);
}
::content::NotificationDatabaseDataProto_NotificationAction* NotificationDatabaseDataProto_NotificationData::add_actions()
{
    // @@protoc_insertion_point(field_add:content.NotificationDatabaseDataProto.NotificationData.actions)
    return actions_.Add();
}
::google::protobuf::RepeatedPtrField<::content::NotificationDatabaseDataProto_NotificationAction>*
NotificationDatabaseDataProto_NotificationData::mutable_actions()
{
    // @@protoc_insertion_point(field_mutable_list:content.NotificationDatabaseDataProto.NotificationData.actions)
    return &actions_;
}
const ::google::protobuf::RepeatedPtrField<::content::NotificationDatabaseDataProto_NotificationAction>&
NotificationDatabaseDataProto_NotificationData::actions() const
{
    // @@protoc_insertion_point(field_list:content.NotificationDatabaseDataProto.NotificationData.actions)
    return actions_;
}

// -------------------------------------------------------------------

// NotificationDatabaseDataProto

// optional int64 persistent_notification_id = 1;
bool NotificationDatabaseDataProto::has_persistent_notification_id() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void NotificationDatabaseDataProto::set_has_persistent_notification_id()
{
    _has_bits_[0] |= 0x00000001u;
}
void NotificationDatabaseDataProto::clear_has_persistent_notification_id()
{
    _has_bits_[0] &= ~0x00000001u;
}
void NotificationDatabaseDataProto::clear_persistent_notification_id()
{
    persistent_notification_id_ = GOOGLE_LONGLONG(0);
    clear_has_persistent_notification_id();
}
::google::protobuf::int64 NotificationDatabaseDataProto::persistent_notification_id() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.persistent_notification_id)
    return persistent_notification_id_;
}
void NotificationDatabaseDataProto::set_persistent_notification_id(::google::protobuf::int64 value)
{
    set_has_persistent_notification_id();
    persistent_notification_id_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.persistent_notification_id)
}

// optional string notification_id = 5;
bool NotificationDatabaseDataProto::has_notification_id() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void NotificationDatabaseDataProto::set_has_notification_id()
{
    _has_bits_[0] |= 0x00000002u;
}
void NotificationDatabaseDataProto::clear_has_notification_id()
{
    _has_bits_[0] &= ~0x00000002u;
}
void NotificationDatabaseDataProto::clear_notification_id()
{
    notification_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_notification_id();
}
const ::std::string& NotificationDatabaseDataProto::notification_id() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.notification_id)
    return notification_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto::set_notification_id(const ::std::string& value)
{
    set_has_notification_id();
    notification_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.notification_id)
}
void NotificationDatabaseDataProto::set_notification_id(const char* value)
{
    set_has_notification_id();
    notification_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.notification_id)
}
void NotificationDatabaseDataProto::set_notification_id(const char* value, size_t size)
{
    set_has_notification_id();
    notification_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.notification_id)
}
::std::string* NotificationDatabaseDataProto::mutable_notification_id()
{
    set_has_notification_id();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.notification_id)
    return notification_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotificationDatabaseDataProto::release_notification_id()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.notification_id)
    clear_has_notification_id();
    return notification_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto::set_allocated_notification_id(::std::string* notification_id)
{
    if (notification_id != NULL) {
        set_has_notification_id();
    } else {
        clear_has_notification_id();
    }
    notification_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), notification_id);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.notification_id)
}

// optional string origin = 2;
bool NotificationDatabaseDataProto::has_origin() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void NotificationDatabaseDataProto::set_has_origin()
{
    _has_bits_[0] |= 0x00000004u;
}
void NotificationDatabaseDataProto::clear_has_origin()
{
    _has_bits_[0] &= ~0x00000004u;
}
void NotificationDatabaseDataProto::clear_origin()
{
    origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_origin();
}
const ::std::string& NotificationDatabaseDataProto::origin() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.origin)
    return origin_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto::set_origin(const ::std::string& value)
{
    set_has_origin();
    origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.origin)
}
void NotificationDatabaseDataProto::set_origin(const char* value)
{
    set_has_origin();
    origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:content.NotificationDatabaseDataProto.origin)
}
void NotificationDatabaseDataProto::set_origin(const char* value, size_t size)
{
    set_has_origin();
    origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:content.NotificationDatabaseDataProto.origin)
}
::std::string* NotificationDatabaseDataProto::mutable_origin()
{
    set_has_origin();
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.origin)
    return origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotificationDatabaseDataProto::release_origin()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.origin)
    clear_has_origin();
    return origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotificationDatabaseDataProto::set_allocated_origin(::std::string* origin)
{
    if (origin != NULL) {
        set_has_origin();
    } else {
        clear_has_origin();
    }
    origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin);
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.origin)
}

// optional int64 service_worker_registration_id = 3;
bool NotificationDatabaseDataProto::has_service_worker_registration_id() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void NotificationDatabaseDataProto::set_has_service_worker_registration_id()
{
    _has_bits_[0] |= 0x00000008u;
}
void NotificationDatabaseDataProto::clear_has_service_worker_registration_id()
{
    _has_bits_[0] &= ~0x00000008u;
}
void NotificationDatabaseDataProto::clear_service_worker_registration_id()
{
    service_worker_registration_id_ = GOOGLE_LONGLONG(0);
    clear_has_service_worker_registration_id();
}
::google::protobuf::int64 NotificationDatabaseDataProto::service_worker_registration_id() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.service_worker_registration_id)
    return service_worker_registration_id_;
}
void NotificationDatabaseDataProto::set_service_worker_registration_id(::google::protobuf::int64 value)
{
    set_has_service_worker_registration_id();
    service_worker_registration_id_ = value;
    // @@protoc_insertion_point(field_set:content.NotificationDatabaseDataProto.service_worker_registration_id)
}

// optional .content.NotificationDatabaseDataProto.NotificationData notification_data = 4;
bool NotificationDatabaseDataProto::has_notification_data() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void NotificationDatabaseDataProto::set_has_notification_data()
{
    _has_bits_[0] |= 0x00000010u;
}
void NotificationDatabaseDataProto::clear_has_notification_data()
{
    _has_bits_[0] &= ~0x00000010u;
}
void NotificationDatabaseDataProto::clear_notification_data()
{
    if (notification_data_ != NULL)
        notification_data_->::content::NotificationDatabaseDataProto_NotificationData::Clear();
    clear_has_notification_data();
}
const ::content::NotificationDatabaseDataProto_NotificationData& NotificationDatabaseDataProto::notification_data() const
{
    // @@protoc_insertion_point(field_get:content.NotificationDatabaseDataProto.notification_data)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return notification_data_ != NULL ? *notification_data_ : *default_instance().notification_data_;
#else
    return notification_data_ != NULL ? *notification_data_ : *default_instance_->notification_data_;
#endif
}
::content::NotificationDatabaseDataProto_NotificationData* NotificationDatabaseDataProto::mutable_notification_data()
{
    set_has_notification_data();
    if (notification_data_ == NULL) {
        notification_data_ = new ::content::NotificationDatabaseDataProto_NotificationData;
    }
    // @@protoc_insertion_point(field_mutable:content.NotificationDatabaseDataProto.notification_data)
    return notification_data_;
}
::content::NotificationDatabaseDataProto_NotificationData* NotificationDatabaseDataProto::release_notification_data()
{
    // @@protoc_insertion_point(field_release:content.NotificationDatabaseDataProto.notification_data)
    clear_has_notification_data();
    ::content::NotificationDatabaseDataProto_NotificationData* temp = notification_data_;
    notification_data_ = NULL;
    return temp;
}
void NotificationDatabaseDataProto::set_allocated_notification_data(::content::NotificationDatabaseDataProto_NotificationData* notification_data)
{
    delete notification_data_;
    notification_data_ = notification_data;
    if (notification_data) {
        set_has_notification_data();
    } else {
        clear_has_notification_data();
    }
    // @@protoc_insertion_point(field_set_allocated:content.NotificationDatabaseDataProto.notification_data)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace content

// @@protoc_insertion_point(global_scope)
