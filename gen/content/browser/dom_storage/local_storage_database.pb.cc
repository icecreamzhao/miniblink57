// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: local_storage_database.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "local_storage_database.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace content {

void protobuf_ShutdownFile_local_5fstorage_5fdatabase_2eproto()
{
    delete LocalStorageOriginMetaData::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_local_5fstorage_5fdatabase_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_local_5fstorage_5fdatabase_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    LocalStorageOriginMetaData::default_instance_ = new LocalStorageOriginMetaData();
    LocalStorageOriginMetaData::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_local_5fstorage_5fdatabase_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_local_5fstorage_5fdatabase_2eproto_once_);
void protobuf_AddDesc_local_5fstorage_5fdatabase_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_local_5fstorage_5fdatabase_2eproto_once_,
        &protobuf_AddDesc_local_5fstorage_5fdatabase_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_local_5fstorage_5fdatabase_2eproto {
    StaticDescriptorInitializer_local_5fstorage_5fdatabase_2eproto()
    {
        protobuf_AddDesc_local_5fstorage_5fdatabase_2eproto();
    }
} static_descriptor_initializer_local_5fstorage_5fdatabase_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForLocalStorageOriginMetaData(
    LocalStorageOriginMetaData* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalStorageOriginMetaData::kLastModifiedFieldNumber;
const int LocalStorageOriginMetaData::kSizeBytesFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalStorageOriginMetaData::LocalStorageOriginMetaData()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:content.LocalStorageOriginMetaData)
}

void LocalStorageOriginMetaData::InitAsDefaultInstance()
{
}

LocalStorageOriginMetaData::LocalStorageOriginMetaData(const LocalStorageOriginMetaData& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:content.LocalStorageOriginMetaData)
}

void LocalStorageOriginMetaData::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    last_modified_ = GOOGLE_LONGLONG(0);
    size_bytes_ = GOOGLE_ULONGLONG(0);
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LocalStorageOriginMetaData::~LocalStorageOriginMetaData()
{
    // @@protoc_insertion_point(destructor:content.LocalStorageOriginMetaData)
    SharedDtor();
}

void LocalStorageOriginMetaData::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void LocalStorageOriginMetaData::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const LocalStorageOriginMetaData& LocalStorageOriginMetaData::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_local_5fstorage_5fdatabase_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_local_5fstorage_5fdatabase_2eproto();
#endif
    return *default_instance_;
}

LocalStorageOriginMetaData* LocalStorageOriginMetaData::default_instance_ = NULL;

LocalStorageOriginMetaData* LocalStorageOriginMetaData::New(::google::protobuf::Arena* arena) const
{
    LocalStorageOriginMetaData* n = new LocalStorageOriginMetaData;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void LocalStorageOriginMetaData::Clear()
{
// @@protoc_insertion_point(message_clear_start:content.LocalStorageOriginMetaData)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                                \
    _Pragma("clang diagnostic push")                                                                                 \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(LocalStorageOriginMetaData, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<LocalStorageOriginMetaData*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    ZR_(last_modified_, size_bytes_);

#undef ZR_HELPER_
#undef ZR_

    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LocalStorageOriginMetaData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForLocalStorageOriginMetaData, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:content.LocalStorageOriginMetaData)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // required int64 last_modified = 1;
        case 1: {
            if (tag == 8) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &last_modified_)));
                set_has_last_modified();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(16))
                goto parse_size_bytes;
            break;
        }

        // required uint64 size_bytes = 2;
        case 2: {
            if (tag == 16) {
            parse_size_bytes:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                    input, &size_bytes_)));
                set_has_size_bytes();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:content.LocalStorageOriginMetaData)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:content.LocalStorageOriginMetaData)
    return false;
#undef DO_
}

void LocalStorageOriginMetaData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:content.LocalStorageOriginMetaData)
    // required int64 last_modified = 1;
    if (has_last_modified()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->last_modified(), output);
    }

    // required uint64 size_bytes = 2;
    if (has_size_bytes()) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->size_bytes(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:content.LocalStorageOriginMetaData)
}

int LocalStorageOriginMetaData::RequiredFieldsByteSizeFallback() const
{
    // @@protoc_insertion_point(required_fields_byte_size_fallback_start:content.LocalStorageOriginMetaData)
    int total_size = 0;

    if (has_last_modified()) {
        // required int64 last_modified = 1;
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->last_modified());
    }

    if (has_size_bytes()) {
        // required uint64 size_bytes = 2;
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->size_bytes());
    }

    return total_size;
}
int LocalStorageOriginMetaData::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:content.LocalStorageOriginMetaData)
    int total_size = 0;

    if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) { // All required fields are present.
        // required int64 last_modified = 1;
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->last_modified());

        // required uint64 size_bytes = 2;
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->size_bytes());

    } else {
        total_size += RequiredFieldsByteSizeFallback();
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void LocalStorageOriginMetaData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const LocalStorageOriginMetaData*>(&from));
}

void LocalStorageOriginMetaData::MergeFrom(const LocalStorageOriginMetaData& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:content.LocalStorageOriginMetaData)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_last_modified()) {
            set_last_modified(from.last_modified());
        }
        if (from.has_size_bytes()) {
            set_size_bytes(from.size_bytes());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void LocalStorageOriginMetaData::CopyFrom(const LocalStorageOriginMetaData& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:content.LocalStorageOriginMetaData)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool LocalStorageOriginMetaData::IsInitialized() const
{
    if ((_has_bits_[0] & 0x00000003) != 0x00000003)
        return false;

    return true;
}

void LocalStorageOriginMetaData::Swap(LocalStorageOriginMetaData* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void LocalStorageOriginMetaData::InternalSwap(LocalStorageOriginMetaData* other)
{
    std::swap(last_modified_, other->last_modified_);
    std::swap(size_bytes_, other->size_bytes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string LocalStorageOriginMetaData::GetTypeName() const
{
    return "content.LocalStorageOriginMetaData";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LocalStorageOriginMetaData

// required int64 last_modified = 1;
bool LocalStorageOriginMetaData::has_last_modified() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void LocalStorageOriginMetaData::set_has_last_modified()
{
    _has_bits_[0] |= 0x00000001u;
}
void LocalStorageOriginMetaData::clear_has_last_modified()
{
    _has_bits_[0] &= ~0x00000001u;
}
void LocalStorageOriginMetaData::clear_last_modified()
{
    last_modified_ = GOOGLE_LONGLONG(0);
    clear_has_last_modified();
}
::google::protobuf::int64 LocalStorageOriginMetaData::last_modified() const
{
    // @@protoc_insertion_point(field_get:content.LocalStorageOriginMetaData.last_modified)
    return last_modified_;
}
void LocalStorageOriginMetaData::set_last_modified(::google::protobuf::int64 value)
{
    set_has_last_modified();
    last_modified_ = value;
    // @@protoc_insertion_point(field_set:content.LocalStorageOriginMetaData.last_modified)
}

// required uint64 size_bytes = 2;
bool LocalStorageOriginMetaData::has_size_bytes() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void LocalStorageOriginMetaData::set_has_size_bytes()
{
    _has_bits_[0] |= 0x00000002u;
}
void LocalStorageOriginMetaData::clear_has_size_bytes()
{
    _has_bits_[0] &= ~0x00000002u;
}
void LocalStorageOriginMetaData::clear_size_bytes()
{
    size_bytes_ = GOOGLE_ULONGLONG(0);
    clear_has_size_bytes();
}
::google::protobuf::uint64 LocalStorageOriginMetaData::size_bytes() const
{
    // @@protoc_insertion_point(field_get:content.LocalStorageOriginMetaData.size_bytes)
    return size_bytes_;
}
void LocalStorageOriginMetaData::set_size_bytes(::google::protobuf::uint64 value)
{
    set_has_size_bytes();
    size_bytes_ = value;
    // @@protoc_insertion_point(field_set:content.LocalStorageOriginMetaData.size_bytes)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace content

// @@protoc_insertion_point(global_scope)
