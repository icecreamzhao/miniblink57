// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cache_storage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cache_storage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace content {
namespace proto {

    void protobuf_ShutdownFile_cache_5fstorage_2eproto()
    {
        delete CacheStorageIndex::default_instance_;
        delete CacheStorageIndex_Cache::default_instance_;
        delete CacheHeaderMap::default_instance_;
        delete CacheRequest::default_instance_;
        delete CacheResponse::default_instance_;
        delete CacheMetadata::default_instance_;
    }

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    void protobuf_AddDesc_cache_5fstorage_2eproto_impl()
    {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
    void protobuf_AddDesc_cache_5fstorage_2eproto()
    {
        static bool already_here = false;
        if (already_here)
            return;
        already_here = true;
        GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
        CacheStorageIndex::default_instance_ = new CacheStorageIndex();
        CacheStorageIndex_Cache::default_instance_ = new CacheStorageIndex_Cache();
        CacheHeaderMap::default_instance_ = new CacheHeaderMap();
        CacheRequest::default_instance_ = new CacheRequest();
        CacheResponse::default_instance_ = new CacheResponse();
        CacheMetadata::default_instance_ = new CacheMetadata();
        CacheStorageIndex::default_instance_->InitAsDefaultInstance();
        CacheStorageIndex_Cache::default_instance_->InitAsDefaultInstance();
        CacheHeaderMap::default_instance_->InitAsDefaultInstance();
        CacheRequest::default_instance_->InitAsDefaultInstance();
        CacheResponse::default_instance_->InitAsDefaultInstance();
        CacheMetadata::default_instance_->InitAsDefaultInstance();
        ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_cache_5fstorage_2eproto);
    }

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_cache_5fstorage_2eproto_once_);
    void protobuf_AddDesc_cache_5fstorage_2eproto()
    {
        ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_cache_5fstorage_2eproto_once_,
            &protobuf_AddDesc_cache_5fstorage_2eproto_impl);
    }
#else
    // Force AddDescriptors() to be called at static initialization time.
    struct StaticDescriptorInitializer_cache_5fstorage_2eproto {
        StaticDescriptorInitializer_cache_5fstorage_2eproto()
        {
            protobuf_AddDesc_cache_5fstorage_2eproto();
        }
    } static_descriptor_initializer_cache_5fstorage_2eproto_;
#endif

    namespace {

        static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
        GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
        {
            GOOGLE_CHECK(false) << __FILE__ << ":" << line;
        }

    } // namespace

    // ===================================================================

    static ::std::string* MutableUnknownFieldsForCacheStorageIndex(
        CacheStorageIndex* ptr)
    {
        return ptr->mutable_unknown_fields();
    }

    static ::std::string* MutableUnknownFieldsForCacheStorageIndex_Cache(
        CacheStorageIndex_Cache* ptr)
    {
        return ptr->mutable_unknown_fields();
    }

#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int CacheStorageIndex_Cache::kNameFieldNumber;
    const int CacheStorageIndex_Cache::kCacheDirFieldNumber;
    const int CacheStorageIndex_Cache::kSizeFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

    CacheStorageIndex_Cache::CacheStorageIndex_Cache()
        : ::google::protobuf::MessageLite()
        , _arena_ptr_(NULL)
    {
        SharedCtor();
        // @@protoc_insertion_point(constructor:content.proto.CacheStorageIndex.Cache)
    }

    void CacheStorageIndex_Cache::InitAsDefaultInstance()
    {
    }

    CacheStorageIndex_Cache::CacheStorageIndex_Cache(const CacheStorageIndex_Cache& from)
        : ::google::protobuf::MessageLite()
        , _arena_ptr_(NULL)
    {
        SharedCtor();
        MergeFrom(from);
        // @@protoc_insertion_point(copy_constructor:content.proto.CacheStorageIndex.Cache)
    }

    void CacheStorageIndex_Cache::SharedCtor()
    {
        ::google::protobuf::internal::GetEmptyString();
        _cached_size_ = 0;
        _unknown_fields_.UnsafeSetDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        cache_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        size_ = GOOGLE_LONGLONG(0);
        ::memset(_has_bits_, 0, sizeof(_has_bits_));
    }

    CacheStorageIndex_Cache::~CacheStorageIndex_Cache()
    {
        // @@protoc_insertion_point(destructor:content.proto.CacheStorageIndex.Cache)
        SharedDtor();
    }

    void CacheStorageIndex_Cache::SharedDtor()
    {
        _unknown_fields_.DestroyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        cache_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        if (this != &default_instance()) {
#else
        if (this != default_instance_) {
#endif
        }
    }

    void CacheStorageIndex_Cache::SetCachedSize(int size) const
    {
        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _cached_size_ = size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
    }
    const CacheStorageIndex_Cache& CacheStorageIndex_Cache::default_instance()
    {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        protobuf_AddDesc_cache_5fstorage_2eproto();
#else
        if (default_instance_ == NULL)
            protobuf_AddDesc_cache_5fstorage_2eproto();
#endif
        return *default_instance_;
    }

    CacheStorageIndex_Cache* CacheStorageIndex_Cache::default_instance_ = NULL;

    CacheStorageIndex_Cache* CacheStorageIndex_Cache::New(::google::protobuf::Arena* arena) const
    {
        CacheStorageIndex_Cache* n = new CacheStorageIndex_Cache;
        if (arena != NULL) {
            arena->Own(n);
        }
        return n;
    }

    void CacheStorageIndex_Cache::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:content.proto.CacheStorageIndex.Cache)
        if (_has_bits_[0 / 32] & 7u) {
            if (has_name()) {
                name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
            }
            if (has_cache_dir()) {
                cache_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
            }
            size_ = GOOGLE_LONGLONG(0);
        }
        ::memset(_has_bits_, 0, sizeof(_has_bits_));
        _unknown_fields_.ClearToEmptyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    bool CacheStorageIndex_Cache::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input)
    {
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
        ::google::protobuf::uint32 tag;
        ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
            ::google::protobuf::internal::NewPermanentCallback(
                &MutableUnknownFieldsForCacheStorageIndex_Cache, this));
        ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
            &unknown_fields_string, false);
        // @@protoc_insertion_point(parse_start:content.proto.CacheStorageIndex.Cache)
        for (;;) {
            ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
            tag = p.first;
            if (!p.second)
                goto handle_unusual;
            switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // required string name = 1;
            case 1: {
                if (tag == 10) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                        input, this->mutable_name()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(18))
                    goto parse_cache_dir;
                break;
            }

            // optional string cache_dir = 2;
            case 2: {
                if (tag == 18) {
                parse_cache_dir:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                        input, this->mutable_cache_dir()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(24))
                    goto parse_size;
                break;
            }

            // optional int64 size = 3;
            case 3: {
                if (tag == 24) {
                parse_size:
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                        ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                        input, &size_)));
                    set_has_size();
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectAtEnd())
                    goto success;
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                    input, tag, &unknown_fields_stream));
                break;
            }
            }
        }
    success:
        // @@protoc_insertion_point(parse_success:content.proto.CacheStorageIndex.Cache)
        return true;
    failure:
        // @@protoc_insertion_point(parse_failure:content.proto.CacheStorageIndex.Cache)
        return false;
#undef DO_
    }

    void CacheStorageIndex_Cache::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const
    {
        // @@protoc_insertion_point(serialize_start:content.proto.CacheStorageIndex.Cache)
        // required string name = 1;
        if (has_name()) {
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                1, this->name(), output);
        }

        // optional string cache_dir = 2;
        if (has_cache_dir()) {
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                2, this->cache_dir(), output);
        }

        // optional int64 size = 3;
        if (has_size()) {
            ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->size(), output);
        }

        output->WriteRaw(unknown_fields().data(),
            static_cast<int>(unknown_fields().size()));
        // @@protoc_insertion_point(serialize_end:content.proto.CacheStorageIndex.Cache)
    }

    int CacheStorageIndex_Cache::ByteSize() const
    {
        // @@protoc_insertion_point(message_byte_size_start:content.proto.CacheStorageIndex.Cache)
        int total_size = 0;

        // required string name = 1;
        if (has_name()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->name());
        }
        if (_has_bits_[1 / 32] & 6u) {
            // optional string cache_dir = 2;
            if (has_cache_dir()) {
                total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->cache_dir());
            }

            // optional int64 size = 3;
            if (has_size()) {
                total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->size());
            }
        }
        total_size += unknown_fields().size();

        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _cached_size_ = total_size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
        return total_size;
    }

    void CacheStorageIndex_Cache::CheckTypeAndMergeFrom(
        const ::google::protobuf::MessageLite& from)
    {
        MergeFrom(*::google::protobuf::down_cast<const CacheStorageIndex_Cache*>(&from));
    }

    void CacheStorageIndex_Cache::MergeFrom(const CacheStorageIndex_Cache& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:content.proto.CacheStorageIndex.Cache)
        if (GOOGLE_PREDICT_FALSE(&from == this))
            MergeFromFail(__LINE__);
        if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
            if (from.has_name()) {
                set_has_name();
                name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
            }
            if (from.has_cache_dir()) {
                set_has_cache_dir();
                cache_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cache_dir_);
            }
            if (from.has_size()) {
                set_size(from.size());
            }
        }
        if (!from.unknown_fields().empty()) {
            mutable_unknown_fields()->append(from.unknown_fields());
        }
    }

    void CacheStorageIndex_Cache::CopyFrom(const CacheStorageIndex_Cache& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:content.proto.CacheStorageIndex.Cache)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool CacheStorageIndex_Cache::IsInitialized() const
    {
        if ((_has_bits_[0] & 0x00000001) != 0x00000001)
            return false;

        return true;
    }

    void CacheStorageIndex_Cache::Swap(CacheStorageIndex_Cache* other)
    {
        if (other == this)
            return;
        InternalSwap(other);
    }
    void CacheStorageIndex_Cache::InternalSwap(CacheStorageIndex_Cache* other)
    {
        name_.Swap(&other->name_);
        cache_dir_.Swap(&other->cache_dir_);
        std::swap(size_, other->size_);
        std::swap(_has_bits_[0], other->_has_bits_[0]);
        _unknown_fields_.Swap(&other->_unknown_fields_);
        std::swap(_cached_size_, other->_cached_size_);
    }

    ::std::string CacheStorageIndex_Cache::GetTypeName() const
    {
        return "content.proto.CacheStorageIndex.Cache";
    }

    // -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int CacheStorageIndex::kCacheFieldNumber;
    const int CacheStorageIndex::kOriginFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

    CacheStorageIndex::CacheStorageIndex()
        : ::google::protobuf::MessageLite()
        , _arena_ptr_(NULL)
    {
        SharedCtor();
        // @@protoc_insertion_point(constructor:content.proto.CacheStorageIndex)
    }

    void CacheStorageIndex::InitAsDefaultInstance()
    {
    }

    CacheStorageIndex::CacheStorageIndex(const CacheStorageIndex& from)
        : ::google::protobuf::MessageLite()
        , _arena_ptr_(NULL)
    {
        SharedCtor();
        MergeFrom(from);
        // @@protoc_insertion_point(copy_constructor:content.proto.CacheStorageIndex)
    }

    void CacheStorageIndex::SharedCtor()
    {
        ::google::protobuf::internal::GetEmptyString();
        _cached_size_ = 0;
        _unknown_fields_.UnsafeSetDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        origin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        ::memset(_has_bits_, 0, sizeof(_has_bits_));
    }

    CacheStorageIndex::~CacheStorageIndex()
    {
        // @@protoc_insertion_point(destructor:content.proto.CacheStorageIndex)
        SharedDtor();
    }

    void CacheStorageIndex::SharedDtor()
    {
        _unknown_fields_.DestroyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        origin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        if (this != &default_instance()) {
#else
        if (this != default_instance_) {
#endif
        }
    }

    void CacheStorageIndex::SetCachedSize(int size) const
    {
        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _cached_size_ = size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
    }
    const CacheStorageIndex& CacheStorageIndex::default_instance()
    {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        protobuf_AddDesc_cache_5fstorage_2eproto();
#else
        if (default_instance_ == NULL)
            protobuf_AddDesc_cache_5fstorage_2eproto();
#endif
        return *default_instance_;
    }

    CacheStorageIndex* CacheStorageIndex::default_instance_ = NULL;

    CacheStorageIndex* CacheStorageIndex::New(::google::protobuf::Arena* arena) const
    {
        CacheStorageIndex* n = new CacheStorageIndex;
        if (arena != NULL) {
            arena->Own(n);
        }
        return n;
    }

    void CacheStorageIndex::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:content.proto.CacheStorageIndex)
        if (has_origin()) {
            origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        cache_.Clear();
        ::memset(_has_bits_, 0, sizeof(_has_bits_));
        _unknown_fields_.ClearToEmptyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    bool CacheStorageIndex::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input)
    {
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
        ::google::protobuf::uint32 tag;
        ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
            ::google::protobuf::internal::NewPermanentCallback(
                &MutableUnknownFieldsForCacheStorageIndex, this));
        ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
            &unknown_fields_string, false);
        // @@protoc_insertion_point(parse_start:content.proto.CacheStorageIndex)
        for (;;) {
            ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
            tag = p.first;
            if (!p.second)
                goto handle_unusual;
            switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // repeated .content.proto.CacheStorageIndex.Cache cache = 1;
            case 1: {
                if (tag == 10) {
                    DO_(input->IncrementRecursionDepth());
                parse_loop_cache:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                        input, add_cache()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(10))
                    goto parse_loop_cache;
                input->UnsafeDecrementRecursionDepth();
                if (input->ExpectTag(18))
                    goto parse_origin;
                break;
            }

            // optional string origin = 2;
            case 2: {
                if (tag == 18) {
                parse_origin:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                        input, this->mutable_origin()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectAtEnd())
                    goto success;
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                    input, tag, &unknown_fields_stream));
                break;
            }
            }
        }
    success:
        // @@protoc_insertion_point(parse_success:content.proto.CacheStorageIndex)
        return true;
    failure:
        // @@protoc_insertion_point(parse_failure:content.proto.CacheStorageIndex)
        return false;
#undef DO_
    }

    void CacheStorageIndex::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const
    {
        // @@protoc_insertion_point(serialize_start:content.proto.CacheStorageIndex)
        // repeated .content.proto.CacheStorageIndex.Cache cache = 1;
        for (unsigned int i = 0, n = this->cache_size(); i < n; i++) {
            ::google::protobuf::internal::WireFormatLite::WriteMessage(
                1, this->cache(i), output);
        }

        // optional string origin = 2;
        if (has_origin()) {
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                2, this->origin(), output);
        }

        output->WriteRaw(unknown_fields().data(),
            static_cast<int>(unknown_fields().size()));
        // @@protoc_insertion_point(serialize_end:content.proto.CacheStorageIndex)
    }

    int CacheStorageIndex::ByteSize() const
    {
        // @@protoc_insertion_point(message_byte_size_start:content.proto.CacheStorageIndex)
        int total_size = 0;

        // optional string origin = 2;
        if (has_origin()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->origin());
        }

        // repeated .content.proto.CacheStorageIndex.Cache cache = 1;
        total_size += 1 * this->cache_size();
        for (int i = 0; i < this->cache_size(); i++) {
            total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                this->cache(i));
        }

        total_size += unknown_fields().size();

        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _cached_size_ = total_size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
        return total_size;
    }

    void CacheStorageIndex::CheckTypeAndMergeFrom(
        const ::google::protobuf::MessageLite& from)
    {
        MergeFrom(*::google::protobuf::down_cast<const CacheStorageIndex*>(&from));
    }

    void CacheStorageIndex::MergeFrom(const CacheStorageIndex& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:content.proto.CacheStorageIndex)
        if (GOOGLE_PREDICT_FALSE(&from == this))
            MergeFromFail(__LINE__);
        cache_.MergeFrom(from.cache_);
        if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
            if (from.has_origin()) {
                set_has_origin();
                origin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_);
            }
        }
        if (!from.unknown_fields().empty()) {
            mutable_unknown_fields()->append(from.unknown_fields());
        }
    }

    void CacheStorageIndex::CopyFrom(const CacheStorageIndex& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:content.proto.CacheStorageIndex)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool CacheStorageIndex::IsInitialized() const
    {

        if (!::google::protobuf::internal::AllAreInitialized(this->cache()))
            return false;
        return true;
    }

    void CacheStorageIndex::Swap(CacheStorageIndex* other)
    {
        if (other == this)
            return;
        InternalSwap(other);
    }
    void CacheStorageIndex::InternalSwap(CacheStorageIndex* other)
    {
        cache_.UnsafeArenaSwap(&other->cache_);
        origin_.Swap(&other->origin_);
        std::swap(_has_bits_[0], other->_has_bits_[0]);
        _unknown_fields_.Swap(&other->_unknown_fields_);
        std::swap(_cached_size_, other->_cached_size_);
    }

    ::std::string CacheStorageIndex::GetTypeName() const
    {
        return "content.proto.CacheStorageIndex";
    }

#if PROTOBUF_INLINE_NOT_IN_HEADERS
    // CacheStorageIndex_Cache

    // required string name = 1;
    bool CacheStorageIndex_Cache::has_name() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    void CacheStorageIndex_Cache::set_has_name()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    void CacheStorageIndex_Cache::clear_has_name()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    void CacheStorageIndex_Cache::clear_name()
    {
        name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_name();
    }
    const ::std::string& CacheStorageIndex_Cache::name() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.Cache.name)
        return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheStorageIndex_Cache::set_name(const ::std::string& value)
    {
        set_has_name();
        name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.Cache.name)
    }
    void CacheStorageIndex_Cache::set_name(const char* value)
    {
        set_has_name();
        name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheStorageIndex.Cache.name)
    }
    void CacheStorageIndex_Cache::set_name(const char* value, size_t size)
    {
        set_has_name();
        name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheStorageIndex.Cache.name)
    }
    ::std::string* CacheStorageIndex_Cache::mutable_name()
    {
        set_has_name();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheStorageIndex.Cache.name)
        return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    ::std::string* CacheStorageIndex_Cache::release_name()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheStorageIndex.Cache.name)
        clear_has_name();
        return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheStorageIndex_Cache::set_allocated_name(::std::string* name)
    {
        if (name != NULL) {
            set_has_name();
        } else {
            clear_has_name();
        }
        name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheStorageIndex.Cache.name)
    }

    // optional string cache_dir = 2;
    bool CacheStorageIndex_Cache::has_cache_dir() const
    {
        return (_has_bits_[0] & 0x00000002u) != 0;
    }
    void CacheStorageIndex_Cache::set_has_cache_dir()
    {
        _has_bits_[0] |= 0x00000002u;
    }
    void CacheStorageIndex_Cache::clear_has_cache_dir()
    {
        _has_bits_[0] &= ~0x00000002u;
    }
    void CacheStorageIndex_Cache::clear_cache_dir()
    {
        cache_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_cache_dir();
    }
    const ::std::string& CacheStorageIndex_Cache::cache_dir() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.Cache.cache_dir)
        return cache_dir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheStorageIndex_Cache::set_cache_dir(const ::std::string& value)
    {
        set_has_cache_dir();
        cache_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.Cache.cache_dir)
    }
    void CacheStorageIndex_Cache::set_cache_dir(const char* value)
    {
        set_has_cache_dir();
        cache_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheStorageIndex.Cache.cache_dir)
    }
    void CacheStorageIndex_Cache::set_cache_dir(const char* value, size_t size)
    {
        set_has_cache_dir();
        cache_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheStorageIndex.Cache.cache_dir)
    }
    ::std::string* CacheStorageIndex_Cache::mutable_cache_dir()
    {
        set_has_cache_dir();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheStorageIndex.Cache.cache_dir)
        return cache_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    ::std::string* CacheStorageIndex_Cache::release_cache_dir()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheStorageIndex.Cache.cache_dir)
        clear_has_cache_dir();
        return cache_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheStorageIndex_Cache::set_allocated_cache_dir(::std::string* cache_dir)
    {
        if (cache_dir != NULL) {
            set_has_cache_dir();
        } else {
            clear_has_cache_dir();
        }
        cache_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cache_dir);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheStorageIndex.Cache.cache_dir)
    }

    // optional int64 size = 3;
    bool CacheStorageIndex_Cache::has_size() const
    {
        return (_has_bits_[0] & 0x00000004u) != 0;
    }
    void CacheStorageIndex_Cache::set_has_size()
    {
        _has_bits_[0] |= 0x00000004u;
    }
    void CacheStorageIndex_Cache::clear_has_size()
    {
        _has_bits_[0] &= ~0x00000004u;
    }
    void CacheStorageIndex_Cache::clear_size()
    {
        size_ = GOOGLE_LONGLONG(0);
        clear_has_size();
    }
    ::google::protobuf::int64 CacheStorageIndex_Cache::size() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.Cache.size)
        return size_;
    }
    void CacheStorageIndex_Cache::set_size(::google::protobuf::int64 value)
    {
        set_has_size();
        size_ = value;
        // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.Cache.size)
    }

    // -------------------------------------------------------------------

    // CacheStorageIndex

    // repeated .content.proto.CacheStorageIndex.Cache cache = 1;
    int CacheStorageIndex::cache_size() const
    {
        return cache_.size();
    }
    void CacheStorageIndex::clear_cache()
    {
        cache_.Clear();
    }
    const ::content::proto::CacheStorageIndex_Cache& CacheStorageIndex::cache(int index) const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.cache)
        return cache_.Get(index);
    }
    ::content::proto::CacheStorageIndex_Cache* CacheStorageIndex::mutable_cache(int index)
    {
        // @@protoc_insertion_point(field_mutable:content.proto.CacheStorageIndex.cache)
        return cache_.Mutable(index);
    }
    ::content::proto::CacheStorageIndex_Cache* CacheStorageIndex::add_cache()
    {
        // @@protoc_insertion_point(field_add:content.proto.CacheStorageIndex.cache)
        return cache_.Add();
    }
    ::google::protobuf::RepeatedPtrField<::content::proto::CacheStorageIndex_Cache>*
    CacheStorageIndex::mutable_cache()
    {
        // @@protoc_insertion_point(field_mutable_list:content.proto.CacheStorageIndex.cache)
        return &cache_;
    }
    const ::google::protobuf::RepeatedPtrField<::content::proto::CacheStorageIndex_Cache>&
    CacheStorageIndex::cache() const
    {
        // @@protoc_insertion_point(field_list:content.proto.CacheStorageIndex.cache)
        return cache_;
    }

    // optional string origin = 2;
    bool CacheStorageIndex::has_origin() const
    {
        return (_has_bits_[0] & 0x00000002u) != 0;
    }
    void CacheStorageIndex::set_has_origin()
    {
        _has_bits_[0] |= 0x00000002u;
    }
    void CacheStorageIndex::clear_has_origin()
    {
        _has_bits_[0] &= ~0x00000002u;
    }
    void CacheStorageIndex::clear_origin()
    {
        origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_origin();
    }
    const ::std::string& CacheStorageIndex::origin() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.origin)
        return origin_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheStorageIndex::set_origin(const ::std::string& value)
    {
        set_has_origin();
        origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.origin)
    }
    void CacheStorageIndex::set_origin(const char* value)
    {
        set_has_origin();
        origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheStorageIndex.origin)
    }
    void CacheStorageIndex::set_origin(const char* value, size_t size)
    {
        set_has_origin();
        origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheStorageIndex.origin)
    }
    ::std::string* CacheStorageIndex::mutable_origin()
    {
        set_has_origin();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheStorageIndex.origin)
        return origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    ::std::string* CacheStorageIndex::release_origin()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheStorageIndex.origin)
        clear_has_origin();
        return origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheStorageIndex::set_allocated_origin(::std::string* origin)
    {
        if (origin != NULL) {
            set_has_origin();
        } else {
            clear_has_origin();
        }
        origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheStorageIndex.origin)
    }

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

    // ===================================================================

    static ::std::string* MutableUnknownFieldsForCacheHeaderMap(
        CacheHeaderMap* ptr)
    {
        return ptr->mutable_unknown_fields();
    }

#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int CacheHeaderMap::kNameFieldNumber;
    const int CacheHeaderMap::kValueFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

    CacheHeaderMap::CacheHeaderMap()
        : ::google::protobuf::MessageLite()
        , _arena_ptr_(NULL)
    {
        SharedCtor();
        // @@protoc_insertion_point(constructor:content.proto.CacheHeaderMap)
    }

    void CacheHeaderMap::InitAsDefaultInstance()
    {
    }

    CacheHeaderMap::CacheHeaderMap(const CacheHeaderMap& from)
        : ::google::protobuf::MessageLite()
        , _arena_ptr_(NULL)
    {
        SharedCtor();
        MergeFrom(from);
        // @@protoc_insertion_point(copy_constructor:content.proto.CacheHeaderMap)
    }

    void CacheHeaderMap::SharedCtor()
    {
        ::google::protobuf::internal::GetEmptyString();
        _cached_size_ = 0;
        _unknown_fields_.UnsafeSetDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        ::memset(_has_bits_, 0, sizeof(_has_bits_));
    }

    CacheHeaderMap::~CacheHeaderMap()
    {
        // @@protoc_insertion_point(destructor:content.proto.CacheHeaderMap)
        SharedDtor();
    }

    void CacheHeaderMap::SharedDtor()
    {
        _unknown_fields_.DestroyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        if (this != &default_instance()) {
#else
        if (this != default_instance_) {
#endif
        }
    }

    void CacheHeaderMap::SetCachedSize(int size) const
    {
        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _cached_size_ = size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
    }
    const CacheHeaderMap& CacheHeaderMap::default_instance()
    {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        protobuf_AddDesc_cache_5fstorage_2eproto();
#else
        if (default_instance_ == NULL)
            protobuf_AddDesc_cache_5fstorage_2eproto();
#endif
        return *default_instance_;
    }

    CacheHeaderMap* CacheHeaderMap::default_instance_ = NULL;

    CacheHeaderMap* CacheHeaderMap::New(::google::protobuf::Arena* arena) const
    {
        CacheHeaderMap* n = new CacheHeaderMap;
        if (arena != NULL) {
            arena->Own(n);
        }
        return n;
    }

    void CacheHeaderMap::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:content.proto.CacheHeaderMap)
        if (_has_bits_[0 / 32] & 3u) {
            if (has_name()) {
                name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
            }
            if (has_value()) {
                value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
            }
        }
        ::memset(_has_bits_, 0, sizeof(_has_bits_));
        _unknown_fields_.ClearToEmptyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    bool CacheHeaderMap::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input)
    {
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
        ::google::protobuf::uint32 tag;
        ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
            ::google::protobuf::internal::NewPermanentCallback(
                &MutableUnknownFieldsForCacheHeaderMap, this));
        ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
            &unknown_fields_string, false);
        // @@protoc_insertion_point(parse_start:content.proto.CacheHeaderMap)
        for (;;) {
            ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
            tag = p.first;
            if (!p.second)
                goto handle_unusual;
            switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // required string name = 1;
            case 1: {
                if (tag == 10) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                        input, this->mutable_name()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(18))
                    goto parse_value;
                break;
            }

            // required string value = 2;
            case 2: {
                if (tag == 18) {
                parse_value:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                        input, this->mutable_value()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectAtEnd())
                    goto success;
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                    input, tag, &unknown_fields_stream));
                break;
            }
            }
        }
    success:
        // @@protoc_insertion_point(parse_success:content.proto.CacheHeaderMap)
        return true;
    failure:
        // @@protoc_insertion_point(parse_failure:content.proto.CacheHeaderMap)
        return false;
#undef DO_
    }

    void CacheHeaderMap::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const
    {
        // @@protoc_insertion_point(serialize_start:content.proto.CacheHeaderMap)
        // required string name = 1;
        if (has_name()) {
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                1, this->name(), output);
        }

        // required string value = 2;
        if (has_value()) {
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                2, this->value(), output);
        }

        output->WriteRaw(unknown_fields().data(),
            static_cast<int>(unknown_fields().size()));
        // @@protoc_insertion_point(serialize_end:content.proto.CacheHeaderMap)
    }

    int CacheHeaderMap::RequiredFieldsByteSizeFallback() const
    {
        // @@protoc_insertion_point(required_fields_byte_size_fallback_start:content.proto.CacheHeaderMap)
        int total_size = 0;

        if (has_name()) {
            // required string name = 1;
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->name());
        }

        if (has_value()) {
            // required string value = 2;
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->value());
        }

        return total_size;
    }
    int CacheHeaderMap::ByteSize() const
    {
        // @@protoc_insertion_point(message_byte_size_start:content.proto.CacheHeaderMap)
        int total_size = 0;

        if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) { // All required fields are present.
            // required string name = 1;
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->name());

            // required string value = 2;
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->value());

        } else {
            total_size += RequiredFieldsByteSizeFallback();
        }
        total_size += unknown_fields().size();

        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _cached_size_ = total_size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
        return total_size;
    }

    void CacheHeaderMap::CheckTypeAndMergeFrom(
        const ::google::protobuf::MessageLite& from)
    {
        MergeFrom(*::google::protobuf::down_cast<const CacheHeaderMap*>(&from));
    }

    void CacheHeaderMap::MergeFrom(const CacheHeaderMap& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:content.proto.CacheHeaderMap)
        if (GOOGLE_PREDICT_FALSE(&from == this))
            MergeFromFail(__LINE__);
        if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
            if (from.has_name()) {
                set_has_name();
                name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
            }
            if (from.has_value()) {
                set_has_value();
                value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
            }
        }
        if (!from.unknown_fields().empty()) {
            mutable_unknown_fields()->append(from.unknown_fields());
        }
    }

    void CacheHeaderMap::CopyFrom(const CacheHeaderMap& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:content.proto.CacheHeaderMap)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool CacheHeaderMap::IsInitialized() const
    {
        if ((_has_bits_[0] & 0x00000003) != 0x00000003)
            return false;

        return true;
    }

    void CacheHeaderMap::Swap(CacheHeaderMap* other)
    {
        if (other == this)
            return;
        InternalSwap(other);
    }
    void CacheHeaderMap::InternalSwap(CacheHeaderMap* other)
    {
        name_.Swap(&other->name_);
        value_.Swap(&other->value_);
        std::swap(_has_bits_[0], other->_has_bits_[0]);
        _unknown_fields_.Swap(&other->_unknown_fields_);
        std::swap(_cached_size_, other->_cached_size_);
    }

    ::std::string CacheHeaderMap::GetTypeName() const
    {
        return "content.proto.CacheHeaderMap";
    }

#if PROTOBUF_INLINE_NOT_IN_HEADERS
    // CacheHeaderMap

    // required string name = 1;
    bool CacheHeaderMap::has_name() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    void CacheHeaderMap::set_has_name()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    void CacheHeaderMap::clear_has_name()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    void CacheHeaderMap::clear_name()
    {
        name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_name();
    }
    const ::std::string& CacheHeaderMap::name() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheHeaderMap.name)
        return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheHeaderMap::set_name(const ::std::string& value)
    {
        set_has_name();
        name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheHeaderMap.name)
    }
    void CacheHeaderMap::set_name(const char* value)
    {
        set_has_name();
        name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheHeaderMap.name)
    }
    void CacheHeaderMap::set_name(const char* value, size_t size)
    {
        set_has_name();
        name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheHeaderMap.name)
    }
    ::std::string* CacheHeaderMap::mutable_name()
    {
        set_has_name();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheHeaderMap.name)
        return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    ::std::string* CacheHeaderMap::release_name()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheHeaderMap.name)
        clear_has_name();
        return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheHeaderMap::set_allocated_name(::std::string* name)
    {
        if (name != NULL) {
            set_has_name();
        } else {
            clear_has_name();
        }
        name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheHeaderMap.name)
    }

    // required string value = 2;
    bool CacheHeaderMap::has_value() const
    {
        return (_has_bits_[0] & 0x00000002u) != 0;
    }
    void CacheHeaderMap::set_has_value()
    {
        _has_bits_[0] |= 0x00000002u;
    }
    void CacheHeaderMap::clear_has_value()
    {
        _has_bits_[0] &= ~0x00000002u;
    }
    void CacheHeaderMap::clear_value()
    {
        value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_value();
    }
    const ::std::string& CacheHeaderMap::value() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheHeaderMap.value)
        return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheHeaderMap::set_value(const ::std::string& value)
    {
        set_has_value();
        value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheHeaderMap.value)
    }
    void CacheHeaderMap::set_value(const char* value)
    {
        set_has_value();
        value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheHeaderMap.value)
    }
    void CacheHeaderMap::set_value(const char* value, size_t size)
    {
        set_has_value();
        value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheHeaderMap.value)
    }
    ::std::string* CacheHeaderMap::mutable_value()
    {
        set_has_value();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheHeaderMap.value)
        return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    ::std::string* CacheHeaderMap::release_value()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheHeaderMap.value)
        clear_has_value();
        return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheHeaderMap::set_allocated_value(::std::string* value)
    {
        if (value != NULL) {
            set_has_value();
        } else {
            clear_has_value();
        }
        value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheHeaderMap.value)
    }

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

    // ===================================================================

    static ::std::string* MutableUnknownFieldsForCacheRequest(
        CacheRequest* ptr)
    {
        return ptr->mutable_unknown_fields();
    }

#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int CacheRequest::kMethodFieldNumber;
    const int CacheRequest::kHeadersFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

    CacheRequest::CacheRequest()
        : ::google::protobuf::MessageLite()
        , _arena_ptr_(NULL)
    {
        SharedCtor();
        // @@protoc_insertion_point(constructor:content.proto.CacheRequest)
    }

    void CacheRequest::InitAsDefaultInstance()
    {
    }

    CacheRequest::CacheRequest(const CacheRequest& from)
        : ::google::protobuf::MessageLite()
        , _arena_ptr_(NULL)
    {
        SharedCtor();
        MergeFrom(from);
        // @@protoc_insertion_point(copy_constructor:content.proto.CacheRequest)
    }

    void CacheRequest::SharedCtor()
    {
        ::google::protobuf::internal::GetEmptyString();
        _cached_size_ = 0;
        _unknown_fields_.UnsafeSetDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        ::memset(_has_bits_, 0, sizeof(_has_bits_));
    }

    CacheRequest::~CacheRequest()
    {
        // @@protoc_insertion_point(destructor:content.proto.CacheRequest)
        SharedDtor();
    }

    void CacheRequest::SharedDtor()
    {
        _unknown_fields_.DestroyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        if (this != &default_instance()) {
#else
        if (this != default_instance_) {
#endif
        }
    }

    void CacheRequest::SetCachedSize(int size) const
    {
        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _cached_size_ = size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
    }
    const CacheRequest& CacheRequest::default_instance()
    {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        protobuf_AddDesc_cache_5fstorage_2eproto();
#else
        if (default_instance_ == NULL)
            protobuf_AddDesc_cache_5fstorage_2eproto();
#endif
        return *default_instance_;
    }

    CacheRequest* CacheRequest::default_instance_ = NULL;

    CacheRequest* CacheRequest::New(::google::protobuf::Arena* arena) const
    {
        CacheRequest* n = new CacheRequest;
        if (arena != NULL) {
            arena->Own(n);
        }
        return n;
    }

    void CacheRequest::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:content.proto.CacheRequest)
        if (has_method()) {
            method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        headers_.Clear();
        ::memset(_has_bits_, 0, sizeof(_has_bits_));
        _unknown_fields_.ClearToEmptyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    bool CacheRequest::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input)
    {
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
        ::google::protobuf::uint32 tag;
        ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
            ::google::protobuf::internal::NewPermanentCallback(
                &MutableUnknownFieldsForCacheRequest, this));
        ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
            &unknown_fields_string, false);
        // @@protoc_insertion_point(parse_start:content.proto.CacheRequest)
        for (;;) {
            ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
            tag = p.first;
            if (!p.second)
                goto handle_unusual;
            switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // required string method = 1;
            case 1: {
                if (tag == 10) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                        input, this->mutable_method()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(18))
                    goto parse_headers;
                break;
            }

            // repeated .content.proto.CacheHeaderMap headers = 2;
            case 2: {
                if (tag == 18) {
                parse_headers:
                    DO_(input->IncrementRecursionDepth());
                parse_loop_headers:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                        input, add_headers()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(18))
                    goto parse_loop_headers;
                input->UnsafeDecrementRecursionDepth();
                if (input->ExpectAtEnd())
                    goto success;
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                    input, tag, &unknown_fields_stream));
                break;
            }
            }
        }
    success:
        // @@protoc_insertion_point(parse_success:content.proto.CacheRequest)
        return true;
    failure:
        // @@protoc_insertion_point(parse_failure:content.proto.CacheRequest)
        return false;
#undef DO_
    }

    void CacheRequest::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const
    {
        // @@protoc_insertion_point(serialize_start:content.proto.CacheRequest)
        // required string method = 1;
        if (has_method()) {
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                1, this->method(), output);
        }

        // repeated .content.proto.CacheHeaderMap headers = 2;
        for (unsigned int i = 0, n = this->headers_size(); i < n; i++) {
            ::google::protobuf::internal::WireFormatLite::WriteMessage(
                2, this->headers(i), output);
        }

        output->WriteRaw(unknown_fields().data(),
            static_cast<int>(unknown_fields().size()));
        // @@protoc_insertion_point(serialize_end:content.proto.CacheRequest)
    }

    int CacheRequest::ByteSize() const
    {
        // @@protoc_insertion_point(message_byte_size_start:content.proto.CacheRequest)
        int total_size = 0;

        // required string method = 1;
        if (has_method()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->method());
        }
        // repeated .content.proto.CacheHeaderMap headers = 2;
        total_size += 1 * this->headers_size();
        for (int i = 0; i < this->headers_size(); i++) {
            total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                this->headers(i));
        }

        total_size += unknown_fields().size();

        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _cached_size_ = total_size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
        return total_size;
    }

    void CacheRequest::CheckTypeAndMergeFrom(
        const ::google::protobuf::MessageLite& from)
    {
        MergeFrom(*::google::protobuf::down_cast<const CacheRequest*>(&from));
    }

    void CacheRequest::MergeFrom(const CacheRequest& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:content.proto.CacheRequest)
        if (GOOGLE_PREDICT_FALSE(&from == this))
            MergeFromFail(__LINE__);
        headers_.MergeFrom(from.headers_);
        if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
            if (from.has_method()) {
                set_has_method();
                method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
            }
        }
        if (!from.unknown_fields().empty()) {
            mutable_unknown_fields()->append(from.unknown_fields());
        }
    }

    void CacheRequest::CopyFrom(const CacheRequest& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:content.proto.CacheRequest)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool CacheRequest::IsInitialized() const
    {
        if ((_has_bits_[0] & 0x00000001) != 0x00000001)
            return false;

        if (!::google::protobuf::internal::AllAreInitialized(this->headers()))
            return false;
        return true;
    }

    void CacheRequest::Swap(CacheRequest* other)
    {
        if (other == this)
            return;
        InternalSwap(other);
    }
    void CacheRequest::InternalSwap(CacheRequest* other)
    {
        method_.Swap(&other->method_);
        headers_.UnsafeArenaSwap(&other->headers_);
        std::swap(_has_bits_[0], other->_has_bits_[0]);
        _unknown_fields_.Swap(&other->_unknown_fields_);
        std::swap(_cached_size_, other->_cached_size_);
    }

    ::std::string CacheRequest::GetTypeName() const
    {
        return "content.proto.CacheRequest";
    }

#if PROTOBUF_INLINE_NOT_IN_HEADERS
    // CacheRequest

    // required string method = 1;
    bool CacheRequest::has_method() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    void CacheRequest::set_has_method()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    void CacheRequest::clear_has_method()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    void CacheRequest::clear_method()
    {
        method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_method();
    }
    const ::std::string& CacheRequest::method() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheRequest.method)
        return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheRequest::set_method(const ::std::string& value)
    {
        set_has_method();
        method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheRequest.method)
    }
    void CacheRequest::set_method(const char* value)
    {
        set_has_method();
        method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheRequest.method)
    }
    void CacheRequest::set_method(const char* value, size_t size)
    {
        set_has_method();
        method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheRequest.method)
    }
    ::std::string* CacheRequest::mutable_method()
    {
        set_has_method();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheRequest.method)
        return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    ::std::string* CacheRequest::release_method()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheRequest.method)
        clear_has_method();
        return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheRequest::set_allocated_method(::std::string* method)
    {
        if (method != NULL) {
            set_has_method();
        } else {
            clear_has_method();
        }
        method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheRequest.method)
    }

    // repeated .content.proto.CacheHeaderMap headers = 2;
    int CacheRequest::headers_size() const
    {
        return headers_.size();
    }
    void CacheRequest::clear_headers()
    {
        headers_.Clear();
    }
    const ::content::proto::CacheHeaderMap& CacheRequest::headers(int index) const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheRequest.headers)
        return headers_.Get(index);
    }
    ::content::proto::CacheHeaderMap* CacheRequest::mutable_headers(int index)
    {
        // @@protoc_insertion_point(field_mutable:content.proto.CacheRequest.headers)
        return headers_.Mutable(index);
    }
    ::content::proto::CacheHeaderMap* CacheRequest::add_headers()
    {
        // @@protoc_insertion_point(field_add:content.proto.CacheRequest.headers)
        return headers_.Add();
    }
    ::google::protobuf::RepeatedPtrField<::content::proto::CacheHeaderMap>*
    CacheRequest::mutable_headers()
    {
        // @@protoc_insertion_point(field_mutable_list:content.proto.CacheRequest.headers)
        return &headers_;
    }
    const ::google::protobuf::RepeatedPtrField<::content::proto::CacheHeaderMap>&
    CacheRequest::headers() const
    {
        // @@protoc_insertion_point(field_list:content.proto.CacheRequest.headers)
        return headers_;
    }

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

    // ===================================================================

    static ::std::string* MutableUnknownFieldsForCacheResponse(
        CacheResponse* ptr)
    {
        return ptr->mutable_unknown_fields();
    }

    bool CacheResponse_ResponseType_IsValid(int value)
    {
        switch (value) {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            return true;
        default:
            return false;
        }
    }

#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const CacheResponse_ResponseType CacheResponse::BASIC_TYPE;
    const CacheResponse_ResponseType CacheResponse::CORS_TYPE;
    const CacheResponse_ResponseType CacheResponse::DEFAULT_TYPE;
    const CacheResponse_ResponseType CacheResponse::ERROR_TYPE;
    const CacheResponse_ResponseType CacheResponse::OPAQUE_TYPE;
    const CacheResponse_ResponseType CacheResponse::OPAQUE_REDIRECT_TYPE;
    const CacheResponse_ResponseType CacheResponse::ResponseType_MIN;
    const CacheResponse_ResponseType CacheResponse::ResponseType_MAX;
    const int CacheResponse::ResponseType_ARRAYSIZE;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int CacheResponse::kStatusCodeFieldNumber;
    const int CacheResponse::kStatusTextFieldNumber;
    const int CacheResponse::kResponseTypeFieldNumber;
    const int CacheResponse::kHeadersFieldNumber;
    const int CacheResponse::kUrlFieldNumber;
    const int CacheResponse::kResponseTimeFieldNumber;
    const int CacheResponse::kCorsExposedHeaderNamesFieldNumber;
    const int CacheResponse::kUrlListFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

    CacheResponse::CacheResponse()
        : ::google::protobuf::MessageLite()
        , _arena_ptr_(NULL)
    {
        SharedCtor();
        // @@protoc_insertion_point(constructor:content.proto.CacheResponse)
    }

    void CacheResponse::InitAsDefaultInstance()
    {
    }

    CacheResponse::CacheResponse(const CacheResponse& from)
        : ::google::protobuf::MessageLite()
        , _arena_ptr_(NULL)
    {
        SharedCtor();
        MergeFrom(from);
        // @@protoc_insertion_point(copy_constructor:content.proto.CacheResponse)
    }

    void CacheResponse::SharedCtor()
    {
        ::google::protobuf::internal::GetEmptyString();
        _cached_size_ = 0;
        _unknown_fields_.UnsafeSetDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        status_code_ = 0;
        status_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        response_type_ = 0;
        url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        response_time_ = GOOGLE_LONGLONG(0);
        ::memset(_has_bits_, 0, sizeof(_has_bits_));
    }

    CacheResponse::~CacheResponse()
    {
        // @@protoc_insertion_point(destructor:content.proto.CacheResponse)
        SharedDtor();
    }

    void CacheResponse::SharedDtor()
    {
        _unknown_fields_.DestroyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        status_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        if (this != &default_instance()) {
#else
        if (this != default_instance_) {
#endif
        }
    }

    void CacheResponse::SetCachedSize(int size) const
    {
        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _cached_size_ = size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
    }
    const CacheResponse& CacheResponse::default_instance()
    {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        protobuf_AddDesc_cache_5fstorage_2eproto();
#else
        if (default_instance_ == NULL)
            protobuf_AddDesc_cache_5fstorage_2eproto();
#endif
        return *default_instance_;
    }

    CacheResponse* CacheResponse::default_instance_ = NULL;

    CacheResponse* CacheResponse::New(::google::protobuf::Arena* arena) const
    {
        CacheResponse* n = new CacheResponse;
        if (arena != NULL) {
            arena->Own(n);
        }
        return n;
    }

    void CacheResponse::Clear()
    {
// @@protoc_insertion_point(message_clear_start:content.proto.CacheResponse)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                   \
    _Pragma("clang diagnostic push")                                                                    \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(CacheResponse, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<CacheResponse*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

        if (_has_bits_[0 / 32] & 55u) {
            ZR_(status_code_, response_type_);
            if (has_status_text()) {
                status_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
            }
            if (has_url()) {
                url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
            }
            response_time_ = GOOGLE_LONGLONG(0);
        }

#undef ZR_HELPER_
#undef ZR_

        headers_.Clear();
        cors_exposed_header_names_.Clear();
        url_list_.Clear();
        ::memset(_has_bits_, 0, sizeof(_has_bits_));
        _unknown_fields_.ClearToEmptyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    bool CacheResponse::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input)
    {
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
        ::google::protobuf::uint32 tag;
        ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
            ::google::protobuf::internal::NewPermanentCallback(
                &MutableUnknownFieldsForCacheResponse, this));
        ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
            &unknown_fields_string, false);
        // @@protoc_insertion_point(parse_start:content.proto.CacheResponse)
        for (;;) {
            ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
            tag = p.first;
            if (!p.second)
                goto handle_unusual;
            switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // required int32 status_code = 1;
            case 1: {
                if (tag == 8) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                        ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                        input, &status_code_)));
                    set_has_status_code();
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(18))
                    goto parse_status_text;
                break;
            }

            // required string status_text = 2;
            case 2: {
                if (tag == 18) {
                parse_status_text:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                        input, this->mutable_status_text()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(24))
                    goto parse_response_type;
                break;
            }

            // required .content.proto.CacheResponse.ResponseType response_type = 3;
            case 3: {
                if (tag == 24) {
                parse_response_type:
                    int value;
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                        int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                        input, &value)));
                    if (::content::proto::CacheResponse_ResponseType_IsValid(value)) {
                        set_response_type(static_cast<::content::proto::CacheResponse_ResponseType>(value));
                    } else {
                        unknown_fields_stream.WriteVarint32(24);
                        unknown_fields_stream.WriteVarint32(value);
                    }
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(34))
                    goto parse_headers;
                break;
            }

            // repeated .content.proto.CacheHeaderMap headers = 4;
            case 4: {
                if (tag == 34) {
                parse_headers:
                    DO_(input->IncrementRecursionDepth());
                parse_loop_headers:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                        input, add_headers()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(34))
                    goto parse_loop_headers;
                input->UnsafeDecrementRecursionDepth();
                if (input->ExpectTag(42))
                    goto parse_url;
                break;
            }

            // optional string url = 5 [deprecated = true];
            case 5: {
                if (tag == 42) {
                parse_url:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                        input, this->mutable_url()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(48))
                    goto parse_response_time;
                break;
            }

            // optional int64 response_time = 6;
            case 6: {
                if (tag == 48) {
                parse_response_time:
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                        ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                        input, &response_time_)));
                    set_has_response_time();
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(58))
                    goto parse_cors_exposed_header_names;
                break;
            }

            // repeated string cors_exposed_header_names = 7;
            case 7: {
                if (tag == 58) {
                parse_cors_exposed_header_names:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                        input, this->add_cors_exposed_header_names()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(58))
                    goto parse_cors_exposed_header_names;
                if (input->ExpectTag(66))
                    goto parse_url_list;
                break;
            }

            // repeated string url_list = 8;
            case 8: {
                if (tag == 66) {
                parse_url_list:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                        input, this->add_url_list()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(66))
                    goto parse_url_list;
                if (input->ExpectAtEnd())
                    goto success;
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                    input, tag, &unknown_fields_stream));
                break;
            }
            }
        }
    success:
        // @@protoc_insertion_point(parse_success:content.proto.CacheResponse)
        return true;
    failure:
        // @@protoc_insertion_point(parse_failure:content.proto.CacheResponse)
        return false;
#undef DO_
    }

    void CacheResponse::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const
    {
        // @@protoc_insertion_point(serialize_start:content.proto.CacheResponse)
        // required int32 status_code = 1;
        if (has_status_code()) {
            ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status_code(), output);
        }

        // required string status_text = 2;
        if (has_status_text()) {
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                2, this->status_text(), output);
        }

        // required .content.proto.CacheResponse.ResponseType response_type = 3;
        if (has_response_type()) {
            ::google::protobuf::internal::WireFormatLite::WriteEnum(
                3, this->response_type(), output);
        }

        // repeated .content.proto.CacheHeaderMap headers = 4;
        for (unsigned int i = 0, n = this->headers_size(); i < n; i++) {
            ::google::protobuf::internal::WireFormatLite::WriteMessage(
                4, this->headers(i), output);
        }

        // optional string url = 5 [deprecated = true];
        if (has_url()) {
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                5, this->url(), output);
        }

        // optional int64 response_time = 6;
        if (has_response_time()) {
            ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->response_time(), output);
        }

        // repeated string cors_exposed_header_names = 7;
        for (int i = 0; i < this->cors_exposed_header_names_size(); i++) {
            ::google::protobuf::internal::WireFormatLite::WriteString(
                7, this->cors_exposed_header_names(i), output);
        }

        // repeated string url_list = 8;
        for (int i = 0; i < this->url_list_size(); i++) {
            ::google::protobuf::internal::WireFormatLite::WriteString(
                8, this->url_list(i), output);
        }

        output->WriteRaw(unknown_fields().data(),
            static_cast<int>(unknown_fields().size()));
        // @@protoc_insertion_point(serialize_end:content.proto.CacheResponse)
    }

    int CacheResponse::RequiredFieldsByteSizeFallback() const
    {
        // @@protoc_insertion_point(required_fields_byte_size_fallback_start:content.proto.CacheResponse)
        int total_size = 0;

        if (has_status_code()) {
            // required int32 status_code = 1;
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->status_code());
        }

        if (has_status_text()) {
            // required string status_text = 2;
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->status_text());
        }

        if (has_response_type()) {
            // required .content.proto.CacheResponse.ResponseType response_type = 3;
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
        }

        return total_size;
    }
    int CacheResponse::ByteSize() const
    {
        // @@protoc_insertion_point(message_byte_size_start:content.proto.CacheResponse)
        int total_size = 0;

        if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) { // All required fields are present.
            // required int32 status_code = 1;
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->status_code());

            // required string status_text = 2;
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->status_text());

            // required .content.proto.CacheResponse.ResponseType response_type = 3;
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());

        } else {
            total_size += RequiredFieldsByteSizeFallback();
        }
        if (_has_bits_[4 / 32] & 48u) {
            // optional string url = 5 [deprecated = true];
            if (has_url()) {
                total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->url());
            }

            // optional int64 response_time = 6;
            if (has_response_time()) {
                total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->response_time());
            }
        }
        // repeated .content.proto.CacheHeaderMap headers = 4;
        total_size += 1 * this->headers_size();
        for (int i = 0; i < this->headers_size(); i++) {
            total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                this->headers(i));
        }

        // repeated string cors_exposed_header_names = 7;
        total_size += 1 * this->cors_exposed_header_names_size();
        for (int i = 0; i < this->cors_exposed_header_names_size(); i++) {
            total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                this->cors_exposed_header_names(i));
        }

        // repeated string url_list = 8;
        total_size += 1 * this->url_list_size();
        for (int i = 0; i < this->url_list_size(); i++) {
            total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                this->url_list(i));
        }

        total_size += unknown_fields().size();

        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _cached_size_ = total_size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
        return total_size;
    }

    void CacheResponse::CheckTypeAndMergeFrom(
        const ::google::protobuf::MessageLite& from)
    {
        MergeFrom(*::google::protobuf::down_cast<const CacheResponse*>(&from));
    }

    void CacheResponse::MergeFrom(const CacheResponse& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:content.proto.CacheResponse)
        if (GOOGLE_PREDICT_FALSE(&from == this))
            MergeFromFail(__LINE__);
        headers_.MergeFrom(from.headers_);
        cors_exposed_header_names_.MergeFrom(from.cors_exposed_header_names_);
        url_list_.MergeFrom(from.url_list_);
        if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
            if (from.has_status_code()) {
                set_status_code(from.status_code());
            }
            if (from.has_status_text()) {
                set_has_status_text();
                status_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_text_);
            }
            if (from.has_response_type()) {
                set_response_type(from.response_type());
            }
            if (from.has_url()) {
                set_has_url();
                url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
            }
            if (from.has_response_time()) {
                set_response_time(from.response_time());
            }
        }
        if (!from.unknown_fields().empty()) {
            mutable_unknown_fields()->append(from.unknown_fields());
        }
    }

    void CacheResponse::CopyFrom(const CacheResponse& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:content.proto.CacheResponse)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool CacheResponse::IsInitialized() const
    {
        if ((_has_bits_[0] & 0x00000007) != 0x00000007)
            return false;

        if (!::google::protobuf::internal::AllAreInitialized(this->headers()))
            return false;
        return true;
    }

    void CacheResponse::Swap(CacheResponse* other)
    {
        if (other == this)
            return;
        InternalSwap(other);
    }
    void CacheResponse::InternalSwap(CacheResponse* other)
    {
        std::swap(status_code_, other->status_code_);
        status_text_.Swap(&other->status_text_);
        std::swap(response_type_, other->response_type_);
        headers_.UnsafeArenaSwap(&other->headers_);
        url_.Swap(&other->url_);
        std::swap(response_time_, other->response_time_);
        cors_exposed_header_names_.UnsafeArenaSwap(&other->cors_exposed_header_names_);
        url_list_.UnsafeArenaSwap(&other->url_list_);
        std::swap(_has_bits_[0], other->_has_bits_[0]);
        _unknown_fields_.Swap(&other->_unknown_fields_);
        std::swap(_cached_size_, other->_cached_size_);
    }

    ::std::string CacheResponse::GetTypeName() const
    {
        return "content.proto.CacheResponse";
    }

#if PROTOBUF_INLINE_NOT_IN_HEADERS
    // CacheResponse

    // required int32 status_code = 1;
    bool CacheResponse::has_status_code() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    void CacheResponse::set_has_status_code()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    void CacheResponse::clear_has_status_code()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    void CacheResponse::clear_status_code()
    {
        status_code_ = 0;
        clear_has_status_code();
    }
    ::google::protobuf::int32 CacheResponse::status_code() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.status_code)
        return status_code_;
    }
    void CacheResponse::set_status_code(::google::protobuf::int32 value)
    {
        set_has_status_code();
        status_code_ = value;
        // @@protoc_insertion_point(field_set:content.proto.CacheResponse.status_code)
    }

    // required string status_text = 2;
    bool CacheResponse::has_status_text() const
    {
        return (_has_bits_[0] & 0x00000002u) != 0;
    }
    void CacheResponse::set_has_status_text()
    {
        _has_bits_[0] |= 0x00000002u;
    }
    void CacheResponse::clear_has_status_text()
    {
        _has_bits_[0] &= ~0x00000002u;
    }
    void CacheResponse::clear_status_text()
    {
        status_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_status_text();
    }
    const ::std::string& CacheResponse::status_text() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.status_text)
        return status_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheResponse::set_status_text(const ::std::string& value)
    {
        set_has_status_text();
        status_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheResponse.status_text)
    }
    void CacheResponse::set_status_text(const char* value)
    {
        set_has_status_text();
        status_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheResponse.status_text)
    }
    void CacheResponse::set_status_text(const char* value, size_t size)
    {
        set_has_status_text();
        status_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheResponse.status_text)
    }
    ::std::string* CacheResponse::mutable_status_text()
    {
        set_has_status_text();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.status_text)
        return status_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    ::std::string* CacheResponse::release_status_text()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheResponse.status_text)
        clear_has_status_text();
        return status_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheResponse::set_allocated_status_text(::std::string* status_text)
    {
        if (status_text != NULL) {
            set_has_status_text();
        } else {
            clear_has_status_text();
        }
        status_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status_text);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheResponse.status_text)
    }

    // required .content.proto.CacheResponse.ResponseType response_type = 3;
    bool CacheResponse::has_response_type() const
    {
        return (_has_bits_[0] & 0x00000004u) != 0;
    }
    void CacheResponse::set_has_response_type()
    {
        _has_bits_[0] |= 0x00000004u;
    }
    void CacheResponse::clear_has_response_type()
    {
        _has_bits_[0] &= ~0x00000004u;
    }
    void CacheResponse::clear_response_type()
    {
        response_type_ = 0;
        clear_has_response_type();
    }
    ::content::proto::CacheResponse_ResponseType CacheResponse::response_type() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.response_type)
        return static_cast<::content::proto::CacheResponse_ResponseType>(response_type_);
    }
    void CacheResponse::set_response_type(::content::proto::CacheResponse_ResponseType value)
    {
        assert(::content::proto::CacheResponse_ResponseType_IsValid(value));
        set_has_response_type();
        response_type_ = value;
        // @@protoc_insertion_point(field_set:content.proto.CacheResponse.response_type)
    }

    // repeated .content.proto.CacheHeaderMap headers = 4;
    int CacheResponse::headers_size() const
    {
        return headers_.size();
    }
    void CacheResponse::clear_headers()
    {
        headers_.Clear();
    }
    const ::content::proto::CacheHeaderMap& CacheResponse::headers(int index) const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.headers)
        return headers_.Get(index);
    }
    ::content::proto::CacheHeaderMap* CacheResponse::mutable_headers(int index)
    {
        // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.headers)
        return headers_.Mutable(index);
    }
    ::content::proto::CacheHeaderMap* CacheResponse::add_headers()
    {
        // @@protoc_insertion_point(field_add:content.proto.CacheResponse.headers)
        return headers_.Add();
    }
    ::google::protobuf::RepeatedPtrField<::content::proto::CacheHeaderMap>*
    CacheResponse::mutable_headers()
    {
        // @@protoc_insertion_point(field_mutable_list:content.proto.CacheResponse.headers)
        return &headers_;
    }
    const ::google::protobuf::RepeatedPtrField<::content::proto::CacheHeaderMap>&
    CacheResponse::headers() const
    {
        // @@protoc_insertion_point(field_list:content.proto.CacheResponse.headers)
        return headers_;
    }

    // optional string url = 5 [deprecated = true];
    bool CacheResponse::has_url() const
    {
        return (_has_bits_[0] & 0x00000010u) != 0;
    }
    void CacheResponse::set_has_url()
    {
        _has_bits_[0] |= 0x00000010u;
    }
    void CacheResponse::clear_has_url()
    {
        _has_bits_[0] &= ~0x00000010u;
    }
    void CacheResponse::clear_url()
    {
        url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_url();
    }
    const ::std::string& CacheResponse::url() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.url)
        return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheResponse::set_url(const ::std::string& value)
    {
        set_has_url();
        url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheResponse.url)
    }
    void CacheResponse::set_url(const char* value)
    {
        set_has_url();
        url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheResponse.url)
    }
    void CacheResponse::set_url(const char* value, size_t size)
    {
        set_has_url();
        url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheResponse.url)
    }
    ::std::string* CacheResponse::mutable_url()
    {
        set_has_url();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.url)
        return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    ::std::string* CacheResponse::release_url()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheResponse.url)
        clear_has_url();
        return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    void CacheResponse::set_allocated_url(::std::string* url)
    {
        if (url != NULL) {
            set_has_url();
        } else {
            clear_has_url();
        }
        url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheResponse.url)
    }

    // optional int64 response_time = 6;
    bool CacheResponse::has_response_time() const
    {
        return (_has_bits_[0] & 0x00000020u) != 0;
    }
    void CacheResponse::set_has_response_time()
    {
        _has_bits_[0] |= 0x00000020u;
    }
    void CacheResponse::clear_has_response_time()
    {
        _has_bits_[0] &= ~0x00000020u;
    }
    void CacheResponse::clear_response_time()
    {
        response_time_ = GOOGLE_LONGLONG(0);
        clear_has_response_time();
    }
    ::google::protobuf::int64 CacheResponse::response_time() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.response_time)
        return response_time_;
    }
    void CacheResponse::set_response_time(::google::protobuf::int64 value)
    {
        set_has_response_time();
        response_time_ = value;
        // @@protoc_insertion_point(field_set:content.proto.CacheResponse.response_time)
    }

    // repeated string cors_exposed_header_names = 7;
    int CacheResponse::cors_exposed_header_names_size() const
    {
        return cors_exposed_header_names_.size();
    }
    void CacheResponse::clear_cors_exposed_header_names()
    {
        cors_exposed_header_names_.Clear();
    }
    const ::std::string& CacheResponse::cors_exposed_header_names(int index) const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.cors_exposed_header_names)
        return cors_exposed_header_names_.Get(index);
    }
    ::std::string* CacheResponse::mutable_cors_exposed_header_names(int index)
    {
        // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.cors_exposed_header_names)
        return cors_exposed_header_names_.Mutable(index);
    }
    void CacheResponse::set_cors_exposed_header_names(int index, const ::std::string& value)
    {
        // @@protoc_insertion_point(field_set:content.proto.CacheResponse.cors_exposed_header_names)
        cors_exposed_header_names_.Mutable(index)->assign(value);
    }
    void CacheResponse::set_cors_exposed_header_names(int index, const char* value)
    {
        cors_exposed_header_names_.Mutable(index)->assign(value);
        // @@protoc_insertion_point(field_set_char:content.proto.CacheResponse.cors_exposed_header_names)
    }
    void CacheResponse::set_cors_exposed_header_names(int index, const char* value, size_t size)
    {
        cors_exposed_header_names_.Mutable(index)->assign(
            reinterpret_cast<const char*>(value), size);
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheResponse.cors_exposed_header_names)
    }
    ::std::string* CacheResponse::add_cors_exposed_header_names()
    {
        // @@protoc_insertion_point(field_add_mutable:content.proto.CacheResponse.cors_exposed_header_names)
        return cors_exposed_header_names_.Add();
    }
    void CacheResponse::add_cors_exposed_header_names(const ::std::string& value)
    {
        cors_exposed_header_names_.Add()->assign(value);
        // @@protoc_insertion_point(field_add:content.proto.CacheResponse.cors_exposed_header_names)
    }
    void CacheResponse::add_cors_exposed_header_names(const char* value)
    {
        cors_exposed_header_names_.Add()->assign(value);
        // @@protoc_insertion_point(field_add_char:content.proto.CacheResponse.cors_exposed_header_names)
    }
    void CacheResponse::add_cors_exposed_header_names(const char* value, size_t size)
    {
        cors_exposed_header_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
        // @@protoc_insertion_point(field_add_pointer:content.proto.CacheResponse.cors_exposed_header_names)
    }
    const ::google::protobuf::RepeatedPtrField<::std::string>&
    CacheResponse::cors_exposed_header_names() const
    {
        // @@protoc_insertion_point(field_list:content.proto.CacheResponse.cors_exposed_header_names)
        return cors_exposed_header_names_;
    }
    ::google::protobuf::RepeatedPtrField<::std::string>*
    CacheResponse::mutable_cors_exposed_header_names()
    {
        // @@protoc_insertion_point(field_mutable_list:content.proto.CacheResponse.cors_exposed_header_names)
        return &cors_exposed_header_names_;
    }

    // repeated string url_list = 8;
    int CacheResponse::url_list_size() const
    {
        return url_list_.size();
    }
    void CacheResponse::clear_url_list()
    {
        url_list_.Clear();
    }
    const ::std::string& CacheResponse::url_list(int index) const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.url_list)
        return url_list_.Get(index);
    }
    ::std::string* CacheResponse::mutable_url_list(int index)
    {
        // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.url_list)
        return url_list_.Mutable(index);
    }
    void CacheResponse::set_url_list(int index, const ::std::string& value)
    {
        // @@protoc_insertion_point(field_set:content.proto.CacheResponse.url_list)
        url_list_.Mutable(index)->assign(value);
    }
    void CacheResponse::set_url_list(int index, const char* value)
    {
        url_list_.Mutable(index)->assign(value);
        // @@protoc_insertion_point(field_set_char:content.proto.CacheResponse.url_list)
    }
    void CacheResponse::set_url_list(int index, const char* value, size_t size)
    {
        url_list_.Mutable(index)->assign(
            reinterpret_cast<const char*>(value), size);
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheResponse.url_list)
    }
    ::std::string* CacheResponse::add_url_list()
    {
        // @@protoc_insertion_point(field_add_mutable:content.proto.CacheResponse.url_list)
        return url_list_.Add();
    }
    void CacheResponse::add_url_list(const ::std::string& value)
    {
        url_list_.Add()->assign(value);
        // @@protoc_insertion_point(field_add:content.proto.CacheResponse.url_list)
    }
    void CacheResponse::add_url_list(const char* value)
    {
        url_list_.Add()->assign(value);
        // @@protoc_insertion_point(field_add_char:content.proto.CacheResponse.url_list)
    }
    void CacheResponse::add_url_list(const char* value, size_t size)
    {
        url_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
        // @@protoc_insertion_point(field_add_pointer:content.proto.CacheResponse.url_list)
    }
    const ::google::protobuf::RepeatedPtrField<::std::string>&
    CacheResponse::url_list() const
    {
        // @@protoc_insertion_point(field_list:content.proto.CacheResponse.url_list)
        return url_list_;
    }
    ::google::protobuf::RepeatedPtrField<::std::string>*
    CacheResponse::mutable_url_list()
    {
        // @@protoc_insertion_point(field_mutable_list:content.proto.CacheResponse.url_list)
        return &url_list_;
    }

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

    // ===================================================================

    static ::std::string* MutableUnknownFieldsForCacheMetadata(
        CacheMetadata* ptr)
    {
        return ptr->mutable_unknown_fields();
    }

#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int CacheMetadata::kRequestFieldNumber;
    const int CacheMetadata::kResponseFieldNumber;
    const int CacheMetadata::kEntryTimeFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

    CacheMetadata::CacheMetadata()
        : ::google::protobuf::MessageLite()
        , _arena_ptr_(NULL)
    {
        SharedCtor();
        // @@protoc_insertion_point(constructor:content.proto.CacheMetadata)
    }

    void CacheMetadata::InitAsDefaultInstance()
    {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        request_ = const_cast<::content::proto::CacheRequest*>(
            ::content::proto::CacheRequest::internal_default_instance());
#else
        request_ = const_cast<::content::proto::CacheRequest*>(&::content::proto::CacheRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        response_ = const_cast<::content::proto::CacheResponse*>(
            ::content::proto::CacheResponse::internal_default_instance());
#else
        response_ = const_cast<::content::proto::CacheResponse*>(&::content::proto::CacheResponse::default_instance());
#endif
    }

    CacheMetadata::CacheMetadata(const CacheMetadata& from)
        : ::google::protobuf::MessageLite()
        , _arena_ptr_(NULL)
    {
        SharedCtor();
        MergeFrom(from);
        // @@protoc_insertion_point(copy_constructor:content.proto.CacheMetadata)
    }

    void CacheMetadata::SharedCtor()
    {
        ::google::protobuf::internal::GetEmptyString();
        _cached_size_ = 0;
        _unknown_fields_.UnsafeSetDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        request_ = NULL;
        response_ = NULL;
        entry_time_ = GOOGLE_LONGLONG(0);
        ::memset(_has_bits_, 0, sizeof(_has_bits_));
    }

    CacheMetadata::~CacheMetadata()
    {
        // @@protoc_insertion_point(destructor:content.proto.CacheMetadata)
        SharedDtor();
    }

    void CacheMetadata::SharedDtor()
    {
        _unknown_fields_.DestroyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        if (this != &default_instance()) {
#else
        if (this != default_instance_) {
#endif
            delete request_;
            delete response_;
        }
    }

    void CacheMetadata::SetCachedSize(int size) const
    {
        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _cached_size_ = size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
    }
    const CacheMetadata& CacheMetadata::default_instance()
    {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        protobuf_AddDesc_cache_5fstorage_2eproto();
#else
        if (default_instance_ == NULL)
            protobuf_AddDesc_cache_5fstorage_2eproto();
#endif
        return *default_instance_;
    }

    CacheMetadata* CacheMetadata::default_instance_ = NULL;

    CacheMetadata* CacheMetadata::New(::google::protobuf::Arena* arena) const
    {
        CacheMetadata* n = new CacheMetadata;
        if (arena != NULL) {
            arena->Own(n);
        }
        return n;
    }

    void CacheMetadata::Clear()
    {
        // @@protoc_insertion_point(message_clear_start:content.proto.CacheMetadata)
        if (_has_bits_[0 / 32] & 7u) {
            if (has_request()) {
                if (request_ != NULL)
                    request_->::content::proto::CacheRequest::Clear();
            }
            if (has_response()) {
                if (response_ != NULL)
                    response_->::content::proto::CacheResponse::Clear();
            }
            entry_time_ = GOOGLE_LONGLONG(0);
        }
        ::memset(_has_bits_, 0, sizeof(_has_bits_));
        _unknown_fields_.ClearToEmptyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    bool CacheMetadata::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input)
    {
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
        ::google::protobuf::uint32 tag;
        ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
            ::google::protobuf::internal::NewPermanentCallback(
                &MutableUnknownFieldsForCacheMetadata, this));
        ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
            &unknown_fields_string, false);
        // @@protoc_insertion_point(parse_start:content.proto.CacheMetadata)
        for (;;) {
            ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
            tag = p.first;
            if (!p.second)
                goto handle_unusual;
            switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // required .content.proto.CacheRequest request = 1;
            case 1: {
                if (tag == 10) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                        input, mutable_request()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(18))
                    goto parse_response;
                break;
            }

            // required .content.proto.CacheResponse response = 2;
            case 2: {
                if (tag == 18) {
                parse_response:
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                        input, mutable_response()));
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectTag(24))
                    goto parse_entry_time;
                break;
            }

            // optional int64 entry_time = 3;
            case 3: {
                if (tag == 24) {
                parse_entry_time:
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                        ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                        input, &entry_time_)));
                    set_has_entry_time();
                } else {
                    goto handle_unusual;
                }
                if (input->ExpectAtEnd())
                    goto success;
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                    input, tag, &unknown_fields_stream));
                break;
            }
            }
        }
    success:
        // @@protoc_insertion_point(parse_success:content.proto.CacheMetadata)
        return true;
    failure:
        // @@protoc_insertion_point(parse_failure:content.proto.CacheMetadata)
        return false;
#undef DO_
    }

    void CacheMetadata::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const
    {
        // @@protoc_insertion_point(serialize_start:content.proto.CacheMetadata)
        // required .content.proto.CacheRequest request = 1;
        if (has_request()) {
            ::google::protobuf::internal::WireFormatLite::WriteMessage(
                1, *this->request_, output);
        }

        // required .content.proto.CacheResponse response = 2;
        if (has_response()) {
            ::google::protobuf::internal::WireFormatLite::WriteMessage(
                2, *this->response_, output);
        }

        // optional int64 entry_time = 3;
        if (has_entry_time()) {
            ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->entry_time(), output);
        }

        output->WriteRaw(unknown_fields().data(),
            static_cast<int>(unknown_fields().size()));
        // @@protoc_insertion_point(serialize_end:content.proto.CacheMetadata)
    }

    int CacheMetadata::RequiredFieldsByteSizeFallback() const
    {
        // @@protoc_insertion_point(required_fields_byte_size_fallback_start:content.proto.CacheMetadata)
        int total_size = 0;

        if (has_request()) {
            // required .content.proto.CacheRequest request = 1;
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->request_);
        }

        if (has_response()) {
            // required .content.proto.CacheResponse response = 2;
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->response_);
        }

        return total_size;
    }
    int CacheMetadata::ByteSize() const
    {
        // @@protoc_insertion_point(message_byte_size_start:content.proto.CacheMetadata)
        int total_size = 0;

        if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) { // All required fields are present.
            // required .content.proto.CacheRequest request = 1;
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->request_);

            // required .content.proto.CacheResponse response = 2;
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->response_);

        } else {
            total_size += RequiredFieldsByteSizeFallback();
        }
        // optional int64 entry_time = 3;
        if (has_entry_time()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->entry_time());
        }

        total_size += unknown_fields().size();

        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _cached_size_ = total_size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
        return total_size;
    }

    void CacheMetadata::CheckTypeAndMergeFrom(
        const ::google::protobuf::MessageLite& from)
    {
        MergeFrom(*::google::protobuf::down_cast<const CacheMetadata*>(&from));
    }

    void CacheMetadata::MergeFrom(const CacheMetadata& from)
    {
        // @@protoc_insertion_point(class_specific_merge_from_start:content.proto.CacheMetadata)
        if (GOOGLE_PREDICT_FALSE(&from == this))
            MergeFromFail(__LINE__);
        if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
            if (from.has_request()) {
                mutable_request()->::content::proto::CacheRequest::MergeFrom(from.request());
            }
            if (from.has_response()) {
                mutable_response()->::content::proto::CacheResponse::MergeFrom(from.response());
            }
            if (from.has_entry_time()) {
                set_entry_time(from.entry_time());
            }
        }
        if (!from.unknown_fields().empty()) {
            mutable_unknown_fields()->append(from.unknown_fields());
        }
    }

    void CacheMetadata::CopyFrom(const CacheMetadata& from)
    {
        // @@protoc_insertion_point(class_specific_copy_from_start:content.proto.CacheMetadata)
        if (&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool CacheMetadata::IsInitialized() const
    {
        if ((_has_bits_[0] & 0x00000003) != 0x00000003)
            return false;

        if (has_request()) {
            if (!this->request_->IsInitialized())
                return false;
        }
        if (has_response()) {
            if (!this->response_->IsInitialized())
                return false;
        }
        return true;
    }

    void CacheMetadata::Swap(CacheMetadata* other)
    {
        if (other == this)
            return;
        InternalSwap(other);
    }
    void CacheMetadata::InternalSwap(CacheMetadata* other)
    {
        std::swap(request_, other->request_);
        std::swap(response_, other->response_);
        std::swap(entry_time_, other->entry_time_);
        std::swap(_has_bits_[0], other->_has_bits_[0]);
        _unknown_fields_.Swap(&other->_unknown_fields_);
        std::swap(_cached_size_, other->_cached_size_);
    }

    ::std::string CacheMetadata::GetTypeName() const
    {
        return "content.proto.CacheMetadata";
    }

#if PROTOBUF_INLINE_NOT_IN_HEADERS
    // CacheMetadata

    // required .content.proto.CacheRequest request = 1;
    bool CacheMetadata::has_request() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    void CacheMetadata::set_has_request()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    void CacheMetadata::clear_has_request()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    void CacheMetadata::clear_request()
    {
        if (request_ != NULL)
            request_->::content::proto::CacheRequest::Clear();
        clear_has_request();
    }
    const ::content::proto::CacheRequest& CacheMetadata::request() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheMetadata.request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        return request_ != NULL ? *request_ : *default_instance().request_;
#else
        return request_ != NULL ? *request_ : *default_instance_->request_;
#endif
    }
    ::content::proto::CacheRequest* CacheMetadata::mutable_request()
    {
        set_has_request();
        if (request_ == NULL) {
            request_ = new ::content::proto::CacheRequest;
        }
        // @@protoc_insertion_point(field_mutable:content.proto.CacheMetadata.request)
        return request_;
    }
    ::content::proto::CacheRequest* CacheMetadata::release_request()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheMetadata.request)
        clear_has_request();
        ::content::proto::CacheRequest* temp = request_;
        request_ = NULL;
        return temp;
    }
    void CacheMetadata::set_allocated_request(::content::proto::CacheRequest* request)
    {
        delete request_;
        request_ = request;
        if (request) {
            set_has_request();
        } else {
            clear_has_request();
        }
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheMetadata.request)
    }

    // required .content.proto.CacheResponse response = 2;
    bool CacheMetadata::has_response() const
    {
        return (_has_bits_[0] & 0x00000002u) != 0;
    }
    void CacheMetadata::set_has_response()
    {
        _has_bits_[0] |= 0x00000002u;
    }
    void CacheMetadata::clear_has_response()
    {
        _has_bits_[0] &= ~0x00000002u;
    }
    void CacheMetadata::clear_response()
    {
        if (response_ != NULL)
            response_->::content::proto::CacheResponse::Clear();
        clear_has_response();
    }
    const ::content::proto::CacheResponse& CacheMetadata::response() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheMetadata.response)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        return response_ != NULL ? *response_ : *default_instance().response_;
#else
        return response_ != NULL ? *response_ : *default_instance_->response_;
#endif
    }
    ::content::proto::CacheResponse* CacheMetadata::mutable_response()
    {
        set_has_response();
        if (response_ == NULL) {
            response_ = new ::content::proto::CacheResponse;
        }
        // @@protoc_insertion_point(field_mutable:content.proto.CacheMetadata.response)
        return response_;
    }
    ::content::proto::CacheResponse* CacheMetadata::release_response()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheMetadata.response)
        clear_has_response();
        ::content::proto::CacheResponse* temp = response_;
        response_ = NULL;
        return temp;
    }
    void CacheMetadata::set_allocated_response(::content::proto::CacheResponse* response)
    {
        delete response_;
        response_ = response;
        if (response) {
            set_has_response();
        } else {
            clear_has_response();
        }
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheMetadata.response)
    }

    // optional int64 entry_time = 3;
    bool CacheMetadata::has_entry_time() const
    {
        return (_has_bits_[0] & 0x00000004u) != 0;
    }
    void CacheMetadata::set_has_entry_time()
    {
        _has_bits_[0] |= 0x00000004u;
    }
    void CacheMetadata::clear_has_entry_time()
    {
        _has_bits_[0] &= ~0x00000004u;
    }
    void CacheMetadata::clear_entry_time()
    {
        entry_time_ = GOOGLE_LONGLONG(0);
        clear_has_entry_time();
    }
    ::google::protobuf::int64 CacheMetadata::entry_time() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheMetadata.entry_time)
        return entry_time_;
    }
    void CacheMetadata::set_entry_time(::google::protobuf::int64 value)
    {
        set_has_entry_time();
        entry_time_ = value;
        // @@protoc_insertion_point(field_set:content.proto.CacheMetadata.entry_time)
    }

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

    // @@protoc_insertion_point(namespace_scope)

} // namespace proto
} // namespace content

// @@protoc_insertion_point(global_scope)
