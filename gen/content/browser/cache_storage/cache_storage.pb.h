// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cache_storage.proto

#ifndef PROTOBUF_cache_5fstorage_2eproto__INCLUDED
#define PROTOBUF_cache_5fstorage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace content {
namespace proto {

    // Internal implementation detail -- do not call these.
    void protobuf_AddDesc_cache_5fstorage_2eproto();
    void protobuf_AssignDesc_cache_5fstorage_2eproto();
    void protobuf_ShutdownFile_cache_5fstorage_2eproto();

    class CacheHeaderMap;
    class CacheMetadata;
    class CacheRequest;
    class CacheResponse;
    class CacheStorageIndex;
    class CacheStorageIndex_Cache;

    enum CacheResponse_ResponseType {
        CacheResponse_ResponseType_BASIC_TYPE = 0,
        CacheResponse_ResponseType_CORS_TYPE = 1,
        CacheResponse_ResponseType_DEFAULT_TYPE = 2,
        CacheResponse_ResponseType_ERROR_TYPE = 3,
        CacheResponse_ResponseType_OPAQUE_TYPE = 4,
        CacheResponse_ResponseType_OPAQUE_REDIRECT_TYPE = 5
    };
    bool CacheResponse_ResponseType_IsValid(int value);
    const CacheResponse_ResponseType CacheResponse_ResponseType_ResponseType_MIN = CacheResponse_ResponseType_BASIC_TYPE;
    const CacheResponse_ResponseType CacheResponse_ResponseType_ResponseType_MAX = CacheResponse_ResponseType_OPAQUE_REDIRECT_TYPE;
    const int CacheResponse_ResponseType_ResponseType_ARRAYSIZE = CacheResponse_ResponseType_ResponseType_MAX + 1;

    // ===================================================================

    class CacheStorageIndex_Cache : public ::google::protobuf::MessageLite {
    public:
        CacheStorageIndex_Cache();
        virtual ~CacheStorageIndex_Cache();

        CacheStorageIndex_Cache(const CacheStorageIndex_Cache& from);

        inline CacheStorageIndex_Cache& operator=(const CacheStorageIndex_Cache& from)
        {
            CopyFrom(from);
            return *this;
        }

        inline const ::std::string& unknown_fields() const
        {
            return _unknown_fields_.GetNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        inline ::std::string* mutable_unknown_fields()
        {
            return _unknown_fields_.MutableNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        static const CacheStorageIndex_Cache& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        // Returns the internal default instance pointer. This function can
        // return NULL thus should not be used by the user. This is intended
        // for Protobuf internal code. Please use default_instance() declared
        // above instead.
        static inline const CacheStorageIndex_Cache* internal_default_instance()
        {
            return default_instance_;
        }
#endif

        GOOGLE_ATTRIBUTE_NOINLINE void Swap(CacheStorageIndex_Cache* other);

        // implements Message ----------------------------------------------

        inline CacheStorageIndex_Cache* New() const { return New(NULL); }

        CacheStorageIndex_Cache* New(::google::protobuf::Arena* arena) const;
        void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
        void CopyFrom(const CacheStorageIndex_Cache& from);
        void MergeFrom(const CacheStorageIndex_Cache& from);
        void Clear();
        bool IsInitialized() const;

        int ByteSize() const;
        bool MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input);
        void SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const;
        void DiscardUnknownFields();
        int GetCachedSize() const { return _cached_size_; }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const;
        void InternalSwap(CacheStorageIndex_Cache* other);

    private:
        inline ::google::protobuf::Arena* GetArenaNoVirtual() const
        {
            return _arena_ptr_;
        }
        inline ::google::protobuf::Arena* MaybeArenaPtr() const
        {
            return _arena_ptr_;
        }

    public:
        ::std::string GetTypeName() const;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        // required string name = 1;
        bool has_name() const;
        void clear_name();
        static const int kNameFieldNumber = 1;
        const ::std::string& name() const;
        void set_name(const ::std::string& value);
        void set_name(const char* value);
        void set_name(const char* value, size_t size);
        ::std::string* mutable_name();
        ::std::string* release_name();
        void set_allocated_name(::std::string* name);

        // optional string cache_dir = 2;
        bool has_cache_dir() const;
        void clear_cache_dir();
        static const int kCacheDirFieldNumber = 2;
        const ::std::string& cache_dir() const;
        void set_cache_dir(const ::std::string& value);
        void set_cache_dir(const char* value);
        void set_cache_dir(const char* value, size_t size);
        ::std::string* mutable_cache_dir();
        ::std::string* release_cache_dir();
        void set_allocated_cache_dir(::std::string* cache_dir);

        // optional int64 size = 3;
        bool has_size() const;
        void clear_size();
        static const int kSizeFieldNumber = 3;
        ::google::protobuf::int64 size() const;
        void set_size(::google::protobuf::int64 value);

        // @@protoc_insertion_point(class_scope:content.proto.CacheStorageIndex.Cache)
    private:
        inline void set_has_name();
        inline void clear_has_name();
        inline void set_has_cache_dir();
        inline void clear_has_cache_dir();
        inline void set_has_size();
        inline void clear_has_size();

        ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
        ::google::protobuf::Arena* _arena_ptr_;

        ::google::protobuf::uint32 _has_bits_[1];
        mutable int _cached_size_;
        ::google::protobuf::internal::ArenaStringPtr name_;
        ::google::protobuf::internal::ArenaStringPtr cache_dir_;
        ::google::protobuf::int64 size_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        friend void protobuf_AddDesc_cache_5fstorage_2eproto_impl();
#else
        friend void protobuf_AddDesc_cache_5fstorage_2eproto();
#endif
        friend void protobuf_AssignDesc_cache_5fstorage_2eproto();
        friend void protobuf_ShutdownFile_cache_5fstorage_2eproto();

        void InitAsDefaultInstance();
        static CacheStorageIndex_Cache* default_instance_;
    };
    // -------------------------------------------------------------------

    class CacheStorageIndex : public ::google::protobuf::MessageLite {
    public:
        CacheStorageIndex();
        virtual ~CacheStorageIndex();

        CacheStorageIndex(const CacheStorageIndex& from);

        inline CacheStorageIndex& operator=(const CacheStorageIndex& from)
        {
            CopyFrom(from);
            return *this;
        }

        inline const ::std::string& unknown_fields() const
        {
            return _unknown_fields_.GetNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        inline ::std::string* mutable_unknown_fields()
        {
            return _unknown_fields_.MutableNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        static const CacheStorageIndex& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        // Returns the internal default instance pointer. This function can
        // return NULL thus should not be used by the user. This is intended
        // for Protobuf internal code. Please use default_instance() declared
        // above instead.
        static inline const CacheStorageIndex* internal_default_instance()
        {
            return default_instance_;
        }
#endif

        GOOGLE_ATTRIBUTE_NOINLINE void Swap(CacheStorageIndex* other);

        // implements Message ----------------------------------------------

        inline CacheStorageIndex* New() const { return New(NULL); }

        CacheStorageIndex* New(::google::protobuf::Arena* arena) const;
        void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
        void CopyFrom(const CacheStorageIndex& from);
        void MergeFrom(const CacheStorageIndex& from);
        void Clear();
        bool IsInitialized() const;

        int ByteSize() const;
        bool MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input);
        void SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const;
        void DiscardUnknownFields();
        int GetCachedSize() const { return _cached_size_; }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const;
        void InternalSwap(CacheStorageIndex* other);

    private:
        inline ::google::protobuf::Arena* GetArenaNoVirtual() const
        {
            return _arena_ptr_;
        }
        inline ::google::protobuf::Arena* MaybeArenaPtr() const
        {
            return _arena_ptr_;
        }

    public:
        ::std::string GetTypeName() const;

        // nested types ----------------------------------------------------

        typedef CacheStorageIndex_Cache Cache;

        // accessors -------------------------------------------------------

        // repeated .content.proto.CacheStorageIndex.Cache cache = 1;
        int cache_size() const;
        void clear_cache();
        static const int kCacheFieldNumber = 1;
        const ::content::proto::CacheStorageIndex_Cache& cache(int index) const;
        ::content::proto::CacheStorageIndex_Cache* mutable_cache(int index);
        ::content::proto::CacheStorageIndex_Cache* add_cache();
        ::google::protobuf::RepeatedPtrField<::content::proto::CacheStorageIndex_Cache>*
        mutable_cache();
        const ::google::protobuf::RepeatedPtrField<::content::proto::CacheStorageIndex_Cache>&
        cache() const;

        // optional string origin = 2;
        bool has_origin() const;
        void clear_origin();
        static const int kOriginFieldNumber = 2;
        const ::std::string& origin() const;
        void set_origin(const ::std::string& value);
        void set_origin(const char* value);
        void set_origin(const char* value, size_t size);
        ::std::string* mutable_origin();
        ::std::string* release_origin();
        void set_allocated_origin(::std::string* origin);

        // @@protoc_insertion_point(class_scope:content.proto.CacheStorageIndex)
    private:
        inline void set_has_origin();
        inline void clear_has_origin();

        ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
        ::google::protobuf::Arena* _arena_ptr_;

        ::google::protobuf::uint32 _has_bits_[1];
        mutable int _cached_size_;
        ::google::protobuf::RepeatedPtrField<::content::proto::CacheStorageIndex_Cache> cache_;
        ::google::protobuf::internal::ArenaStringPtr origin_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        friend void protobuf_AddDesc_cache_5fstorage_2eproto_impl();
#else
        friend void protobuf_AddDesc_cache_5fstorage_2eproto();
#endif
        friend void protobuf_AssignDesc_cache_5fstorage_2eproto();
        friend void protobuf_ShutdownFile_cache_5fstorage_2eproto();

        void InitAsDefaultInstance();
        static CacheStorageIndex* default_instance_;
    };
    // -------------------------------------------------------------------

    class CacheHeaderMap : public ::google::protobuf::MessageLite {
    public:
        CacheHeaderMap();
        virtual ~CacheHeaderMap();

        CacheHeaderMap(const CacheHeaderMap& from);

        inline CacheHeaderMap& operator=(const CacheHeaderMap& from)
        {
            CopyFrom(from);
            return *this;
        }

        inline const ::std::string& unknown_fields() const
        {
            return _unknown_fields_.GetNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        inline ::std::string* mutable_unknown_fields()
        {
            return _unknown_fields_.MutableNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        static const CacheHeaderMap& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        // Returns the internal default instance pointer. This function can
        // return NULL thus should not be used by the user. This is intended
        // for Protobuf internal code. Please use default_instance() declared
        // above instead.
        static inline const CacheHeaderMap* internal_default_instance()
        {
            return default_instance_;
        }
#endif

        GOOGLE_ATTRIBUTE_NOINLINE void Swap(CacheHeaderMap* other);

        // implements Message ----------------------------------------------

        inline CacheHeaderMap* New() const { return New(NULL); }

        CacheHeaderMap* New(::google::protobuf::Arena* arena) const;
        void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
        void CopyFrom(const CacheHeaderMap& from);
        void MergeFrom(const CacheHeaderMap& from);
        void Clear();
        bool IsInitialized() const;

        int ByteSize() const;
        bool MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input);
        void SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const;
        void DiscardUnknownFields();
        int GetCachedSize() const { return _cached_size_; }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const;
        void InternalSwap(CacheHeaderMap* other);

    private:
        inline ::google::protobuf::Arena* GetArenaNoVirtual() const
        {
            return _arena_ptr_;
        }
        inline ::google::protobuf::Arena* MaybeArenaPtr() const
        {
            return _arena_ptr_;
        }

    public:
        ::std::string GetTypeName() const;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        // required string name = 1;
        bool has_name() const;
        void clear_name();
        static const int kNameFieldNumber = 1;
        const ::std::string& name() const;
        void set_name(const ::std::string& value);
        void set_name(const char* value);
        void set_name(const char* value, size_t size);
        ::std::string* mutable_name();
        ::std::string* release_name();
        void set_allocated_name(::std::string* name);

        // required string value = 2;
        bool has_value() const;
        void clear_value();
        static const int kValueFieldNumber = 2;
        const ::std::string& value() const;
        void set_value(const ::std::string& value);
        void set_value(const char* value);
        void set_value(const char* value, size_t size);
        ::std::string* mutable_value();
        ::std::string* release_value();
        void set_allocated_value(::std::string* value);

        // @@protoc_insertion_point(class_scope:content.proto.CacheHeaderMap)
    private:
        inline void set_has_name();
        inline void clear_has_name();
        inline void set_has_value();
        inline void clear_has_value();

        // helper for ByteSize()
        int RequiredFieldsByteSizeFallback() const;

        ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
        ::google::protobuf::Arena* _arena_ptr_;

        ::google::protobuf::uint32 _has_bits_[1];
        mutable int _cached_size_;
        ::google::protobuf::internal::ArenaStringPtr name_;
        ::google::protobuf::internal::ArenaStringPtr value_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        friend void protobuf_AddDesc_cache_5fstorage_2eproto_impl();
#else
        friend void protobuf_AddDesc_cache_5fstorage_2eproto();
#endif
        friend void protobuf_AssignDesc_cache_5fstorage_2eproto();
        friend void protobuf_ShutdownFile_cache_5fstorage_2eproto();

        void InitAsDefaultInstance();
        static CacheHeaderMap* default_instance_;
    };
    // -------------------------------------------------------------------

    class CacheRequest : public ::google::protobuf::MessageLite {
    public:
        CacheRequest();
        virtual ~CacheRequest();

        CacheRequest(const CacheRequest& from);

        inline CacheRequest& operator=(const CacheRequest& from)
        {
            CopyFrom(from);
            return *this;
        }

        inline const ::std::string& unknown_fields() const
        {
            return _unknown_fields_.GetNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        inline ::std::string* mutable_unknown_fields()
        {
            return _unknown_fields_.MutableNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        static const CacheRequest& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        // Returns the internal default instance pointer. This function can
        // return NULL thus should not be used by the user. This is intended
        // for Protobuf internal code. Please use default_instance() declared
        // above instead.
        static inline const CacheRequest* internal_default_instance()
        {
            return default_instance_;
        }
#endif

        GOOGLE_ATTRIBUTE_NOINLINE void Swap(CacheRequest* other);

        // implements Message ----------------------------------------------

        inline CacheRequest* New() const { return New(NULL); }

        CacheRequest* New(::google::protobuf::Arena* arena) const;
        void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
        void CopyFrom(const CacheRequest& from);
        void MergeFrom(const CacheRequest& from);
        void Clear();
        bool IsInitialized() const;

        int ByteSize() const;
        bool MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input);
        void SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const;
        void DiscardUnknownFields();
        int GetCachedSize() const { return _cached_size_; }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const;
        void InternalSwap(CacheRequest* other);

    private:
        inline ::google::protobuf::Arena* GetArenaNoVirtual() const
        {
            return _arena_ptr_;
        }
        inline ::google::protobuf::Arena* MaybeArenaPtr() const
        {
            return _arena_ptr_;
        }

    public:
        ::std::string GetTypeName() const;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        // required string method = 1;
        bool has_method() const;
        void clear_method();
        static const int kMethodFieldNumber = 1;
        const ::std::string& method() const;
        void set_method(const ::std::string& value);
        void set_method(const char* value);
        void set_method(const char* value, size_t size);
        ::std::string* mutable_method();
        ::std::string* release_method();
        void set_allocated_method(::std::string* method);

        // repeated .content.proto.CacheHeaderMap headers = 2;
        int headers_size() const;
        void clear_headers();
        static const int kHeadersFieldNumber = 2;
        const ::content::proto::CacheHeaderMap& headers(int index) const;
        ::content::proto::CacheHeaderMap* mutable_headers(int index);
        ::content::proto::CacheHeaderMap* add_headers();
        ::google::protobuf::RepeatedPtrField<::content::proto::CacheHeaderMap>*
        mutable_headers();
        const ::google::protobuf::RepeatedPtrField<::content::proto::CacheHeaderMap>&
        headers() const;

        // @@protoc_insertion_point(class_scope:content.proto.CacheRequest)
    private:
        inline void set_has_method();
        inline void clear_has_method();

        ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
        ::google::protobuf::Arena* _arena_ptr_;

        ::google::protobuf::uint32 _has_bits_[1];
        mutable int _cached_size_;
        ::google::protobuf::internal::ArenaStringPtr method_;
        ::google::protobuf::RepeatedPtrField<::content::proto::CacheHeaderMap> headers_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        friend void protobuf_AddDesc_cache_5fstorage_2eproto_impl();
#else
        friend void protobuf_AddDesc_cache_5fstorage_2eproto();
#endif
        friend void protobuf_AssignDesc_cache_5fstorage_2eproto();
        friend void protobuf_ShutdownFile_cache_5fstorage_2eproto();

        void InitAsDefaultInstance();
        static CacheRequest* default_instance_;
    };
    // -------------------------------------------------------------------

    class CacheResponse : public ::google::protobuf::MessageLite {
    public:
        CacheResponse();
        virtual ~CacheResponse();

        CacheResponse(const CacheResponse& from);

        inline CacheResponse& operator=(const CacheResponse& from)
        {
            CopyFrom(from);
            return *this;
        }

        inline const ::std::string& unknown_fields() const
        {
            return _unknown_fields_.GetNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        inline ::std::string* mutable_unknown_fields()
        {
            return _unknown_fields_.MutableNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        static const CacheResponse& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        // Returns the internal default instance pointer. This function can
        // return NULL thus should not be used by the user. This is intended
        // for Protobuf internal code. Please use default_instance() declared
        // above instead.
        static inline const CacheResponse* internal_default_instance()
        {
            return default_instance_;
        }
#endif

        GOOGLE_ATTRIBUTE_NOINLINE void Swap(CacheResponse* other);

        // implements Message ----------------------------------------------

        inline CacheResponse* New() const { return New(NULL); }

        CacheResponse* New(::google::protobuf::Arena* arena) const;
        void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
        void CopyFrom(const CacheResponse& from);
        void MergeFrom(const CacheResponse& from);
        void Clear();
        bool IsInitialized() const;

        int ByteSize() const;
        bool MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input);
        void SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const;
        void DiscardUnknownFields();
        int GetCachedSize() const { return _cached_size_; }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const;
        void InternalSwap(CacheResponse* other);

    private:
        inline ::google::protobuf::Arena* GetArenaNoVirtual() const
        {
            return _arena_ptr_;
        }
        inline ::google::protobuf::Arena* MaybeArenaPtr() const
        {
            return _arena_ptr_;
        }

    public:
        ::std::string GetTypeName() const;

        // nested types ----------------------------------------------------

        typedef CacheResponse_ResponseType ResponseType;
        static const ResponseType BASIC_TYPE = CacheResponse_ResponseType_BASIC_TYPE;
        static const ResponseType CORS_TYPE = CacheResponse_ResponseType_CORS_TYPE;
        static const ResponseType DEFAULT_TYPE = CacheResponse_ResponseType_DEFAULT_TYPE;
        static const ResponseType ERROR_TYPE = CacheResponse_ResponseType_ERROR_TYPE;
        static const ResponseType OPAQUE_TYPE = CacheResponse_ResponseType_OPAQUE_TYPE;
        static const ResponseType OPAQUE_REDIRECT_TYPE = CacheResponse_ResponseType_OPAQUE_REDIRECT_TYPE;
        static inline bool ResponseType_IsValid(int value)
        {
            return CacheResponse_ResponseType_IsValid(value);
        }
        static const ResponseType ResponseType_MIN = CacheResponse_ResponseType_ResponseType_MIN;
        static const ResponseType ResponseType_MAX = CacheResponse_ResponseType_ResponseType_MAX;
        static const int ResponseType_ARRAYSIZE = CacheResponse_ResponseType_ResponseType_ARRAYSIZE;

        // accessors -------------------------------------------------------

        // required int32 status_code = 1;
        bool has_status_code() const;
        void clear_status_code();
        static const int kStatusCodeFieldNumber = 1;
        ::google::protobuf::int32 status_code() const;
        void set_status_code(::google::protobuf::int32 value);

        // required string status_text = 2;
        bool has_status_text() const;
        void clear_status_text();
        static const int kStatusTextFieldNumber = 2;
        const ::std::string& status_text() const;
        void set_status_text(const ::std::string& value);
        void set_status_text(const char* value);
        void set_status_text(const char* value, size_t size);
        ::std::string* mutable_status_text();
        ::std::string* release_status_text();
        void set_allocated_status_text(::std::string* status_text);

        // required .content.proto.CacheResponse.ResponseType response_type = 3;
        bool has_response_type() const;
        void clear_response_type();
        static const int kResponseTypeFieldNumber = 3;
        ::content::proto::CacheResponse_ResponseType response_type() const;
        void set_response_type(::content::proto::CacheResponse_ResponseType value);

        // repeated .content.proto.CacheHeaderMap headers = 4;
        int headers_size() const;
        void clear_headers();
        static const int kHeadersFieldNumber = 4;
        const ::content::proto::CacheHeaderMap& headers(int index) const;
        ::content::proto::CacheHeaderMap* mutable_headers(int index);
        ::content::proto::CacheHeaderMap* add_headers();
        ::google::protobuf::RepeatedPtrField<::content::proto::CacheHeaderMap>*
        mutable_headers();
        const ::google::protobuf::RepeatedPtrField<::content::proto::CacheHeaderMap>&
        headers() const;

        // optional string url = 5 [deprecated = true];
        PROTOBUF_DEPRECATED_ATTR bool has_url() const;
        PROTOBUF_DEPRECATED_ATTR void clear_url();
        PROTOBUF_DEPRECATED_ATTR static const int kUrlFieldNumber = 5;
        PROTOBUF_DEPRECATED_ATTR const ::std::string& url() const;
        PROTOBUF_DEPRECATED_ATTR void set_url(const ::std::string& value);
        PROTOBUF_DEPRECATED_ATTR void set_url(const char* value);
        PROTOBUF_DEPRECATED_ATTR void set_url(const char* value, size_t size);
        PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_url();
        PROTOBUF_DEPRECATED_ATTR ::std::string* release_url();
        PROTOBUF_DEPRECATED_ATTR void set_allocated_url(::std::string* url);

        // optional int64 response_time = 6;
        bool has_response_time() const;
        void clear_response_time();
        static const int kResponseTimeFieldNumber = 6;
        ::google::protobuf::int64 response_time() const;
        void set_response_time(::google::protobuf::int64 value);

        // repeated string cors_exposed_header_names = 7;
        int cors_exposed_header_names_size() const;
        void clear_cors_exposed_header_names();
        static const int kCorsExposedHeaderNamesFieldNumber = 7;
        const ::std::string& cors_exposed_header_names(int index) const;
        ::std::string* mutable_cors_exposed_header_names(int index);
        void set_cors_exposed_header_names(int index, const ::std::string& value);
        void set_cors_exposed_header_names(int index, const char* value);
        void set_cors_exposed_header_names(int index, const char* value, size_t size);
        ::std::string* add_cors_exposed_header_names();
        void add_cors_exposed_header_names(const ::std::string& value);
        void add_cors_exposed_header_names(const char* value);
        void add_cors_exposed_header_names(const char* value, size_t size);
        const ::google::protobuf::RepeatedPtrField<::std::string>& cors_exposed_header_names() const;
        ::google::protobuf::RepeatedPtrField<::std::string>* mutable_cors_exposed_header_names();

        // repeated string url_list = 8;
        int url_list_size() const;
        void clear_url_list();
        static const int kUrlListFieldNumber = 8;
        const ::std::string& url_list(int index) const;
        ::std::string* mutable_url_list(int index);
        void set_url_list(int index, const ::std::string& value);
        void set_url_list(int index, const char* value);
        void set_url_list(int index, const char* value, size_t size);
        ::std::string* add_url_list();
        void add_url_list(const ::std::string& value);
        void add_url_list(const char* value);
        void add_url_list(const char* value, size_t size);
        const ::google::protobuf::RepeatedPtrField<::std::string>& url_list() const;
        ::google::protobuf::RepeatedPtrField<::std::string>* mutable_url_list();

        // @@protoc_insertion_point(class_scope:content.proto.CacheResponse)
    private:
        inline void set_has_status_code();
        inline void clear_has_status_code();
        inline void set_has_status_text();
        inline void clear_has_status_text();
        inline void set_has_response_type();
        inline void clear_has_response_type();
        inline void set_has_url();
        inline void clear_has_url();
        inline void set_has_response_time();
        inline void clear_has_response_time();

        // helper for ByteSize()
        int RequiredFieldsByteSizeFallback() const;

        ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
        ::google::protobuf::Arena* _arena_ptr_;

        ::google::protobuf::uint32 _has_bits_[1];
        mutable int _cached_size_;
        ::google::protobuf::internal::ArenaStringPtr status_text_;
        ::google::protobuf::int32 status_code_;
        int response_type_;
        ::google::protobuf::RepeatedPtrField<::content::proto::CacheHeaderMap> headers_;
        ::google::protobuf::internal::ArenaStringPtr url_;
        ::google::protobuf::int64 response_time_;
        ::google::protobuf::RepeatedPtrField<::std::string> cors_exposed_header_names_;
        ::google::protobuf::RepeatedPtrField<::std::string> url_list_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        friend void protobuf_AddDesc_cache_5fstorage_2eproto_impl();
#else
        friend void protobuf_AddDesc_cache_5fstorage_2eproto();
#endif
        friend void protobuf_AssignDesc_cache_5fstorage_2eproto();
        friend void protobuf_ShutdownFile_cache_5fstorage_2eproto();

        void InitAsDefaultInstance();
        static CacheResponse* default_instance_;
    };
    // -------------------------------------------------------------------

    class CacheMetadata : public ::google::protobuf::MessageLite {
    public:
        CacheMetadata();
        virtual ~CacheMetadata();

        CacheMetadata(const CacheMetadata& from);

        inline CacheMetadata& operator=(const CacheMetadata& from)
        {
            CopyFrom(from);
            return *this;
        }

        inline const ::std::string& unknown_fields() const
        {
            return _unknown_fields_.GetNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        inline ::std::string* mutable_unknown_fields()
        {
            return _unknown_fields_.MutableNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        static const CacheMetadata& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        // Returns the internal default instance pointer. This function can
        // return NULL thus should not be used by the user. This is intended
        // for Protobuf internal code. Please use default_instance() declared
        // above instead.
        static inline const CacheMetadata* internal_default_instance()
        {
            return default_instance_;
        }
#endif

        GOOGLE_ATTRIBUTE_NOINLINE void Swap(CacheMetadata* other);

        // implements Message ----------------------------------------------

        inline CacheMetadata* New() const { return New(NULL); }

        CacheMetadata* New(::google::protobuf::Arena* arena) const;
        void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
        void CopyFrom(const CacheMetadata& from);
        void MergeFrom(const CacheMetadata& from);
        void Clear();
        bool IsInitialized() const;

        int ByteSize() const;
        bool MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input);
        void SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const;
        void DiscardUnknownFields();
        int GetCachedSize() const { return _cached_size_; }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const;
        void InternalSwap(CacheMetadata* other);

    private:
        inline ::google::protobuf::Arena* GetArenaNoVirtual() const
        {
            return _arena_ptr_;
        }
        inline ::google::protobuf::Arena* MaybeArenaPtr() const
        {
            return _arena_ptr_;
        }

    public:
        ::std::string GetTypeName() const;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        // required .content.proto.CacheRequest request = 1;
        bool has_request() const;
        void clear_request();
        static const int kRequestFieldNumber = 1;
        const ::content::proto::CacheRequest& request() const;
        ::content::proto::CacheRequest* mutable_request();
        ::content::proto::CacheRequest* release_request();
        void set_allocated_request(::content::proto::CacheRequest* request);

        // required .content.proto.CacheResponse response = 2;
        bool has_response() const;
        void clear_response();
        static const int kResponseFieldNumber = 2;
        const ::content::proto::CacheResponse& response() const;
        ::content::proto::CacheResponse* mutable_response();
        ::content::proto::CacheResponse* release_response();
        void set_allocated_response(::content::proto::CacheResponse* response);

        // optional int64 entry_time = 3;
        bool has_entry_time() const;
        void clear_entry_time();
        static const int kEntryTimeFieldNumber = 3;
        ::google::protobuf::int64 entry_time() const;
        void set_entry_time(::google::protobuf::int64 value);

        // @@protoc_insertion_point(class_scope:content.proto.CacheMetadata)
    private:
        inline void set_has_request();
        inline void clear_has_request();
        inline void set_has_response();
        inline void clear_has_response();
        inline void set_has_entry_time();
        inline void clear_has_entry_time();

        // helper for ByteSize()
        int RequiredFieldsByteSizeFallback() const;

        ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
        ::google::protobuf::Arena* _arena_ptr_;

        ::google::protobuf::uint32 _has_bits_[1];
        mutable int _cached_size_;
        ::content::proto::CacheRequest* request_;
        ::content::proto::CacheResponse* response_;
        ::google::protobuf::int64 entry_time_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        friend void protobuf_AddDesc_cache_5fstorage_2eproto_impl();
#else
        friend void protobuf_AddDesc_cache_5fstorage_2eproto();
#endif
        friend void protobuf_AssignDesc_cache_5fstorage_2eproto();
        friend void protobuf_ShutdownFile_cache_5fstorage_2eproto();

        void InitAsDefaultInstance();
        static CacheMetadata* default_instance_;
    };
    // ===================================================================

    // ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
    // CacheStorageIndex_Cache

    // required string name = 1;
    inline bool CacheStorageIndex_Cache::has_name() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    inline void CacheStorageIndex_Cache::set_has_name()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    inline void CacheStorageIndex_Cache::clear_has_name()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    inline void CacheStorageIndex_Cache::clear_name()
    {
        name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_name();
    }
    inline const ::std::string& CacheStorageIndex_Cache::name() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.Cache.name)
        return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheStorageIndex_Cache::set_name(const ::std::string& value)
    {
        set_has_name();
        name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.Cache.name)
    }
    inline void CacheStorageIndex_Cache::set_name(const char* value)
    {
        set_has_name();
        name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheStorageIndex.Cache.name)
    }
    inline void CacheStorageIndex_Cache::set_name(const char* value, size_t size)
    {
        set_has_name();
        name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheStorageIndex.Cache.name)
    }
    inline ::std::string* CacheStorageIndex_Cache::mutable_name()
    {
        set_has_name();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheStorageIndex.Cache.name)
        return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline ::std::string* CacheStorageIndex_Cache::release_name()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheStorageIndex.Cache.name)
        clear_has_name();
        return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheStorageIndex_Cache::set_allocated_name(::std::string* name)
    {
        if (name != NULL) {
            set_has_name();
        } else {
            clear_has_name();
        }
        name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheStorageIndex.Cache.name)
    }

    // optional string cache_dir = 2;
    inline bool CacheStorageIndex_Cache::has_cache_dir() const
    {
        return (_has_bits_[0] & 0x00000002u) != 0;
    }
    inline void CacheStorageIndex_Cache::set_has_cache_dir()
    {
        _has_bits_[0] |= 0x00000002u;
    }
    inline void CacheStorageIndex_Cache::clear_has_cache_dir()
    {
        _has_bits_[0] &= ~0x00000002u;
    }
    inline void CacheStorageIndex_Cache::clear_cache_dir()
    {
        cache_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_cache_dir();
    }
    inline const ::std::string& CacheStorageIndex_Cache::cache_dir() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.Cache.cache_dir)
        return cache_dir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheStorageIndex_Cache::set_cache_dir(const ::std::string& value)
    {
        set_has_cache_dir();
        cache_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.Cache.cache_dir)
    }
    inline void CacheStorageIndex_Cache::set_cache_dir(const char* value)
    {
        set_has_cache_dir();
        cache_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheStorageIndex.Cache.cache_dir)
    }
    inline void CacheStorageIndex_Cache::set_cache_dir(const char* value, size_t size)
    {
        set_has_cache_dir();
        cache_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheStorageIndex.Cache.cache_dir)
    }
    inline ::std::string* CacheStorageIndex_Cache::mutable_cache_dir()
    {
        set_has_cache_dir();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheStorageIndex.Cache.cache_dir)
        return cache_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline ::std::string* CacheStorageIndex_Cache::release_cache_dir()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheStorageIndex.Cache.cache_dir)
        clear_has_cache_dir();
        return cache_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheStorageIndex_Cache::set_allocated_cache_dir(::std::string* cache_dir)
    {
        if (cache_dir != NULL) {
            set_has_cache_dir();
        } else {
            clear_has_cache_dir();
        }
        cache_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cache_dir);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheStorageIndex.Cache.cache_dir)
    }

    // optional int64 size = 3;
    inline bool CacheStorageIndex_Cache::has_size() const
    {
        return (_has_bits_[0] & 0x00000004u) != 0;
    }
    inline void CacheStorageIndex_Cache::set_has_size()
    {
        _has_bits_[0] |= 0x00000004u;
    }
    inline void CacheStorageIndex_Cache::clear_has_size()
    {
        _has_bits_[0] &= ~0x00000004u;
    }
    inline void CacheStorageIndex_Cache::clear_size()
    {
        size_ = GOOGLE_LONGLONG(0);
        clear_has_size();
    }
    inline ::google::protobuf::int64 CacheStorageIndex_Cache::size() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.Cache.size)
        return size_;
    }
    inline void CacheStorageIndex_Cache::set_size(::google::protobuf::int64 value)
    {
        set_has_size();
        size_ = value;
        // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.Cache.size)
    }

    // -------------------------------------------------------------------

    // CacheStorageIndex

    // repeated .content.proto.CacheStorageIndex.Cache cache = 1;
    inline int CacheStorageIndex::cache_size() const
    {
        return cache_.size();
    }
    inline void CacheStorageIndex::clear_cache()
    {
        cache_.Clear();
    }
    inline const ::content::proto::CacheStorageIndex_Cache& CacheStorageIndex::cache(int index) const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.cache)
        return cache_.Get(index);
    }
    inline ::content::proto::CacheStorageIndex_Cache* CacheStorageIndex::mutable_cache(int index)
    {
        // @@protoc_insertion_point(field_mutable:content.proto.CacheStorageIndex.cache)
        return cache_.Mutable(index);
    }
    inline ::content::proto::CacheStorageIndex_Cache* CacheStorageIndex::add_cache()
    {
        // @@protoc_insertion_point(field_add:content.proto.CacheStorageIndex.cache)
        return cache_.Add();
    }
    inline ::google::protobuf::RepeatedPtrField<::content::proto::CacheStorageIndex_Cache>*
    CacheStorageIndex::mutable_cache()
    {
        // @@protoc_insertion_point(field_mutable_list:content.proto.CacheStorageIndex.cache)
        return &cache_;
    }
    inline const ::google::protobuf::RepeatedPtrField<::content::proto::CacheStorageIndex_Cache>&
    CacheStorageIndex::cache() const
    {
        // @@protoc_insertion_point(field_list:content.proto.CacheStorageIndex.cache)
        return cache_;
    }

    // optional string origin = 2;
    inline bool CacheStorageIndex::has_origin() const
    {
        return (_has_bits_[0] & 0x00000002u) != 0;
    }
    inline void CacheStorageIndex::set_has_origin()
    {
        _has_bits_[0] |= 0x00000002u;
    }
    inline void CacheStorageIndex::clear_has_origin()
    {
        _has_bits_[0] &= ~0x00000002u;
    }
    inline void CacheStorageIndex::clear_origin()
    {
        origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_origin();
    }
    inline const ::std::string& CacheStorageIndex::origin() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheStorageIndex.origin)
        return origin_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheStorageIndex::set_origin(const ::std::string& value)
    {
        set_has_origin();
        origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheStorageIndex.origin)
    }
    inline void CacheStorageIndex::set_origin(const char* value)
    {
        set_has_origin();
        origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheStorageIndex.origin)
    }
    inline void CacheStorageIndex::set_origin(const char* value, size_t size)
    {
        set_has_origin();
        origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheStorageIndex.origin)
    }
    inline ::std::string* CacheStorageIndex::mutable_origin()
    {
        set_has_origin();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheStorageIndex.origin)
        return origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline ::std::string* CacheStorageIndex::release_origin()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheStorageIndex.origin)
        clear_has_origin();
        return origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheStorageIndex::set_allocated_origin(::std::string* origin)
    {
        if (origin != NULL) {
            set_has_origin();
        } else {
            clear_has_origin();
        }
        origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheStorageIndex.origin)
    }

    // -------------------------------------------------------------------

    // CacheHeaderMap

    // required string name = 1;
    inline bool CacheHeaderMap::has_name() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    inline void CacheHeaderMap::set_has_name()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    inline void CacheHeaderMap::clear_has_name()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    inline void CacheHeaderMap::clear_name()
    {
        name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_name();
    }
    inline const ::std::string& CacheHeaderMap::name() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheHeaderMap.name)
        return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheHeaderMap::set_name(const ::std::string& value)
    {
        set_has_name();
        name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheHeaderMap.name)
    }
    inline void CacheHeaderMap::set_name(const char* value)
    {
        set_has_name();
        name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheHeaderMap.name)
    }
    inline void CacheHeaderMap::set_name(const char* value, size_t size)
    {
        set_has_name();
        name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheHeaderMap.name)
    }
    inline ::std::string* CacheHeaderMap::mutable_name()
    {
        set_has_name();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheHeaderMap.name)
        return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline ::std::string* CacheHeaderMap::release_name()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheHeaderMap.name)
        clear_has_name();
        return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheHeaderMap::set_allocated_name(::std::string* name)
    {
        if (name != NULL) {
            set_has_name();
        } else {
            clear_has_name();
        }
        name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheHeaderMap.name)
    }

    // required string value = 2;
    inline bool CacheHeaderMap::has_value() const
    {
        return (_has_bits_[0] & 0x00000002u) != 0;
    }
    inline void CacheHeaderMap::set_has_value()
    {
        _has_bits_[0] |= 0x00000002u;
    }
    inline void CacheHeaderMap::clear_has_value()
    {
        _has_bits_[0] &= ~0x00000002u;
    }
    inline void CacheHeaderMap::clear_value()
    {
        value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_value();
    }
    inline const ::std::string& CacheHeaderMap::value() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheHeaderMap.value)
        return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheHeaderMap::set_value(const ::std::string& value)
    {
        set_has_value();
        value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheHeaderMap.value)
    }
    inline void CacheHeaderMap::set_value(const char* value)
    {
        set_has_value();
        value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheHeaderMap.value)
    }
    inline void CacheHeaderMap::set_value(const char* value, size_t size)
    {
        set_has_value();
        value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheHeaderMap.value)
    }
    inline ::std::string* CacheHeaderMap::mutable_value()
    {
        set_has_value();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheHeaderMap.value)
        return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline ::std::string* CacheHeaderMap::release_value()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheHeaderMap.value)
        clear_has_value();
        return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheHeaderMap::set_allocated_value(::std::string* value)
    {
        if (value != NULL) {
            set_has_value();
        } else {
            clear_has_value();
        }
        value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheHeaderMap.value)
    }

    // -------------------------------------------------------------------

    // CacheRequest

    // required string method = 1;
    inline bool CacheRequest::has_method() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    inline void CacheRequest::set_has_method()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    inline void CacheRequest::clear_has_method()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    inline void CacheRequest::clear_method()
    {
        method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_method();
    }
    inline const ::std::string& CacheRequest::method() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheRequest.method)
        return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheRequest::set_method(const ::std::string& value)
    {
        set_has_method();
        method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheRequest.method)
    }
    inline void CacheRequest::set_method(const char* value)
    {
        set_has_method();
        method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheRequest.method)
    }
    inline void CacheRequest::set_method(const char* value, size_t size)
    {
        set_has_method();
        method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheRequest.method)
    }
    inline ::std::string* CacheRequest::mutable_method()
    {
        set_has_method();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheRequest.method)
        return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline ::std::string* CacheRequest::release_method()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheRequest.method)
        clear_has_method();
        return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheRequest::set_allocated_method(::std::string* method)
    {
        if (method != NULL) {
            set_has_method();
        } else {
            clear_has_method();
        }
        method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheRequest.method)
    }

    // repeated .content.proto.CacheHeaderMap headers = 2;
    inline int CacheRequest::headers_size() const
    {
        return headers_.size();
    }
    inline void CacheRequest::clear_headers()
    {
        headers_.Clear();
    }
    inline const ::content::proto::CacheHeaderMap& CacheRequest::headers(int index) const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheRequest.headers)
        return headers_.Get(index);
    }
    inline ::content::proto::CacheHeaderMap* CacheRequest::mutable_headers(int index)
    {
        // @@protoc_insertion_point(field_mutable:content.proto.CacheRequest.headers)
        return headers_.Mutable(index);
    }
    inline ::content::proto::CacheHeaderMap* CacheRequest::add_headers()
    {
        // @@protoc_insertion_point(field_add:content.proto.CacheRequest.headers)
        return headers_.Add();
    }
    inline ::google::protobuf::RepeatedPtrField<::content::proto::CacheHeaderMap>*
    CacheRequest::mutable_headers()
    {
        // @@protoc_insertion_point(field_mutable_list:content.proto.CacheRequest.headers)
        return &headers_;
    }
    inline const ::google::protobuf::RepeatedPtrField<::content::proto::CacheHeaderMap>&
    CacheRequest::headers() const
    {
        // @@protoc_insertion_point(field_list:content.proto.CacheRequest.headers)
        return headers_;
    }

    // -------------------------------------------------------------------

    // CacheResponse

    // required int32 status_code = 1;
    inline bool CacheResponse::has_status_code() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    inline void CacheResponse::set_has_status_code()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    inline void CacheResponse::clear_has_status_code()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    inline void CacheResponse::clear_status_code()
    {
        status_code_ = 0;
        clear_has_status_code();
    }
    inline ::google::protobuf::int32 CacheResponse::status_code() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.status_code)
        return status_code_;
    }
    inline void CacheResponse::set_status_code(::google::protobuf::int32 value)
    {
        set_has_status_code();
        status_code_ = value;
        // @@protoc_insertion_point(field_set:content.proto.CacheResponse.status_code)
    }

    // required string status_text = 2;
    inline bool CacheResponse::has_status_text() const
    {
        return (_has_bits_[0] & 0x00000002u) != 0;
    }
    inline void CacheResponse::set_has_status_text()
    {
        _has_bits_[0] |= 0x00000002u;
    }
    inline void CacheResponse::clear_has_status_text()
    {
        _has_bits_[0] &= ~0x00000002u;
    }
    inline void CacheResponse::clear_status_text()
    {
        status_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_status_text();
    }
    inline const ::std::string& CacheResponse::status_text() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.status_text)
        return status_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheResponse::set_status_text(const ::std::string& value)
    {
        set_has_status_text();
        status_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheResponse.status_text)
    }
    inline void CacheResponse::set_status_text(const char* value)
    {
        set_has_status_text();
        status_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheResponse.status_text)
    }
    inline void CacheResponse::set_status_text(const char* value, size_t size)
    {
        set_has_status_text();
        status_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheResponse.status_text)
    }
    inline ::std::string* CacheResponse::mutable_status_text()
    {
        set_has_status_text();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.status_text)
        return status_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline ::std::string* CacheResponse::release_status_text()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheResponse.status_text)
        clear_has_status_text();
        return status_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheResponse::set_allocated_status_text(::std::string* status_text)
    {
        if (status_text != NULL) {
            set_has_status_text();
        } else {
            clear_has_status_text();
        }
        status_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status_text);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheResponse.status_text)
    }

    // required .content.proto.CacheResponse.ResponseType response_type = 3;
    inline bool CacheResponse::has_response_type() const
    {
        return (_has_bits_[0] & 0x00000004u) != 0;
    }
    inline void CacheResponse::set_has_response_type()
    {
        _has_bits_[0] |= 0x00000004u;
    }
    inline void CacheResponse::clear_has_response_type()
    {
        _has_bits_[0] &= ~0x00000004u;
    }
    inline void CacheResponse::clear_response_type()
    {
        response_type_ = 0;
        clear_has_response_type();
    }
    inline ::content::proto::CacheResponse_ResponseType CacheResponse::response_type() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.response_type)
        return static_cast<::content::proto::CacheResponse_ResponseType>(response_type_);
    }
    inline void CacheResponse::set_response_type(::content::proto::CacheResponse_ResponseType value)
    {
        assert(::content::proto::CacheResponse_ResponseType_IsValid(value));
        set_has_response_type();
        response_type_ = value;
        // @@protoc_insertion_point(field_set:content.proto.CacheResponse.response_type)
    }

    // repeated .content.proto.CacheHeaderMap headers = 4;
    inline int CacheResponse::headers_size() const
    {
        return headers_.size();
    }
    inline void CacheResponse::clear_headers()
    {
        headers_.Clear();
    }
    inline const ::content::proto::CacheHeaderMap& CacheResponse::headers(int index) const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.headers)
        return headers_.Get(index);
    }
    inline ::content::proto::CacheHeaderMap* CacheResponse::mutable_headers(int index)
    {
        // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.headers)
        return headers_.Mutable(index);
    }
    inline ::content::proto::CacheHeaderMap* CacheResponse::add_headers()
    {
        // @@protoc_insertion_point(field_add:content.proto.CacheResponse.headers)
        return headers_.Add();
    }
    inline ::google::protobuf::RepeatedPtrField<::content::proto::CacheHeaderMap>*
    CacheResponse::mutable_headers()
    {
        // @@protoc_insertion_point(field_mutable_list:content.proto.CacheResponse.headers)
        return &headers_;
    }
    inline const ::google::protobuf::RepeatedPtrField<::content::proto::CacheHeaderMap>&
    CacheResponse::headers() const
    {
        // @@protoc_insertion_point(field_list:content.proto.CacheResponse.headers)
        return headers_;
    }

    // optional string url = 5 [deprecated = true];
    inline bool CacheResponse::has_url() const
    {
        return (_has_bits_[0] & 0x00000010u) != 0;
    }
    inline void CacheResponse::set_has_url()
    {
        _has_bits_[0] |= 0x00000010u;
    }
    inline void CacheResponse::clear_has_url()
    {
        _has_bits_[0] &= ~0x00000010u;
    }
    inline void CacheResponse::clear_url()
    {
        url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_url();
    }
    inline const ::std::string& CacheResponse::url() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.url)
        return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheResponse::set_url(const ::std::string& value)
    {
        set_has_url();
        url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:content.proto.CacheResponse.url)
    }
    inline void CacheResponse::set_url(const char* value)
    {
        set_has_url();
        url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:content.proto.CacheResponse.url)
    }
    inline void CacheResponse::set_url(const char* value, size_t size)
    {
        set_has_url();
        url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheResponse.url)
    }
    inline ::std::string* CacheResponse::mutable_url()
    {
        set_has_url();
        // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.url)
        return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline ::std::string* CacheResponse::release_url()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheResponse.url)
        clear_has_url();
        return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void CacheResponse::set_allocated_url(::std::string* url)
    {
        if (url != NULL) {
            set_has_url();
        } else {
            clear_has_url();
        }
        url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheResponse.url)
    }

    // optional int64 response_time = 6;
    inline bool CacheResponse::has_response_time() const
    {
        return (_has_bits_[0] & 0x00000020u) != 0;
    }
    inline void CacheResponse::set_has_response_time()
    {
        _has_bits_[0] |= 0x00000020u;
    }
    inline void CacheResponse::clear_has_response_time()
    {
        _has_bits_[0] &= ~0x00000020u;
    }
    inline void CacheResponse::clear_response_time()
    {
        response_time_ = GOOGLE_LONGLONG(0);
        clear_has_response_time();
    }
    inline ::google::protobuf::int64 CacheResponse::response_time() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.response_time)
        return response_time_;
    }
    inline void CacheResponse::set_response_time(::google::protobuf::int64 value)
    {
        set_has_response_time();
        response_time_ = value;
        // @@protoc_insertion_point(field_set:content.proto.CacheResponse.response_time)
    }

    // repeated string cors_exposed_header_names = 7;
    inline int CacheResponse::cors_exposed_header_names_size() const
    {
        return cors_exposed_header_names_.size();
    }
    inline void CacheResponse::clear_cors_exposed_header_names()
    {
        cors_exposed_header_names_.Clear();
    }
    inline const ::std::string& CacheResponse::cors_exposed_header_names(int index) const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.cors_exposed_header_names)
        return cors_exposed_header_names_.Get(index);
    }
    inline ::std::string* CacheResponse::mutable_cors_exposed_header_names(int index)
    {
        // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.cors_exposed_header_names)
        return cors_exposed_header_names_.Mutable(index);
    }
    inline void CacheResponse::set_cors_exposed_header_names(int index, const ::std::string& value)
    {
        // @@protoc_insertion_point(field_set:content.proto.CacheResponse.cors_exposed_header_names)
        cors_exposed_header_names_.Mutable(index)->assign(value);
    }
    inline void CacheResponse::set_cors_exposed_header_names(int index, const char* value)
    {
        cors_exposed_header_names_.Mutable(index)->assign(value);
        // @@protoc_insertion_point(field_set_char:content.proto.CacheResponse.cors_exposed_header_names)
    }
    inline void CacheResponse::set_cors_exposed_header_names(int index, const char* value, size_t size)
    {
        cors_exposed_header_names_.Mutable(index)->assign(
            reinterpret_cast<const char*>(value), size);
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheResponse.cors_exposed_header_names)
    }
    inline ::std::string* CacheResponse::add_cors_exposed_header_names()
    {
        // @@protoc_insertion_point(field_add_mutable:content.proto.CacheResponse.cors_exposed_header_names)
        return cors_exposed_header_names_.Add();
    }
    inline void CacheResponse::add_cors_exposed_header_names(const ::std::string& value)
    {
        cors_exposed_header_names_.Add()->assign(value);
        // @@protoc_insertion_point(field_add:content.proto.CacheResponse.cors_exposed_header_names)
    }
    inline void CacheResponse::add_cors_exposed_header_names(const char* value)
    {
        cors_exposed_header_names_.Add()->assign(value);
        // @@protoc_insertion_point(field_add_char:content.proto.CacheResponse.cors_exposed_header_names)
    }
    inline void CacheResponse::add_cors_exposed_header_names(const char* value, size_t size)
    {
        cors_exposed_header_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
        // @@protoc_insertion_point(field_add_pointer:content.proto.CacheResponse.cors_exposed_header_names)
    }
    inline const ::google::protobuf::RepeatedPtrField<::std::string>&
    CacheResponse::cors_exposed_header_names() const
    {
        // @@protoc_insertion_point(field_list:content.proto.CacheResponse.cors_exposed_header_names)
        return cors_exposed_header_names_;
    }
    inline ::google::protobuf::RepeatedPtrField<::std::string>*
    CacheResponse::mutable_cors_exposed_header_names()
    {
        // @@protoc_insertion_point(field_mutable_list:content.proto.CacheResponse.cors_exposed_header_names)
        return &cors_exposed_header_names_;
    }

    // repeated string url_list = 8;
    inline int CacheResponse::url_list_size() const
    {
        return url_list_.size();
    }
    inline void CacheResponse::clear_url_list()
    {
        url_list_.Clear();
    }
    inline const ::std::string& CacheResponse::url_list(int index) const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheResponse.url_list)
        return url_list_.Get(index);
    }
    inline ::std::string* CacheResponse::mutable_url_list(int index)
    {
        // @@protoc_insertion_point(field_mutable:content.proto.CacheResponse.url_list)
        return url_list_.Mutable(index);
    }
    inline void CacheResponse::set_url_list(int index, const ::std::string& value)
    {
        // @@protoc_insertion_point(field_set:content.proto.CacheResponse.url_list)
        url_list_.Mutable(index)->assign(value);
    }
    inline void CacheResponse::set_url_list(int index, const char* value)
    {
        url_list_.Mutable(index)->assign(value);
        // @@protoc_insertion_point(field_set_char:content.proto.CacheResponse.url_list)
    }
    inline void CacheResponse::set_url_list(int index, const char* value, size_t size)
    {
        url_list_.Mutable(index)->assign(
            reinterpret_cast<const char*>(value), size);
        // @@protoc_insertion_point(field_set_pointer:content.proto.CacheResponse.url_list)
    }
    inline ::std::string* CacheResponse::add_url_list()
    {
        // @@protoc_insertion_point(field_add_mutable:content.proto.CacheResponse.url_list)
        return url_list_.Add();
    }
    inline void CacheResponse::add_url_list(const ::std::string& value)
    {
        url_list_.Add()->assign(value);
        // @@protoc_insertion_point(field_add:content.proto.CacheResponse.url_list)
    }
    inline void CacheResponse::add_url_list(const char* value)
    {
        url_list_.Add()->assign(value);
        // @@protoc_insertion_point(field_add_char:content.proto.CacheResponse.url_list)
    }
    inline void CacheResponse::add_url_list(const char* value, size_t size)
    {
        url_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
        // @@protoc_insertion_point(field_add_pointer:content.proto.CacheResponse.url_list)
    }
    inline const ::google::protobuf::RepeatedPtrField<::std::string>&
    CacheResponse::url_list() const
    {
        // @@protoc_insertion_point(field_list:content.proto.CacheResponse.url_list)
        return url_list_;
    }
    inline ::google::protobuf::RepeatedPtrField<::std::string>*
    CacheResponse::mutable_url_list()
    {
        // @@protoc_insertion_point(field_mutable_list:content.proto.CacheResponse.url_list)
        return &url_list_;
    }

    // -------------------------------------------------------------------

    // CacheMetadata

    // required .content.proto.CacheRequest request = 1;
    inline bool CacheMetadata::has_request() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    inline void CacheMetadata::set_has_request()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    inline void CacheMetadata::clear_has_request()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    inline void CacheMetadata::clear_request()
    {
        if (request_ != NULL)
            request_->::content::proto::CacheRequest::Clear();
        clear_has_request();
    }
    inline const ::content::proto::CacheRequest& CacheMetadata::request() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheMetadata.request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        return request_ != NULL ? *request_ : *default_instance().request_;
#else
        return request_ != NULL ? *request_ : *default_instance_->request_;
#endif
    }
    inline ::content::proto::CacheRequest* CacheMetadata::mutable_request()
    {
        set_has_request();
        if (request_ == NULL) {
            request_ = new ::content::proto::CacheRequest;
        }
        // @@protoc_insertion_point(field_mutable:content.proto.CacheMetadata.request)
        return request_;
    }
    inline ::content::proto::CacheRequest* CacheMetadata::release_request()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheMetadata.request)
        clear_has_request();
        ::content::proto::CacheRequest* temp = request_;
        request_ = NULL;
        return temp;
    }
    inline void CacheMetadata::set_allocated_request(::content::proto::CacheRequest* request)
    {
        delete request_;
        request_ = request;
        if (request) {
            set_has_request();
        } else {
            clear_has_request();
        }
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheMetadata.request)
    }

    // required .content.proto.CacheResponse response = 2;
    inline bool CacheMetadata::has_response() const
    {
        return (_has_bits_[0] & 0x00000002u) != 0;
    }
    inline void CacheMetadata::set_has_response()
    {
        _has_bits_[0] |= 0x00000002u;
    }
    inline void CacheMetadata::clear_has_response()
    {
        _has_bits_[0] &= ~0x00000002u;
    }
    inline void CacheMetadata::clear_response()
    {
        if (response_ != NULL)
            response_->::content::proto::CacheResponse::Clear();
        clear_has_response();
    }
    inline const ::content::proto::CacheResponse& CacheMetadata::response() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheMetadata.response)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        return response_ != NULL ? *response_ : *default_instance().response_;
#else
        return response_ != NULL ? *response_ : *default_instance_->response_;
#endif
    }
    inline ::content::proto::CacheResponse* CacheMetadata::mutable_response()
    {
        set_has_response();
        if (response_ == NULL) {
            response_ = new ::content::proto::CacheResponse;
        }
        // @@protoc_insertion_point(field_mutable:content.proto.CacheMetadata.response)
        return response_;
    }
    inline ::content::proto::CacheResponse* CacheMetadata::release_response()
    {
        // @@protoc_insertion_point(field_release:content.proto.CacheMetadata.response)
        clear_has_response();
        ::content::proto::CacheResponse* temp = response_;
        response_ = NULL;
        return temp;
    }
    inline void CacheMetadata::set_allocated_response(::content::proto::CacheResponse* response)
    {
        delete response_;
        response_ = response;
        if (response) {
            set_has_response();
        } else {
            clear_has_response();
        }
        // @@protoc_insertion_point(field_set_allocated:content.proto.CacheMetadata.response)
    }

    // optional int64 entry_time = 3;
    inline bool CacheMetadata::has_entry_time() const
    {
        return (_has_bits_[0] & 0x00000004u) != 0;
    }
    inline void CacheMetadata::set_has_entry_time()
    {
        _has_bits_[0] |= 0x00000004u;
    }
    inline void CacheMetadata::clear_has_entry_time()
    {
        _has_bits_[0] &= ~0x00000004u;
    }
    inline void CacheMetadata::clear_entry_time()
    {
        entry_time_ = GOOGLE_LONGLONG(0);
        clear_has_entry_time();
    }
    inline ::google::protobuf::int64 CacheMetadata::entry_time() const
    {
        // @@protoc_insertion_point(field_get:content.proto.CacheMetadata.entry_time)
        return entry_time_;
    }
    inline void CacheMetadata::set_entry_time(::google::protobuf::int64 value)
    {
        set_has_entry_time();
        entry_time_ = value;
        // @@protoc_insertion_point(field_set:content.proto.CacheMetadata.entry_time)
    }

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS
    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // @@protoc_insertion_point(namespace_scope)

} // namespace proto
} // namespace content

#ifndef SWIG
namespace google {
namespace protobuf {

    template <>
    struct is_proto_enum<::content::proto::CacheResponse_ResponseType> : ::google::protobuf::internal::true_type {
    };

} // namespace protobuf
} // namespace google
#endif // SWIG

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_cache_5fstorage_2eproto__INCLUDED
