// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.cpp.tmpl

// clang-format on
#include "GyroscopeReadingInit.h"

namespace blink {

GyroscopeReadingInit::GyroscopeReadingInit()
{
}

GyroscopeReadingInit::~GyroscopeReadingInit() { }

GyroscopeReadingInit::GyroscopeReadingInit(const GyroscopeReadingInit&) = default;

GyroscopeReadingInit& GyroscopeReadingInit::operator=(const GyroscopeReadingInit&) = default;

bool GyroscopeReadingInit::hasX() const
{
    return m_hasX;
}
double GyroscopeReadingInit::x() const
{
    DCHECK(m_hasX);
    return m_x;
}
void GyroscopeReadingInit::setX(double value)
{
    m_x = value;
    m_hasX = true;
}
bool GyroscopeReadingInit::hasY() const
{
    return m_hasY;
}
double GyroscopeReadingInit::y() const
{
    DCHECK(m_hasY);
    return m_y;
}
void GyroscopeReadingInit::setY(double value)
{
    m_y = value;
    m_hasY = true;
}
bool GyroscopeReadingInit::hasZ() const
{
    return m_hasZ;
}
double GyroscopeReadingInit::z() const
{
    DCHECK(m_hasZ);
    return m_z;
}
void GyroscopeReadingInit::setZ(double value)
{
    m_z = value;
    m_hasZ = true;
}

DEFINE_TRACE(GyroscopeReadingInit)
{
    IDLDictionaryBase::trace(visitor);
}

} // namespace blink
