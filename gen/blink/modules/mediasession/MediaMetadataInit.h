// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef MediaMetadataInit_h
#define MediaMetadataInit_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "modules/ModulesExport.h"
#include "modules/mediasession/MediaImage.h"
#include "platform/heap/Handle.h"
#include "wtf/Vector.h"
#include "wtf/text/WTFString.h"

namespace blink {

class MODULES_EXPORT MediaMetadataInit : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    MediaMetadataInit();
    virtual ~MediaMetadataInit();
    MediaMetadataInit(const MediaMetadataInit&);
    MediaMetadataInit& operator=(const MediaMetadataInit&);

    bool hasAlbum() const;
    String album() const;
    void setAlbum(String);

    bool hasArtist() const;
    String artist() const;
    void setArtist(String);

    bool hasArtwork() const;
    const HeapVector<MediaImage>& artwork() const;
    void setArtwork(const HeapVector<MediaImage>&);

    bool hasTitle() const;
    String title() const;
    void setTitle(String);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    String m_album;
    String m_artist;
    bool m_hasArtwork = false;
    HeapVector<MediaImage> m_artwork;
    String m_title;

    friend class V8MediaMetadataInit;
};

} // namespace blink

#endif // MediaMetadataInit_h
