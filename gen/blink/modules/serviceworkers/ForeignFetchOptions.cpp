// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.cpp.tmpl

// clang-format on
#include "ForeignFetchOptions.h"

namespace blink {

ForeignFetchOptions::ForeignFetchOptions()
{
}

ForeignFetchOptions::~ForeignFetchOptions() { }

ForeignFetchOptions::ForeignFetchOptions(const ForeignFetchOptions&) = default;

ForeignFetchOptions& ForeignFetchOptions::operator=(const ForeignFetchOptions&) = default;

bool ForeignFetchOptions::hasOrigins() const
{
    return m_hasOrigins;
}
const Vector<String>& ForeignFetchOptions::origins() const
{
    DCHECK(m_hasOrigins);
    return m_origins;
}
void ForeignFetchOptions::setOrigins(const Vector<String>& value)
{
    m_origins = value;
    m_hasOrigins = true;
}
bool ForeignFetchOptions::hasScopes() const
{
    return m_hasScopes;
}
const Vector<String>& ForeignFetchOptions::scopes() const
{
    DCHECK(m_hasScopes);
    return m_scopes;
}
void ForeignFetchOptions::setScopes(const Vector<String>& value)
{
    m_scopes = value;
    m_hasScopes = true;
}

DEFINE_TRACE(ForeignFetchOptions)
{
    IDLDictionaryBase::trace(visitor);
}

} // namespace blink
