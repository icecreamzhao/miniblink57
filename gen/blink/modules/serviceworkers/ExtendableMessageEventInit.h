// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef ExtendableMessageEventInit_h
#define ExtendableMessageEventInit_h

#include "bindings/core/v8/ScriptValue.h"
#include "bindings/modules/v8/ClientOrServiceWorkerOrMessagePort.h"
#include "core/dom/MessagePort.h"
#include "modules/ModulesExport.h"
#include "modules/serviceworkers/ExtendableEventInit.h"
#include "modules/serviceworkers/ServiceWorker.h"
#include "modules/serviceworkers/ServiceWorkerClient.h"
#include "platform/heap/Handle.h"
#include "wtf/text/WTFString.h"

namespace blink {

class MessagePort;

class MODULES_EXPORT ExtendableMessageEventInit : public ExtendableEventInit {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    ExtendableMessageEventInit();
    virtual ~ExtendableMessageEventInit();
    ExtendableMessageEventInit(const ExtendableMessageEventInit&);
    ExtendableMessageEventInit& operator=(const ExtendableMessageEventInit&);

    bool hasData() const;
    ScriptValue data() const;
    void setData(ScriptValue);

    bool hasLastEventId() const;
    String lastEventId() const;
    void setLastEventId(String);

    bool hasOrigin() const;
    String origin() const;
    void setOrigin(String);

    bool hasPorts() const;
    const HeapVector<Member<MessagePort>>& ports() const;
    void setPorts(const HeapVector<Member<MessagePort>>&);
    void setPortsToNull();

    bool hasSource() const;
    const ClientOrServiceWorkerOrMessagePort& source() const;
    void setSource(const ClientOrServiceWorkerOrMessagePort&);
    void setSourceToNull();

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    ScriptValue m_data;
    String m_lastEventId;
    String m_origin;
    bool m_hasPorts = false;
    HeapVector<Member<MessagePort>> m_ports;
    ClientOrServiceWorkerOrMessagePort m_source;

    friend class V8ExtendableMessageEventInit;
};

} // namespace blink

#endif // ExtendableMessageEventInit_h
