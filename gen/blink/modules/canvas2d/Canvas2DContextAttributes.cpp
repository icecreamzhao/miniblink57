// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.cpp.tmpl

// clang-format on
#include "Canvas2DContextAttributes.h"

namespace blink {

Canvas2DContextAttributes::Canvas2DContextAttributes()
{
    setAlpha(true);
    setColorSpace(String("legacy-srgb"));
}

Canvas2DContextAttributes::~Canvas2DContextAttributes() { }

Canvas2DContextAttributes::Canvas2DContextAttributes(const Canvas2DContextAttributes&) = default;

Canvas2DContextAttributes& Canvas2DContextAttributes::operator=(const Canvas2DContextAttributes&) = default;

bool Canvas2DContextAttributes::hasAlpha() const
{
    return m_hasAlpha;
}
bool Canvas2DContextAttributes::alpha() const
{
    DCHECK(m_hasAlpha);
    return m_alpha;
}
void Canvas2DContextAttributes::setAlpha(bool value)
{
    m_alpha = value;
    m_hasAlpha = true;
}
bool Canvas2DContextAttributes::hasColorSpace() const
{
    return !m_colorSpace.isNull();
}
String Canvas2DContextAttributes::colorSpace() const
{
    return m_colorSpace;
}
void Canvas2DContextAttributes::setColorSpace(String value)
{
    m_colorSpace = value;
}

DEFINE_TRACE(Canvas2DContextAttributes)
{
    IDLDictionaryBase::trace(visitor);
}

} // namespace blink
