// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef HitRegionOptions_h
#define HitRegionOptions_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"
#include "wtf/text/WTFString.h"

namespace blink {

class Path2D;
class Element;

class MODULES_EXPORT HitRegionOptions : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    HitRegionOptions();
    virtual ~HitRegionOptions();
    HitRegionOptions(const HitRegionOptions&);
    HitRegionOptions& operator=(const HitRegionOptions&);

    bool hasControl() const;
    Element* control() const;
    void setControl(Element*);
    void setControlToNull();

    bool hasFillRule() const;
    String fillRule() const;
    void setFillRule(String);

    bool hasId() const;
    String id() const;
    void setId(String);

    bool hasPath() const;
    Path2D* path() const;
    void setPath(Path2D*);
    void setPathToNull();

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    Member<Element> m_control;
    String m_fillRule;
    String m_id;
    Member<Path2D> m_path;

    friend class V8HitRegionOptions;
};

} // namespace blink

#endif // HitRegionOptions_h
