// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef VRLayer_h
#define VRLayer_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"
#include "wtf/Vector.h"

namespace blink {

class HTMLCanvasElement;

class MODULES_EXPORT VRLayer : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    VRLayer();
    virtual ~VRLayer();
    VRLayer(const VRLayer&);
    VRLayer& operator=(const VRLayer&);

    bool hasLeftBounds() const;
    const Vector<float>& leftBounds() const;
    void setLeftBounds(const Vector<float>&);

    bool hasRightBounds() const;
    const Vector<float>& rightBounds() const;
    void setRightBounds(const Vector<float>&);

    bool hasSource() const;
    HTMLCanvasElement* source() const;
    void setSource(HTMLCanvasElement*);
    void setSourceToNull();

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    bool m_hasLeftBounds = false;
    Vector<float> m_leftBounds;
    bool m_hasRightBounds = false;
    Vector<float> m_rightBounds;
    Member<HTMLCanvasElement> m_source;

    friend class V8VRLayer;
};

} // namespace blink

#endif // VRLayer_h
