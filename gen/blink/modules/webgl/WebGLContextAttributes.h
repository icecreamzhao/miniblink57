// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef WebGLContextAttributes_h
#define WebGLContextAttributes_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"

namespace blink {

class MODULES_EXPORT WebGLContextAttributes : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    WebGLContextAttributes();
    virtual ~WebGLContextAttributes();
    WebGLContextAttributes(const WebGLContextAttributes&);
    WebGLContextAttributes& operator=(const WebGLContextAttributes&);

    bool hasAlpha() const;
    bool alpha() const;
    void setAlpha(bool);

    bool hasAntialias() const;
    bool antialias() const;
    void setAntialias(bool);

    bool hasDepth() const;
    bool depth() const;
    void setDepth(bool);

    bool hasFailIfMajorPerformanceCaveat() const;
    bool failIfMajorPerformanceCaveat() const;
    void setFailIfMajorPerformanceCaveat(bool);

    bool hasPremultipliedAlpha() const;
    bool premultipliedAlpha() const;
    void setPremultipliedAlpha(bool);

    bool hasPreserveDrawingBuffer() const;
    bool preserveDrawingBuffer() const;
    void setPreserveDrawingBuffer(bool);

    bool hasStencil() const;
    bool stencil() const;
    void setStencil(bool);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    bool m_hasAlpha = false;
    bool m_alpha;
    bool m_hasAntialias = false;
    bool m_antialias;
    bool m_hasDepth = false;
    bool m_depth;
    bool m_hasFailIfMajorPerformanceCaveat = false;
    bool m_failIfMajorPerformanceCaveat;
    bool m_hasPremultipliedAlpha = false;
    bool m_premultipliedAlpha;
    bool m_hasPreserveDrawingBuffer = false;
    bool m_preserveDrawingBuffer;
    bool m_hasStencil = false;
    bool m_stencil;

    friend class V8WebGLContextAttributes;
};

} // namespace blink

#endif // WebGLContextAttributes_h
