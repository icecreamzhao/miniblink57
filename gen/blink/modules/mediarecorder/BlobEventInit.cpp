// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.cpp.tmpl

// clang-format on
#include "BlobEventInit.h"

#include "core/fileapi/Blob.h"

namespace blink {

BlobEventInit::BlobEventInit()
{
}

BlobEventInit::~BlobEventInit() { }

BlobEventInit::BlobEventInit(const BlobEventInit&) = default;

BlobEventInit& BlobEventInit::operator=(const BlobEventInit&) = default;

bool BlobEventInit::hasData() const
{
    return m_data;
}
Blob* BlobEventInit::data() const
{
    return m_data;
}
void BlobEventInit::setData(Blob* value)
{
    m_data = value;
}
bool BlobEventInit::hasTimecode() const
{
    return m_hasTimecode;
}
double BlobEventInit::timecode() const
{
    DCHECK(m_hasTimecode);
    return m_timecode;
}
void BlobEventInit::setTimecode(double value)
{
    m_timecode = value;
    m_hasTimecode = true;
}

DEFINE_TRACE(BlobEventInit)
{
    visitor->trace(m_data);
    EventInit::trace(visitor);
}

} // namespace blink
