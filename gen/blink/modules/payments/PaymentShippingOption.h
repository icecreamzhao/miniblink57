// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef PaymentShippingOption_h
#define PaymentShippingOption_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "modules/ModulesExport.h"
#include "modules/payments/PaymentCurrencyAmount.h"
#include "platform/heap/Handle.h"
#include "wtf/text/WTFString.h"

namespace blink {

class MODULES_EXPORT PaymentShippingOption : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    PaymentShippingOption();
    virtual ~PaymentShippingOption();
    PaymentShippingOption(const PaymentShippingOption&);
    PaymentShippingOption& operator=(const PaymentShippingOption&);

    bool hasAmount() const;
    const PaymentCurrencyAmount& amount() const;
    void setAmount(const PaymentCurrencyAmount&);

    bool hasId() const;
    String id() const;
    void setId(String);

    bool hasLabel() const;
    String label() const;
    void setLabel(String);

    bool hasSelected() const;
    bool selected() const;
    void setSelected(bool);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    bool m_hasAmount = false;
    PaymentCurrencyAmount m_amount;
    String m_id;
    String m_label;
    bool m_hasSelected = false;
    bool m_selected;

    friend class V8PaymentShippingOption;
};

} // namespace blink

#endif // PaymentShippingOption_h
