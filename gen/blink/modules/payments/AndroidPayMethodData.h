// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef AndroidPayMethodData_h
#define AndroidPayMethodData_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "modules/ModulesExport.h"
#include "modules/payments/AndroidPayTokenization.h"
#include "platform/heap/Handle.h"
#include "wtf/Vector.h"
#include "wtf/text/WTFString.h"

namespace blink {

class MODULES_EXPORT AndroidPayMethodData : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    AndroidPayMethodData();
    virtual ~AndroidPayMethodData();
    AndroidPayMethodData(const AndroidPayMethodData&);
    AndroidPayMethodData& operator=(const AndroidPayMethodData&);

    bool hasAllowedCardNetworks() const;
    const Vector<String>& allowedCardNetworks() const;
    void setAllowedCardNetworks(const Vector<String>&);

    bool hasEnvironment() const;
    String environment() const;
    void setEnvironment(String);

    bool hasMerchantId() const;
    String merchantId() const;
    void setMerchantId(String);

    bool hasMerchantName() const;
    String merchantName() const;
    void setMerchantName(String);

    bool hasMinGooglePlayServicesVersion() const;
    String minGooglePlayServicesVersion() const;
    void setMinGooglePlayServicesVersion(String);

    bool hasPaymentMethodTokenizationParameters() const;
    const AndroidPayTokenization& paymentMethodTokenizationParameters() const;
    void setPaymentMethodTokenizationParameters(const AndroidPayTokenization&);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    bool m_hasAllowedCardNetworks = false;
    Vector<String> m_allowedCardNetworks;
    String m_environment;
    String m_merchantId;
    String m_merchantName;
    String m_minGooglePlayServicesVersion;
    bool m_hasPaymentMethodTokenizationParameters = false;
    AndroidPayTokenization m_paymentMethodTokenizationParameters;

    friend class V8AndroidPayMethodData;
};

} // namespace blink

#endif // AndroidPayMethodData_h
