// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef BasicCardRequest_h
#define BasicCardRequest_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"
#include "wtf/Vector.h"
#include "wtf/text/WTFString.h"

namespace blink {

class MODULES_EXPORT BasicCardRequest : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    BasicCardRequest();
    virtual ~BasicCardRequest();
    BasicCardRequest(const BasicCardRequest&);
    BasicCardRequest& operator=(const BasicCardRequest&);

    bool hasSupportedNetworks() const;
    const Vector<String>& supportedNetworks() const;
    void setSupportedNetworks(const Vector<String>&);

    bool hasSupportedTypes() const;
    const Vector<String>& supportedTypes() const;
    void setSupportedTypes(const Vector<String>&);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    bool m_hasSupportedNetworks = false;
    Vector<String> m_supportedNetworks;
    bool m_hasSupportedTypes = false;
    Vector<String> m_supportedTypes;

    friend class V8BasicCardRequest;
};

} // namespace blink

#endif // BasicCardRequest_h
