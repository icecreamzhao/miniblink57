// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef PaymentMethodData_h
#define PaymentMethodData_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "bindings/core/v8/ScriptValue.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"
#include "wtf/Vector.h"
#include "wtf/text/WTFString.h"

namespace blink {

class MODULES_EXPORT PaymentMethodData : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    PaymentMethodData();
    virtual ~PaymentMethodData();
    PaymentMethodData(const PaymentMethodData&);
    PaymentMethodData& operator=(const PaymentMethodData&);

    bool hasData() const;
    ScriptValue data() const;
    void setData(ScriptValue);

    bool hasSupportedMethods() const;
    const Vector<String>& supportedMethods() const;
    void setSupportedMethods(const Vector<String>&);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    ScriptValue m_data;
    bool m_hasSupportedMethods = false;
    Vector<String> m_supportedMethods;

    friend class V8PaymentMethodData;
};

} // namespace blink

#endif // PaymentMethodData_h
