// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.cpp.tmpl

// clang-format on
#include "BasicCardRequest.h"

namespace blink {

BasicCardRequest::BasicCardRequest()
{
}

BasicCardRequest::~BasicCardRequest() { }

BasicCardRequest::BasicCardRequest(const BasicCardRequest&) = default;

BasicCardRequest& BasicCardRequest::operator=(const BasicCardRequest&) = default;

bool BasicCardRequest::hasSupportedNetworks() const
{
    return m_hasSupportedNetworks;
}
const Vector<String>& BasicCardRequest::supportedNetworks() const
{
    DCHECK(m_hasSupportedNetworks);
    return m_supportedNetworks;
}
void BasicCardRequest::setSupportedNetworks(const Vector<String>& value)
{
    m_supportedNetworks = value;
    m_hasSupportedNetworks = true;
}
bool BasicCardRequest::hasSupportedTypes() const
{
    return m_hasSupportedTypes;
}
const Vector<String>& BasicCardRequest::supportedTypes() const
{
    DCHECK(m_hasSupportedTypes);
    return m_supportedTypes;
}
void BasicCardRequest::setSupportedTypes(const Vector<String>& value)
{
    m_supportedTypes = value;
    m_hasSupportedTypes = true;
}

DEFINE_TRACE(BasicCardRequest)
{
    IDLDictionaryBase::trace(visitor);
}

} // namespace blink
