// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef PaymentAppManifest_h
#define PaymentAppManifest_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "modules/ModulesExport.h"
#include "modules/payments/PaymentAppOption.h"
#include "platform/heap/Handle.h"
#include "wtf/Vector.h"
#include "wtf/text/WTFString.h"

namespace blink {

class MODULES_EXPORT PaymentAppManifest : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    PaymentAppManifest();
    virtual ~PaymentAppManifest();
    PaymentAppManifest(const PaymentAppManifest&);
    PaymentAppManifest& operator=(const PaymentAppManifest&);

    bool hasIcon() const;
    String icon() const;
    void setIcon(String);
    void setIconToNull();

    bool hasName() const;
    String name() const;
    void setName(String);

    bool hasOptions() const;
    const HeapVector<PaymentAppOption>& options() const;
    void setOptions(const HeapVector<PaymentAppOption>&);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    String m_icon;
    String m_name;
    bool m_hasOptions = false;
    HeapVector<PaymentAppOption> m_options;

    friend class V8PaymentAppManifest;
};

} // namespace blink

#endif // PaymentAppManifest_h
