// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.cpp.tmpl

// clang-format on
#include "NFCPushOptions.h"

namespace blink {

NFCPushOptions::NFCPushOptions()
{
    setIgnoreRead(true);
    setTarget(String("any"));
}

NFCPushOptions::~NFCPushOptions() { }

NFCPushOptions::NFCPushOptions(const NFCPushOptions&) = default;

NFCPushOptions& NFCPushOptions::operator=(const NFCPushOptions&) = default;

bool NFCPushOptions::hasIgnoreRead() const
{
    return m_hasIgnoreRead;
}
bool NFCPushOptions::ignoreRead() const
{
    DCHECK(m_hasIgnoreRead);
    return m_ignoreRead;
}
void NFCPushOptions::setIgnoreRead(bool value)
{
    m_ignoreRead = value;
    m_hasIgnoreRead = true;
}
bool NFCPushOptions::hasTarget() const
{
    return !m_target.isNull();
}
String NFCPushOptions::target() const
{
    return m_target;
}
void NFCPushOptions::setTarget(String value)
{
    m_target = value;
}
bool NFCPushOptions::hasTimeout() const
{
    return m_hasTimeout;
}
double NFCPushOptions::timeout() const
{
    DCHECK(m_hasTimeout);
    return m_timeout;
}
void NFCPushOptions::setTimeout(double value)
{
    m_timeout = value;
    m_hasTimeout = true;
}

DEFINE_TRACE(NFCPushOptions)
{
    IDLDictionaryBase::trace(visitor);
}

} // namespace blink
