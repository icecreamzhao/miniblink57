// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef NotificationAction_h
#define NotificationAction_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"
#include "wtf/text/WTFString.h"

namespace blink {

class MODULES_EXPORT NotificationAction : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    NotificationAction();
    virtual ~NotificationAction();
    NotificationAction(const NotificationAction&);
    NotificationAction& operator=(const NotificationAction&);

    bool hasAction() const;
    String action() const;
    void setAction(String);

    bool hasIcon() const;
    String icon() const;
    void setIcon(String);

    bool hasPlaceholder() const;
    String placeholder() const;
    void setPlaceholder(String);
    void setPlaceholderToNull();

    bool hasTitle() const;
    String title() const;
    void setTitle(String);

    bool hasType() const;
    String type() const;
    void setType(String);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    String m_action;
    String m_icon;
    String m_placeholder;
    String m_title;
    String m_type;

    friend class V8NotificationAction;
};

} // namespace blink

#endif // NotificationAction_h
