// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.cpp.tmpl

// clang-format on
#include "TextDecoderOptions.h"

namespace blink {

TextDecoderOptions::TextDecoderOptions()
{
    setFatal(false);
    setIgnoreBOM(false);
}

TextDecoderOptions::~TextDecoderOptions() { }

TextDecoderOptions::TextDecoderOptions(const TextDecoderOptions&) = default;

TextDecoderOptions& TextDecoderOptions::operator=(const TextDecoderOptions&) = default;

bool TextDecoderOptions::hasFatal() const
{
    return m_hasFatal;
}
bool TextDecoderOptions::fatal() const
{
    DCHECK(m_hasFatal);
    return m_fatal;
}
void TextDecoderOptions::setFatal(bool value)
{
    m_fatal = value;
    m_hasFatal = true;
}
bool TextDecoderOptions::hasIgnoreBOM() const
{
    return m_hasIgnoreBOM;
}
bool TextDecoderOptions::ignoreBOM() const
{
    DCHECK(m_hasIgnoreBOM);
    return m_ignoreBOM;
}
void TextDecoderOptions::setIgnoreBOM(bool value)
{
    m_ignoreBOM = value;
    m_hasIgnoreBOM = true;
}

DEFINE_TRACE(TextDecoderOptions)
{
    IDLDictionaryBase::trace(visitor);
}

} // namespace blink
