// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.cpp.tmpl

// clang-format on
#include "AudioNodeOptions.h"

namespace blink {

AudioNodeOptions::AudioNodeOptions()
{
}

AudioNodeOptions::~AudioNodeOptions() { }

AudioNodeOptions::AudioNodeOptions(const AudioNodeOptions&) = default;

AudioNodeOptions& AudioNodeOptions::operator=(const AudioNodeOptions&) = default;

bool AudioNodeOptions::hasChannelCount() const
{
    return m_hasChannelCount;
}
unsigned AudioNodeOptions::channelCount() const
{
    DCHECK(m_hasChannelCount);
    return m_channelCount;
}
void AudioNodeOptions::setChannelCount(unsigned value)
{
    m_channelCount = value;
    m_hasChannelCount = true;
}
bool AudioNodeOptions::hasChannelCountMode() const
{
    return !m_channelCountMode.isNull();
}
String AudioNodeOptions::channelCountMode() const
{
    return m_channelCountMode;
}
void AudioNodeOptions::setChannelCountMode(String value)
{
    m_channelCountMode = value;
}
bool AudioNodeOptions::hasChannelInterpretation() const
{
    return !m_channelInterpretation.isNull();
}
String AudioNodeOptions::channelInterpretation() const
{
    return m_channelInterpretation;
}
void AudioNodeOptions::setChannelInterpretation(String value)
{
    m_channelInterpretation = value;
}

DEFINE_TRACE(AudioNodeOptions)
{
    IDLDictionaryBase::trace(visitor);
}

} // namespace blink
