// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef AudioNodeOptions_h
#define AudioNodeOptions_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"
#include "wtf/text/WTFString.h"

namespace blink {

class MODULES_EXPORT AudioNodeOptions : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    AudioNodeOptions();
    virtual ~AudioNodeOptions();
    AudioNodeOptions(const AudioNodeOptions&);
    AudioNodeOptions& operator=(const AudioNodeOptions&);

    bool hasChannelCount() const;
    unsigned channelCount() const;
    void setChannelCount(unsigned);

    bool hasChannelCountMode() const;
    String channelCountMode() const;
    void setChannelCountMode(String);

    bool hasChannelInterpretation() const;
    String channelInterpretation() const;
    void setChannelInterpretation(String);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    bool m_hasChannelCount = false;
    unsigned m_channelCount;
    String m_channelCountMode;
    String m_channelInterpretation;

    friend class V8AudioNodeOptions;
};

} // namespace blink

#endif // AudioNodeOptions_h
