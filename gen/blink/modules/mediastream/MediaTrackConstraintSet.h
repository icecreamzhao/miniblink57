// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef MediaTrackConstraintSet_h
#define MediaTrackConstraintSet_h

#include "bindings/core/v8/Dictionary.h"
#include "bindings/core/v8/IDLDictionaryBase.h"
#include "bindings/modules/v8/BooleanOrConstrainBooleanParameters.h"
#include "bindings/modules/v8/DoubleOrConstrainDoubleRange.h"
#include "bindings/modules/v8/LongOrConstrainLongRange.h"
#include "bindings/modules/v8/StringOrStringSequenceOrConstrainDOMStringParameters.h"
#include "modules/ModulesExport.h"
#include "modules/mediastream/ConstrainBooleanParameters.h"
#include "modules/mediastream/ConstrainDOMStringParameters.h"
#include "modules/mediastream/ConstrainDoubleRange.h"
#include "modules/mediastream/ConstrainLongRange.h"
#include "platform/heap/Handle.h"
#include "wtf/Vector.h"
#include "wtf/text/WTFString.h"

namespace blink {

class MODULES_EXPORT MediaTrackConstraintSet : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    MediaTrackConstraintSet();
    virtual ~MediaTrackConstraintSet();
    MediaTrackConstraintSet(const MediaTrackConstraintSet&);
    MediaTrackConstraintSet& operator=(const MediaTrackConstraintSet&);

    bool hasAspectRatio() const;
    const DoubleOrConstrainDoubleRange& aspectRatio() const;
    void setAspectRatio(const DoubleOrConstrainDoubleRange&);

    bool hasChannelCount() const;
    const LongOrConstrainLongRange& channelCount() const;
    void setChannelCount(const LongOrConstrainLongRange&);

    bool hasDeviceId() const;
    const StringOrStringSequenceOrConstrainDOMStringParameters& deviceId() const;
    void setDeviceId(const StringOrStringSequenceOrConstrainDOMStringParameters&);

    bool hasEchoCancellation() const;
    const BooleanOrConstrainBooleanParameters& echoCancellation() const;
    void setEchoCancellation(const BooleanOrConstrainBooleanParameters&);

    bool hasFacingMode() const;
    const StringOrStringSequenceOrConstrainDOMStringParameters& facingMode() const;
    void setFacingMode(const StringOrStringSequenceOrConstrainDOMStringParameters&);

    bool hasFrameRate() const;
    const DoubleOrConstrainDoubleRange& frameRate() const;
    void setFrameRate(const DoubleOrConstrainDoubleRange&);

    bool hasGroupId() const;
    const StringOrStringSequenceOrConstrainDOMStringParameters& groupId() const;
    void setGroupId(const StringOrStringSequenceOrConstrainDOMStringParameters&);

    bool hasHeight() const;
    const LongOrConstrainLongRange& height() const;
    void setHeight(const LongOrConstrainLongRange&);

    bool hasLatency() const;
    const DoubleOrConstrainDoubleRange& latency() const;
    void setLatency(const DoubleOrConstrainDoubleRange&);

    bool hasMandatory() const;
    Dictionary mandatory() const;
    void setMandatory(Dictionary);

    bool hasOptional() const;
    const Vector<Dictionary>& optional() const;
    void setOptional(const Vector<Dictionary>&);

    bool hasSampleRate() const;
    const LongOrConstrainLongRange& sampleRate() const;
    void setSampleRate(const LongOrConstrainLongRange&);

    bool hasSampleSize() const;
    const LongOrConstrainLongRange& sampleSize() const;
    void setSampleSize(const LongOrConstrainLongRange&);

    bool hasVolume() const;
    const DoubleOrConstrainDoubleRange& volume() const;
    void setVolume(const DoubleOrConstrainDoubleRange&);

    bool hasWidth() const;
    const LongOrConstrainLongRange& width() const;
    void setWidth(const LongOrConstrainLongRange&);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    DoubleOrConstrainDoubleRange m_aspectRatio;
    LongOrConstrainLongRange m_channelCount;
    StringOrStringSequenceOrConstrainDOMStringParameters m_deviceId;
    BooleanOrConstrainBooleanParameters m_echoCancellation;
    StringOrStringSequenceOrConstrainDOMStringParameters m_facingMode;
    DoubleOrConstrainDoubleRange m_frameRate;
    StringOrStringSequenceOrConstrainDOMStringParameters m_groupId;
    LongOrConstrainLongRange m_height;
    DoubleOrConstrainDoubleRange m_latency;
    Dictionary m_mandatory;
    bool m_hasOptional = false;
    Vector<Dictionary> m_optional;
    LongOrConstrainLongRange m_sampleRate;
    LongOrConstrainLongRange m_sampleSize;
    DoubleOrConstrainDoubleRange m_volume;
    LongOrConstrainLongRange m_width;

    friend class V8MediaTrackConstraintSet;
};

} // namespace blink

#endif // MediaTrackConstraintSet_h
