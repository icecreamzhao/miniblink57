// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.cpp.tmpl

// clang-format on
#include "InternalDictionaryDerived.h"

namespace blink {

InternalDictionaryDerived::InternalDictionaryDerived()
{
    setDerivedStringMemberWithDefault(String("derivedDefaultStringValue"));
}

InternalDictionaryDerived::~InternalDictionaryDerived() { }

InternalDictionaryDerived::InternalDictionaryDerived(const InternalDictionaryDerived&) = default;

InternalDictionaryDerived& InternalDictionaryDerived::operator=(const InternalDictionaryDerived&) = default;

bool InternalDictionaryDerived::hasDerivedStringMember() const
{
    return !m_derivedStringMember.isNull();
}
String InternalDictionaryDerived::derivedStringMember() const
{
    return m_derivedStringMember;
}
void InternalDictionaryDerived::setDerivedStringMember(String value)
{
    m_derivedStringMember = value;
}
bool InternalDictionaryDerived::hasDerivedStringMemberWithDefault() const
{
    return !m_derivedStringMemberWithDefault.isNull();
}
String InternalDictionaryDerived::derivedStringMemberWithDefault() const
{
    return m_derivedStringMemberWithDefault;
}
void InternalDictionaryDerived::setDerivedStringMemberWithDefault(String value)
{
    m_derivedStringMemberWithDefault = value;
}
bool InternalDictionaryDerived::hasRequiredBooleanMember() const
{
    return m_hasRequiredBooleanMember;
}
bool InternalDictionaryDerived::requiredBooleanMember() const
{
    DCHECK(m_hasRequiredBooleanMember);
    return m_requiredBooleanMember;
}
void InternalDictionaryDerived::setRequiredBooleanMember(bool value)
{
    m_requiredBooleanMember = value;
    m_hasRequiredBooleanMember = true;
}

DEFINE_TRACE(InternalDictionaryDerived)
{
    InternalDictionary::trace(visitor);
}

} // namespace blink
