// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef AnimationEffectTimingProperties_h
#define AnimationEffectTimingProperties_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "bindings/core/v8/UnrestrictedDoubleOrString.h"
#include "core/CoreExport.h"
#include "platform/heap/Handle.h"
#include "wtf/text/WTFString.h"

namespace blink {

class CORE_EXPORT AnimationEffectTimingProperties : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    AnimationEffectTimingProperties();
    virtual ~AnimationEffectTimingProperties();
    AnimationEffectTimingProperties(const AnimationEffectTimingProperties&);
    AnimationEffectTimingProperties& operator=(const AnimationEffectTimingProperties&);

    bool hasDelay() const;
    double delay() const;
    void setDelay(double);

    bool hasDirection() const;
    String direction() const;
    void setDirection(String);

    bool hasDuration() const;
    const UnrestrictedDoubleOrString& duration() const;
    void setDuration(const UnrestrictedDoubleOrString&);

    bool hasEasing() const;
    String easing() const;
    void setEasing(String);

    bool hasEndDelay() const;
    double endDelay() const;
    void setEndDelay(double);

    bool hasFill() const;
    String fill() const;
    void setFill(String);

    bool hasIterationStart() const;
    double iterationStart() const;
    void setIterationStart(double);

    bool hasIterations() const;
    double iterations() const;
    void setIterations(double);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    bool m_hasDelay = false;
    double m_delay;
    String m_direction;
    UnrestrictedDoubleOrString m_duration;
    String m_easing;
    bool m_hasEndDelay = false;
    double m_endDelay;
    String m_fill;
    bool m_hasIterationStart = false;
    double m_iterationStart;
    bool m_hasIterations = false;
    double m_iterations;

    friend class V8AnimationEffectTimingProperties;
};

} // namespace blink

#endif // AnimationEffectTimingProperties_h
