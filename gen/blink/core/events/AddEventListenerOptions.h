// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef AddEventListenerOptions_h
#define AddEventListenerOptions_h

#include "core/CoreExport.h"
#include "core/events/EventListenerOptions.h"
#include "platform/heap/Handle.h"

namespace blink {

class CORE_EXPORT AddEventListenerOptions : public EventListenerOptions {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    AddEventListenerOptions();
    virtual ~AddEventListenerOptions();
    AddEventListenerOptions(const AddEventListenerOptions&);
    AddEventListenerOptions& operator=(const AddEventListenerOptions&);

    bool hasOnce() const;
    bool once() const;
    void setOnce(bool);

    bool hasPassive() const;
    bool passive() const;
    void setPassive(bool);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    bool m_hasOnce = false;
    bool m_once;
    bool m_hasPassive = false;
    bool m_passive;

    friend class V8AddEventListenerOptions;
};

} // namespace blink

#endif // AddEventListenerOptions_h
