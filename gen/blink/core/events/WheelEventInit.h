// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef WheelEventInit_h
#define WheelEventInit_h

#include "core/CoreExport.h"
#include "core/events/MouseEventInit.h"
#include "platform/heap/Handle.h"

namespace blink {

class CORE_EXPORT WheelEventInit : public MouseEventInit {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    WheelEventInit();
    virtual ~WheelEventInit();
    WheelEventInit(const WheelEventInit&);
    WheelEventInit& operator=(const WheelEventInit&);

    bool hasDeltaMode() const;
    unsigned deltaMode() const;
    void setDeltaMode(unsigned);

    bool hasDeltaX() const;
    double deltaX() const;
    void setDeltaX(double);

    bool hasDeltaY() const;
    double deltaY() const;
    void setDeltaY(double);

    bool hasDeltaZ() const;
    double deltaZ() const;
    void setDeltaZ(double);

    bool hasWheelDeltaX() const;
    int wheelDeltaX() const;
    void setWheelDeltaX(int);

    bool hasWheelDeltaY() const;
    int wheelDeltaY() const;
    void setWheelDeltaY(int);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    bool m_hasDeltaMode = false;
    unsigned m_deltaMode;
    bool m_hasDeltaX = false;
    double m_deltaX;
    bool m_hasDeltaY = false;
    double m_deltaY;
    bool m_hasDeltaZ = false;
    double m_deltaZ;
    bool m_hasWheelDeltaX = false;
    int m_wheelDeltaX;
    bool m_hasWheelDeltaY = false;
    int m_wheelDeltaY;

    friend class V8WheelEventInit;
};

} // namespace blink

#endif // WheelEventInit_h
