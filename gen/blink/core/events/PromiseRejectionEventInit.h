// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef PromiseRejectionEventInit_h
#define PromiseRejectionEventInit_h

#include "bindings/core/v8/ScriptPromise.h"
#include "bindings/core/v8/ScriptValue.h"
#include "core/CoreExport.h"
#include "core/events/EventInit.h"
#include "platform/heap/Handle.h"

namespace blink {

class CORE_EXPORT PromiseRejectionEventInit : public EventInit {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    PromiseRejectionEventInit();
    virtual ~PromiseRejectionEventInit();
    PromiseRejectionEventInit(const PromiseRejectionEventInit&);
    PromiseRejectionEventInit& operator=(const PromiseRejectionEventInit&);

    bool hasPromise() const;
    ScriptPromise promise() const;
    void setPromise(ScriptPromise);

    bool hasReason() const;
    ScriptValue reason() const;
    void setReason(ScriptValue);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    bool m_hasPromise = false;
    ScriptPromise m_promise;
    ScriptValue m_reason;

    friend class V8PromiseRejectionEventInit;
};

} // namespace blink

#endif // PromiseRejectionEventInit_h
