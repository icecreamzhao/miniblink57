// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef ProgressEventInit_h
#define ProgressEventInit_h

#include "core/CoreExport.h"
#include "core/events/EventInit.h"
#include "platform/heap/Handle.h"

namespace blink {

class CORE_EXPORT ProgressEventInit : public EventInit {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    ProgressEventInit();
    virtual ~ProgressEventInit();
    ProgressEventInit(const ProgressEventInit&);
    ProgressEventInit& operator=(const ProgressEventInit&);

    bool hasLengthComputable() const;
    bool lengthComputable() const;
    void setLengthComputable(bool);

    bool hasLoaded() const;
    unsigned long long loaded() const;
    void setLoaded(unsigned long long);

    bool hasTotal() const;
    unsigned long long total() const;
    void setTotal(unsigned long long);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    bool m_hasLengthComputable = false;
    bool m_lengthComputable;
    bool m_hasLoaded = false;
    unsigned long long m_loaded;
    bool m_hasTotal = false;
    unsigned long long m_total;

    friend class V8ProgressEventInit;
};

} // namespace blink

#endif // ProgressEventInit_h
