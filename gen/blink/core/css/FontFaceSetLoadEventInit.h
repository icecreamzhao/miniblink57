// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef FontFaceSetLoadEventInit_h
#define FontFaceSetLoadEventInit_h

#include "core/CoreExport.h"
#include "core/events/EventInit.h"
#include "platform/heap/Handle.h"

namespace blink {

class FontFace;

class CORE_EXPORT FontFaceSetLoadEventInit : public EventInit {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    FontFaceSetLoadEventInit();
    virtual ~FontFaceSetLoadEventInit();
    FontFaceSetLoadEventInit(const FontFaceSetLoadEventInit&);
    FontFaceSetLoadEventInit& operator=(const FontFaceSetLoadEventInit&);

    bool hasFontfaces() const;
    const HeapVector<Member<FontFace>>& fontfaces() const;
    void setFontfaces(const HeapVector<Member<FontFace>>&);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    bool m_hasFontfaces = false;
    HeapVector<Member<FontFace>> m_fontfaces;

    friend class V8FontFaceSetLoadEventInit;
};

} // namespace blink

#endif // FontFaceSetLoadEventInit_h
