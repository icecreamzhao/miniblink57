// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.cpp.tmpl

// clang-format on
#include "DOMQuadInit.h"

namespace blink {

DOMQuadInit::DOMQuadInit()
{
}

DOMQuadInit::~DOMQuadInit() { }

DOMQuadInit::DOMQuadInit(const DOMQuadInit&) = default;

DOMQuadInit& DOMQuadInit::operator=(const DOMQuadInit&) = default;

bool DOMQuadInit::hasP1() const
{
    return m_hasP1;
}
const DOMPointInit& DOMQuadInit::p1() const
{
    DCHECK(m_hasP1);
    return m_p1;
}
void DOMQuadInit::setP1(const DOMPointInit& value)
{
    m_p1 = value;
    m_hasP1 = true;
}
bool DOMQuadInit::hasP2() const
{
    return m_hasP2;
}
const DOMPointInit& DOMQuadInit::p2() const
{
    DCHECK(m_hasP2);
    return m_p2;
}
void DOMQuadInit::setP2(const DOMPointInit& value)
{
    m_p2 = value;
    m_hasP2 = true;
}
bool DOMQuadInit::hasP3() const
{
    return m_hasP3;
}
const DOMPointInit& DOMQuadInit::p3() const
{
    DCHECK(m_hasP3);
    return m_p3;
}
void DOMQuadInit::setP3(const DOMPointInit& value)
{
    m_p3 = value;
    m_hasP3 = true;
}
bool DOMQuadInit::hasP4() const
{
    return m_hasP4;
}
const DOMPointInit& DOMQuadInit::p4() const
{
    DCHECK(m_hasP4);
    return m_p4;
}
void DOMQuadInit::setP4(const DOMPointInit& value)
{
    m_p4 = value;
    m_hasP4 = true;
}

DEFINE_TRACE(DOMQuadInit)
{
    visitor->trace(m_p1);
    visitor->trace(m_p2);
    visitor->trace(m_p3);
    visitor->trace(m_p4);
    IDLDictionaryBase::trace(visitor);
}

} // namespace blink
