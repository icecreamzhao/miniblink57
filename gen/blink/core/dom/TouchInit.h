// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef TouchInit_h
#define TouchInit_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "core/CoreExport.h"
#include "platform/heap/Handle.h"
#include "wtf/text/WTFString.h"

namespace blink {

class EventTarget;

class CORE_EXPORT TouchInit : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    TouchInit();
    virtual ~TouchInit();
    TouchInit(const TouchInit&);
    TouchInit& operator=(const TouchInit&);

    bool hasClientX() const;
    double clientX() const;
    void setClientX(double);

    bool hasClientY() const;
    double clientY() const;
    void setClientY(double);

    bool hasForce() const;
    float force() const;
    void setForce(float);

    bool hasIdentifier() const;
    int identifier() const;
    void setIdentifier(int);

    bool hasPageX() const;
    double pageX() const;
    void setPageX(double);

    bool hasPageY() const;
    double pageY() const;
    void setPageY(double);

    bool hasRadiusX() const;
    float radiusX() const;
    void setRadiusX(float);

    bool hasRadiusY() const;
    float radiusY() const;
    void setRadiusY(float);

    bool hasRegion() const;
    String region() const;
    void setRegion(String);
    void setRegionToNull();

    bool hasRotationAngle() const;
    float rotationAngle() const;
    void setRotationAngle(float);

    bool hasScreenX() const;
    double screenX() const;
    void setScreenX(double);

    bool hasScreenY() const;
    double screenY() const;
    void setScreenY(double);

    bool hasTarget() const;
    EventTarget* target() const;
    void setTarget(EventTarget*);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    bool m_hasClientX = false;
    double m_clientX;
    bool m_hasClientY = false;
    double m_clientY;
    bool m_hasForce = false;
    float m_force;
    bool m_hasIdentifier = false;
    int m_identifier;
    bool m_hasPageX = false;
    double m_pageX;
    bool m_hasPageY = false;
    double m_pageY;
    bool m_hasRadiusX = false;
    float m_radiusX;
    bool m_hasRadiusY = false;
    float m_radiusY;
    String m_region;
    bool m_hasRotationAngle = false;
    float m_rotationAngle;
    bool m_hasScreenX = false;
    double m_screenX;
    bool m_hasScreenY = false;
    double m_screenY;
    Member<EventTarget> m_target;

    friend class V8TouchInit;
};

} // namespace blink

#endif // TouchInit_h
