// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format on
#ifndef GetRootNodeOptions_h
#define GetRootNodeOptions_h

#include "bindings/core/v8/IDLDictionaryBase.h"
#include "core/CoreExport.h"
#include "platform/heap/Handle.h"

namespace blink {

class CORE_EXPORT GetRootNodeOptions : public IDLDictionaryBase {
    DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();

public:
    GetRootNodeOptions();
    virtual ~GetRootNodeOptions();
    GetRootNodeOptions(const GetRootNodeOptions&);
    GetRootNodeOptions& operator=(const GetRootNodeOptions&);

    bool hasComposed() const;
    bool composed() const;
    void setComposed(bool);

    v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
    DECLARE_VIRTUAL_TRACE();

private:
    bool m_hasComposed = false;
    bool m_composed;

    friend class V8GetRootNodeOptions;
};

} // namespace blink

#endif // GetRootNodeOptions_h
