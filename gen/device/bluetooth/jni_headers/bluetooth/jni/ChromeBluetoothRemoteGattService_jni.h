// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/device/bluetooth/ChromeBluetoothRemoteGattService

#ifndef org_chromium_device_bluetooth_ChromeBluetoothRemoteGattService_JNI
#define org_chromium_device_bluetooth_ChromeBluetoothRemoteGattService_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kChromeBluetoothRemoteGattServiceClassPath[] = "org/chromium/device/bluetooth/ChromeBluetoothRemoteGattService";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_ChromeBluetoothRemoteGattService_clazz
    __attribute__((unused))
    = 0;
#define ChromeBluetoothRemoteGattService_clazz(env) base::android::LazyGetClass(env, kChromeBluetoothRemoteGattServiceClassPath, &g_ChromeBluetoothRemoteGattService_clazz)

} // namespace

namespace device {

// Step 2: method stubs.
JNI_GENERATOR_EXPORT void
Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattService_nativeCreateGattRemoteCharacteristic(JNIEnv*
                                                                                                             env,
    jobject jcaller,
    jlong nativeBluetoothRemoteGattServiceAndroid,
    jstring instanceId,
    jobject bluetoothGattCharacteristicWrapper,
    jobject chromeBluetoothDevice)
{
    BluetoothRemoteGattServiceAndroid* native = reinterpret_cast<BluetoothRemoteGattServiceAndroid*>(nativeBluetoothRemoteGattServiceAndroid);
    CHECK_NATIVE_PTR(env, jcaller, native, "CreateGattRemoteCharacteristic");
    return native->CreateGattRemoteCharacteristic(env,
        base::android::JavaParamRef<jobject>(env, jcaller),
        base::android::JavaParamRef<jstring>(env, instanceId),
        base::android::JavaParamRef<jobject>(env,
            bluetoothGattCharacteristicWrapper),
        base::android::JavaParamRef<jobject>(env, chromeBluetoothDevice));
}

static base::subtle::AtomicWord
    g_ChromeBluetoothRemoteGattService_onBluetoothRemoteGattServiceAndroidDestruction
    = 0;
static void
Java_ChromeBluetoothRemoteGattService_onBluetoothRemoteGattServiceAndroidDestruction(JNIEnv*
                                                                                         env,
    const base::android::JavaRefOrBare<jobject>& obj)
{
    CHECK_CLAZZ(env, obj.obj(),
        ChromeBluetoothRemoteGattService_clazz(env));
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_INSTANCE>(
        env, ChromeBluetoothRemoteGattService_clazz(env),
        "onBluetoothRemoteGattServiceAndroidDestruction",
        "("
        ")"
        "V",
        &g_ChromeBluetoothRemoteGattService_onBluetoothRemoteGattServiceAndroidDestruction);

    env->CallVoidMethod(obj.obj(),
        method_id);
    jni_generator::CheckException(env);
}

static base::subtle::AtomicWord g_ChromeBluetoothRemoteGattService_create = 0;
static base::android::ScopedJavaLocalRef<jobject>
Java_ChromeBluetoothRemoteGattService_create(JNIEnv* env, jlong nativeBluetoothRemoteGattServiceAndroid,
    const base::android::JavaRefOrBare<jobject>& bluetoothGattServiceWrapper,
    const base::android::JavaRefOrBare<jstring>& instanceId,
    const base::android::JavaRefOrBare<jobject>& chromeDevice)
{
    CHECK_CLAZZ(env, ChromeBluetoothRemoteGattService_clazz(env),
        ChromeBluetoothRemoteGattService_clazz(env), NULL);
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_STATIC>(
        env, ChromeBluetoothRemoteGattService_clazz(env),
        "create",
        "("
        "J"
        "Ljava/lang/Object;"
        "Ljava/lang/String;"
        "Lorg/chromium/device/bluetooth/ChromeBluetoothDevice;"
        ")"
        "Lorg/chromium/device/bluetooth/ChromeBluetoothRemoteGattService;",
        &g_ChromeBluetoothRemoteGattService_create);

    jobject ret = env->CallStaticObjectMethod(ChromeBluetoothRemoteGattService_clazz(env),
        method_id, nativeBluetoothRemoteGattServiceAndroid,
        bluetoothGattServiceWrapper.obj(), instanceId.obj(),
        chromeDevice.obj());
    jni_generator::CheckException(env);
    return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_ChromeBluetoothRemoteGattService_getUUID = 0;
static base::android::ScopedJavaLocalRef<jstring>
Java_ChromeBluetoothRemoteGattService_getUUID(JNIEnv* env, const base::android::JavaRefOrBare<jobject>& obj)
{
    CHECK_CLAZZ(env, obj.obj(),
        ChromeBluetoothRemoteGattService_clazz(env), NULL);
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_INSTANCE>(
        env, ChromeBluetoothRemoteGattService_clazz(env),
        "getUUID",
        "("
        ")"
        "Ljava/lang/String;",
        &g_ChromeBluetoothRemoteGattService_getUUID);

    jstring ret = static_cast<jstring>(env->CallObjectMethod(obj.obj(),
        method_id));
    jni_generator::CheckException(env);
    return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord
    g_ChromeBluetoothRemoteGattService_createCharacteristics
    = 0;
static void Java_ChromeBluetoothRemoteGattService_createCharacteristics(JNIEnv*
                                                                            env,
    const base::android::JavaRefOrBare<jobject>& obj)
{
    CHECK_CLAZZ(env, obj.obj(),
        ChromeBluetoothRemoteGattService_clazz(env));
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_INSTANCE>(
        env, ChromeBluetoothRemoteGattService_clazz(env),
        "createCharacteristics",
        "("
        ")"
        "V",
        &g_ChromeBluetoothRemoteGattService_createCharacteristics);

    env->CallVoidMethod(obj.obj(),
        method_id);
    jni_generator::CheckException(env);
}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsChromeBluetoothRemoteGattService[] = {
    { "nativeCreateGattRemoteCharacteristic",
        "("
        "J"
        "Ljava/lang/String;"
        "Ljava/lang/Object;"
        "Ljava/lang/Object;"
        ")"
        "V",
        reinterpret_cast<void*>(Java_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattService_nativeCreateGattRemoteCharacteristic) },
};

static bool RegisterNativesImpl(JNIEnv* env)
{
    if (base::android::IsManualJniRegistrationDisabled())
        return true;

    const int kMethodsChromeBluetoothRemoteGattServiceSize = arraysize(kMethodsChromeBluetoothRemoteGattService);

    if (env->RegisterNatives(ChromeBluetoothRemoteGattService_clazz(env),
            kMethodsChromeBluetoothRemoteGattService,
            kMethodsChromeBluetoothRemoteGattServiceSize)
        < 0) {
        jni_generator::HandleRegistrationError(
            env, ChromeBluetoothRemoteGattService_clazz(env), __FILE__);
        return false;
    }

    return true;
}

} // namespace device

#endif // org_chromium_device_bluetooth_ChromeBluetoothRemoteGattService_JNI
