// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/ui/base/TouchDevice

#ifndef org_chromium_ui_base_TouchDevice_JNI
#define org_chromium_ui_base_TouchDevice_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kTouchDeviceClassPath[] = "org/chromium/ui/base/TouchDevice";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_TouchDevice_clazz __attribute__((unused)) = 0;
#define TouchDevice_clazz(env) base::android::LazyGetClass(env, kTouchDeviceClassPath, &g_TouchDevice_clazz)

} // namespace

namespace ui {

// Step 2: method stubs.

static base::subtle::AtomicWord g_TouchDevice_maxTouchPoints = 0;
static jint Java_TouchDevice_maxTouchPoints(JNIEnv* env, const base::android::JavaRefOrBare<jobject>& context)
{
    CHECK_CLAZZ(env, TouchDevice_clazz(env),
        TouchDevice_clazz(env), 0);
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_STATIC>(
        env, TouchDevice_clazz(env),
        "maxTouchPoints",
        "("
        "Landroid/content/Context;"
        ")"
        "I",
        &g_TouchDevice_maxTouchPoints);

    jint ret = env->CallStaticIntMethod(TouchDevice_clazz(env),
        method_id, context.obj());
    jni_generator::CheckException(env);
    return ret;
}

static base::subtle::AtomicWord g_TouchDevice_availablePointerAndHoverTypes = 0;
static base::android::ScopedJavaLocalRef<jintArray>
Java_TouchDevice_availablePointerAndHoverTypes(JNIEnv* env, const base::android::JavaRefOrBare<jobject>& context)
{
    CHECK_CLAZZ(env, TouchDevice_clazz(env),
        TouchDevice_clazz(env), NULL);
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_STATIC>(
        env, TouchDevice_clazz(env),
        "availablePointerAndHoverTypes",
        "("
        "Landroid/content/Context;"
        ")"
        "[I",
        &g_TouchDevice_availablePointerAndHoverTypes);

    jintArray ret = static_cast<jintArray>(env->CallStaticObjectMethod(TouchDevice_clazz(env),
        method_id, context.obj()));
    jni_generator::CheckException(env);
    return base::android::ScopedJavaLocalRef<jintArray>(env, ret);
}

// Step 3: RegisterNatives.

} // namespace ui

#endif // org_chromium_ui_base_TouchDevice_JNI
