// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/base/LocaleUtils

#ifndef org_chromium_base_LocaleUtils_JNI
#define org_chromium_base_LocaleUtils_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kLocaleUtilsClassPath[] = "org/chromium/base/LocaleUtils";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_LocaleUtils_clazz __attribute__((unused)) = 0;
#define LocaleUtils_clazz(env) base::android::LazyGetClass(env, kLocaleUtilsClassPath, &g_LocaleUtils_clazz)

} // namespace

// Step 2: method stubs.

static base::subtle::AtomicWord g_LocaleUtils_getDefaultLocaleString = 0;
static base::android::ScopedJavaLocalRef<jstring>
Java_LocaleUtils_getDefaultLocaleString(JNIEnv* env)
{
    CHECK_CLAZZ(env, LocaleUtils_clazz(env),
        LocaleUtils_clazz(env), NULL);
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_STATIC>(
        env, LocaleUtils_clazz(env),
        "getDefaultLocaleString",
        "("
        ")"
        "Ljava/lang/String;",
        &g_LocaleUtils_getDefaultLocaleString);

    jstring ret = static_cast<jstring>(env->CallStaticObjectMethod(LocaleUtils_clazz(env),
        method_id));
    jni_generator::CheckException(env);
    return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord g_LocaleUtils_getDefaultCountryCode = 0;
static base::android::ScopedJavaLocalRef<jstring>
Java_LocaleUtils_getDefaultCountryCode(JNIEnv* env)
{
    CHECK_CLAZZ(env, LocaleUtils_clazz(env),
        LocaleUtils_clazz(env), NULL);
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_STATIC>(
        env, LocaleUtils_clazz(env),
        "getDefaultCountryCode",
        "("
        ")"
        "Ljava/lang/String;",
        &g_LocaleUtils_getDefaultCountryCode);

    jstring ret = static_cast<jstring>(env->CallStaticObjectMethod(LocaleUtils_clazz(env),
        method_id));
    jni_generator::CheckException(env);
    return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

// Step 3: RegisterNatives.

#endif // org_chromium_base_LocaleUtils_JNI
