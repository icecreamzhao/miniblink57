// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     com/tencent/smtt/os/SMTTAdaptation

#ifndef com_tencent_smtt_os_SMTTAdaptation_JNI
#define com_tencent_smtt_os_SMTTAdaptation_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kSMTTAdaptationClassPath[] = "com/tencent/smtt/os/SMTTAdaptation";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_SMTTAdaptation_clazz __attribute__((unused)) = 0;
#define SMTTAdaptation_clazz(env) base::android::LazyGetClass(env, kSMTTAdaptationClassPath, &g_SMTTAdaptation_clazz)

} // namespace

// Step 2: method stubs.

static jboolean GetIsBuildForArch64(JNIEnv* env, const base::android::JavaParamRef<jclass>& jcaller);

JNI_GENERATOR_EXPORT jboolean
Java_com_tencent_smtt_os_SMTTAdaptation_nativeGetIsBuildForArch64(JNIEnv*
                                                                      env,
    jclass jcaller)
{
    return GetIsBuildForArch64(env, base::android::JavaParamRef<jclass>(env, jcaller));
}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsSMTTAdaptation[] = {
    { "nativeGetIsBuildForArch64",
        "("
        ")"
        "Z",
        reinterpret_cast<void*>(Java_com_tencent_smtt_os_SMTTAdaptation_nativeGetIsBuildForArch64) },
};

static bool RegisterNativesImpl(JNIEnv* env)
{
    if (base::android::IsManualJniRegistrationDisabled())
        return true;

    const int kMethodsSMTTAdaptationSize = arraysize(kMethodsSMTTAdaptation);

    if (env->RegisterNatives(SMTTAdaptation_clazz(env),
            kMethodsSMTTAdaptation,
            kMethodsSMTTAdaptationSize)
        < 0) {
        jni_generator::HandleRegistrationError(
            env, SMTTAdaptation_clazz(env), __FILE__);
        return false;
    }

    return true;
}

#endif // com_tencent_smtt_os_SMTTAdaptation_JNI
