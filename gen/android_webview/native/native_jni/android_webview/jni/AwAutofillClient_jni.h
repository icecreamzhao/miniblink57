// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/android_webview/AwAutofillClient

#ifndef org_chromium_android_webview_AwAutofillClient_JNI
#define org_chromium_android_webview_AwAutofillClient_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kAwAutofillClientClassPath[] = "org/chromium/android_webview/AwAutofillClient";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_AwAutofillClient_clazz __attribute__((unused)) = 0;
#define AwAutofillClient_clazz(env) base::android::LazyGetClass(env, kAwAutofillClientClassPath, &g_AwAutofillClient_clazz)

} // namespace

namespace android_webview {

// Step 2: method stubs.
JNI_GENERATOR_EXPORT void
Java_org_chromium_android_1webview_AwAutofillClient_nativeDismissed(JNIEnv*
                                                                        env,
    jobject jcaller,
    jlong nativeAwAutofillClient)
{
    AwAutofillClient* native = reinterpret_cast<AwAutofillClient*>(nativeAwAutofillClient);
    CHECK_NATIVE_PTR(env, jcaller, native, "Dismissed");
    return native->Dismissed(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT void
Java_org_chromium_android_1webview_AwAutofillClient_nativeSuggestionSelected(JNIEnv*
                                                                                 env,
    jobject jcaller,
    jlong nativeAwAutofillClient,
    jint position)
{
    AwAutofillClient* native = reinterpret_cast<AwAutofillClient*>(nativeAwAutofillClient);
    CHECK_NATIVE_PTR(env, jcaller, native, "SuggestionSelected");
    return native->SuggestionSelected(env,
        base::android::JavaParamRef<jobject>(env, jcaller), position);
}

static base::subtle::AtomicWord g_AwAutofillClient_create = 0;
static base::android::ScopedJavaLocalRef<jobject>
Java_AwAutofillClient_create(JNIEnv* env, jlong nativeClient)
{
    CHECK_CLAZZ(env, AwAutofillClient_clazz(env),
        AwAutofillClient_clazz(env), NULL);
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_STATIC>(
        env, AwAutofillClient_clazz(env),
        "create",
        "("
        "J"
        ")"
        "Lorg/chromium/android_webview/AwAutofillClient;",
        &g_AwAutofillClient_create);

    jobject ret = env->CallStaticObjectMethod(AwAutofillClient_clazz(env),
        method_id, nativeClient);
    jni_generator::CheckException(env);
    return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_AwAutofillClient_showAutofillPopup = 0;
static void Java_AwAutofillClient_showAutofillPopup(JNIEnv* env, const base::android::JavaRefOrBare<jobject>& obj, const base::android::JavaRefOrBare<jobject>& anchorView,
    jboolean isRtl,
    const base::android::JavaRefOrBare<jobjectArray>& suggestions)
{
    CHECK_CLAZZ(env, obj.obj(),
        AwAutofillClient_clazz(env));
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_INSTANCE>(
        env, AwAutofillClient_clazz(env),
        "showAutofillPopup",
        "("
        "Landroid/view/View;"
        "Z"
        "[Lorg/chromium/components/autofill/AutofillSuggestion;"
        ")"
        "V",
        &g_AwAutofillClient_showAutofillPopup);

    env->CallVoidMethod(obj.obj(),
        method_id, anchorView.obj(), isRtl, suggestions.obj());
    jni_generator::CheckException(env);
}

static base::subtle::AtomicWord g_AwAutofillClient_hideAutofillPopup = 0;
static void Java_AwAutofillClient_hideAutofillPopup(JNIEnv* env, const base::android::JavaRefOrBare<jobject>& obj)
{
    CHECK_CLAZZ(env, obj.obj(),
        AwAutofillClient_clazz(env));
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_INSTANCE>(
        env, AwAutofillClient_clazz(env),
        "hideAutofillPopup",
        "("
        ")"
        "V",
        &g_AwAutofillClient_hideAutofillPopup);

    env->CallVoidMethod(obj.obj(),
        method_id);
    jni_generator::CheckException(env);
}

static base::subtle::AtomicWord g_AwAutofillClient_createAutofillSuggestionArray
    = 0;
static base::android::ScopedJavaLocalRef<jobjectArray>
Java_AwAutofillClient_createAutofillSuggestionArray(JNIEnv* env,
    JniIntWrapper size)
{
    CHECK_CLAZZ(env, AwAutofillClient_clazz(env),
        AwAutofillClient_clazz(env), NULL);
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_STATIC>(
        env, AwAutofillClient_clazz(env),
        "createAutofillSuggestionArray",
        "("
        "I"
        ")"
        "[Lorg/chromium/components/autofill/AutofillSuggestion;",
        &g_AwAutofillClient_createAutofillSuggestionArray);

    jobjectArray ret = static_cast<jobjectArray>(env->CallStaticObjectMethod(AwAutofillClient_clazz(env),
        method_id, as_jint(size)));
    jni_generator::CheckException(env);
    return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static base::subtle::AtomicWord g_AwAutofillClient_addToAutofillSuggestionArray
    = 0;
static void Java_AwAutofillClient_addToAutofillSuggestionArray(JNIEnv* env,
    const base::android::JavaRefOrBare<jobjectArray>& array,
    JniIntWrapper index,
    const base::android::JavaRefOrBare<jstring>& name,
    const base::android::JavaRefOrBare<jstring>& label,
    JniIntWrapper uniqueId)
{
    CHECK_CLAZZ(env, AwAutofillClient_clazz(env),
        AwAutofillClient_clazz(env));
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_STATIC>(
        env, AwAutofillClient_clazz(env),
        "addToAutofillSuggestionArray",
        "("
        "[Lorg/chromium/components/autofill/AutofillSuggestion;"
        "I"
        "Ljava/lang/String;"
        "Ljava/lang/String;"
        "I"
        ")"
        "V",
        &g_AwAutofillClient_addToAutofillSuggestionArray);

    env->CallStaticVoidMethod(AwAutofillClient_clazz(env),
        method_id, array.obj(), as_jint(index), name.obj(), label.obj(),
        as_jint(uniqueId));
    jni_generator::CheckException(env);
}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsAwAutofillClient[] = {
    { "nativeDismissed",
        "("
        "J"
        ")"
        "V",
        reinterpret_cast<void*>(Java_org_chromium_android_1webview_AwAutofillClient_nativeDismissed) },
    { "nativeSuggestionSelected",
        "("
        "J"
        "I"
        ")"
        "V",
        reinterpret_cast<void*>(Java_org_chromium_android_1webview_AwAutofillClient_nativeSuggestionSelected) },
};

static bool RegisterNativesImpl(JNIEnv* env)
{
    if (base::android::IsManualJniRegistrationDisabled())
        return true;

    const int kMethodsAwAutofillClientSize = arraysize(kMethodsAwAutofillClient);

    if (env->RegisterNatives(AwAutofillClient_clazz(env),
            kMethodsAwAutofillClient,
            kMethodsAwAutofillClientSize)
        < 0) {
        jni_generator::HandleRegistrationError(
            env, AwAutofillClient_clazz(env), __FILE__);
        return false;
    }

    return true;
}

} // namespace android_webview

#endif // org_chromium_android_webview_AwAutofillClient_JNI
