// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/android_webview/AwDebug

#ifndef org_chromium_android_webview_AwDebug_JNI
#define org_chromium_android_webview_AwDebug_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kAwDebugClassPath[] = "org/chromium/android_webview/AwDebug";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_AwDebug_clazz __attribute__((unused)) = 0;
#define AwDebug_clazz(env) base::android::LazyGetClass(env, kAwDebugClassPath, &g_AwDebug_clazz)

} // namespace

namespace android_webview {

// Step 2: method stubs.

static jboolean DumpWithoutCrashing(JNIEnv* env, const base::android::JavaParamRef<jclass>& jcaller,
    const base::android::JavaParamRef<jstring>& dumpPath);

JNI_GENERATOR_EXPORT jboolean
Java_org_chromium_android_1webview_AwDebug_nativeDumpWithoutCrashing(JNIEnv*
                                                                         env,
    jclass jcaller,
    jstring dumpPath)
{
    return DumpWithoutCrashing(env, base::android::JavaParamRef<jclass>(env, jcaller), base::android::JavaParamRef<jstring>(env, dumpPath));
}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsAwDebug[] = {
    { "nativeDumpWithoutCrashing",
        "("
        "Ljava/lang/String;"
        ")"
        "Z",
        reinterpret_cast<void*>(Java_org_chromium_android_1webview_AwDebug_nativeDumpWithoutCrashing) },
};

static bool RegisterNativesImpl(JNIEnv* env)
{
    if (base::android::IsManualJniRegistrationDisabled())
        return true;

    const int kMethodsAwDebugSize = arraysize(kMethodsAwDebug);

    if (env->RegisterNatives(AwDebug_clazz(env),
            kMethodsAwDebug,
            kMethodsAwDebugSize)
        < 0) {
        jni_generator::HandleRegistrationError(
            env, AwDebug_clazz(env), __FILE__);
        return false;
    }

    return true;
}

} // namespace android_webview

#endif // org_chromium_android_webview_AwDebug_JNI
