// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_gateway.proto

#ifndef PROTOBUF_client_5fgateway_2eproto__INCLUDED
#define PROTOBUF_client_5fgateway_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace ipc {
namespace invalidation {

    // Internal implementation detail -- do not call these.
    void protobuf_AddDesc_client_5fgateway_2eproto();
    void protobuf_AssignDesc_client_5fgateway_2eproto();
    void protobuf_ShutdownFile_client_5fgateway_2eproto();

    class ClientGatewayMessage;

    // ===================================================================

    class ClientGatewayMessage : public ::google::protobuf::MessageLite {
    public:
        ClientGatewayMessage();
        virtual ~ClientGatewayMessage();

        ClientGatewayMessage(const ClientGatewayMessage& from);

        inline ClientGatewayMessage& operator=(const ClientGatewayMessage& from)
        {
            CopyFrom(from);
            return *this;
        }

        inline const ::std::string& unknown_fields() const
        {
            return _unknown_fields_.GetNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        inline ::std::string* mutable_unknown_fields()
        {
            return _unknown_fields_.MutableNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        static const ClientGatewayMessage& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        // Returns the internal default instance pointer. This function can
        // return NULL thus should not be used by the user. This is intended
        // for Protobuf internal code. Please use default_instance() declared
        // above instead.
        static inline const ClientGatewayMessage* internal_default_instance()
        {
            return default_instance_;
        }
#endif

        GOOGLE_ATTRIBUTE_NOINLINE void Swap(ClientGatewayMessage* other);

        // implements Message ----------------------------------------------

        inline ClientGatewayMessage* New() const { return New(NULL); }

        ClientGatewayMessage* New(::google::protobuf::Arena* arena) const;
        void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
        void CopyFrom(const ClientGatewayMessage& from);
        void MergeFrom(const ClientGatewayMessage& from);
        void Clear();
        bool IsInitialized() const;

        int ByteSize() const;
        bool MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input);
        void SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const;
        void DiscardUnknownFields();
        int GetCachedSize() const { return _cached_size_; }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const;
        void InternalSwap(ClientGatewayMessage* other);

    private:
        inline ::google::protobuf::Arena* GetArenaNoVirtual() const
        {
            return _arena_ptr_;
        }
        inline ::google::protobuf::Arena* MaybeArenaPtr() const
        {
            return _arena_ptr_;
        }

    public:
        ::std::string GetTypeName() const;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        // optional bool is_client_to_server = 1;
        bool has_is_client_to_server() const;
        void clear_is_client_to_server();
        static const int kIsClientToServerFieldNumber = 1;
        bool is_client_to_server() const;
        void set_is_client_to_server(bool value);

        // optional bytes service_context = 2;
        bool has_service_context() const;
        void clear_service_context();
        static const int kServiceContextFieldNumber = 2;
        const ::std::string& service_context() const;
        void set_service_context(const ::std::string& value);
        void set_service_context(const char* value);
        void set_service_context(const void* value, size_t size);
        ::std::string* mutable_service_context();
        ::std::string* release_service_context();
        void set_allocated_service_context(::std::string* service_context);

        // optional int64 rpc_scheduling_hash = 3;
        bool has_rpc_scheduling_hash() const;
        void clear_rpc_scheduling_hash();
        static const int kRpcSchedulingHashFieldNumber = 3;
        ::google::protobuf::int64 rpc_scheduling_hash() const;
        void set_rpc_scheduling_hash(::google::protobuf::int64 value);

        // optional bytes network_message = 4;
        bool has_network_message() const;
        void clear_network_message();
        static const int kNetworkMessageFieldNumber = 4;
        const ::std::string& network_message() const;
        void set_network_message(const ::std::string& value);
        void set_network_message(const char* value);
        void set_network_message(const void* value, size_t size);
        ::std::string* mutable_network_message();
        ::std::string* release_network_message();
        void set_allocated_network_message(::std::string* network_message);

        // @@protoc_insertion_point(class_scope:ipc.invalidation.ClientGatewayMessage)
    private:
        inline void set_has_is_client_to_server();
        inline void clear_has_is_client_to_server();
        inline void set_has_service_context();
        inline void clear_has_service_context();
        inline void set_has_rpc_scheduling_hash();
        inline void clear_has_rpc_scheduling_hash();
        inline void set_has_network_message();
        inline void clear_has_network_message();

        ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
        ::google::protobuf::Arena* _arena_ptr_;

        ::google::protobuf::uint32 _has_bits_[1];
        mutable int _cached_size_;
        ::google::protobuf::internal::ArenaStringPtr service_context_;
        ::google::protobuf::int64 rpc_scheduling_hash_;
        ::google::protobuf::internal::ArenaStringPtr network_message_;
        bool is_client_to_server_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        friend void protobuf_AddDesc_client_5fgateway_2eproto_impl();
#else
        friend void protobuf_AddDesc_client_5fgateway_2eproto();
#endif
        friend void protobuf_AssignDesc_client_5fgateway_2eproto();
        friend void protobuf_ShutdownFile_client_5fgateway_2eproto();

        void InitAsDefaultInstance();
        static ClientGatewayMessage* default_instance_;
    };
    // ===================================================================

    // ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
    // ClientGatewayMessage

    // optional bool is_client_to_server = 1;
    inline bool ClientGatewayMessage::has_is_client_to_server() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    inline void ClientGatewayMessage::set_has_is_client_to_server()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    inline void ClientGatewayMessage::clear_has_is_client_to_server()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    inline void ClientGatewayMessage::clear_is_client_to_server()
    {
        is_client_to_server_ = false;
        clear_has_is_client_to_server();
    }
    inline bool ClientGatewayMessage::is_client_to_server() const
    {
        // @@protoc_insertion_point(field_get:ipc.invalidation.ClientGatewayMessage.is_client_to_server)
        return is_client_to_server_;
    }
    inline void ClientGatewayMessage::set_is_client_to_server(bool value)
    {
        set_has_is_client_to_server();
        is_client_to_server_ = value;
        // @@protoc_insertion_point(field_set:ipc.invalidation.ClientGatewayMessage.is_client_to_server)
    }

    // optional bytes service_context = 2;
    inline bool ClientGatewayMessage::has_service_context() const
    {
        return (_has_bits_[0] & 0x00000002u) != 0;
    }
    inline void ClientGatewayMessage::set_has_service_context()
    {
        _has_bits_[0] |= 0x00000002u;
    }
    inline void ClientGatewayMessage::clear_has_service_context()
    {
        _has_bits_[0] &= ~0x00000002u;
    }
    inline void ClientGatewayMessage::clear_service_context()
    {
        service_context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_service_context();
    }
    inline const ::std::string& ClientGatewayMessage::service_context() const
    {
        // @@protoc_insertion_point(field_get:ipc.invalidation.ClientGatewayMessage.service_context)
        return service_context_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void ClientGatewayMessage::set_service_context(const ::std::string& value)
    {
        set_has_service_context();
        service_context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:ipc.invalidation.ClientGatewayMessage.service_context)
    }
    inline void ClientGatewayMessage::set_service_context(const char* value)
    {
        set_has_service_context();
        service_context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:ipc.invalidation.ClientGatewayMessage.service_context)
    }
    inline void ClientGatewayMessage::set_service_context(const void* value, size_t size)
    {
        set_has_service_context();
        service_context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.ClientGatewayMessage.service_context)
    }
    inline ::std::string* ClientGatewayMessage::mutable_service_context()
    {
        set_has_service_context();
        // @@protoc_insertion_point(field_mutable:ipc.invalidation.ClientGatewayMessage.service_context)
        return service_context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline ::std::string* ClientGatewayMessage::release_service_context()
    {
        // @@protoc_insertion_point(field_release:ipc.invalidation.ClientGatewayMessage.service_context)
        clear_has_service_context();
        return service_context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void ClientGatewayMessage::set_allocated_service_context(::std::string* service_context)
    {
        if (service_context != NULL) {
            set_has_service_context();
        } else {
            clear_has_service_context();
        }
        service_context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_context);
        // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.ClientGatewayMessage.service_context)
    }

    // optional int64 rpc_scheduling_hash = 3;
    inline bool ClientGatewayMessage::has_rpc_scheduling_hash() const
    {
        return (_has_bits_[0] & 0x00000004u) != 0;
    }
    inline void ClientGatewayMessage::set_has_rpc_scheduling_hash()
    {
        _has_bits_[0] |= 0x00000004u;
    }
    inline void ClientGatewayMessage::clear_has_rpc_scheduling_hash()
    {
        _has_bits_[0] &= ~0x00000004u;
    }
    inline void ClientGatewayMessage::clear_rpc_scheduling_hash()
    {
        rpc_scheduling_hash_ = GOOGLE_LONGLONG(0);
        clear_has_rpc_scheduling_hash();
    }
    inline ::google::protobuf::int64 ClientGatewayMessage::rpc_scheduling_hash() const
    {
        // @@protoc_insertion_point(field_get:ipc.invalidation.ClientGatewayMessage.rpc_scheduling_hash)
        return rpc_scheduling_hash_;
    }
    inline void ClientGatewayMessage::set_rpc_scheduling_hash(::google::protobuf::int64 value)
    {
        set_has_rpc_scheduling_hash();
        rpc_scheduling_hash_ = value;
        // @@protoc_insertion_point(field_set:ipc.invalidation.ClientGatewayMessage.rpc_scheduling_hash)
    }

    // optional bytes network_message = 4;
    inline bool ClientGatewayMessage::has_network_message() const
    {
        return (_has_bits_[0] & 0x00000008u) != 0;
    }
    inline void ClientGatewayMessage::set_has_network_message()
    {
        _has_bits_[0] |= 0x00000008u;
    }
    inline void ClientGatewayMessage::clear_has_network_message()
    {
        _has_bits_[0] &= ~0x00000008u;
    }
    inline void ClientGatewayMessage::clear_network_message()
    {
        network_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_network_message();
    }
    inline const ::std::string& ClientGatewayMessage::network_message() const
    {
        // @@protoc_insertion_point(field_get:ipc.invalidation.ClientGatewayMessage.network_message)
        return network_message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void ClientGatewayMessage::set_network_message(const ::std::string& value)
    {
        set_has_network_message();
        network_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:ipc.invalidation.ClientGatewayMessage.network_message)
    }
    inline void ClientGatewayMessage::set_network_message(const char* value)
    {
        set_has_network_message();
        network_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:ipc.invalidation.ClientGatewayMessage.network_message)
    }
    inline void ClientGatewayMessage::set_network_message(const void* value, size_t size)
    {
        set_has_network_message();
        network_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.ClientGatewayMessage.network_message)
    }
    inline ::std::string* ClientGatewayMessage::mutable_network_message()
    {
        set_has_network_message();
        // @@protoc_insertion_point(field_mutable:ipc.invalidation.ClientGatewayMessage.network_message)
        return network_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline ::std::string* ClientGatewayMessage::release_network_message()
    {
        // @@protoc_insertion_point(field_release:ipc.invalidation.ClientGatewayMessage.network_message)
        clear_has_network_message();
        return network_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void ClientGatewayMessage::set_allocated_network_message(::std::string* network_message)
    {
        if (network_message != NULL) {
            set_has_network_message();
        } else {
            clear_has_network_message();
        }
        network_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network_message);
        // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.ClientGatewayMessage.network_message)
    }

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS

    // @@protoc_insertion_point(namespace_scope)

} // namespace invalidation
} // namespace ipc

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_client_5fgateway_2eproto__INCLUDED
