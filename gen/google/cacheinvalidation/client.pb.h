// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.proto

#ifndef PROTOBUF_client_2eproto__INCLUDED
#define PROTOBUF_client_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include "client_protocol.pb.h"
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace ipc {
namespace invalidation {

    // Internal implementation detail -- do not call these.
    void protobuf_AddDesc_client_2eproto();
    void protobuf_AssignDesc_client_2eproto();
    void protobuf_ShutdownFile_client_2eproto();

    class AckHandleP;
    class PersistentStateBlob;
    class PersistentTiclState;
    class RunStateP;

    enum RunStateP_State {
        RunStateP_State_NOT_STARTED = 1,
        RunStateP_State_STARTED = 2,
        RunStateP_State_STOPPED = 3
    };
    bool RunStateP_State_IsValid(int value);
    const RunStateP_State RunStateP_State_State_MIN = RunStateP_State_NOT_STARTED;
    const RunStateP_State RunStateP_State_State_MAX = RunStateP_State_STOPPED;
    const int RunStateP_State_State_ARRAYSIZE = RunStateP_State_State_MAX + 1;

    // ===================================================================

    class AckHandleP : public ::google::protobuf::MessageLite {
    public:
        AckHandleP();
        virtual ~AckHandleP();

        AckHandleP(const AckHandleP& from);

        inline AckHandleP& operator=(const AckHandleP& from)
        {
            CopyFrom(from);
            return *this;
        }

        inline const ::std::string& unknown_fields() const
        {
            return _unknown_fields_.GetNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        inline ::std::string* mutable_unknown_fields()
        {
            return _unknown_fields_.MutableNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        static const AckHandleP& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        // Returns the internal default instance pointer. This function can
        // return NULL thus should not be used by the user. This is intended
        // for Protobuf internal code. Please use default_instance() declared
        // above instead.
        static inline const AckHandleP* internal_default_instance()
        {
            return default_instance_;
        }
#endif

        GOOGLE_ATTRIBUTE_NOINLINE void Swap(AckHandleP* other);

        // implements Message ----------------------------------------------

        inline AckHandleP* New() const { return New(NULL); }

        AckHandleP* New(::google::protobuf::Arena* arena) const;
        void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
        void CopyFrom(const AckHandleP& from);
        void MergeFrom(const AckHandleP& from);
        void Clear();
        bool IsInitialized() const;

        int ByteSize() const;
        bool MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input);
        void SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const;
        void DiscardUnknownFields();
        int GetCachedSize() const { return _cached_size_; }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const;
        void InternalSwap(AckHandleP* other);

    private:
        inline ::google::protobuf::Arena* GetArenaNoVirtual() const
        {
            return _arena_ptr_;
        }
        inline ::google::protobuf::Arena* MaybeArenaPtr() const
        {
            return _arena_ptr_;
        }

    public:
        ::std::string GetTypeName() const;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        // optional .ipc.invalidation.InvalidationP invalidation = 1;
        bool has_invalidation() const;
        void clear_invalidation();
        static const int kInvalidationFieldNumber = 1;
        const ::ipc::invalidation::InvalidationP& invalidation() const;
        ::ipc::invalidation::InvalidationP* mutable_invalidation();
        ::ipc::invalidation::InvalidationP* release_invalidation();
        void set_allocated_invalidation(::ipc::invalidation::InvalidationP* invalidation);

        // @@protoc_insertion_point(class_scope:ipc.invalidation.AckHandleP)
    private:
        inline void set_has_invalidation();
        inline void clear_has_invalidation();

        ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
        ::google::protobuf::Arena* _arena_ptr_;

        ::google::protobuf::uint32 _has_bits_[1];
        mutable int _cached_size_;
        ::ipc::invalidation::InvalidationP* invalidation_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        friend void protobuf_AddDesc_client_2eproto_impl();
#else
        friend void protobuf_AddDesc_client_2eproto();
#endif
        friend void protobuf_AssignDesc_client_2eproto();
        friend void protobuf_ShutdownFile_client_2eproto();

        void InitAsDefaultInstance();
        static AckHandleP* default_instance_;
    };
    // -------------------------------------------------------------------

    class PersistentTiclState : public ::google::protobuf::MessageLite {
    public:
        PersistentTiclState();
        virtual ~PersistentTiclState();

        PersistentTiclState(const PersistentTiclState& from);

        inline PersistentTiclState& operator=(const PersistentTiclState& from)
        {
            CopyFrom(from);
            return *this;
        }

        inline const ::std::string& unknown_fields() const
        {
            return _unknown_fields_.GetNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        inline ::std::string* mutable_unknown_fields()
        {
            return _unknown_fields_.MutableNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        static const PersistentTiclState& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        // Returns the internal default instance pointer. This function can
        // return NULL thus should not be used by the user. This is intended
        // for Protobuf internal code. Please use default_instance() declared
        // above instead.
        static inline const PersistentTiclState* internal_default_instance()
        {
            return default_instance_;
        }
#endif

        GOOGLE_ATTRIBUTE_NOINLINE void Swap(PersistentTiclState* other);

        // implements Message ----------------------------------------------

        inline PersistentTiclState* New() const { return New(NULL); }

        PersistentTiclState* New(::google::protobuf::Arena* arena) const;
        void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
        void CopyFrom(const PersistentTiclState& from);
        void MergeFrom(const PersistentTiclState& from);
        void Clear();
        bool IsInitialized() const;

        int ByteSize() const;
        bool MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input);
        void SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const;
        void DiscardUnknownFields();
        int GetCachedSize() const { return _cached_size_; }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const;
        void InternalSwap(PersistentTiclState* other);

    private:
        inline ::google::protobuf::Arena* GetArenaNoVirtual() const
        {
            return _arena_ptr_;
        }
        inline ::google::protobuf::Arena* MaybeArenaPtr() const
        {
            return _arena_ptr_;
        }

    public:
        ::std::string GetTypeName() const;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        // optional bytes client_token = 1;
        bool has_client_token() const;
        void clear_client_token();
        static const int kClientTokenFieldNumber = 1;
        const ::std::string& client_token() const;
        void set_client_token(const ::std::string& value);
        void set_client_token(const char* value);
        void set_client_token(const void* value, size_t size);
        ::std::string* mutable_client_token();
        ::std::string* release_client_token();
        void set_allocated_client_token(::std::string* client_token);

        // optional int64 last_message_send_time_ms = 2 [default = 0];
        bool has_last_message_send_time_ms() const;
        void clear_last_message_send_time_ms();
        static const int kLastMessageSendTimeMsFieldNumber = 2;
        ::google::protobuf::int64 last_message_send_time_ms() const;
        void set_last_message_send_time_ms(::google::protobuf::int64 value);

        // @@protoc_insertion_point(class_scope:ipc.invalidation.PersistentTiclState)
    private:
        inline void set_has_client_token();
        inline void clear_has_client_token();
        inline void set_has_last_message_send_time_ms();
        inline void clear_has_last_message_send_time_ms();

        ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
        ::google::protobuf::Arena* _arena_ptr_;

        ::google::protobuf::uint32 _has_bits_[1];
        mutable int _cached_size_;
        ::google::protobuf::internal::ArenaStringPtr client_token_;
        ::google::protobuf::int64 last_message_send_time_ms_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        friend void protobuf_AddDesc_client_2eproto_impl();
#else
        friend void protobuf_AddDesc_client_2eproto();
#endif
        friend void protobuf_AssignDesc_client_2eproto();
        friend void protobuf_ShutdownFile_client_2eproto();

        void InitAsDefaultInstance();
        static PersistentTiclState* default_instance_;
    };
    // -------------------------------------------------------------------

    class PersistentStateBlob : public ::google::protobuf::MessageLite {
    public:
        PersistentStateBlob();
        virtual ~PersistentStateBlob();

        PersistentStateBlob(const PersistentStateBlob& from);

        inline PersistentStateBlob& operator=(const PersistentStateBlob& from)
        {
            CopyFrom(from);
            return *this;
        }

        inline const ::std::string& unknown_fields() const
        {
            return _unknown_fields_.GetNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        inline ::std::string* mutable_unknown_fields()
        {
            return _unknown_fields_.MutableNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        static const PersistentStateBlob& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        // Returns the internal default instance pointer. This function can
        // return NULL thus should not be used by the user. This is intended
        // for Protobuf internal code. Please use default_instance() declared
        // above instead.
        static inline const PersistentStateBlob* internal_default_instance()
        {
            return default_instance_;
        }
#endif

        GOOGLE_ATTRIBUTE_NOINLINE void Swap(PersistentStateBlob* other);

        // implements Message ----------------------------------------------

        inline PersistentStateBlob* New() const { return New(NULL); }

        PersistentStateBlob* New(::google::protobuf::Arena* arena) const;
        void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
        void CopyFrom(const PersistentStateBlob& from);
        void MergeFrom(const PersistentStateBlob& from);
        void Clear();
        bool IsInitialized() const;

        int ByteSize() const;
        bool MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input);
        void SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const;
        void DiscardUnknownFields();
        int GetCachedSize() const { return _cached_size_; }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const;
        void InternalSwap(PersistentStateBlob* other);

    private:
        inline ::google::protobuf::Arena* GetArenaNoVirtual() const
        {
            return _arena_ptr_;
        }
        inline ::google::protobuf::Arena* MaybeArenaPtr() const
        {
            return _arena_ptr_;
        }

    public:
        ::std::string GetTypeName() const;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        // optional .ipc.invalidation.PersistentTiclState ticl_state = 1;
        bool has_ticl_state() const;
        void clear_ticl_state();
        static const int kTiclStateFieldNumber = 1;
        const ::ipc::invalidation::PersistentTiclState& ticl_state() const;
        ::ipc::invalidation::PersistentTiclState* mutable_ticl_state();
        ::ipc::invalidation::PersistentTiclState* release_ticl_state();
        void set_allocated_ticl_state(::ipc::invalidation::PersistentTiclState* ticl_state);

        // optional bytes authentication_code = 2;
        bool has_authentication_code() const;
        void clear_authentication_code();
        static const int kAuthenticationCodeFieldNumber = 2;
        const ::std::string& authentication_code() const;
        void set_authentication_code(const ::std::string& value);
        void set_authentication_code(const char* value);
        void set_authentication_code(const void* value, size_t size);
        ::std::string* mutable_authentication_code();
        ::std::string* release_authentication_code();
        void set_allocated_authentication_code(::std::string* authentication_code);

        // @@protoc_insertion_point(class_scope:ipc.invalidation.PersistentStateBlob)
    private:
        inline void set_has_ticl_state();
        inline void clear_has_ticl_state();
        inline void set_has_authentication_code();
        inline void clear_has_authentication_code();

        ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
        ::google::protobuf::Arena* _arena_ptr_;

        ::google::protobuf::uint32 _has_bits_[1];
        mutable int _cached_size_;
        ::ipc::invalidation::PersistentTiclState* ticl_state_;
        ::google::protobuf::internal::ArenaStringPtr authentication_code_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        friend void protobuf_AddDesc_client_2eproto_impl();
#else
        friend void protobuf_AddDesc_client_2eproto();
#endif
        friend void protobuf_AssignDesc_client_2eproto();
        friend void protobuf_ShutdownFile_client_2eproto();

        void InitAsDefaultInstance();
        static PersistentStateBlob* default_instance_;
    };
    // -------------------------------------------------------------------

    class RunStateP : public ::google::protobuf::MessageLite {
    public:
        RunStateP();
        virtual ~RunStateP();

        RunStateP(const RunStateP& from);

        inline RunStateP& operator=(const RunStateP& from)
        {
            CopyFrom(from);
            return *this;
        }

        inline const ::std::string& unknown_fields() const
        {
            return _unknown_fields_.GetNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        inline ::std::string* mutable_unknown_fields()
        {
            return _unknown_fields_.MutableNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        static const RunStateP& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        // Returns the internal default instance pointer. This function can
        // return NULL thus should not be used by the user. This is intended
        // for Protobuf internal code. Please use default_instance() declared
        // above instead.
        static inline const RunStateP* internal_default_instance()
        {
            return default_instance_;
        }
#endif

        GOOGLE_ATTRIBUTE_NOINLINE void Swap(RunStateP* other);

        // implements Message ----------------------------------------------

        inline RunStateP* New() const { return New(NULL); }

        RunStateP* New(::google::protobuf::Arena* arena) const;
        void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
        void CopyFrom(const RunStateP& from);
        void MergeFrom(const RunStateP& from);
        void Clear();
        bool IsInitialized() const;

        int ByteSize() const;
        bool MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input);
        void SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const;
        void DiscardUnknownFields();
        int GetCachedSize() const { return _cached_size_; }

    private:
        void SharedCtor();
        void SharedDtor();
        void SetCachedSize(int size) const;
        void InternalSwap(RunStateP* other);

    private:
        inline ::google::protobuf::Arena* GetArenaNoVirtual() const
        {
            return _arena_ptr_;
        }
        inline ::google::protobuf::Arena* MaybeArenaPtr() const
        {
            return _arena_ptr_;
        }

    public:
        ::std::string GetTypeName() const;

        // nested types ----------------------------------------------------

        typedef RunStateP_State State;
        static const State NOT_STARTED = RunStateP_State_NOT_STARTED;
        static const State STARTED = RunStateP_State_STARTED;
        static const State STOPPED = RunStateP_State_STOPPED;
        static inline bool State_IsValid(int value)
        {
            return RunStateP_State_IsValid(value);
        }
        static const State State_MIN = RunStateP_State_State_MIN;
        static const State State_MAX = RunStateP_State_State_MAX;
        static const int State_ARRAYSIZE = RunStateP_State_State_ARRAYSIZE;

        // accessors -------------------------------------------------------

        // optional .ipc.invalidation.RunStateP.State state = 1;
        bool has_state() const;
        void clear_state();
        static const int kStateFieldNumber = 1;
        ::ipc::invalidation::RunStateP_State state() const;
        void set_state(::ipc::invalidation::RunStateP_State value);

        // @@protoc_insertion_point(class_scope:ipc.invalidation.RunStateP)
    private:
        inline void set_has_state();
        inline void clear_has_state();

        ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
        ::google::protobuf::Arena* _arena_ptr_;

        ::google::protobuf::uint32 _has_bits_[1];
        mutable int _cached_size_;
        int state_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        friend void protobuf_AddDesc_client_2eproto_impl();
#else
        friend void protobuf_AddDesc_client_2eproto();
#endif
        friend void protobuf_AssignDesc_client_2eproto();
        friend void protobuf_ShutdownFile_client_2eproto();

        void InitAsDefaultInstance();
        static RunStateP* default_instance_;
    };
    // ===================================================================

    // ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
    // AckHandleP

    // optional .ipc.invalidation.InvalidationP invalidation = 1;
    inline bool AckHandleP::has_invalidation() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    inline void AckHandleP::set_has_invalidation()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    inline void AckHandleP::clear_has_invalidation()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    inline void AckHandleP::clear_invalidation()
    {
        if (invalidation_ != NULL)
            invalidation_->::ipc::invalidation::InvalidationP::Clear();
        clear_has_invalidation();
    }
    inline const ::ipc::invalidation::InvalidationP& AckHandleP::invalidation() const
    {
        // @@protoc_insertion_point(field_get:ipc.invalidation.AckHandleP.invalidation)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        return invalidation_ != NULL ? *invalidation_ : *default_instance().invalidation_;
#else
        return invalidation_ != NULL ? *invalidation_ : *default_instance_->invalidation_;
#endif
    }
    inline ::ipc::invalidation::InvalidationP* AckHandleP::mutable_invalidation()
    {
        set_has_invalidation();
        if (invalidation_ == NULL) {
            invalidation_ = new ::ipc::invalidation::InvalidationP;
        }
        // @@protoc_insertion_point(field_mutable:ipc.invalidation.AckHandleP.invalidation)
        return invalidation_;
    }
    inline ::ipc::invalidation::InvalidationP* AckHandleP::release_invalidation()
    {
        // @@protoc_insertion_point(field_release:ipc.invalidation.AckHandleP.invalidation)
        clear_has_invalidation();
        ::ipc::invalidation::InvalidationP* temp = invalidation_;
        invalidation_ = NULL;
        return temp;
    }
    inline void AckHandleP::set_allocated_invalidation(::ipc::invalidation::InvalidationP* invalidation)
    {
        delete invalidation_;
        invalidation_ = invalidation;
        if (invalidation) {
            set_has_invalidation();
        } else {
            clear_has_invalidation();
        }
        // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.AckHandleP.invalidation)
    }

    // -------------------------------------------------------------------

    // PersistentTiclState

    // optional bytes client_token = 1;
    inline bool PersistentTiclState::has_client_token() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    inline void PersistentTiclState::set_has_client_token()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    inline void PersistentTiclState::clear_has_client_token()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    inline void PersistentTiclState::clear_client_token()
    {
        client_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_client_token();
    }
    inline const ::std::string& PersistentTiclState::client_token() const
    {
        // @@protoc_insertion_point(field_get:ipc.invalidation.PersistentTiclState.client_token)
        return client_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void PersistentTiclState::set_client_token(const ::std::string& value)
    {
        set_has_client_token();
        client_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:ipc.invalidation.PersistentTiclState.client_token)
    }
    inline void PersistentTiclState::set_client_token(const char* value)
    {
        set_has_client_token();
        client_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:ipc.invalidation.PersistentTiclState.client_token)
    }
    inline void PersistentTiclState::set_client_token(const void* value, size_t size)
    {
        set_has_client_token();
        client_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.PersistentTiclState.client_token)
    }
    inline ::std::string* PersistentTiclState::mutable_client_token()
    {
        set_has_client_token();
        // @@protoc_insertion_point(field_mutable:ipc.invalidation.PersistentTiclState.client_token)
        return client_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline ::std::string* PersistentTiclState::release_client_token()
    {
        // @@protoc_insertion_point(field_release:ipc.invalidation.PersistentTiclState.client_token)
        clear_has_client_token();
        return client_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void PersistentTiclState::set_allocated_client_token(::std::string* client_token)
    {
        if (client_token != NULL) {
            set_has_client_token();
        } else {
            clear_has_client_token();
        }
        client_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_token);
        // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.PersistentTiclState.client_token)
    }

    // optional int64 last_message_send_time_ms = 2 [default = 0];
    inline bool PersistentTiclState::has_last_message_send_time_ms() const
    {
        return (_has_bits_[0] & 0x00000002u) != 0;
    }
    inline void PersistentTiclState::set_has_last_message_send_time_ms()
    {
        _has_bits_[0] |= 0x00000002u;
    }
    inline void PersistentTiclState::clear_has_last_message_send_time_ms()
    {
        _has_bits_[0] &= ~0x00000002u;
    }
    inline void PersistentTiclState::clear_last_message_send_time_ms()
    {
        last_message_send_time_ms_ = GOOGLE_LONGLONG(0);
        clear_has_last_message_send_time_ms();
    }
    inline ::google::protobuf::int64 PersistentTiclState::last_message_send_time_ms() const
    {
        // @@protoc_insertion_point(field_get:ipc.invalidation.PersistentTiclState.last_message_send_time_ms)
        return last_message_send_time_ms_;
    }
    inline void PersistentTiclState::set_last_message_send_time_ms(::google::protobuf::int64 value)
    {
        set_has_last_message_send_time_ms();
        last_message_send_time_ms_ = value;
        // @@protoc_insertion_point(field_set:ipc.invalidation.PersistentTiclState.last_message_send_time_ms)
    }

    // -------------------------------------------------------------------

    // PersistentStateBlob

    // optional .ipc.invalidation.PersistentTiclState ticl_state = 1;
    inline bool PersistentStateBlob::has_ticl_state() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    inline void PersistentStateBlob::set_has_ticl_state()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    inline void PersistentStateBlob::clear_has_ticl_state()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    inline void PersistentStateBlob::clear_ticl_state()
    {
        if (ticl_state_ != NULL)
            ticl_state_->::ipc::invalidation::PersistentTiclState::Clear();
        clear_has_ticl_state();
    }
    inline const ::ipc::invalidation::PersistentTiclState& PersistentStateBlob::ticl_state() const
    {
        // @@protoc_insertion_point(field_get:ipc.invalidation.PersistentStateBlob.ticl_state)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
        return ticl_state_ != NULL ? *ticl_state_ : *default_instance().ticl_state_;
#else
        return ticl_state_ != NULL ? *ticl_state_ : *default_instance_->ticl_state_;
#endif
    }
    inline ::ipc::invalidation::PersistentTiclState* PersistentStateBlob::mutable_ticl_state()
    {
        set_has_ticl_state();
        if (ticl_state_ == NULL) {
            ticl_state_ = new ::ipc::invalidation::PersistentTiclState;
        }
        // @@protoc_insertion_point(field_mutable:ipc.invalidation.PersistentStateBlob.ticl_state)
        return ticl_state_;
    }
    inline ::ipc::invalidation::PersistentTiclState* PersistentStateBlob::release_ticl_state()
    {
        // @@protoc_insertion_point(field_release:ipc.invalidation.PersistentStateBlob.ticl_state)
        clear_has_ticl_state();
        ::ipc::invalidation::PersistentTiclState* temp = ticl_state_;
        ticl_state_ = NULL;
        return temp;
    }
    inline void PersistentStateBlob::set_allocated_ticl_state(::ipc::invalidation::PersistentTiclState* ticl_state)
    {
        delete ticl_state_;
        ticl_state_ = ticl_state;
        if (ticl_state) {
            set_has_ticl_state();
        } else {
            clear_has_ticl_state();
        }
        // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.PersistentStateBlob.ticl_state)
    }

    // optional bytes authentication_code = 2;
    inline bool PersistentStateBlob::has_authentication_code() const
    {
        return (_has_bits_[0] & 0x00000002u) != 0;
    }
    inline void PersistentStateBlob::set_has_authentication_code()
    {
        _has_bits_[0] |= 0x00000002u;
    }
    inline void PersistentStateBlob::clear_has_authentication_code()
    {
        _has_bits_[0] &= ~0x00000002u;
    }
    inline void PersistentStateBlob::clear_authentication_code()
    {
        authentication_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        clear_has_authentication_code();
    }
    inline const ::std::string& PersistentStateBlob::authentication_code() const
    {
        // @@protoc_insertion_point(field_get:ipc.invalidation.PersistentStateBlob.authentication_code)
        return authentication_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void PersistentStateBlob::set_authentication_code(const ::std::string& value)
    {
        set_has_authentication_code();
        authentication_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
        // @@protoc_insertion_point(field_set:ipc.invalidation.PersistentStateBlob.authentication_code)
    }
    inline void PersistentStateBlob::set_authentication_code(const char* value)
    {
        set_has_authentication_code();
        authentication_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:ipc.invalidation.PersistentStateBlob.authentication_code)
    }
    inline void PersistentStateBlob::set_authentication_code(const void* value, size_t size)
    {
        set_has_authentication_code();
        authentication_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:ipc.invalidation.PersistentStateBlob.authentication_code)
    }
    inline ::std::string* PersistentStateBlob::mutable_authentication_code()
    {
        set_has_authentication_code();
        // @@protoc_insertion_point(field_mutable:ipc.invalidation.PersistentStateBlob.authentication_code)
        return authentication_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline ::std::string* PersistentStateBlob::release_authentication_code()
    {
        // @@protoc_insertion_point(field_release:ipc.invalidation.PersistentStateBlob.authentication_code)
        clear_has_authentication_code();
        return authentication_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    inline void PersistentStateBlob::set_allocated_authentication_code(::std::string* authentication_code)
    {
        if (authentication_code != NULL) {
            set_has_authentication_code();
        } else {
            clear_has_authentication_code();
        }
        authentication_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authentication_code);
        // @@protoc_insertion_point(field_set_allocated:ipc.invalidation.PersistentStateBlob.authentication_code)
    }

    // -------------------------------------------------------------------

    // RunStateP

    // optional .ipc.invalidation.RunStateP.State state = 1;
    inline bool RunStateP::has_state() const
    {
        return (_has_bits_[0] & 0x00000001u) != 0;
    }
    inline void RunStateP::set_has_state()
    {
        _has_bits_[0] |= 0x00000001u;
    }
    inline void RunStateP::clear_has_state()
    {
        _has_bits_[0] &= ~0x00000001u;
    }
    inline void RunStateP::clear_state()
    {
        state_ = 1;
        clear_has_state();
    }
    inline ::ipc::invalidation::RunStateP_State RunStateP::state() const
    {
        // @@protoc_insertion_point(field_get:ipc.invalidation.RunStateP.state)
        return static_cast<::ipc::invalidation::RunStateP_State>(state_);
    }
    inline void RunStateP::set_state(::ipc::invalidation::RunStateP_State value)
    {
        assert(::ipc::invalidation::RunStateP_State_IsValid(value));
        set_has_state();
        state_ = value;
        // @@protoc_insertion_point(field_set:ipc.invalidation.RunStateP.state)
    }

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS
    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // @@protoc_insertion_point(namespace_scope)

} // namespace invalidation
} // namespace ipc

#ifndef SWIG
namespace google {
namespace protobuf {

    template <>
    struct is_proto_enum<::ipc::invalidation::RunStateP_State> : ::google::protobuf::internal::true_type {
    };

} // namespace protobuf
} // namespace google
#endif // SWIG

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_client_2eproto__INCLUDED
