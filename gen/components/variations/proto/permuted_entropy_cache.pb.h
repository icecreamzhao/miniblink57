// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: permuted_entropy_cache.proto

#ifndef PROTOBUF_permuted_5fentropy_5fcache_2eproto__INCLUDED
#define PROTOBUF_permuted_5fentropy_5fcache_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace metrics {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_permuted_5fentropy_5fcache_2eproto();
void protobuf_AssignDesc_permuted_5fentropy_5fcache_2eproto();
void protobuf_ShutdownFile_permuted_5fentropy_5fcache_2eproto();

class PermutedEntropyCache;
class PermutedEntropyCache_Entry;

// ===================================================================

class PermutedEntropyCache_Entry : public ::google::protobuf::MessageLite {
public:
    PermutedEntropyCache_Entry();
    virtual ~PermutedEntropyCache_Entry();

    PermutedEntropyCache_Entry(const PermutedEntropyCache_Entry& from);

    inline PermutedEntropyCache_Entry& operator=(const PermutedEntropyCache_Entry& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const PermutedEntropyCache_Entry& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const PermutedEntropyCache_Entry* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(PermutedEntropyCache_Entry* other);

    // implements Message ----------------------------------------------

    inline PermutedEntropyCache_Entry* New() const { return New(NULL); }

    PermutedEntropyCache_Entry* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const PermutedEntropyCache_Entry& from);
    void MergeFrom(const PermutedEntropyCache_Entry& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(PermutedEntropyCache_Entry* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // required uint32 randomization_seed = 1;
    bool has_randomization_seed() const;
    void clear_randomization_seed();
    static const int kRandomizationSeedFieldNumber = 1;
    ::google::protobuf::uint32 randomization_seed() const;
    void set_randomization_seed(::google::protobuf::uint32 value);

    // required uint32 value = 2;
    bool has_value() const;
    void clear_value();
    static const int kValueFieldNumber = 2;
    ::google::protobuf::uint32 value() const;
    void set_value(::google::protobuf::uint32 value);

    // @@protoc_insertion_point(class_scope:metrics.PermutedEntropyCache.Entry)
private:
    inline void set_has_randomization_seed();
    inline void clear_has_randomization_seed();
    inline void set_has_value();
    inline void clear_has_value();

    // helper for ByteSize()
    int RequiredFieldsByteSizeFallback() const;

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::uint32 randomization_seed_;
    ::google::protobuf::uint32 value_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_permuted_5fentropy_5fcache_2eproto_impl();
#else
    friend void protobuf_AddDesc_permuted_5fentropy_5fcache_2eproto();
#endif
    friend void protobuf_AssignDesc_permuted_5fentropy_5fcache_2eproto();
    friend void protobuf_ShutdownFile_permuted_5fentropy_5fcache_2eproto();

    void InitAsDefaultInstance();
    static PermutedEntropyCache_Entry* default_instance_;
};
// -------------------------------------------------------------------

class PermutedEntropyCache : public ::google::protobuf::MessageLite {
public:
    PermutedEntropyCache();
    virtual ~PermutedEntropyCache();

    PermutedEntropyCache(const PermutedEntropyCache& from);

    inline PermutedEntropyCache& operator=(const PermutedEntropyCache& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const PermutedEntropyCache& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const PermutedEntropyCache* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(PermutedEntropyCache* other);

    // implements Message ----------------------------------------------

    inline PermutedEntropyCache* New() const { return New(NULL); }

    PermutedEntropyCache* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const PermutedEntropyCache& from);
    void MergeFrom(const PermutedEntropyCache& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(PermutedEntropyCache* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef PermutedEntropyCache_Entry Entry;

    // accessors -------------------------------------------------------

    // repeated .metrics.PermutedEntropyCache.Entry entry = 1;
    int entry_size() const;
    void clear_entry();
    static const int kEntryFieldNumber = 1;
    const ::metrics::PermutedEntropyCache_Entry& entry(int index) const;
    ::metrics::PermutedEntropyCache_Entry* mutable_entry(int index);
    ::metrics::PermutedEntropyCache_Entry* add_entry();
    ::google::protobuf::RepeatedPtrField<::metrics::PermutedEntropyCache_Entry>*
    mutable_entry();
    const ::google::protobuf::RepeatedPtrField<::metrics::PermutedEntropyCache_Entry>&
    entry() const;

    // @@protoc_insertion_point(class_scope:metrics.PermutedEntropyCache)
private:
    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::RepeatedPtrField<::metrics::PermutedEntropyCache_Entry> entry_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_permuted_5fentropy_5fcache_2eproto_impl();
#else
    friend void protobuf_AddDesc_permuted_5fentropy_5fcache_2eproto();
#endif
    friend void protobuf_AssignDesc_permuted_5fentropy_5fcache_2eproto();
    friend void protobuf_ShutdownFile_permuted_5fentropy_5fcache_2eproto();

    void InitAsDefaultInstance();
    static PermutedEntropyCache* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PermutedEntropyCache_Entry

// required uint32 randomization_seed = 1;
inline bool PermutedEntropyCache_Entry::has_randomization_seed() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PermutedEntropyCache_Entry::set_has_randomization_seed()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void PermutedEntropyCache_Entry::clear_has_randomization_seed()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void PermutedEntropyCache_Entry::clear_randomization_seed()
{
    randomization_seed_ = 0u;
    clear_has_randomization_seed();
}
inline ::google::protobuf::uint32 PermutedEntropyCache_Entry::randomization_seed() const
{
    // @@protoc_insertion_point(field_get:metrics.PermutedEntropyCache.Entry.randomization_seed)
    return randomization_seed_;
}
inline void PermutedEntropyCache_Entry::set_randomization_seed(::google::protobuf::uint32 value)
{
    set_has_randomization_seed();
    randomization_seed_ = value;
    // @@protoc_insertion_point(field_set:metrics.PermutedEntropyCache.Entry.randomization_seed)
}

// required uint32 value = 2;
inline bool PermutedEntropyCache_Entry::has_value() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PermutedEntropyCache_Entry::set_has_value()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void PermutedEntropyCache_Entry::clear_has_value()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void PermutedEntropyCache_Entry::clear_value()
{
    value_ = 0u;
    clear_has_value();
}
inline ::google::protobuf::uint32 PermutedEntropyCache_Entry::value() const
{
    // @@protoc_insertion_point(field_get:metrics.PermutedEntropyCache.Entry.value)
    return value_;
}
inline void PermutedEntropyCache_Entry::set_value(::google::protobuf::uint32 value)
{
    set_has_value();
    value_ = value;
    // @@protoc_insertion_point(field_set:metrics.PermutedEntropyCache.Entry.value)
}

// -------------------------------------------------------------------

// PermutedEntropyCache

// repeated .metrics.PermutedEntropyCache.Entry entry = 1;
inline int PermutedEntropyCache::entry_size() const
{
    return entry_.size();
}
inline void PermutedEntropyCache::clear_entry()
{
    entry_.Clear();
}
inline const ::metrics::PermutedEntropyCache_Entry& PermutedEntropyCache::entry(int index) const
{
    // @@protoc_insertion_point(field_get:metrics.PermutedEntropyCache.entry)
    return entry_.Get(index);
}
inline ::metrics::PermutedEntropyCache_Entry* PermutedEntropyCache::mutable_entry(int index)
{
    // @@protoc_insertion_point(field_mutable:metrics.PermutedEntropyCache.entry)
    return entry_.Mutable(index);
}
inline ::metrics::PermutedEntropyCache_Entry* PermutedEntropyCache::add_entry()
{
    // @@protoc_insertion_point(field_add:metrics.PermutedEntropyCache.entry)
    return entry_.Add();
}
inline ::google::protobuf::RepeatedPtrField<::metrics::PermutedEntropyCache_Entry>*
PermutedEntropyCache::mutable_entry()
{
    // @@protoc_insertion_point(field_mutable_list:metrics.PermutedEntropyCache.entry)
    return &entry_;
}
inline const ::google::protobuf::RepeatedPtrField<::metrics::PermutedEntropyCache_Entry>&
PermutedEntropyCache::entry() const
{
    // @@protoc_insertion_point(field_list:metrics.PermutedEntropyCache.entry)
    return entry_;
}

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// @@protoc_insertion_point(namespace_scope)

} // namespace metrics

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_permuted_5fentropy_5fcache_2eproto__INCLUDED
