// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/variations/VariationsAssociatedData

#ifndef org_chromium_components_variations_VariationsAssociatedData_JNI
#define org_chromium_components_variations_VariationsAssociatedData_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kVariationsAssociatedDataClassPath[] = "org/chromium/components/variations/VariationsAssociatedData";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_VariationsAssociatedData_clazz
    __attribute__((unused))
    = 0;
#define VariationsAssociatedData_clazz(env) base::android::LazyGetClass(env, kVariationsAssociatedDataClassPath, &g_VariationsAssociatedData_clazz)

} // namespace

namespace variations {
namespace android {

    // Step 2: method stubs.

    static base::android::ScopedJavaLocalRef<jstring> GetVariationParamValue(JNIEnv*
                                                                                 env,
        const base::android::JavaParamRef<jclass>& jcaller,
        const base::android::JavaParamRef<jstring>& trialName,
        const base::android::JavaParamRef<jstring>& paramName);

    JNI_GENERATOR_EXPORT jstring
    Java_org_chromium_components_variations_VariationsAssociatedData_nativeGetVariationParamValue(JNIEnv*
                                                                                                      env,
        jclass jcaller,
        jstring trialName,
        jstring paramName)
    {
        return GetVariationParamValue(env, base::android::JavaParamRef<jclass>(env, jcaller), base::android::JavaParamRef<jstring>(env, trialName),
            base::android::JavaParamRef<jstring>(env, paramName))
            .Release();
    }

    static base::android::ScopedJavaLocalRef<jstring> GetFeedbackVariations(JNIEnv*
                                                                                env,
        const base::android::JavaParamRef<jclass>& jcaller);

    JNI_GENERATOR_EXPORT jstring
    Java_org_chromium_components_variations_VariationsAssociatedData_nativeGetFeedbackVariations(JNIEnv*
                                                                                                     env,
        jclass jcaller)
    {
        return GetFeedbackVariations(env, base::android::JavaParamRef<jclass>(env, jcaller)).Release();
    }

    // Step 3: RegisterNatives.

    static const JNINativeMethod kMethodsVariationsAssociatedData[] = {
        { "nativeGetVariationParamValue",
            "("
            "Ljava/lang/String;"
            "Ljava/lang/String;"
            ")"
            "Ljava/lang/String;",
            reinterpret_cast<void*>(Java_org_chromium_components_variations_VariationsAssociatedData_nativeGetVariationParamValue) },
        { "nativeGetFeedbackVariations",
            "("
            ")"
            "Ljava/lang/String;",
            reinterpret_cast<void*>(Java_org_chromium_components_variations_VariationsAssociatedData_nativeGetFeedbackVariations) },
    };

    static bool RegisterNativesImpl(JNIEnv* env)
    {
        if (base::android::IsManualJniRegistrationDisabled())
            return true;

        const int kMethodsVariationsAssociatedDataSize = arraysize(kMethodsVariationsAssociatedData);

        if (env->RegisterNatives(VariationsAssociatedData_clazz(env),
                kMethodsVariationsAssociatedData,
                kMethodsVariationsAssociatedDataSize)
            < 0) {
            jni_generator::HandleRegistrationError(
                env, VariationsAssociatedData_clazz(env), __FILE__);
            return false;
        }

        return true;
    }

} // namespace android
} // namespace variations

#endif // org_chromium_components_variations_VariationsAssociatedData_JNI
