// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rappor_metric.proto

#ifndef PROTOBUF_rappor_5fmetric_2eproto__INCLUDED
#define PROTOBUF_rappor_5fmetric_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace rappor {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_rappor_5fmetric_2eproto();
void protobuf_AssignDesc_rappor_5fmetric_2eproto();
void protobuf_ShutdownFile_rappor_5fmetric_2eproto();

class RapporReports;
class RapporReports_Report;

// ===================================================================

class RapporReports_Report : public ::google::protobuf::MessageLite {
public:
    RapporReports_Report();
    virtual ~RapporReports_Report();

    RapporReports_Report(const RapporReports_Report& from);

    inline RapporReports_Report& operator=(const RapporReports_Report& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const RapporReports_Report& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const RapporReports_Report* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(RapporReports_Report* other);

    // implements Message ----------------------------------------------

    inline RapporReports_Report* New() const { return New(NULL); }

    RapporReports_Report* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const RapporReports_Report& from);
    void MergeFrom(const RapporReports_Report& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(RapporReports_Report* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional fixed64 name_hash = 1;
    bool has_name_hash() const;
    void clear_name_hash();
    static const int kNameHashFieldNumber = 1;
    ::google::protobuf::uint64 name_hash() const;
    void set_name_hash(::google::protobuf::uint64 value);

    // optional bytes bits = 2;
    bool has_bits() const;
    void clear_bits();
    static const int kBitsFieldNumber = 2;
    const ::std::string& bits() const;
    void set_bits(const ::std::string& value);
    void set_bits(const char* value);
    void set_bits(const void* value, size_t size);
    ::std::string* mutable_bits();
    ::std::string* release_bits();
    void set_allocated_bits(::std::string* bits);

    // @@protoc_insertion_point(class_scope:rappor.RapporReports.Report)
private:
    inline void set_has_name_hash();
    inline void clear_has_name_hash();
    inline void set_has_bits();
    inline void clear_has_bits();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::uint64 name_hash_;
    ::google::protobuf::internal::ArenaStringPtr bits_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_rappor_5fmetric_2eproto_impl();
#else
    friend void protobuf_AddDesc_rappor_5fmetric_2eproto();
#endif
    friend void protobuf_AssignDesc_rappor_5fmetric_2eproto();
    friend void protobuf_ShutdownFile_rappor_5fmetric_2eproto();

    void InitAsDefaultInstance();
    static RapporReports_Report* default_instance_;
};
// -------------------------------------------------------------------

class RapporReports : public ::google::protobuf::MessageLite {
public:
    RapporReports();
    virtual ~RapporReports();

    RapporReports(const RapporReports& from);

    inline RapporReports& operator=(const RapporReports& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const RapporReports& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const RapporReports* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(RapporReports* other);

    // implements Message ----------------------------------------------

    inline RapporReports* New() const { return New(NULL); }

    RapporReports* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const RapporReports& from);
    void MergeFrom(const RapporReports& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(RapporReports* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef RapporReports_Report Report;

    // accessors -------------------------------------------------------

    // optional int32 cohort = 1;
    bool has_cohort() const;
    void clear_cohort();
    static const int kCohortFieldNumber = 1;
    ::google::protobuf::int32 cohort() const;
    void set_cohort(::google::protobuf::int32 value);

    // repeated .rappor.RapporReports.Report report = 2;
    int report_size() const;
    void clear_report();
    static const int kReportFieldNumber = 2;
    const ::rappor::RapporReports_Report& report(int index) const;
    ::rappor::RapporReports_Report* mutable_report(int index);
    ::rappor::RapporReports_Report* add_report();
    ::google::protobuf::RepeatedPtrField<::rappor::RapporReports_Report>*
    mutable_report();
    const ::google::protobuf::RepeatedPtrField<::rappor::RapporReports_Report>&
    report() const;

    // @@protoc_insertion_point(class_scope:rappor.RapporReports)
private:
    inline void set_has_cohort();
    inline void clear_has_cohort();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::RepeatedPtrField<::rappor::RapporReports_Report> report_;
    ::google::protobuf::int32 cohort_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_rappor_5fmetric_2eproto_impl();
#else
    friend void protobuf_AddDesc_rappor_5fmetric_2eproto();
#endif
    friend void protobuf_AssignDesc_rappor_5fmetric_2eproto();
    friend void protobuf_ShutdownFile_rappor_5fmetric_2eproto();

    void InitAsDefaultInstance();
    static RapporReports* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RapporReports_Report

// optional fixed64 name_hash = 1;
inline bool RapporReports_Report::has_name_hash() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RapporReports_Report::set_has_name_hash()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void RapporReports_Report::clear_has_name_hash()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void RapporReports_Report::clear_name_hash()
{
    name_hash_ = GOOGLE_ULONGLONG(0);
    clear_has_name_hash();
}
inline ::google::protobuf::uint64 RapporReports_Report::name_hash() const
{
    // @@protoc_insertion_point(field_get:rappor.RapporReports.Report.name_hash)
    return name_hash_;
}
inline void RapporReports_Report::set_name_hash(::google::protobuf::uint64 value)
{
    set_has_name_hash();
    name_hash_ = value;
    // @@protoc_insertion_point(field_set:rappor.RapporReports.Report.name_hash)
}

// optional bytes bits = 2;
inline bool RapporReports_Report::has_bits() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RapporReports_Report::set_has_bits()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void RapporReports_Report::clear_has_bits()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void RapporReports_Report::clear_bits()
{
    bits_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_bits();
}
inline const ::std::string& RapporReports_Report::bits() const
{
    // @@protoc_insertion_point(field_get:rappor.RapporReports.Report.bits)
    return bits_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RapporReports_Report::set_bits(const ::std::string& value)
{
    set_has_bits();
    bits_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:rappor.RapporReports.Report.bits)
}
inline void RapporReports_Report::set_bits(const char* value)
{
    set_has_bits();
    bits_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:rappor.RapporReports.Report.bits)
}
inline void RapporReports_Report::set_bits(const void* value, size_t size)
{
    set_has_bits();
    bits_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:rappor.RapporReports.Report.bits)
}
inline ::std::string* RapporReports_Report::mutable_bits()
{
    set_has_bits();
    // @@protoc_insertion_point(field_mutable:rappor.RapporReports.Report.bits)
    return bits_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RapporReports_Report::release_bits()
{
    // @@protoc_insertion_point(field_release:rappor.RapporReports.Report.bits)
    clear_has_bits();
    return bits_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RapporReports_Report::set_allocated_bits(::std::string* bits)
{
    if (bits != NULL) {
        set_has_bits();
    } else {
        clear_has_bits();
    }
    bits_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bits);
    // @@protoc_insertion_point(field_set_allocated:rappor.RapporReports.Report.bits)
}

// -------------------------------------------------------------------

// RapporReports

// optional int32 cohort = 1;
inline bool RapporReports::has_cohort() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RapporReports::set_has_cohort()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void RapporReports::clear_has_cohort()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void RapporReports::clear_cohort()
{
    cohort_ = 0;
    clear_has_cohort();
}
inline ::google::protobuf::int32 RapporReports::cohort() const
{
    // @@protoc_insertion_point(field_get:rappor.RapporReports.cohort)
    return cohort_;
}
inline void RapporReports::set_cohort(::google::protobuf::int32 value)
{
    set_has_cohort();
    cohort_ = value;
    // @@protoc_insertion_point(field_set:rappor.RapporReports.cohort)
}

// repeated .rappor.RapporReports.Report report = 2;
inline int RapporReports::report_size() const
{
    return report_.size();
}
inline void RapporReports::clear_report()
{
    report_.Clear();
}
inline const ::rappor::RapporReports_Report& RapporReports::report(int index) const
{
    // @@protoc_insertion_point(field_get:rappor.RapporReports.report)
    return report_.Get(index);
}
inline ::rappor::RapporReports_Report* RapporReports::mutable_report(int index)
{
    // @@protoc_insertion_point(field_mutable:rappor.RapporReports.report)
    return report_.Mutable(index);
}
inline ::rappor::RapporReports_Report* RapporReports::add_report()
{
    // @@protoc_insertion_point(field_add:rappor.RapporReports.report)
    return report_.Add();
}
inline ::google::protobuf::RepeatedPtrField<::rappor::RapporReports_Report>*
RapporReports::mutable_report()
{
    // @@protoc_insertion_point(field_mutable_list:rappor.RapporReports.report)
    return &report_;
}
inline const ::google::protobuf::RepeatedPtrField<::rappor::RapporReports_Report>&
RapporReports::report() const
{
    // @@protoc_insertion_point(field_list:rappor.RapporReports.report)
    return report_;
}

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// @@protoc_insertion_point(namespace_scope)

} // namespace rappor

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_rappor_5fmetric_2eproto__INCLUDED
