// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloud_policy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cloud_policy.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace enterprise_management {

void protobuf_ShutdownFile_cloud_5fpolicy_2eproto()
{
    delete StringList::default_instance_;
    delete PolicyOptions::default_instance_;
    delete BooleanPolicyProto::default_instance_;
    delete IntegerPolicyProto::default_instance_;
    delete StringPolicyProto::default_instance_;
    delete StringListPolicyProto::default_instance_;
    delete CloudPolicySettings::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_cloud_5fpolicy_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_cloud_5fpolicy_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    StringList::default_instance_ = new StringList();
    PolicyOptions::default_instance_ = new PolicyOptions();
    BooleanPolicyProto::default_instance_ = new BooleanPolicyProto();
    IntegerPolicyProto::default_instance_ = new IntegerPolicyProto();
    StringPolicyProto::default_instance_ = new StringPolicyProto();
    StringListPolicyProto::default_instance_ = new StringListPolicyProto();
    CloudPolicySettings::default_instance_ = new CloudPolicySettings();
    StringList::default_instance_->InitAsDefaultInstance();
    PolicyOptions::default_instance_->InitAsDefaultInstance();
    BooleanPolicyProto::default_instance_->InitAsDefaultInstance();
    IntegerPolicyProto::default_instance_->InitAsDefaultInstance();
    StringPolicyProto::default_instance_->InitAsDefaultInstance();
    StringListPolicyProto::default_instance_->InitAsDefaultInstance();
    CloudPolicySettings::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_cloud_5fpolicy_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_cloud_5fpolicy_2eproto_once_);
void protobuf_AddDesc_cloud_5fpolicy_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_cloud_5fpolicy_2eproto_once_,
        &protobuf_AddDesc_cloud_5fpolicy_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_cloud_5fpolicy_2eproto {
    StaticDescriptorInitializer_cloud_5fpolicy_2eproto()
    {
        protobuf_AddDesc_cloud_5fpolicy_2eproto();
    }
} static_descriptor_initializer_cloud_5fpolicy_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForStringList(
    StringList* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringList::kEntriesFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

StringList::StringList()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:enterprise_management.StringList)
}

void StringList::InitAsDefaultInstance()
{
}

StringList::StringList(const StringList& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:enterprise_management.StringList)
}

void StringList::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StringList::~StringList()
{
    // @@protoc_insertion_point(destructor:enterprise_management.StringList)
    SharedDtor();
}

void StringList::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void StringList::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StringList& StringList::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_cloud_5fpolicy_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_cloud_5fpolicy_2eproto();
#endif
    return *default_instance_;
}

StringList* StringList::default_instance_ = NULL;

StringList* StringList::New(::google::protobuf::Arena* arena) const
{
    StringList* n = new StringList;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void StringList::Clear()
{
    // @@protoc_insertion_point(message_clear_start:enterprise_management.StringList)
    entries_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StringList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForStringList, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:enterprise_management.StringList)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // repeated string entries = 1;
        case 1: {
            if (tag == 10) {
            parse_entries:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->add_entries()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(10))
                goto parse_entries;
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:enterprise_management.StringList)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:enterprise_management.StringList)
    return false;
#undef DO_
}

void StringList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:enterprise_management.StringList)
    // repeated string entries = 1;
    for (int i = 0; i < this->entries_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteString(
            1, this->entries(i), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:enterprise_management.StringList)
}

int StringList::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:enterprise_management.StringList)
    int total_size = 0;

    // repeated string entries = 1;
    total_size += 1 * this->entries_size();
    for (int i = 0; i < this->entries_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this->entries(i));
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void StringList::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const StringList*>(&from));
}

void StringList::MergeFrom(const StringList& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.StringList)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    entries_.MergeFrom(from.entries_);
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void StringList::CopyFrom(const StringList& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.StringList)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool StringList::IsInitialized() const
{

    return true;
}

void StringList::Swap(StringList* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void StringList::InternalSwap(StringList* other)
{
    entries_.UnsafeArenaSwap(&other->entries_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string StringList::GetTypeName() const
{
    return "enterprise_management.StringList";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringList

// repeated string entries = 1;
int StringList::entries_size() const
{
    return entries_.size();
}
void StringList::clear_entries()
{
    entries_.Clear();
}
const ::std::string& StringList::entries(int index) const
{
    // @@protoc_insertion_point(field_get:enterprise_management.StringList.entries)
    return entries_.Get(index);
}
::std::string* StringList::mutable_entries(int index)
{
    // @@protoc_insertion_point(field_mutable:enterprise_management.StringList.entries)
    return entries_.Mutable(index);
}
void StringList::set_entries(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:enterprise_management.StringList.entries)
    entries_.Mutable(index)->assign(value);
}
void StringList::set_entries(int index, const char* value)
{
    entries_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:enterprise_management.StringList.entries)
}
void StringList::set_entries(int index, const char* value, size_t size)
{
    entries_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:enterprise_management.StringList.entries)
}
::std::string* StringList::add_entries()
{
    // @@protoc_insertion_point(field_add_mutable:enterprise_management.StringList.entries)
    return entries_.Add();
}
void StringList::add_entries(const ::std::string& value)
{
    entries_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:enterprise_management.StringList.entries)
}
void StringList::add_entries(const char* value)
{
    entries_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:enterprise_management.StringList.entries)
}
void StringList::add_entries(const char* value, size_t size)
{
    entries_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:enterprise_management.StringList.entries)
}
const ::google::protobuf::RepeatedPtrField<::std::string>&
StringList::entries() const
{
    // @@protoc_insertion_point(field_list:enterprise_management.StringList.entries)
    return entries_;
}
::google::protobuf::RepeatedPtrField<::std::string>*
StringList::mutable_entries()
{
    // @@protoc_insertion_point(field_mutable_list:enterprise_management.StringList.entries)
    return &entries_;
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForPolicyOptions(
    PolicyOptions* ptr)
{
    return ptr->mutable_unknown_fields();
}

bool PolicyOptions_PolicyMode_IsValid(int value)
{
    switch (value) {
    case 0:
    case 1:
    case 2:
        return true;
    default:
        return false;
    }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PolicyOptions_PolicyMode PolicyOptions::MANDATORY;
const PolicyOptions_PolicyMode PolicyOptions::RECOMMENDED;
const PolicyOptions_PolicyMode PolicyOptions::UNSET;
const PolicyOptions_PolicyMode PolicyOptions::PolicyMode_MIN;
const PolicyOptions_PolicyMode PolicyOptions::PolicyMode_MAX;
const int PolicyOptions::PolicyMode_ARRAYSIZE;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PolicyOptions::kModeFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

PolicyOptions::PolicyOptions()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:enterprise_management.PolicyOptions)
}

void PolicyOptions::InitAsDefaultInstance()
{
}

PolicyOptions::PolicyOptions(const PolicyOptions& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:enterprise_management.PolicyOptions)
}

void PolicyOptions::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    mode_ = 0;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PolicyOptions::~PolicyOptions()
{
    // @@protoc_insertion_point(destructor:enterprise_management.PolicyOptions)
    SharedDtor();
}

void PolicyOptions::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void PolicyOptions::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PolicyOptions& PolicyOptions::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_cloud_5fpolicy_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_cloud_5fpolicy_2eproto();
#endif
    return *default_instance_;
}

PolicyOptions* PolicyOptions::default_instance_ = NULL;

PolicyOptions* PolicyOptions::New(::google::protobuf::Arena* arena) const
{
    PolicyOptions* n = new PolicyOptions;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void PolicyOptions::Clear()
{
    // @@protoc_insertion_point(message_clear_start:enterprise_management.PolicyOptions)
    mode_ = 0;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PolicyOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForPolicyOptions, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:enterprise_management.PolicyOptions)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional .enterprise_management.PolicyOptions.PolicyMode mode = 1 [default = MANDATORY];
        case 1: {
            if (tag == 8) {
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::enterprise_management::PolicyOptions_PolicyMode_IsValid(value)) {
                    set_mode(static_cast<::enterprise_management::PolicyOptions_PolicyMode>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(8);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:enterprise_management.PolicyOptions)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:enterprise_management.PolicyOptions)
    return false;
#undef DO_
}

void PolicyOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:enterprise_management.PolicyOptions)
    // optional .enterprise_management.PolicyOptions.PolicyMode mode = 1 [default = MANDATORY];
    if (has_mode()) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            1, this->mode(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:enterprise_management.PolicyOptions)
}

int PolicyOptions::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:enterprise_management.PolicyOptions)
    int total_size = 0;

    // optional .enterprise_management.PolicyOptions.PolicyMode mode = 1 [default = MANDATORY];
    if (has_mode()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void PolicyOptions::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const PolicyOptions*>(&from));
}

void PolicyOptions::MergeFrom(const PolicyOptions& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.PolicyOptions)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_mode()) {
            set_mode(from.mode());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void PolicyOptions::CopyFrom(const PolicyOptions& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.PolicyOptions)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool PolicyOptions::IsInitialized() const
{

    return true;
}

void PolicyOptions::Swap(PolicyOptions* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void PolicyOptions::InternalSwap(PolicyOptions* other)
{
    std::swap(mode_, other->mode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string PolicyOptions::GetTypeName() const
{
    return "enterprise_management.PolicyOptions";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PolicyOptions

// optional .enterprise_management.PolicyOptions.PolicyMode mode = 1 [default = MANDATORY];
bool PolicyOptions::has_mode() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void PolicyOptions::set_has_mode()
{
    _has_bits_[0] |= 0x00000001u;
}
void PolicyOptions::clear_has_mode()
{
    _has_bits_[0] &= ~0x00000001u;
}
void PolicyOptions::clear_mode()
{
    mode_ = 0;
    clear_has_mode();
}
::enterprise_management::PolicyOptions_PolicyMode PolicyOptions::mode() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.PolicyOptions.mode)
    return static_cast<::enterprise_management::PolicyOptions_PolicyMode>(mode_);
}
void PolicyOptions::set_mode(::enterprise_management::PolicyOptions_PolicyMode value)
{
    assert(::enterprise_management::PolicyOptions_PolicyMode_IsValid(value));
    set_has_mode();
    mode_ = value;
    // @@protoc_insertion_point(field_set:enterprise_management.PolicyOptions.mode)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForBooleanPolicyProto(
    BooleanPolicyProto* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BooleanPolicyProto::kPolicyOptionsFieldNumber;
const int BooleanPolicyProto::kValueFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

BooleanPolicyProto::BooleanPolicyProto()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:enterprise_management.BooleanPolicyProto)
}

void BooleanPolicyProto::InitAsDefaultInstance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    policy_options_ = const_cast<::enterprise_management::PolicyOptions*>(
        ::enterprise_management::PolicyOptions::internal_default_instance());
#else
    policy_options_ = const_cast<::enterprise_management::PolicyOptions*>(&::enterprise_management::PolicyOptions::default_instance());
#endif
}

BooleanPolicyProto::BooleanPolicyProto(const BooleanPolicyProto& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:enterprise_management.BooleanPolicyProto)
}

void BooleanPolicyProto::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    policy_options_ = NULL;
    value_ = false;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BooleanPolicyProto::~BooleanPolicyProto()
{
    // @@protoc_insertion_point(destructor:enterprise_management.BooleanPolicyProto)
    SharedDtor();
}

void BooleanPolicyProto::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
        delete policy_options_;
    }
}

void BooleanPolicyProto::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BooleanPolicyProto& BooleanPolicyProto::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_cloud_5fpolicy_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_cloud_5fpolicy_2eproto();
#endif
    return *default_instance_;
}

BooleanPolicyProto* BooleanPolicyProto::default_instance_ = NULL;

BooleanPolicyProto* BooleanPolicyProto::New(::google::protobuf::Arena* arena) const
{
    BooleanPolicyProto* n = new BooleanPolicyProto;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void BooleanPolicyProto::Clear()
{
    // @@protoc_insertion_point(message_clear_start:enterprise_management.BooleanPolicyProto)
    if (_has_bits_[0 / 32] & 3u) {
        if (has_policy_options()) {
            if (policy_options_ != NULL)
                policy_options_->::enterprise_management::PolicyOptions::Clear();
        }
        value_ = false;
    }
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BooleanPolicyProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForBooleanPolicyProto, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:enterprise_management.BooleanPolicyProto)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional .enterprise_management.PolicyOptions policy_options = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_policy_options()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(16))
                goto parse_value;
            break;
        }

        // optional bool value = 2;
        case 2: {
            if (tag == 16) {
            parse_value:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                    input, &value_)));
                set_has_value();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:enterprise_management.BooleanPolicyProto)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:enterprise_management.BooleanPolicyProto)
    return false;
#undef DO_
}

void BooleanPolicyProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:enterprise_management.BooleanPolicyProto)
    // optional .enterprise_management.PolicyOptions policy_options = 1;
    if (has_policy_options()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            1, *this->policy_options_, output);
    }

    // optional bool value = 2;
    if (has_value()) {
        ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->value(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:enterprise_management.BooleanPolicyProto)
}

int BooleanPolicyProto::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:enterprise_management.BooleanPolicyProto)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 3u) {
        // optional .enterprise_management.PolicyOptions policy_options = 1;
        if (has_policy_options()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->policy_options_);
        }

        // optional bool value = 2;
        if (has_value()) {
            total_size += 1 + 1;
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void BooleanPolicyProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const BooleanPolicyProto*>(&from));
}

void BooleanPolicyProto::MergeFrom(const BooleanPolicyProto& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.BooleanPolicyProto)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_policy_options()) {
            mutable_policy_options()->::enterprise_management::PolicyOptions::MergeFrom(from.policy_options());
        }
        if (from.has_value()) {
            set_value(from.value());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void BooleanPolicyProto::CopyFrom(const BooleanPolicyProto& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.BooleanPolicyProto)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool BooleanPolicyProto::IsInitialized() const
{

    return true;
}

void BooleanPolicyProto::Swap(BooleanPolicyProto* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void BooleanPolicyProto::InternalSwap(BooleanPolicyProto* other)
{
    std::swap(policy_options_, other->policy_options_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string BooleanPolicyProto::GetTypeName() const
{
    return "enterprise_management.BooleanPolicyProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BooleanPolicyProto

// optional .enterprise_management.PolicyOptions policy_options = 1;
bool BooleanPolicyProto::has_policy_options() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void BooleanPolicyProto::set_has_policy_options()
{
    _has_bits_[0] |= 0x00000001u;
}
void BooleanPolicyProto::clear_has_policy_options()
{
    _has_bits_[0] &= ~0x00000001u;
}
void BooleanPolicyProto::clear_policy_options()
{
    if (policy_options_ != NULL)
        policy_options_->::enterprise_management::PolicyOptions::Clear();
    clear_has_policy_options();
}
const ::enterprise_management::PolicyOptions& BooleanPolicyProto::policy_options() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.BooleanPolicyProto.policy_options)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return policy_options_ != NULL ? *policy_options_ : *default_instance().policy_options_;
#else
    return policy_options_ != NULL ? *policy_options_ : *default_instance_->policy_options_;
#endif
}
::enterprise_management::PolicyOptions* BooleanPolicyProto::mutable_policy_options()
{
    set_has_policy_options();
    if (policy_options_ == NULL) {
        policy_options_ = new ::enterprise_management::PolicyOptions;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.BooleanPolicyProto.policy_options)
    return policy_options_;
}
::enterprise_management::PolicyOptions* BooleanPolicyProto::release_policy_options()
{
    // @@protoc_insertion_point(field_release:enterprise_management.BooleanPolicyProto.policy_options)
    clear_has_policy_options();
    ::enterprise_management::PolicyOptions* temp = policy_options_;
    policy_options_ = NULL;
    return temp;
}
void BooleanPolicyProto::set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options)
{
    delete policy_options_;
    policy_options_ = policy_options;
    if (policy_options) {
        set_has_policy_options();
    } else {
        clear_has_policy_options();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.BooleanPolicyProto.policy_options)
}

// optional bool value = 2;
bool BooleanPolicyProto::has_value() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void BooleanPolicyProto::set_has_value()
{
    _has_bits_[0] |= 0x00000002u;
}
void BooleanPolicyProto::clear_has_value()
{
    _has_bits_[0] &= ~0x00000002u;
}
void BooleanPolicyProto::clear_value()
{
    value_ = false;
    clear_has_value();
}
bool BooleanPolicyProto::value() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.BooleanPolicyProto.value)
    return value_;
}
void BooleanPolicyProto::set_value(bool value)
{
    set_has_value();
    value_ = value;
    // @@protoc_insertion_point(field_set:enterprise_management.BooleanPolicyProto.value)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForIntegerPolicyProto(
    IntegerPolicyProto* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntegerPolicyProto::kPolicyOptionsFieldNumber;
const int IntegerPolicyProto::kValueFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

IntegerPolicyProto::IntegerPolicyProto()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:enterprise_management.IntegerPolicyProto)
}

void IntegerPolicyProto::InitAsDefaultInstance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    policy_options_ = const_cast<::enterprise_management::PolicyOptions*>(
        ::enterprise_management::PolicyOptions::internal_default_instance());
#else
    policy_options_ = const_cast<::enterprise_management::PolicyOptions*>(&::enterprise_management::PolicyOptions::default_instance());
#endif
}

IntegerPolicyProto::IntegerPolicyProto(const IntegerPolicyProto& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:enterprise_management.IntegerPolicyProto)
}

void IntegerPolicyProto::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    policy_options_ = NULL;
    value_ = GOOGLE_LONGLONG(0);
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IntegerPolicyProto::~IntegerPolicyProto()
{
    // @@protoc_insertion_point(destructor:enterprise_management.IntegerPolicyProto)
    SharedDtor();
}

void IntegerPolicyProto::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
        delete policy_options_;
    }
}

void IntegerPolicyProto::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IntegerPolicyProto& IntegerPolicyProto::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_cloud_5fpolicy_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_cloud_5fpolicy_2eproto();
#endif
    return *default_instance_;
}

IntegerPolicyProto* IntegerPolicyProto::default_instance_ = NULL;

IntegerPolicyProto* IntegerPolicyProto::New(::google::protobuf::Arena* arena) const
{
    IntegerPolicyProto* n = new IntegerPolicyProto;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void IntegerPolicyProto::Clear()
{
    // @@protoc_insertion_point(message_clear_start:enterprise_management.IntegerPolicyProto)
    if (_has_bits_[0 / 32] & 3u) {
        if (has_policy_options()) {
            if (policy_options_ != NULL)
                policy_options_->::enterprise_management::PolicyOptions::Clear();
        }
        value_ = GOOGLE_LONGLONG(0);
    }
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool IntegerPolicyProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForIntegerPolicyProto, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:enterprise_management.IntegerPolicyProto)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional .enterprise_management.PolicyOptions policy_options = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_policy_options()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(16))
                goto parse_value;
            break;
        }

        // optional int64 value = 2;
        case 2: {
            if (tag == 16) {
            parse_value:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &value_)));
                set_has_value();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:enterprise_management.IntegerPolicyProto)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:enterprise_management.IntegerPolicyProto)
    return false;
#undef DO_
}

void IntegerPolicyProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:enterprise_management.IntegerPolicyProto)
    // optional .enterprise_management.PolicyOptions policy_options = 1;
    if (has_policy_options()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            1, *this->policy_options_, output);
    }

    // optional int64 value = 2;
    if (has_value()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->value(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:enterprise_management.IntegerPolicyProto)
}

int IntegerPolicyProto::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:enterprise_management.IntegerPolicyProto)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 3u) {
        // optional .enterprise_management.PolicyOptions policy_options = 1;
        if (has_policy_options()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->policy_options_);
        }

        // optional int64 value = 2;
        if (has_value()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->value());
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void IntegerPolicyProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const IntegerPolicyProto*>(&from));
}

void IntegerPolicyProto::MergeFrom(const IntegerPolicyProto& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.IntegerPolicyProto)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_policy_options()) {
            mutable_policy_options()->::enterprise_management::PolicyOptions::MergeFrom(from.policy_options());
        }
        if (from.has_value()) {
            set_value(from.value());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void IntegerPolicyProto::CopyFrom(const IntegerPolicyProto& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.IntegerPolicyProto)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool IntegerPolicyProto::IsInitialized() const
{

    return true;
}

void IntegerPolicyProto::Swap(IntegerPolicyProto* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void IntegerPolicyProto::InternalSwap(IntegerPolicyProto* other)
{
    std::swap(policy_options_, other->policy_options_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string IntegerPolicyProto::GetTypeName() const
{
    return "enterprise_management.IntegerPolicyProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IntegerPolicyProto

// optional .enterprise_management.PolicyOptions policy_options = 1;
bool IntegerPolicyProto::has_policy_options() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void IntegerPolicyProto::set_has_policy_options()
{
    _has_bits_[0] |= 0x00000001u;
}
void IntegerPolicyProto::clear_has_policy_options()
{
    _has_bits_[0] &= ~0x00000001u;
}
void IntegerPolicyProto::clear_policy_options()
{
    if (policy_options_ != NULL)
        policy_options_->::enterprise_management::PolicyOptions::Clear();
    clear_has_policy_options();
}
const ::enterprise_management::PolicyOptions& IntegerPolicyProto::policy_options() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.IntegerPolicyProto.policy_options)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return policy_options_ != NULL ? *policy_options_ : *default_instance().policy_options_;
#else
    return policy_options_ != NULL ? *policy_options_ : *default_instance_->policy_options_;
#endif
}
::enterprise_management::PolicyOptions* IntegerPolicyProto::mutable_policy_options()
{
    set_has_policy_options();
    if (policy_options_ == NULL) {
        policy_options_ = new ::enterprise_management::PolicyOptions;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.IntegerPolicyProto.policy_options)
    return policy_options_;
}
::enterprise_management::PolicyOptions* IntegerPolicyProto::release_policy_options()
{
    // @@protoc_insertion_point(field_release:enterprise_management.IntegerPolicyProto.policy_options)
    clear_has_policy_options();
    ::enterprise_management::PolicyOptions* temp = policy_options_;
    policy_options_ = NULL;
    return temp;
}
void IntegerPolicyProto::set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options)
{
    delete policy_options_;
    policy_options_ = policy_options;
    if (policy_options) {
        set_has_policy_options();
    } else {
        clear_has_policy_options();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.IntegerPolicyProto.policy_options)
}

// optional int64 value = 2;
bool IntegerPolicyProto::has_value() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void IntegerPolicyProto::set_has_value()
{
    _has_bits_[0] |= 0x00000002u;
}
void IntegerPolicyProto::clear_has_value()
{
    _has_bits_[0] &= ~0x00000002u;
}
void IntegerPolicyProto::clear_value()
{
    value_ = GOOGLE_LONGLONG(0);
    clear_has_value();
}
::google::protobuf::int64 IntegerPolicyProto::value() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.IntegerPolicyProto.value)
    return value_;
}
void IntegerPolicyProto::set_value(::google::protobuf::int64 value)
{
    set_has_value();
    value_ = value;
    // @@protoc_insertion_point(field_set:enterprise_management.IntegerPolicyProto.value)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForStringPolicyProto(
    StringPolicyProto* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringPolicyProto::kPolicyOptionsFieldNumber;
const int StringPolicyProto::kValueFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

StringPolicyProto::StringPolicyProto()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:enterprise_management.StringPolicyProto)
}

void StringPolicyProto::InitAsDefaultInstance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    policy_options_ = const_cast<::enterprise_management::PolicyOptions*>(
        ::enterprise_management::PolicyOptions::internal_default_instance());
#else
    policy_options_ = const_cast<::enterprise_management::PolicyOptions*>(&::enterprise_management::PolicyOptions::default_instance());
#endif
}

StringPolicyProto::StringPolicyProto(const StringPolicyProto& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:enterprise_management.StringPolicyProto)
}

void StringPolicyProto::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    policy_options_ = NULL;
    value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StringPolicyProto::~StringPolicyProto()
{
    // @@protoc_insertion_point(destructor:enterprise_management.StringPolicyProto)
    SharedDtor();
}

void StringPolicyProto::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
        delete policy_options_;
    }
}

void StringPolicyProto::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StringPolicyProto& StringPolicyProto::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_cloud_5fpolicy_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_cloud_5fpolicy_2eproto();
#endif
    return *default_instance_;
}

StringPolicyProto* StringPolicyProto::default_instance_ = NULL;

StringPolicyProto* StringPolicyProto::New(::google::protobuf::Arena* arena) const
{
    StringPolicyProto* n = new StringPolicyProto;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void StringPolicyProto::Clear()
{
    // @@protoc_insertion_point(message_clear_start:enterprise_management.StringPolicyProto)
    if (_has_bits_[0 / 32] & 3u) {
        if (has_policy_options()) {
            if (policy_options_ != NULL)
                policy_options_->::enterprise_management::PolicyOptions::Clear();
        }
        if (has_value()) {
            value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StringPolicyProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForStringPolicyProto, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:enterprise_management.StringPolicyProto)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional .enterprise_management.PolicyOptions policy_options = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_policy_options()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_value;
            break;
        }

        // optional string value = 2;
        case 2: {
            if (tag == 18) {
            parse_value:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_value()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:enterprise_management.StringPolicyProto)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:enterprise_management.StringPolicyProto)
    return false;
#undef DO_
}

void StringPolicyProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:enterprise_management.StringPolicyProto)
    // optional .enterprise_management.PolicyOptions policy_options = 1;
    if (has_policy_options()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            1, *this->policy_options_, output);
    }

    // optional string value = 2;
    if (has_value()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            2, this->value(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:enterprise_management.StringPolicyProto)
}

int StringPolicyProto::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:enterprise_management.StringPolicyProto)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 3u) {
        // optional .enterprise_management.PolicyOptions policy_options = 1;
        if (has_policy_options()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->policy_options_);
        }

        // optional string value = 2;
        if (has_value()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->value());
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void StringPolicyProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const StringPolicyProto*>(&from));
}

void StringPolicyProto::MergeFrom(const StringPolicyProto& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.StringPolicyProto)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_policy_options()) {
            mutable_policy_options()->::enterprise_management::PolicyOptions::MergeFrom(from.policy_options());
        }
        if (from.has_value()) {
            set_has_value();
            value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void StringPolicyProto::CopyFrom(const StringPolicyProto& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.StringPolicyProto)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool StringPolicyProto::IsInitialized() const
{

    return true;
}

void StringPolicyProto::Swap(StringPolicyProto* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void StringPolicyProto::InternalSwap(StringPolicyProto* other)
{
    std::swap(policy_options_, other->policy_options_);
    value_.Swap(&other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string StringPolicyProto::GetTypeName() const
{
    return "enterprise_management.StringPolicyProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringPolicyProto

// optional .enterprise_management.PolicyOptions policy_options = 1;
bool StringPolicyProto::has_policy_options() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void StringPolicyProto::set_has_policy_options()
{
    _has_bits_[0] |= 0x00000001u;
}
void StringPolicyProto::clear_has_policy_options()
{
    _has_bits_[0] &= ~0x00000001u;
}
void StringPolicyProto::clear_policy_options()
{
    if (policy_options_ != NULL)
        policy_options_->::enterprise_management::PolicyOptions::Clear();
    clear_has_policy_options();
}
const ::enterprise_management::PolicyOptions& StringPolicyProto::policy_options() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.StringPolicyProto.policy_options)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return policy_options_ != NULL ? *policy_options_ : *default_instance().policy_options_;
#else
    return policy_options_ != NULL ? *policy_options_ : *default_instance_->policy_options_;
#endif
}
::enterprise_management::PolicyOptions* StringPolicyProto::mutable_policy_options()
{
    set_has_policy_options();
    if (policy_options_ == NULL) {
        policy_options_ = new ::enterprise_management::PolicyOptions;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.StringPolicyProto.policy_options)
    return policy_options_;
}
::enterprise_management::PolicyOptions* StringPolicyProto::release_policy_options()
{
    // @@protoc_insertion_point(field_release:enterprise_management.StringPolicyProto.policy_options)
    clear_has_policy_options();
    ::enterprise_management::PolicyOptions* temp = policy_options_;
    policy_options_ = NULL;
    return temp;
}
void StringPolicyProto::set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options)
{
    delete policy_options_;
    policy_options_ = policy_options;
    if (policy_options) {
        set_has_policy_options();
    } else {
        clear_has_policy_options();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.StringPolicyProto.policy_options)
}

// optional string value = 2;
bool StringPolicyProto::has_value() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void StringPolicyProto::set_has_value()
{
    _has_bits_[0] |= 0x00000002u;
}
void StringPolicyProto::clear_has_value()
{
    _has_bits_[0] &= ~0x00000002u;
}
void StringPolicyProto::clear_value()
{
    value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
}
const ::std::string& StringPolicyProto::value() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.StringPolicyProto.value)
    return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringPolicyProto::set_value(const ::std::string& value)
{
    set_has_value();
    value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:enterprise_management.StringPolicyProto.value)
}
void StringPolicyProto::set_value(const char* value)
{
    set_has_value();
    value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:enterprise_management.StringPolicyProto.value)
}
void StringPolicyProto::set_value(const char* value, size_t size)
{
    set_has_value();
    value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:enterprise_management.StringPolicyProto.value)
}
::std::string* StringPolicyProto::mutable_value()
{
    set_has_value();
    // @@protoc_insertion_point(field_mutable:enterprise_management.StringPolicyProto.value)
    return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StringPolicyProto::release_value()
{
    // @@protoc_insertion_point(field_release:enterprise_management.StringPolicyProto.value)
    clear_has_value();
    return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringPolicyProto::set_allocated_value(::std::string* value)
{
    if (value != NULL) {
        set_has_value();
    } else {
        clear_has_value();
    }
    value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.StringPolicyProto.value)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForStringListPolicyProto(
    StringListPolicyProto* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringListPolicyProto::kPolicyOptionsFieldNumber;
const int StringListPolicyProto::kValueFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

StringListPolicyProto::StringListPolicyProto()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:enterprise_management.StringListPolicyProto)
}

void StringListPolicyProto::InitAsDefaultInstance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    policy_options_ = const_cast<::enterprise_management::PolicyOptions*>(
        ::enterprise_management::PolicyOptions::internal_default_instance());
#else
    policy_options_ = const_cast<::enterprise_management::PolicyOptions*>(&::enterprise_management::PolicyOptions::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    value_ = const_cast<::enterprise_management::StringList*>(
        ::enterprise_management::StringList::internal_default_instance());
#else
    value_ = const_cast<::enterprise_management::StringList*>(&::enterprise_management::StringList::default_instance());
#endif
}

StringListPolicyProto::StringListPolicyProto(const StringListPolicyProto& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:enterprise_management.StringListPolicyProto)
}

void StringListPolicyProto::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    policy_options_ = NULL;
    value_ = NULL;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StringListPolicyProto::~StringListPolicyProto()
{
    // @@protoc_insertion_point(destructor:enterprise_management.StringListPolicyProto)
    SharedDtor();
}

void StringListPolicyProto::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
        delete policy_options_;
        delete value_;
    }
}

void StringListPolicyProto::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StringListPolicyProto& StringListPolicyProto::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_cloud_5fpolicy_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_cloud_5fpolicy_2eproto();
#endif
    return *default_instance_;
}

StringListPolicyProto* StringListPolicyProto::default_instance_ = NULL;

StringListPolicyProto* StringListPolicyProto::New(::google::protobuf::Arena* arena) const
{
    StringListPolicyProto* n = new StringListPolicyProto;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void StringListPolicyProto::Clear()
{
    // @@protoc_insertion_point(message_clear_start:enterprise_management.StringListPolicyProto)
    if (_has_bits_[0 / 32] & 3u) {
        if (has_policy_options()) {
            if (policy_options_ != NULL)
                policy_options_->::enterprise_management::PolicyOptions::Clear();
        }
        if (has_value()) {
            if (value_ != NULL)
                value_->::enterprise_management::StringList::Clear();
        }
    }
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StringListPolicyProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForStringListPolicyProto, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:enterprise_management.StringListPolicyProto)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional .enterprise_management.PolicyOptions policy_options = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_policy_options()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_value;
            break;
        }

        // optional .enterprise_management.StringList value = 2;
        case 2: {
            if (tag == 18) {
            parse_value:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_value()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:enterprise_management.StringListPolicyProto)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:enterprise_management.StringListPolicyProto)
    return false;
#undef DO_
}

void StringListPolicyProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:enterprise_management.StringListPolicyProto)
    // optional .enterprise_management.PolicyOptions policy_options = 1;
    if (has_policy_options()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            1, *this->policy_options_, output);
    }

    // optional .enterprise_management.StringList value = 2;
    if (has_value()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            2, *this->value_, output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:enterprise_management.StringListPolicyProto)
}

int StringListPolicyProto::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:enterprise_management.StringListPolicyProto)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 3u) {
        // optional .enterprise_management.PolicyOptions policy_options = 1;
        if (has_policy_options()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->policy_options_);
        }

        // optional .enterprise_management.StringList value = 2;
        if (has_value()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->value_);
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void StringListPolicyProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const StringListPolicyProto*>(&from));
}

void StringListPolicyProto::MergeFrom(const StringListPolicyProto& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.StringListPolicyProto)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_policy_options()) {
            mutable_policy_options()->::enterprise_management::PolicyOptions::MergeFrom(from.policy_options());
        }
        if (from.has_value()) {
            mutable_value()->::enterprise_management::StringList::MergeFrom(from.value());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void StringListPolicyProto::CopyFrom(const StringListPolicyProto& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.StringListPolicyProto)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool StringListPolicyProto::IsInitialized() const
{

    return true;
}

void StringListPolicyProto::Swap(StringListPolicyProto* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void StringListPolicyProto::InternalSwap(StringListPolicyProto* other)
{
    std::swap(policy_options_, other->policy_options_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string StringListPolicyProto::GetTypeName() const
{
    return "enterprise_management.StringListPolicyProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringListPolicyProto

// optional .enterprise_management.PolicyOptions policy_options = 1;
bool StringListPolicyProto::has_policy_options() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void StringListPolicyProto::set_has_policy_options()
{
    _has_bits_[0] |= 0x00000001u;
}
void StringListPolicyProto::clear_has_policy_options()
{
    _has_bits_[0] &= ~0x00000001u;
}
void StringListPolicyProto::clear_policy_options()
{
    if (policy_options_ != NULL)
        policy_options_->::enterprise_management::PolicyOptions::Clear();
    clear_has_policy_options();
}
const ::enterprise_management::PolicyOptions& StringListPolicyProto::policy_options() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.StringListPolicyProto.policy_options)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return policy_options_ != NULL ? *policy_options_ : *default_instance().policy_options_;
#else
    return policy_options_ != NULL ? *policy_options_ : *default_instance_->policy_options_;
#endif
}
::enterprise_management::PolicyOptions* StringListPolicyProto::mutable_policy_options()
{
    set_has_policy_options();
    if (policy_options_ == NULL) {
        policy_options_ = new ::enterprise_management::PolicyOptions;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.StringListPolicyProto.policy_options)
    return policy_options_;
}
::enterprise_management::PolicyOptions* StringListPolicyProto::release_policy_options()
{
    // @@protoc_insertion_point(field_release:enterprise_management.StringListPolicyProto.policy_options)
    clear_has_policy_options();
    ::enterprise_management::PolicyOptions* temp = policy_options_;
    policy_options_ = NULL;
    return temp;
}
void StringListPolicyProto::set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options)
{
    delete policy_options_;
    policy_options_ = policy_options;
    if (policy_options) {
        set_has_policy_options();
    } else {
        clear_has_policy_options();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.StringListPolicyProto.policy_options)
}

// optional .enterprise_management.StringList value = 2;
bool StringListPolicyProto::has_value() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void StringListPolicyProto::set_has_value()
{
    _has_bits_[0] |= 0x00000002u;
}
void StringListPolicyProto::clear_has_value()
{
    _has_bits_[0] &= ~0x00000002u;
}
void StringListPolicyProto::clear_value()
{
    if (value_ != NULL)
        value_->::enterprise_management::StringList::Clear();
    clear_has_value();
}
const ::enterprise_management::StringList& StringListPolicyProto::value() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.StringListPolicyProto.value)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return value_ != NULL ? *value_ : *default_instance().value_;
#else
    return value_ != NULL ? *value_ : *default_instance_->value_;
#endif
}
::enterprise_management::StringList* StringListPolicyProto::mutable_value()
{
    set_has_value();
    if (value_ == NULL) {
        value_ = new ::enterprise_management::StringList;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.StringListPolicyProto.value)
    return value_;
}
::enterprise_management::StringList* StringListPolicyProto::release_value()
{
    // @@protoc_insertion_point(field_release:enterprise_management.StringListPolicyProto.value)
    clear_has_value();
    ::enterprise_management::StringList* temp = value_;
    value_ = NULL;
    return temp;
}
void StringListPolicyProto::set_allocated_value(::enterprise_management::StringList* value)
{
    delete value_;
    value_ = value;
    if (value) {
        set_has_value();
    } else {
        clear_has_value();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.StringListPolicyProto.value)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForCloudPolicySettings(
    CloudPolicySettings* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloudPolicySettings::kAlternateErrorPagesEnabledFieldNumber;
const int CloudPolicySettings::kSearchSuggestEnabledFieldNumber;
const int CloudPolicySettings::kNetworkPredictionOptionsFieldNumber;
const int CloudPolicySettings::kJavascriptEnabledFieldNumber;
const int CloudPolicySettings::kIncognitoEnabledFieldNumber;
const int CloudPolicySettings::kIncognitoModeAvailabilityFieldNumber;
const int CloudPolicySettings::kSavingBrowserHistoryDisabledFieldNumber;
const int CloudPolicySettings::kPrintingEnabledFieldNumber;
const int CloudPolicySettings::kForceSafeSearchFieldNumber;
const int CloudPolicySettings::kForceGoogleSafeSearchFieldNumber;
const int CloudPolicySettings::kForceYouTubeSafetyModeFieldNumber;
const int CloudPolicySettings::kForceYouTubeRestrictFieldNumber;
const int CloudPolicySettings::kSafeBrowsingEnabledFieldNumber;
const int CloudPolicySettings::kPasswordManagerEnabledFieldNumber;
const int CloudPolicySettings::kAutoFillEnabledFieldNumber;
const int CloudPolicySettings::kSigninAllowedFieldNumber;
const int CloudPolicySettings::kProxyModeFieldNumber;
const int CloudPolicySettings::kProxyServerModeFieldNumber;
const int CloudPolicySettings::kProxyServerFieldNumber;
const int CloudPolicySettings::kProxyPacUrlFieldNumber;
const int CloudPolicySettings::kProxyBypassListFieldNumber;
const int CloudPolicySettings::kProxySettingsFieldNumber;
const int CloudPolicySettings::kAuthSchemesFieldNumber;
const int CloudPolicySettings::kDisableAuthNegotiateCnameLookupFieldNumber;
const int CloudPolicySettings::kAuthServerWhitelistFieldNumber;
const int CloudPolicySettings::kAuthNegotiateDelegateWhitelistFieldNumber;
const int CloudPolicySettings::kAuthAndroidNegotiateAccountTypeFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderEnabledFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderNameFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderKeywordFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderSearchURLFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderSuggestURLFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderInstantURLFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderIconURLFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderEncodingsFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderAlternateURLsFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderSearchTermsReplacementKeyFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderImageURLFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderNewTabURLFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderSearchURLPostParamsFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderSuggestURLPostParamsFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderInstantURLPostParamsFieldNumber;
const int CloudPolicySettings::kDefaultSearchProviderImageURLPostParamsFieldNumber;
const int CloudPolicySettings::kDefaultCookiesSettingFieldNumber;
const int CloudPolicySettings::kDefaultImagesSettingFieldNumber;
const int CloudPolicySettings::kDefaultJavaScriptSettingFieldNumber;
const int CloudPolicySettings::kDefaultPopupsSettingFieldNumber;
const int CloudPolicySettings::kDefaultGeolocationSettingFieldNumber;
const int CloudPolicySettings::kDefaultWebBluetoothGuardSettingFieldNumber;
const int CloudPolicySettings::kCookiesAllowedForUrlsFieldNumber;
const int CloudPolicySettings::kCookiesBlockedForUrlsFieldNumber;
const int CloudPolicySettings::kCookiesSessionOnlyForUrlsFieldNumber;
const int CloudPolicySettings::kImagesAllowedForUrlsFieldNumber;
const int CloudPolicySettings::kImagesBlockedForUrlsFieldNumber;
const int CloudPolicySettings::kJavaScriptAllowedForUrlsFieldNumber;
const int CloudPolicySettings::kJavaScriptBlockedForUrlsFieldNumber;
const int CloudPolicySettings::kPopupsAllowedForUrlsFieldNumber;
const int CloudPolicySettings::kPopupsBlockedForUrlsFieldNumber;
const int CloudPolicySettings::kTranslateEnabledFieldNumber;
const int CloudPolicySettings::kEditBookmarksEnabledFieldNumber;
const int CloudPolicySettings::kURLBlacklistFieldNumber;
const int CloudPolicySettings::kURLWhitelistFieldNumber;
const int CloudPolicySettings::kEnableSha1ForLocalAnchorsFieldNumber;
const int CloudPolicySettings::kDisableSafeBrowsingProceedAnywayFieldNumber;
const int CloudPolicySettings::kVariationsRestrictParameterFieldNumber;
const int CloudPolicySettings::kSupervisedUserContentProviderEnabledFieldNumber;
const int CloudPolicySettings::kManagedBookmarksFieldNumber;
const int CloudPolicySettings::kDataCompressionProxyEnabledFieldNumber;
const int CloudPolicySettings::kEnableDeprecatedWebPlatformFeaturesFieldNumber;
const int CloudPolicySettings::kForceBrowserSigninFieldNumber;
const int CloudPolicySettings::kCertificateTransparencyEnforcementDisabledForUrlsFieldNumber;
const int CloudPolicySettings::kDHEEnabledFieldNumber;
const int CloudPolicySettings::kContextualSearchEnabledFieldNumber;
const int CloudPolicySettings::kSSLErrorOverrideAllowedFieldNumber;
const int CloudPolicySettings::kAllowedDomainsForAppsFieldNumber;
const int CloudPolicySettings::kEnableMediaRouterFieldNumber;
const int CloudPolicySettings::kNTPContentSuggestionsEnabledFieldNumber;
const int CloudPolicySettings::kWebRtcUdpPortRangeFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

CloudPolicySettings::CloudPolicySettings()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:enterprise_management.CloudPolicySettings)
}

void CloudPolicySettings::InitAsDefaultInstance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    alternateerrorpagesenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    alternateerrorpagesenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    searchsuggestenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    searchsuggestenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    networkpredictionoptions_ = const_cast<::enterprise_management::IntegerPolicyProto*>(
        ::enterprise_management::IntegerPolicyProto::internal_default_instance());
#else
    networkpredictionoptions_ = const_cast<::enterprise_management::IntegerPolicyProto*>(&::enterprise_management::IntegerPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    javascriptenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    javascriptenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    incognitoenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    incognitoenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    incognitomodeavailability_ = const_cast<::enterprise_management::IntegerPolicyProto*>(
        ::enterprise_management::IntegerPolicyProto::internal_default_instance());
#else
    incognitomodeavailability_ = const_cast<::enterprise_management::IntegerPolicyProto*>(&::enterprise_management::IntegerPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    savingbrowserhistorydisabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    savingbrowserhistorydisabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    printingenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    printingenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    forcesafesearch_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    forcesafesearch_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    forcegooglesafesearch_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    forcegooglesafesearch_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    forceyoutubesafetymode_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    forceyoutubesafetymode_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    forceyoutuberestrict_ = const_cast<::enterprise_management::IntegerPolicyProto*>(
        ::enterprise_management::IntegerPolicyProto::internal_default_instance());
#else
    forceyoutuberestrict_ = const_cast<::enterprise_management::IntegerPolicyProto*>(&::enterprise_management::IntegerPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    safebrowsingenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    safebrowsingenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    passwordmanagerenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    passwordmanagerenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    autofillenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    autofillenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    signinallowed_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    signinallowed_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    proxymode_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    proxymode_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    proxyservermode_ = const_cast<::enterprise_management::IntegerPolicyProto*>(
        ::enterprise_management::IntegerPolicyProto::internal_default_instance());
#else
    proxyservermode_ = const_cast<::enterprise_management::IntegerPolicyProto*>(&::enterprise_management::IntegerPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    proxyserver_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    proxyserver_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    proxypacurl_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    proxypacurl_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    proxybypasslist_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    proxybypasslist_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    proxysettings_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    proxysettings_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    authschemes_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    authschemes_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    disableauthnegotiatecnamelookup_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    disableauthnegotiatecnamelookup_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    authserverwhitelist_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    authserverwhitelist_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    authnegotiatedelegatewhitelist_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    authnegotiatedelegatewhitelist_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    authandroidnegotiateaccounttype_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    authandroidnegotiateaccounttype_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchproviderenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    defaultsearchproviderenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchprovidername_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    defaultsearchprovidername_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchproviderkeyword_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    defaultsearchproviderkeyword_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchprovidersearchurl_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    defaultsearchprovidersearchurl_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchprovidersuggesturl_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    defaultsearchprovidersuggesturl_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchproviderinstanturl_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    defaultsearchproviderinstanturl_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchprovidericonurl_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    defaultsearchprovidericonurl_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchproviderencodings_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    defaultsearchproviderencodings_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchprovideralternateurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    defaultsearchprovideralternateurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchprovidersearchtermsreplacementkey_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    defaultsearchprovidersearchtermsreplacementkey_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchproviderimageurl_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    defaultsearchproviderimageurl_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchprovidernewtaburl_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    defaultsearchprovidernewtaburl_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchprovidersearchurlpostparams_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    defaultsearchprovidersearchurlpostparams_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchprovidersuggesturlpostparams_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    defaultsearchprovidersuggesturlpostparams_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchproviderinstanturlpostparams_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    defaultsearchproviderinstanturlpostparams_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultsearchproviderimageurlpostparams_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    defaultsearchproviderimageurlpostparams_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultcookiessetting_ = const_cast<::enterprise_management::IntegerPolicyProto*>(
        ::enterprise_management::IntegerPolicyProto::internal_default_instance());
#else
    defaultcookiessetting_ = const_cast<::enterprise_management::IntegerPolicyProto*>(&::enterprise_management::IntegerPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultimagessetting_ = const_cast<::enterprise_management::IntegerPolicyProto*>(
        ::enterprise_management::IntegerPolicyProto::internal_default_instance());
#else
    defaultimagessetting_ = const_cast<::enterprise_management::IntegerPolicyProto*>(&::enterprise_management::IntegerPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultjavascriptsetting_ = const_cast<::enterprise_management::IntegerPolicyProto*>(
        ::enterprise_management::IntegerPolicyProto::internal_default_instance());
#else
    defaultjavascriptsetting_ = const_cast<::enterprise_management::IntegerPolicyProto*>(&::enterprise_management::IntegerPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultpopupssetting_ = const_cast<::enterprise_management::IntegerPolicyProto*>(
        ::enterprise_management::IntegerPolicyProto::internal_default_instance());
#else
    defaultpopupssetting_ = const_cast<::enterprise_management::IntegerPolicyProto*>(&::enterprise_management::IntegerPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultgeolocationsetting_ = const_cast<::enterprise_management::IntegerPolicyProto*>(
        ::enterprise_management::IntegerPolicyProto::internal_default_instance());
#else
    defaultgeolocationsetting_ = const_cast<::enterprise_management::IntegerPolicyProto*>(&::enterprise_management::IntegerPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    defaultwebbluetoothguardsetting_ = const_cast<::enterprise_management::IntegerPolicyProto*>(
        ::enterprise_management::IntegerPolicyProto::internal_default_instance());
#else
    defaultwebbluetoothguardsetting_ = const_cast<::enterprise_management::IntegerPolicyProto*>(&::enterprise_management::IntegerPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    cookiesallowedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    cookiesallowedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    cookiesblockedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    cookiesblockedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    cookiessessiononlyforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    cookiessessiononlyforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    imagesallowedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    imagesallowedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    imagesblockedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    imagesblockedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    javascriptallowedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    javascriptallowedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    javascriptblockedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    javascriptblockedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    popupsallowedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    popupsallowedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    popupsblockedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    popupsblockedforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    translateenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    translateenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    editbookmarksenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    editbookmarksenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    urlblacklist_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    urlblacklist_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    urlwhitelist_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    urlwhitelist_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    enablesha1forlocalanchors_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    enablesha1forlocalanchors_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    disablesafebrowsingproceedanyway_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    disablesafebrowsingproceedanyway_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    variationsrestrictparameter_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    variationsrestrictparameter_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    supervisedusercontentproviderenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    supervisedusercontentproviderenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    managedbookmarks_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    managedbookmarks_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    datacompressionproxyenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    datacompressionproxyenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    enabledeprecatedwebplatformfeatures_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    enabledeprecatedwebplatformfeatures_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    forcebrowsersignin_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    forcebrowsersignin_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    certificatetransparencyenforcementdisabledforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(
        ::enterprise_management::StringListPolicyProto::internal_default_instance());
#else
    certificatetransparencyenforcementdisabledforurls_ = const_cast<::enterprise_management::StringListPolicyProto*>(&::enterprise_management::StringListPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    dheenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    dheenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    contextualsearchenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    contextualsearchenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    sslerroroverrideallowed_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    sslerroroverrideallowed_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    alloweddomainsforapps_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    alloweddomainsforapps_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    enablemediarouter_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    enablemediarouter_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    ntpcontentsuggestionsenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(
        ::enterprise_management::BooleanPolicyProto::internal_default_instance());
#else
    ntpcontentsuggestionsenabled_ = const_cast<::enterprise_management::BooleanPolicyProto*>(&::enterprise_management::BooleanPolicyProto::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    webrtcudpportrange_ = const_cast<::enterprise_management::StringPolicyProto*>(
        ::enterprise_management::StringPolicyProto::internal_default_instance());
#else
    webrtcudpportrange_ = const_cast<::enterprise_management::StringPolicyProto*>(&::enterprise_management::StringPolicyProto::default_instance());
#endif
}

CloudPolicySettings::CloudPolicySettings(const CloudPolicySettings& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:enterprise_management.CloudPolicySettings)
}

void CloudPolicySettings::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    alternateerrorpagesenabled_ = NULL;
    searchsuggestenabled_ = NULL;
    networkpredictionoptions_ = NULL;
    javascriptenabled_ = NULL;
    incognitoenabled_ = NULL;
    incognitomodeavailability_ = NULL;
    savingbrowserhistorydisabled_ = NULL;
    printingenabled_ = NULL;
    forcesafesearch_ = NULL;
    forcegooglesafesearch_ = NULL;
    forceyoutubesafetymode_ = NULL;
    forceyoutuberestrict_ = NULL;
    safebrowsingenabled_ = NULL;
    passwordmanagerenabled_ = NULL;
    autofillenabled_ = NULL;
    signinallowed_ = NULL;
    proxymode_ = NULL;
    proxyservermode_ = NULL;
    proxyserver_ = NULL;
    proxypacurl_ = NULL;
    proxybypasslist_ = NULL;
    proxysettings_ = NULL;
    authschemes_ = NULL;
    disableauthnegotiatecnamelookup_ = NULL;
    authserverwhitelist_ = NULL;
    authnegotiatedelegatewhitelist_ = NULL;
    authandroidnegotiateaccounttype_ = NULL;
    defaultsearchproviderenabled_ = NULL;
    defaultsearchprovidername_ = NULL;
    defaultsearchproviderkeyword_ = NULL;
    defaultsearchprovidersearchurl_ = NULL;
    defaultsearchprovidersuggesturl_ = NULL;
    defaultsearchproviderinstanturl_ = NULL;
    defaultsearchprovidericonurl_ = NULL;
    defaultsearchproviderencodings_ = NULL;
    defaultsearchprovideralternateurls_ = NULL;
    defaultsearchprovidersearchtermsreplacementkey_ = NULL;
    defaultsearchproviderimageurl_ = NULL;
    defaultsearchprovidernewtaburl_ = NULL;
    defaultsearchprovidersearchurlpostparams_ = NULL;
    defaultsearchprovidersuggesturlpostparams_ = NULL;
    defaultsearchproviderinstanturlpostparams_ = NULL;
    defaultsearchproviderimageurlpostparams_ = NULL;
    defaultcookiessetting_ = NULL;
    defaultimagessetting_ = NULL;
    defaultjavascriptsetting_ = NULL;
    defaultpopupssetting_ = NULL;
    defaultgeolocationsetting_ = NULL;
    defaultwebbluetoothguardsetting_ = NULL;
    cookiesallowedforurls_ = NULL;
    cookiesblockedforurls_ = NULL;
    cookiessessiononlyforurls_ = NULL;
    imagesallowedforurls_ = NULL;
    imagesblockedforurls_ = NULL;
    javascriptallowedforurls_ = NULL;
    javascriptblockedforurls_ = NULL;
    popupsallowedforurls_ = NULL;
    popupsblockedforurls_ = NULL;
    translateenabled_ = NULL;
    editbookmarksenabled_ = NULL;
    urlblacklist_ = NULL;
    urlwhitelist_ = NULL;
    enablesha1forlocalanchors_ = NULL;
    disablesafebrowsingproceedanyway_ = NULL;
    variationsrestrictparameter_ = NULL;
    supervisedusercontentproviderenabled_ = NULL;
    managedbookmarks_ = NULL;
    datacompressionproxyenabled_ = NULL;
    enabledeprecatedwebplatformfeatures_ = NULL;
    forcebrowsersignin_ = NULL;
    certificatetransparencyenforcementdisabledforurls_ = NULL;
    dheenabled_ = NULL;
    contextualsearchenabled_ = NULL;
    sslerroroverrideallowed_ = NULL;
    alloweddomainsforapps_ = NULL;
    enablemediarouter_ = NULL;
    ntpcontentsuggestionsenabled_ = NULL;
    webrtcudpportrange_ = NULL;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CloudPolicySettings::~CloudPolicySettings()
{
    // @@protoc_insertion_point(destructor:enterprise_management.CloudPolicySettings)
    SharedDtor();
}

void CloudPolicySettings::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
        delete alternateerrorpagesenabled_;
        delete searchsuggestenabled_;
        delete networkpredictionoptions_;
        delete javascriptenabled_;
        delete incognitoenabled_;
        delete incognitomodeavailability_;
        delete savingbrowserhistorydisabled_;
        delete printingenabled_;
        delete forcesafesearch_;
        delete forcegooglesafesearch_;
        delete forceyoutubesafetymode_;
        delete forceyoutuberestrict_;
        delete safebrowsingenabled_;
        delete passwordmanagerenabled_;
        delete autofillenabled_;
        delete signinallowed_;
        delete proxymode_;
        delete proxyservermode_;
        delete proxyserver_;
        delete proxypacurl_;
        delete proxybypasslist_;
        delete proxysettings_;
        delete authschemes_;
        delete disableauthnegotiatecnamelookup_;
        delete authserverwhitelist_;
        delete authnegotiatedelegatewhitelist_;
        delete authandroidnegotiateaccounttype_;
        delete defaultsearchproviderenabled_;
        delete defaultsearchprovidername_;
        delete defaultsearchproviderkeyword_;
        delete defaultsearchprovidersearchurl_;
        delete defaultsearchprovidersuggesturl_;
        delete defaultsearchproviderinstanturl_;
        delete defaultsearchprovidericonurl_;
        delete defaultsearchproviderencodings_;
        delete defaultsearchprovideralternateurls_;
        delete defaultsearchprovidersearchtermsreplacementkey_;
        delete defaultsearchproviderimageurl_;
        delete defaultsearchprovidernewtaburl_;
        delete defaultsearchprovidersearchurlpostparams_;
        delete defaultsearchprovidersuggesturlpostparams_;
        delete defaultsearchproviderinstanturlpostparams_;
        delete defaultsearchproviderimageurlpostparams_;
        delete defaultcookiessetting_;
        delete defaultimagessetting_;
        delete defaultjavascriptsetting_;
        delete defaultpopupssetting_;
        delete defaultgeolocationsetting_;
        delete defaultwebbluetoothguardsetting_;
        delete cookiesallowedforurls_;
        delete cookiesblockedforurls_;
        delete cookiessessiononlyforurls_;
        delete imagesallowedforurls_;
        delete imagesblockedforurls_;
        delete javascriptallowedforurls_;
        delete javascriptblockedforurls_;
        delete popupsallowedforurls_;
        delete popupsblockedforurls_;
        delete translateenabled_;
        delete editbookmarksenabled_;
        delete urlblacklist_;
        delete urlwhitelist_;
        delete enablesha1forlocalanchors_;
        delete disablesafebrowsingproceedanyway_;
        delete variationsrestrictparameter_;
        delete supervisedusercontentproviderenabled_;
        delete managedbookmarks_;
        delete datacompressionproxyenabled_;
        delete enabledeprecatedwebplatformfeatures_;
        delete forcebrowsersignin_;
        delete certificatetransparencyenforcementdisabledforurls_;
        delete dheenabled_;
        delete contextualsearchenabled_;
        delete sslerroroverrideallowed_;
        delete alloweddomainsforapps_;
        delete enablemediarouter_;
        delete ntpcontentsuggestionsenabled_;
        delete webrtcudpportrange_;
    }
}

void CloudPolicySettings::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CloudPolicySettings& CloudPolicySettings::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_cloud_5fpolicy_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_cloud_5fpolicy_2eproto();
#endif
    return *default_instance_;
}

CloudPolicySettings* CloudPolicySettings::default_instance_ = NULL;

CloudPolicySettings* CloudPolicySettings::New(::google::protobuf::Arena* arena) const
{
    CloudPolicySettings* n = new CloudPolicySettings;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void CloudPolicySettings::Clear()
{
    // @@protoc_insertion_point(message_clear_start:enterprise_management.CloudPolicySettings)
    if (_has_bits_[0 / 32] & 255u) {
        if (has_alternateerrorpagesenabled()) {
            if (alternateerrorpagesenabled_ != NULL)
                alternateerrorpagesenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_searchsuggestenabled()) {
            if (searchsuggestenabled_ != NULL)
                searchsuggestenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_networkpredictionoptions()) {
            if (networkpredictionoptions_ != NULL)
                networkpredictionoptions_->::enterprise_management::IntegerPolicyProto::Clear();
        }
        if (has_javascriptenabled()) {
            if (javascriptenabled_ != NULL)
                javascriptenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_incognitoenabled()) {
            if (incognitoenabled_ != NULL)
                incognitoenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_incognitomodeavailability()) {
            if (incognitomodeavailability_ != NULL)
                incognitomodeavailability_->::enterprise_management::IntegerPolicyProto::Clear();
        }
        if (has_savingbrowserhistorydisabled()) {
            if (savingbrowserhistorydisabled_ != NULL)
                savingbrowserhistorydisabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_printingenabled()) {
            if (printingenabled_ != NULL)
                printingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
    }
    if (_has_bits_[8 / 32] & 65280u) {
        if (has_forcesafesearch()) {
            if (forcesafesearch_ != NULL)
                forcesafesearch_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_forcegooglesafesearch()) {
            if (forcegooglesafesearch_ != NULL)
                forcegooglesafesearch_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_forceyoutubesafetymode()) {
            if (forceyoutubesafetymode_ != NULL)
                forceyoutubesafetymode_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_forceyoutuberestrict()) {
            if (forceyoutuberestrict_ != NULL)
                forceyoutuberestrict_->::enterprise_management::IntegerPolicyProto::Clear();
        }
        if (has_safebrowsingenabled()) {
            if (safebrowsingenabled_ != NULL)
                safebrowsingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_passwordmanagerenabled()) {
            if (passwordmanagerenabled_ != NULL)
                passwordmanagerenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_autofillenabled()) {
            if (autofillenabled_ != NULL)
                autofillenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_signinallowed()) {
            if (signinallowed_ != NULL)
                signinallowed_->::enterprise_management::BooleanPolicyProto::Clear();
        }
    }
    if (_has_bits_[16 / 32] & 16711680u) {
        if (has_proxymode()) {
            if (proxymode_ != NULL)
                proxymode_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_proxyservermode()) {
            if (proxyservermode_ != NULL)
                proxyservermode_->::enterprise_management::IntegerPolicyProto::Clear();
        }
        if (has_proxyserver()) {
            if (proxyserver_ != NULL)
                proxyserver_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_proxypacurl()) {
            if (proxypacurl_ != NULL)
                proxypacurl_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_proxybypasslist()) {
            if (proxybypasslist_ != NULL)
                proxybypasslist_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_proxysettings()) {
            if (proxysettings_ != NULL)
                proxysettings_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_authschemes()) {
            if (authschemes_ != NULL)
                authschemes_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_disableauthnegotiatecnamelookup()) {
            if (disableauthnegotiatecnamelookup_ != NULL)
                disableauthnegotiatecnamelookup_->::enterprise_management::BooleanPolicyProto::Clear();
        }
    }
    if (_has_bits_[24 / 32] & 4278190080u) {
        if (has_authserverwhitelist()) {
            if (authserverwhitelist_ != NULL)
                authserverwhitelist_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_authnegotiatedelegatewhitelist()) {
            if (authnegotiatedelegatewhitelist_ != NULL)
                authnegotiatedelegatewhitelist_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_authandroidnegotiateaccounttype()) {
            if (authandroidnegotiateaccounttype_ != NULL)
                authandroidnegotiateaccounttype_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_defaultsearchproviderenabled()) {
            if (defaultsearchproviderenabled_ != NULL)
                defaultsearchproviderenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_defaultsearchprovidername()) {
            if (defaultsearchprovidername_ != NULL)
                defaultsearchprovidername_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_defaultsearchproviderkeyword()) {
            if (defaultsearchproviderkeyword_ != NULL)
                defaultsearchproviderkeyword_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_defaultsearchprovidersearchurl()) {
            if (defaultsearchprovidersearchurl_ != NULL)
                defaultsearchprovidersearchurl_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_defaultsearchprovidersuggesturl()) {
            if (defaultsearchprovidersuggesturl_ != NULL)
                defaultsearchprovidersuggesturl_->::enterprise_management::StringPolicyProto::Clear();
        }
    }
    if (_has_bits_[32 / 32] & 255u) {
        if (has_defaultsearchproviderinstanturl()) {
            if (defaultsearchproviderinstanturl_ != NULL)
                defaultsearchproviderinstanturl_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_defaultsearchprovidericonurl()) {
            if (defaultsearchprovidericonurl_ != NULL)
                defaultsearchprovidericonurl_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_defaultsearchproviderencodings()) {
            if (defaultsearchproviderencodings_ != NULL)
                defaultsearchproviderencodings_->::enterprise_management::StringListPolicyProto::Clear();
        }
        if (has_defaultsearchprovideralternateurls()) {
            if (defaultsearchprovideralternateurls_ != NULL)
                defaultsearchprovideralternateurls_->::enterprise_management::StringListPolicyProto::Clear();
        }
        if (has_defaultsearchprovidersearchtermsreplacementkey()) {
            if (defaultsearchprovidersearchtermsreplacementkey_ != NULL)
                defaultsearchprovidersearchtermsreplacementkey_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_defaultsearchproviderimageurl()) {
            if (defaultsearchproviderimageurl_ != NULL)
                defaultsearchproviderimageurl_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_defaultsearchprovidernewtaburl()) {
            if (defaultsearchprovidernewtaburl_ != NULL)
                defaultsearchprovidernewtaburl_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_defaultsearchprovidersearchurlpostparams()) {
            if (defaultsearchprovidersearchurlpostparams_ != NULL)
                defaultsearchprovidersearchurlpostparams_->::enterprise_management::StringPolicyProto::Clear();
        }
    }
    if (_has_bits_[40 / 32] & 65280u) {
        if (has_defaultsearchprovidersuggesturlpostparams()) {
            if (defaultsearchprovidersuggesturlpostparams_ != NULL)
                defaultsearchprovidersuggesturlpostparams_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_defaultsearchproviderinstanturlpostparams()) {
            if (defaultsearchproviderinstanturlpostparams_ != NULL)
                defaultsearchproviderinstanturlpostparams_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_defaultsearchproviderimageurlpostparams()) {
            if (defaultsearchproviderimageurlpostparams_ != NULL)
                defaultsearchproviderimageurlpostparams_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_defaultcookiessetting()) {
            if (defaultcookiessetting_ != NULL)
                defaultcookiessetting_->::enterprise_management::IntegerPolicyProto::Clear();
        }
        if (has_defaultimagessetting()) {
            if (defaultimagessetting_ != NULL)
                defaultimagessetting_->::enterprise_management::IntegerPolicyProto::Clear();
        }
        if (has_defaultjavascriptsetting()) {
            if (defaultjavascriptsetting_ != NULL)
                defaultjavascriptsetting_->::enterprise_management::IntegerPolicyProto::Clear();
        }
        if (has_defaultpopupssetting()) {
            if (defaultpopupssetting_ != NULL)
                defaultpopupssetting_->::enterprise_management::IntegerPolicyProto::Clear();
        }
        if (has_defaultgeolocationsetting()) {
            if (defaultgeolocationsetting_ != NULL)
                defaultgeolocationsetting_->::enterprise_management::IntegerPolicyProto::Clear();
        }
    }
    if (_has_bits_[48 / 32] & 16711680u) {
        if (has_defaultwebbluetoothguardsetting()) {
            if (defaultwebbluetoothguardsetting_ != NULL)
                defaultwebbluetoothguardsetting_->::enterprise_management::IntegerPolicyProto::Clear();
        }
        if (has_cookiesallowedforurls()) {
            if (cookiesallowedforurls_ != NULL)
                cookiesallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
        }
        if (has_cookiesblockedforurls()) {
            if (cookiesblockedforurls_ != NULL)
                cookiesblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
        }
        if (has_cookiessessiononlyforurls()) {
            if (cookiessessiononlyforurls_ != NULL)
                cookiessessiononlyforurls_->::enterprise_management::StringListPolicyProto::Clear();
        }
        if (has_imagesallowedforurls()) {
            if (imagesallowedforurls_ != NULL)
                imagesallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
        }
        if (has_imagesblockedforurls()) {
            if (imagesblockedforurls_ != NULL)
                imagesblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
        }
        if (has_javascriptallowedforurls()) {
            if (javascriptallowedforurls_ != NULL)
                javascriptallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
        }
        if (has_javascriptblockedforurls()) {
            if (javascriptblockedforurls_ != NULL)
                javascriptblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
        }
    }
    if (_has_bits_[56 / 32] & 4278190080u) {
        if (has_popupsallowedforurls()) {
            if (popupsallowedforurls_ != NULL)
                popupsallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
        }
        if (has_popupsblockedforurls()) {
            if (popupsblockedforurls_ != NULL)
                popupsblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
        }
        if (has_translateenabled()) {
            if (translateenabled_ != NULL)
                translateenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_editbookmarksenabled()) {
            if (editbookmarksenabled_ != NULL)
                editbookmarksenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_urlblacklist()) {
            if (urlblacklist_ != NULL)
                urlblacklist_->::enterprise_management::StringListPolicyProto::Clear();
        }
        if (has_urlwhitelist()) {
            if (urlwhitelist_ != NULL)
                urlwhitelist_->::enterprise_management::StringListPolicyProto::Clear();
        }
        if (has_enablesha1forlocalanchors()) {
            if (enablesha1forlocalanchors_ != NULL)
                enablesha1forlocalanchors_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_disablesafebrowsingproceedanyway()) {
            if (disablesafebrowsingproceedanyway_ != NULL)
                disablesafebrowsingproceedanyway_->::enterprise_management::BooleanPolicyProto::Clear();
        }
    }
    if (_has_bits_[64 / 32] & 255u) {
        if (has_variationsrestrictparameter()) {
            if (variationsrestrictparameter_ != NULL)
                variationsrestrictparameter_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_supervisedusercontentproviderenabled()) {
            if (supervisedusercontentproviderenabled_ != NULL)
                supervisedusercontentproviderenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_managedbookmarks()) {
            if (managedbookmarks_ != NULL)
                managedbookmarks_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_datacompressionproxyenabled()) {
            if (datacompressionproxyenabled_ != NULL)
                datacompressionproxyenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_enabledeprecatedwebplatformfeatures()) {
            if (enabledeprecatedwebplatformfeatures_ != NULL)
                enabledeprecatedwebplatformfeatures_->::enterprise_management::StringListPolicyProto::Clear();
        }
        if (has_forcebrowsersignin()) {
            if (forcebrowsersignin_ != NULL)
                forcebrowsersignin_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_certificatetransparencyenforcementdisabledforurls()) {
            if (certificatetransparencyenforcementdisabledforurls_ != NULL)
                certificatetransparencyenforcementdisabledforurls_->::enterprise_management::StringListPolicyProto::Clear();
        }
        if (has_dheenabled()) {
            if (dheenabled_ != NULL)
                dheenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
    }
    if (_has_bits_[72 / 32] & 16128u) {
        if (has_contextualsearchenabled()) {
            if (contextualsearchenabled_ != NULL)
                contextualsearchenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_sslerroroverrideallowed()) {
            if (sslerroroverrideallowed_ != NULL)
                sslerroroverrideallowed_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_alloweddomainsforapps()) {
            if (alloweddomainsforapps_ != NULL)
                alloweddomainsforapps_->::enterprise_management::StringPolicyProto::Clear();
        }
        if (has_enablemediarouter()) {
            if (enablemediarouter_ != NULL)
                enablemediarouter_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_ntpcontentsuggestionsenabled()) {
            if (ntpcontentsuggestionsenabled_ != NULL)
                ntpcontentsuggestionsenabled_->::enterprise_management::BooleanPolicyProto::Clear();
        }
        if (has_webrtcudpportrange()) {
            if (webrtcudpportrange_ != NULL)
                webrtcudpportrange_->::enterprise_management::StringPolicyProto::Clear();
        }
    }
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CloudPolicySettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForCloudPolicySettings, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:enterprise_management.CloudPolicySettings)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
        case 7: {
            if (tag == 58) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_alternateerrorpagesenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(66))
                goto parse_SearchSuggestEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
        case 8: {
            if (tag == 66) {
            parse_SearchSuggestEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_searchsuggestenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(90))
                goto parse_JavascriptEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
        case 11: {
            if (tag == 90) {
            parse_JavascriptEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_javascriptenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(98))
                goto parse_IncognitoEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
        case 12: {
            if (tag == 98) {
            parse_IncognitoEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_incognitoenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(106))
                goto parse_SavingBrowserHistoryDisabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
        case 13: {
            if (tag == 106) {
            parse_SavingBrowserHistoryDisabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_savingbrowserhistorydisabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(114))
                goto parse_PrintingEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
        case 14: {
            if (tag == 114) {
            parse_PrintingEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_printingenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(130))
                goto parse_SafeBrowsingEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
        case 16: {
            if (tag == 130) {
            parse_SafeBrowsingEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_safebrowsingenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(146))
                goto parse_PasswordManagerEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
        case 18: {
            if (tag == 146) {
            parse_PasswordManagerEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_passwordmanagerenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(162))
                goto parse_AutoFillEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
        case 20: {
            if (tag == 162) {
            parse_AutoFillEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_autofillenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(186))
                goto parse_ProxyMode;
            break;
        }

        // optional .enterprise_management.StringPolicyProto ProxyMode = 23;
        case 23: {
            if (tag == 186) {
            parse_ProxyMode:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_proxymode()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(194))
                goto parse_ProxyServerMode;
            break;
        }

        // optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
        case 24: {
            if (tag == 194) {
            parse_ProxyServerMode:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_proxyservermode()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(202))
                goto parse_ProxyServer;
            break;
        }

        // optional .enterprise_management.StringPolicyProto ProxyServer = 25;
        case 25: {
            if (tag == 202) {
            parse_ProxyServer:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_proxyserver()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(210))
                goto parse_ProxyPacUrl;
            break;
        }

        // optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
        case 26: {
            if (tag == 210) {
            parse_ProxyPacUrl:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_proxypacurl()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(218))
                goto parse_ProxyBypassList;
            break;
        }

        // optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
        case 27: {
            if (tag == 218) {
            parse_ProxyBypassList:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_proxybypasslist()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(226))
                goto parse_AuthSchemes;
            break;
        }

        // optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
        case 28: {
            if (tag == 226) {
            parse_AuthSchemes:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_authschemes()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(234))
                goto parse_DisableAuthNegotiateCnameLookup;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
        case 29: {
            if (tag == 234) {
            parse_DisableAuthNegotiateCnameLookup:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_disableauthnegotiatecnamelookup()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(250))
                goto parse_AuthServerWhitelist;
            break;
        }

        // optional .enterprise_management.StringPolicyProto AuthServerWhitelist = 31;
        case 31: {
            if (tag == 250) {
            parse_AuthServerWhitelist:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_authserverwhitelist()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(258))
                goto parse_AuthNegotiateDelegateWhitelist;
            break;
        }

        // optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateWhitelist = 32;
        case 32: {
            if (tag == 258) {
            parse_AuthNegotiateDelegateWhitelist:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_authnegotiatedelegatewhitelist()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(338))
                goto parse_DefaultSearchProviderEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
        case 42: {
            if (tag == 338) {
            parse_DefaultSearchProviderEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchproviderenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(346))
                goto parse_DefaultSearchProviderName;
            break;
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
        case 43: {
            if (tag == 346) {
            parse_DefaultSearchProviderName:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchprovidername()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(354))
                goto parse_DefaultSearchProviderKeyword;
            break;
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
        case 44: {
            if (tag == 354) {
            parse_DefaultSearchProviderKeyword:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchproviderkeyword()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(362))
                goto parse_DefaultSearchProviderSearchURL;
            break;
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
        case 45: {
            if (tag == 362) {
            parse_DefaultSearchProviderSearchURL:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchprovidersearchurl()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(370))
                goto parse_DefaultSearchProviderSuggestURL;
            break;
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
        case 46: {
            if (tag == 370) {
            parse_DefaultSearchProviderSuggestURL:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchprovidersuggesturl()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(378))
                goto parse_DefaultSearchProviderInstantURL;
            break;
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderInstantURL = 47;
        case 47: {
            if (tag == 378) {
            parse_DefaultSearchProviderInstantURL:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchproviderinstanturl()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(386))
                goto parse_DefaultSearchProviderIconURL;
            break;
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
        case 48: {
            if (tag == 386) {
            parse_DefaultSearchProviderIconURL:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchprovidericonurl()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(394))
                goto parse_DefaultSearchProviderEncodings;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
        case 49: {
            if (tag == 394) {
            parse_DefaultSearchProviderEncodings:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchproviderencodings()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(402))
                goto parse_DefaultCookiesSetting;
            break;
        }

        // optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
        case 50: {
            if (tag == 402) {
            parse_DefaultCookiesSetting:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultcookiessetting()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(410))
                goto parse_DefaultImagesSetting;
            break;
        }

        // optional .enterprise_management.IntegerPolicyProto DefaultImagesSetting = 51;
        case 51: {
            if (tag == 410) {
            parse_DefaultImagesSetting:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultimagessetting()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(418))
                goto parse_DefaultJavaScriptSetting;
            break;
        }

        // optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
        case 52: {
            if (tag == 418) {
            parse_DefaultJavaScriptSetting:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultjavascriptsetting()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(434))
                goto parse_DefaultPopupsSetting;
            break;
        }

        // optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
        case 54: {
            if (tag == 434) {
            parse_DefaultPopupsSetting:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultpopupssetting()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(450))
                goto parse_DefaultGeolocationSetting;
            break;
        }

        // optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
        case 56: {
            if (tag == 450) {
            parse_DefaultGeolocationSetting:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultgeolocationsetting()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(554))
                goto parse_CookiesBlockedForUrls;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
        case 69: {
            if (tag == 554) {
            parse_CookiesBlockedForUrls:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_cookiesblockedforurls()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(562))
                goto parse_CookiesSessionOnlyForUrls;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
        case 70: {
            if (tag == 562) {
            parse_CookiesSessionOnlyForUrls:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_cookiessessiononlyforurls()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(570))
                goto parse_ImagesAllowedForUrls;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto ImagesAllowedForUrls = 71;
        case 71: {
            if (tag == 570) {
            parse_ImagesAllowedForUrls:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_imagesallowedforurls()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(578))
                goto parse_ImagesBlockedForUrls;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto ImagesBlockedForUrls = 72;
        case 72: {
            if (tag == 578) {
            parse_ImagesBlockedForUrls:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_imagesblockedforurls()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(586))
                goto parse_JavaScriptAllowedForUrls;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
        case 73: {
            if (tag == 586) {
            parse_JavaScriptAllowedForUrls:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_javascriptallowedforurls()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(594))
                goto parse_JavaScriptBlockedForUrls;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
        case 74: {
            if (tag == 594) {
            parse_JavaScriptBlockedForUrls:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_javascriptblockedforurls()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(618))
                goto parse_PopupsAllowedForUrls;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
        case 77: {
            if (tag == 618) {
            parse_PopupsAllowedForUrls:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_popupsallowedforurls()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(626))
                goto parse_PopupsBlockedForUrls;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
        case 78: {
            if (tag == 626) {
            parse_PopupsBlockedForUrls:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_popupsblockedforurls()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(634))
                goto parse_CookiesAllowedForUrls;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
        case 79: {
            if (tag == 634) {
            parse_CookiesAllowedForUrls:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_cookiesallowedforurls()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(658))
                goto parse_TranslateEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
        case 82: {
            if (tag == 658) {
            parse_TranslateEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_translateenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(682))
                goto parse_EditBookmarksEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
        case 85: {
            if (tag == 682) {
            parse_EditBookmarksEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_editbookmarksenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(762))
                goto parse_IncognitoModeAvailability;
            break;
        }

        // optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
        case 95: {
            if (tag == 762) {
            parse_IncognitoModeAvailability:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_incognitomodeavailability()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(842))
                goto parse_URLBlacklist;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto URLBlacklist = 105;
        case 105: {
            if (tag == 842) {
            parse_URLBlacklist:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_urlblacklist()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(850))
                goto parse_URLWhitelist;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto URLWhitelist = 106;
        case 106: {
            if (tag == 850) {
            parse_URLWhitelist:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_urlwhitelist()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(946))
                goto parse_ProxySettings;
            break;
        }

        // optional .enterprise_management.StringPolicyProto ProxySettings = 118;
        case 118: {
            if (tag == 946) {
            parse_ProxySettings:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_proxysettings()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(1218))
                goto parse_DisableSafeBrowsingProceedAnyway;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
        case 152: {
            if (tag == 1218) {
            parse_DisableSafeBrowsingProceedAnyway:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_disablesafebrowsingproceedanyway()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(1306))
                goto parse_DefaultSearchProviderAlternateURLs;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
        case 163: {
            if (tag == 1306) {
            parse_DefaultSearchProviderAlternateURLs:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchprovideralternateurls()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(1314))
                goto parse_ForceSafeSearch;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
        case 164: {
            if (tag == 1314) {
            parse_ForceSafeSearch:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_forcesafesearch()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(1386))
                goto parse_DefaultSearchProviderSearchTermsReplacementKey;
            break;
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchTermsReplacementKey = 173;
        case 173: {
            if (tag == 1386) {
            parse_DefaultSearchProviderSearchTermsReplacementKey:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchprovidersearchtermsreplacementkey()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(1538))
                goto parse_SigninAllowed;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
        case 192: {
            if (tag == 1538) {
            parse_SigninAllowed:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_signinallowed()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(1586))
                goto parse_VariationsRestrictParameter;
            break;
        }

        // optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
        case 198: {
            if (tag == 1586) {
            parse_VariationsRestrictParameter:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_variationsrestrictparameter()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(1834))
                goto parse_ManagedBookmarks;
            break;
        }

        // optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
        case 229: {
            if (tag == 1834) {
            parse_ManagedBookmarks:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_managedbookmarks()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(1850))
                goto parse_DefaultSearchProviderImageURL;
            break;
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
        case 231: {
            if (tag == 1850) {
            parse_DefaultSearchProviderImageURL:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchproviderimageurl()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(1858))
                goto parse_DefaultSearchProviderSearchURLPostParams;
            break;
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
        case 232: {
            if (tag == 1858) {
            parse_DefaultSearchProviderSearchURLPostParams:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchprovidersearchurlpostparams()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(1866))
                goto parse_DefaultSearchProviderSuggestURLPostParams;
            break;
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
        case 233: {
            if (tag == 1866) {
            parse_DefaultSearchProviderSuggestURLPostParams:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchprovidersuggesturlpostparams()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(1874))
                goto parse_DefaultSearchProviderInstantURLPostParams;
            break;
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderInstantURLPostParams = 234;
        case 234: {
            if (tag == 1874) {
            parse_DefaultSearchProviderInstantURLPostParams:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchproviderinstanturlpostparams()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(1882))
                goto parse_DefaultSearchProviderImageURLPostParams;
            break;
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
        case 235: {
            if (tag == 1882) {
            parse_DefaultSearchProviderImageURLPostParams:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchproviderimageurlpostparams()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(1914))
                goto parse_DefaultSearchProviderNewTabURL;
            break;
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
        case 239: {
            if (tag == 1914) {
            parse_DefaultSearchProviderNewTabURL:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultsearchprovidernewtaburl()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(1946))
                goto parse_DataCompressionProxyEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto DataCompressionProxyEnabled = 243;
        case 243: {
            if (tag == 1946) {
            parse_DataCompressionProxyEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_datacompressionproxyenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2178))
                goto parse_EnableDeprecatedWebPlatformFeatures;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto EnableDeprecatedWebPlatformFeatures = 272;
        case 272: {
            if (tag == 2178) {
            parse_EnableDeprecatedWebPlatformFeatures:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_enabledeprecatedwebplatformfeatures()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2202))
                goto parse_NetworkPredictionOptions;
            break;
        }

        // optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
        case 275: {
            if (tag == 2202) {
            parse_NetworkPredictionOptions:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_networkpredictionoptions()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2266))
                goto parse_ContextualSearchEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto ContextualSearchEnabled = 283;
        case 283: {
            if (tag == 2266) {
            parse_ContextualSearchEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_contextualsearchenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2274))
                goto parse_ForceGoogleSafeSearch;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
        case 284: {
            if (tag == 2274) {
            parse_ForceGoogleSafeSearch:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_forcegooglesafesearch()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2282))
                goto parse_ForceYouTubeSafetyMode;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
        case 285: {
            if (tag == 2282) {
            parse_ForceYouTubeSafetyMode:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_forceyoutubesafetymode()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2418))
                goto parse_SSLErrorOverrideAllowed;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
        case 302: {
            if (tag == 2418) {
            parse_SSLErrorOverrideAllowed:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_sslerroroverrideallowed()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2458))
                goto parse_AuthAndroidNegotiateAccountType;
            break;
        }

        // optional .enterprise_management.StringPolicyProto AuthAndroidNegotiateAccountType = 307;
        case 307: {
            if (tag == 2458) {
            parse_AuthAndroidNegotiateAccountType:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_authandroidnegotiateaccounttype()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2514))
                goto parse_SupervisedUserContentProviderEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto SupervisedUserContentProviderEnabled = 314;
        case 314: {
            if (tag == 2514) {
            parse_SupervisedUserContentProviderEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_supervisedusercontentproviderenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2578))
                goto parse_DefaultWebBluetoothGuardSetting;
            break;
        }

        // optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
        case 322: {
            if (tag == 2578) {
            parse_DefaultWebBluetoothGuardSetting:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_defaultwebbluetoothguardsetting()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2666))
                goto parse_AllowedDomainsForApps;
            break;
        }

        // optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
        case 333: {
            if (tag == 2666) {
            parse_AllowedDomainsForApps:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_alloweddomainsforapps()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2682))
                goto parse_EnableMediaRouter;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
        case 335: {
            if (tag == 2682) {
            parse_EnableMediaRouter:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_enablemediarouter()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2690))
                goto parse_DHEEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto DHEEnabled = 336;
        case 336: {
            if (tag == 2690) {
            parse_DHEEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_dheenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2698))
                goto parse_CertificateTransparencyEnforcementDisabledForUrls;
            break;
        }

        // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
        case 337: {
            if (tag == 2698) {
            parse_CertificateTransparencyEnforcementDisabledForUrls:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_certificatetransparencyenforcementdisabledforurls()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2722))
                goto parse_NTPContentSuggestionsEnabled;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto NTPContentSuggestionsEnabled = 340;
        case 340: {
            if (tag == 2722) {
            parse_NTPContentSuggestionsEnabled:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_ntpcontentsuggestionsenabled()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2730))
                goto parse_WebRtcUdpPortRange;
            break;
        }

        // optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
        case 341: {
            if (tag == 2730) {
            parse_WebRtcUdpPortRange:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_webrtcudpportrange()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2738))
                goto parse_EnableSha1ForLocalAnchors;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto EnableSha1ForLocalAnchors = 342;
        case 342: {
            if (tag == 2738) {
            parse_EnableSha1ForLocalAnchors:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_enablesha1forlocalanchors()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2786))
                goto parse_ForceBrowserSignin;
            break;
        }

        // optional .enterprise_management.BooleanPolicyProto ForceBrowserSignin = 348;
        case 348: {
            if (tag == 2786) {
            parse_ForceBrowserSignin:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_forcebrowsersignin()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(2802))
                goto parse_ForceYouTubeRestrict;
            break;
        }

        // optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
        case 350: {
            if (tag == 2802) {
            parse_ForceYouTubeRestrict:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_forceyoutuberestrict()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:enterprise_management.CloudPolicySettings)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:enterprise_management.CloudPolicySettings)
    return false;
#undef DO_
}

void CloudPolicySettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:enterprise_management.CloudPolicySettings)
    // optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
    if (has_alternateerrorpagesenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            7, *this->alternateerrorpagesenabled_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
    if (has_searchsuggestenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            8, *this->searchsuggestenabled_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
    if (has_javascriptenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            11, *this->javascriptenabled_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
    if (has_incognitoenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            12, *this->incognitoenabled_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
    if (has_savingbrowserhistorydisabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            13, *this->savingbrowserhistorydisabled_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
    if (has_printingenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            14, *this->printingenabled_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
    if (has_safebrowsingenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            16, *this->safebrowsingenabled_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
    if (has_passwordmanagerenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            18, *this->passwordmanagerenabled_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
    if (has_autofillenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            20, *this->autofillenabled_, output);
    }

    // optional .enterprise_management.StringPolicyProto ProxyMode = 23;
    if (has_proxymode()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            23, *this->proxymode_, output);
    }

    // optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
    if (has_proxyservermode()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            24, *this->proxyservermode_, output);
    }

    // optional .enterprise_management.StringPolicyProto ProxyServer = 25;
    if (has_proxyserver()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            25, *this->proxyserver_, output);
    }

    // optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
    if (has_proxypacurl()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            26, *this->proxypacurl_, output);
    }

    // optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
    if (has_proxybypasslist()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            27, *this->proxybypasslist_, output);
    }

    // optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
    if (has_authschemes()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            28, *this->authschemes_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
    if (has_disableauthnegotiatecnamelookup()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            29, *this->disableauthnegotiatecnamelookup_, output);
    }

    // optional .enterprise_management.StringPolicyProto AuthServerWhitelist = 31;
    if (has_authserverwhitelist()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            31, *this->authserverwhitelist_, output);
    }

    // optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateWhitelist = 32;
    if (has_authnegotiatedelegatewhitelist()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            32, *this->authnegotiatedelegatewhitelist_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
    if (has_defaultsearchproviderenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            42, *this->defaultsearchproviderenabled_, output);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
    if (has_defaultsearchprovidername()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            43, *this->defaultsearchprovidername_, output);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
    if (has_defaultsearchproviderkeyword()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            44, *this->defaultsearchproviderkeyword_, output);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
    if (has_defaultsearchprovidersearchurl()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            45, *this->defaultsearchprovidersearchurl_, output);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
    if (has_defaultsearchprovidersuggesturl()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            46, *this->defaultsearchprovidersuggesturl_, output);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderInstantURL = 47;
    if (has_defaultsearchproviderinstanturl()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            47, *this->defaultsearchproviderinstanturl_, output);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
    if (has_defaultsearchprovidericonurl()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            48, *this->defaultsearchprovidericonurl_, output);
    }

    // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
    if (has_defaultsearchproviderencodings()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            49, *this->defaultsearchproviderencodings_, output);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
    if (has_defaultcookiessetting()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            50, *this->defaultcookiessetting_, output);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultImagesSetting = 51;
    if (has_defaultimagessetting()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            51, *this->defaultimagessetting_, output);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
    if (has_defaultjavascriptsetting()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            52, *this->defaultjavascriptsetting_, output);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
    if (has_defaultpopupssetting()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            54, *this->defaultpopupssetting_, output);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
    if (has_defaultgeolocationsetting()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            56, *this->defaultgeolocationsetting_, output);
    }

    // optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
    if (has_cookiesblockedforurls()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            69, *this->cookiesblockedforurls_, output);
    }

    // optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
    if (has_cookiessessiononlyforurls()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            70, *this->cookiessessiononlyforurls_, output);
    }

    // optional .enterprise_management.StringListPolicyProto ImagesAllowedForUrls = 71;
    if (has_imagesallowedforurls()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            71, *this->imagesallowedforurls_, output);
    }

    // optional .enterprise_management.StringListPolicyProto ImagesBlockedForUrls = 72;
    if (has_imagesblockedforurls()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            72, *this->imagesblockedforurls_, output);
    }

    // optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
    if (has_javascriptallowedforurls()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            73, *this->javascriptallowedforurls_, output);
    }

    // optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
    if (has_javascriptblockedforurls()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            74, *this->javascriptblockedforurls_, output);
    }

    // optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
    if (has_popupsallowedforurls()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            77, *this->popupsallowedforurls_, output);
    }

    // optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
    if (has_popupsblockedforurls()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            78, *this->popupsblockedforurls_, output);
    }

    // optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
    if (has_cookiesallowedforurls()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            79, *this->cookiesallowedforurls_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
    if (has_translateenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            82, *this->translateenabled_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
    if (has_editbookmarksenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            85, *this->editbookmarksenabled_, output);
    }

    // optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
    if (has_incognitomodeavailability()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            95, *this->incognitomodeavailability_, output);
    }

    // optional .enterprise_management.StringListPolicyProto URLBlacklist = 105;
    if (has_urlblacklist()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            105, *this->urlblacklist_, output);
    }

    // optional .enterprise_management.StringListPolicyProto URLWhitelist = 106;
    if (has_urlwhitelist()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            106, *this->urlwhitelist_, output);
    }

    // optional .enterprise_management.StringPolicyProto ProxySettings = 118;
    if (has_proxysettings()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            118, *this->proxysettings_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
    if (has_disablesafebrowsingproceedanyway()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            152, *this->disablesafebrowsingproceedanyway_, output);
    }

    // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
    if (has_defaultsearchprovideralternateurls()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            163, *this->defaultsearchprovideralternateurls_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
    if (has_forcesafesearch()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            164, *this->forcesafesearch_, output);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchTermsReplacementKey = 173;
    if (has_defaultsearchprovidersearchtermsreplacementkey()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            173, *this->defaultsearchprovidersearchtermsreplacementkey_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
    if (has_signinallowed()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            192, *this->signinallowed_, output);
    }

    // optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
    if (has_variationsrestrictparameter()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            198, *this->variationsrestrictparameter_, output);
    }

    // optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
    if (has_managedbookmarks()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            229, *this->managedbookmarks_, output);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
    if (has_defaultsearchproviderimageurl()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            231, *this->defaultsearchproviderimageurl_, output);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
    if (has_defaultsearchprovidersearchurlpostparams()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            232, *this->defaultsearchprovidersearchurlpostparams_, output);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
    if (has_defaultsearchprovidersuggesturlpostparams()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            233, *this->defaultsearchprovidersuggesturlpostparams_, output);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderInstantURLPostParams = 234;
    if (has_defaultsearchproviderinstanturlpostparams()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            234, *this->defaultsearchproviderinstanturlpostparams_, output);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
    if (has_defaultsearchproviderimageurlpostparams()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            235, *this->defaultsearchproviderimageurlpostparams_, output);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
    if (has_defaultsearchprovidernewtaburl()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            239, *this->defaultsearchprovidernewtaburl_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto DataCompressionProxyEnabled = 243;
    if (has_datacompressionproxyenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            243, *this->datacompressionproxyenabled_, output);
    }

    // optional .enterprise_management.StringListPolicyProto EnableDeprecatedWebPlatformFeatures = 272;
    if (has_enabledeprecatedwebplatformfeatures()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            272, *this->enabledeprecatedwebplatformfeatures_, output);
    }

    // optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
    if (has_networkpredictionoptions()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            275, *this->networkpredictionoptions_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto ContextualSearchEnabled = 283;
    if (has_contextualsearchenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            283, *this->contextualsearchenabled_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
    if (has_forcegooglesafesearch()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            284, *this->forcegooglesafesearch_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
    if (has_forceyoutubesafetymode()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            285, *this->forceyoutubesafetymode_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
    if (has_sslerroroverrideallowed()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            302, *this->sslerroroverrideallowed_, output);
    }

    // optional .enterprise_management.StringPolicyProto AuthAndroidNegotiateAccountType = 307;
    if (has_authandroidnegotiateaccounttype()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            307, *this->authandroidnegotiateaccounttype_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto SupervisedUserContentProviderEnabled = 314;
    if (has_supervisedusercontentproviderenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            314, *this->supervisedusercontentproviderenabled_, output);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
    if (has_defaultwebbluetoothguardsetting()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            322, *this->defaultwebbluetoothguardsetting_, output);
    }

    // optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
    if (has_alloweddomainsforapps()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            333, *this->alloweddomainsforapps_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
    if (has_enablemediarouter()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            335, *this->enablemediarouter_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto DHEEnabled = 336;
    if (has_dheenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            336, *this->dheenabled_, output);
    }

    // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
    if (has_certificatetransparencyenforcementdisabledforurls()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            337, *this->certificatetransparencyenforcementdisabledforurls_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto NTPContentSuggestionsEnabled = 340;
    if (has_ntpcontentsuggestionsenabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            340, *this->ntpcontentsuggestionsenabled_, output);
    }

    // optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
    if (has_webrtcudpportrange()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            341, *this->webrtcudpportrange_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto EnableSha1ForLocalAnchors = 342;
    if (has_enablesha1forlocalanchors()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            342, *this->enablesha1forlocalanchors_, output);
    }

    // optional .enterprise_management.BooleanPolicyProto ForceBrowserSignin = 348;
    if (has_forcebrowsersignin()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            348, *this->forcebrowsersignin_, output);
    }

    // optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
    if (has_forceyoutuberestrict()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            350, *this->forceyoutuberestrict_, output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:enterprise_management.CloudPolicySettings)
}

int CloudPolicySettings::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:enterprise_management.CloudPolicySettings)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 255u) {
        // optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
        if (has_alternateerrorpagesenabled()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->alternateerrorpagesenabled_);
        }

        // optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
        if (has_searchsuggestenabled()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->searchsuggestenabled_);
        }

        // optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
        if (has_networkpredictionoptions()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->networkpredictionoptions_);
        }

        // optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
        if (has_javascriptenabled()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->javascriptenabled_);
        }

        // optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
        if (has_incognitoenabled()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->incognitoenabled_);
        }

        // optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
        if (has_incognitomodeavailability()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->incognitomodeavailability_);
        }

        // optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
        if (has_savingbrowserhistorydisabled()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->savingbrowserhistorydisabled_);
        }

        // optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
        if (has_printingenabled()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->printingenabled_);
        }
    }
    if (_has_bits_[8 / 32] & 65280u) {
        // optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
        if (has_forcesafesearch()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->forcesafesearch_);
        }

        // optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
        if (has_forcegooglesafesearch()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->forcegooglesafesearch_);
        }

        // optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
        if (has_forceyoutubesafetymode()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->forceyoutubesafetymode_);
        }

        // optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
        if (has_forceyoutuberestrict()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->forceyoutuberestrict_);
        }

        // optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
        if (has_safebrowsingenabled()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->safebrowsingenabled_);
        }

        // optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
        if (has_passwordmanagerenabled()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->passwordmanagerenabled_);
        }

        // optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
        if (has_autofillenabled()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->autofillenabled_);
        }

        // optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
        if (has_signinallowed()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->signinallowed_);
        }
    }
    if (_has_bits_[16 / 32] & 16711680u) {
        // optional .enterprise_management.StringPolicyProto ProxyMode = 23;
        if (has_proxymode()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->proxymode_);
        }

        // optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
        if (has_proxyservermode()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->proxyservermode_);
        }

        // optional .enterprise_management.StringPolicyProto ProxyServer = 25;
        if (has_proxyserver()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->proxyserver_);
        }

        // optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
        if (has_proxypacurl()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->proxypacurl_);
        }

        // optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
        if (has_proxybypasslist()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->proxybypasslist_);
        }

        // optional .enterprise_management.StringPolicyProto ProxySettings = 118;
        if (has_proxysettings()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->proxysettings_);
        }

        // optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
        if (has_authschemes()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->authschemes_);
        }

        // optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
        if (has_disableauthnegotiatecnamelookup()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->disableauthnegotiatecnamelookup_);
        }
    }
    if (_has_bits_[24 / 32] & 4278190080u) {
        // optional .enterprise_management.StringPolicyProto AuthServerWhitelist = 31;
        if (has_authserverwhitelist()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->authserverwhitelist_);
        }

        // optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateWhitelist = 32;
        if (has_authnegotiatedelegatewhitelist()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->authnegotiatedelegatewhitelist_);
        }

        // optional .enterprise_management.StringPolicyProto AuthAndroidNegotiateAccountType = 307;
        if (has_authandroidnegotiateaccounttype()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->authandroidnegotiateaccounttype_);
        }

        // optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
        if (has_defaultsearchproviderenabled()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchproviderenabled_);
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
        if (has_defaultsearchprovidername()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchprovidername_);
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
        if (has_defaultsearchproviderkeyword()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchproviderkeyword_);
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
        if (has_defaultsearchprovidersearchurl()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchprovidersearchurl_);
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
        if (has_defaultsearchprovidersuggesturl()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchprovidersuggesturl_);
        }
    }
    if (_has_bits_[32 / 32] & 255u) {
        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderInstantURL = 47;
        if (has_defaultsearchproviderinstanturl()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchproviderinstanturl_);
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
        if (has_defaultsearchprovidericonurl()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchprovidericonurl_);
        }

        // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
        if (has_defaultsearchproviderencodings()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchproviderencodings_);
        }

        // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
        if (has_defaultsearchprovideralternateurls()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchprovideralternateurls_);
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchTermsReplacementKey = 173;
        if (has_defaultsearchprovidersearchtermsreplacementkey()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchprovidersearchtermsreplacementkey_);
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
        if (has_defaultsearchproviderimageurl()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchproviderimageurl_);
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
        if (has_defaultsearchprovidernewtaburl()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchprovidernewtaburl_);
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
        if (has_defaultsearchprovidersearchurlpostparams()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchprovidersearchurlpostparams_);
        }
    }
    if (_has_bits_[40 / 32] & 65280u) {
        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
        if (has_defaultsearchprovidersuggesturlpostparams()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchprovidersuggesturlpostparams_);
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderInstantURLPostParams = 234;
        if (has_defaultsearchproviderinstanturlpostparams()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchproviderinstanturlpostparams_);
        }

        // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
        if (has_defaultsearchproviderimageurlpostparams()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultsearchproviderimageurlpostparams_);
        }

        // optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
        if (has_defaultcookiessetting()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultcookiessetting_);
        }

        // optional .enterprise_management.IntegerPolicyProto DefaultImagesSetting = 51;
        if (has_defaultimagessetting()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultimagessetting_);
        }

        // optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
        if (has_defaultjavascriptsetting()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultjavascriptsetting_);
        }

        // optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
        if (has_defaultpopupssetting()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultpopupssetting_);
        }

        // optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
        if (has_defaultgeolocationsetting()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultgeolocationsetting_);
        }
    }
    if (_has_bits_[48 / 32] & 16711680u) {
        // optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
        if (has_defaultwebbluetoothguardsetting()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->defaultwebbluetoothguardsetting_);
        }

        // optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
        if (has_cookiesallowedforurls()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->cookiesallowedforurls_);
        }

        // optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
        if (has_cookiesblockedforurls()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->cookiesblockedforurls_);
        }

        // optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
        if (has_cookiessessiononlyforurls()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->cookiessessiononlyforurls_);
        }

        // optional .enterprise_management.StringListPolicyProto ImagesAllowedForUrls = 71;
        if (has_imagesallowedforurls()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->imagesallowedforurls_);
        }

        // optional .enterprise_management.StringListPolicyProto ImagesBlockedForUrls = 72;
        if (has_imagesblockedforurls()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->imagesblockedforurls_);
        }

        // optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
        if (has_javascriptallowedforurls()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->javascriptallowedforurls_);
        }

        // optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
        if (has_javascriptblockedforurls()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->javascriptblockedforurls_);
        }
    }
    if (_has_bits_[56 / 32] & 4278190080u) {
        // optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
        if (has_popupsallowedforurls()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->popupsallowedforurls_);
        }

        // optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
        if (has_popupsblockedforurls()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->popupsblockedforurls_);
        }

        // optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
        if (has_translateenabled()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->translateenabled_);
        }

        // optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
        if (has_editbookmarksenabled()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->editbookmarksenabled_);
        }

        // optional .enterprise_management.StringListPolicyProto URLBlacklist = 105;
        if (has_urlblacklist()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->urlblacklist_);
        }

        // optional .enterprise_management.StringListPolicyProto URLWhitelist = 106;
        if (has_urlwhitelist()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->urlwhitelist_);
        }

        // optional .enterprise_management.BooleanPolicyProto EnableSha1ForLocalAnchors = 342;
        if (has_enablesha1forlocalanchors()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->enablesha1forlocalanchors_);
        }

        // optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
        if (has_disablesafebrowsingproceedanyway()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->disablesafebrowsingproceedanyway_);
        }
    }
    if (_has_bits_[64 / 32] & 255u) {
        // optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
        if (has_variationsrestrictparameter()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->variationsrestrictparameter_);
        }

        // optional .enterprise_management.BooleanPolicyProto SupervisedUserContentProviderEnabled = 314;
        if (has_supervisedusercontentproviderenabled()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->supervisedusercontentproviderenabled_);
        }

        // optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
        if (has_managedbookmarks()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->managedbookmarks_);
        }

        // optional .enterprise_management.BooleanPolicyProto DataCompressionProxyEnabled = 243;
        if (has_datacompressionproxyenabled()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->datacompressionproxyenabled_);
        }

        // optional .enterprise_management.StringListPolicyProto EnableDeprecatedWebPlatformFeatures = 272;
        if (has_enabledeprecatedwebplatformfeatures()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->enabledeprecatedwebplatformfeatures_);
        }

        // optional .enterprise_management.BooleanPolicyProto ForceBrowserSignin = 348;
        if (has_forcebrowsersignin()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->forcebrowsersignin_);
        }

        // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
        if (has_certificatetransparencyenforcementdisabledforurls()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->certificatetransparencyenforcementdisabledforurls_);
        }

        // optional .enterprise_management.BooleanPolicyProto DHEEnabled = 336;
        if (has_dheenabled()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->dheenabled_);
        }
    }
    if (_has_bits_[72 / 32] & 16128u) {
        // optional .enterprise_management.BooleanPolicyProto ContextualSearchEnabled = 283;
        if (has_contextualsearchenabled()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->contextualsearchenabled_);
        }

        // optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
        if (has_sslerroroverrideallowed()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->sslerroroverrideallowed_);
        }

        // optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
        if (has_alloweddomainsforapps()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->alloweddomainsforapps_);
        }

        // optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
        if (has_enablemediarouter()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->enablemediarouter_);
        }

        // optional .enterprise_management.BooleanPolicyProto NTPContentSuggestionsEnabled = 340;
        if (has_ntpcontentsuggestionsenabled()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->ntpcontentsuggestionsenabled_);
        }

        // optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
        if (has_webrtcudpportrange()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->webrtcudpportrange_);
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void CloudPolicySettings::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const CloudPolicySettings*>(&from));
}

void CloudPolicySettings::MergeFrom(const CloudPolicySettings& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.CloudPolicySettings)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_alternateerrorpagesenabled()) {
            mutable_alternateerrorpagesenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.alternateerrorpagesenabled());
        }
        if (from.has_searchsuggestenabled()) {
            mutable_searchsuggestenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.searchsuggestenabled());
        }
        if (from.has_networkpredictionoptions()) {
            mutable_networkpredictionoptions()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.networkpredictionoptions());
        }
        if (from.has_javascriptenabled()) {
            mutable_javascriptenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.javascriptenabled());
        }
        if (from.has_incognitoenabled()) {
            mutable_incognitoenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.incognitoenabled());
        }
        if (from.has_incognitomodeavailability()) {
            mutable_incognitomodeavailability()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.incognitomodeavailability());
        }
        if (from.has_savingbrowserhistorydisabled()) {
            mutable_savingbrowserhistorydisabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.savingbrowserhistorydisabled());
        }
        if (from.has_printingenabled()) {
            mutable_printingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.printingenabled());
        }
    }
    if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
        if (from.has_forcesafesearch()) {
            mutable_forcesafesearch()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.forcesafesearch());
        }
        if (from.has_forcegooglesafesearch()) {
            mutable_forcegooglesafesearch()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.forcegooglesafesearch());
        }
        if (from.has_forceyoutubesafetymode()) {
            mutable_forceyoutubesafetymode()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.forceyoutubesafetymode());
        }
        if (from.has_forceyoutuberestrict()) {
            mutable_forceyoutuberestrict()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.forceyoutuberestrict());
        }
        if (from.has_safebrowsingenabled()) {
            mutable_safebrowsingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.safebrowsingenabled());
        }
        if (from.has_passwordmanagerenabled()) {
            mutable_passwordmanagerenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.passwordmanagerenabled());
        }
        if (from.has_autofillenabled()) {
            mutable_autofillenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.autofillenabled());
        }
        if (from.has_signinallowed()) {
            mutable_signinallowed()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.signinallowed());
        }
    }
    if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
        if (from.has_proxymode()) {
            mutable_proxymode()->::enterprise_management::StringPolicyProto::MergeFrom(from.proxymode());
        }
        if (from.has_proxyservermode()) {
            mutable_proxyservermode()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.proxyservermode());
        }
        if (from.has_proxyserver()) {
            mutable_proxyserver()->::enterprise_management::StringPolicyProto::MergeFrom(from.proxyserver());
        }
        if (from.has_proxypacurl()) {
            mutable_proxypacurl()->::enterprise_management::StringPolicyProto::MergeFrom(from.proxypacurl());
        }
        if (from.has_proxybypasslist()) {
            mutable_proxybypasslist()->::enterprise_management::StringPolicyProto::MergeFrom(from.proxybypasslist());
        }
        if (from.has_proxysettings()) {
            mutable_proxysettings()->::enterprise_management::StringPolicyProto::MergeFrom(from.proxysettings());
        }
        if (from.has_authschemes()) {
            mutable_authschemes()->::enterprise_management::StringPolicyProto::MergeFrom(from.authschemes());
        }
        if (from.has_disableauthnegotiatecnamelookup()) {
            mutable_disableauthnegotiatecnamelookup()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.disableauthnegotiatecnamelookup());
        }
    }
    if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
        if (from.has_authserverwhitelist()) {
            mutable_authserverwhitelist()->::enterprise_management::StringPolicyProto::MergeFrom(from.authserverwhitelist());
        }
        if (from.has_authnegotiatedelegatewhitelist()) {
            mutable_authnegotiatedelegatewhitelist()->::enterprise_management::StringPolicyProto::MergeFrom(from.authnegotiatedelegatewhitelist());
        }
        if (from.has_authandroidnegotiateaccounttype()) {
            mutable_authandroidnegotiateaccounttype()->::enterprise_management::StringPolicyProto::MergeFrom(from.authandroidnegotiateaccounttype());
        }
        if (from.has_defaultsearchproviderenabled()) {
            mutable_defaultsearchproviderenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.defaultsearchproviderenabled());
        }
        if (from.has_defaultsearchprovidername()) {
            mutable_defaultsearchprovidername()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidername());
        }
        if (from.has_defaultsearchproviderkeyword()) {
            mutable_defaultsearchproviderkeyword()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchproviderkeyword());
        }
        if (from.has_defaultsearchprovidersearchurl()) {
            mutable_defaultsearchprovidersearchurl()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidersearchurl());
        }
        if (from.has_defaultsearchprovidersuggesturl()) {
            mutable_defaultsearchprovidersuggesturl()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidersuggesturl());
        }
    }
    if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
        if (from.has_defaultsearchproviderinstanturl()) {
            mutable_defaultsearchproviderinstanturl()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchproviderinstanturl());
        }
        if (from.has_defaultsearchprovidericonurl()) {
            mutable_defaultsearchprovidericonurl()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidericonurl());
        }
        if (from.has_defaultsearchproviderencodings()) {
            mutable_defaultsearchproviderencodings()->::enterprise_management::StringListPolicyProto::MergeFrom(from.defaultsearchproviderencodings());
        }
        if (from.has_defaultsearchprovideralternateurls()) {
            mutable_defaultsearchprovideralternateurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.defaultsearchprovideralternateurls());
        }
        if (from.has_defaultsearchprovidersearchtermsreplacementkey()) {
            mutable_defaultsearchprovidersearchtermsreplacementkey()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidersearchtermsreplacementkey());
        }
        if (from.has_defaultsearchproviderimageurl()) {
            mutable_defaultsearchproviderimageurl()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchproviderimageurl());
        }
        if (from.has_defaultsearchprovidernewtaburl()) {
            mutable_defaultsearchprovidernewtaburl()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidernewtaburl());
        }
        if (from.has_defaultsearchprovidersearchurlpostparams()) {
            mutable_defaultsearchprovidersearchurlpostparams()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidersearchurlpostparams());
        }
    }
    if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
        if (from.has_defaultsearchprovidersuggesturlpostparams()) {
            mutable_defaultsearchprovidersuggesturlpostparams()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchprovidersuggesturlpostparams());
        }
        if (from.has_defaultsearchproviderinstanturlpostparams()) {
            mutable_defaultsearchproviderinstanturlpostparams()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchproviderinstanturlpostparams());
        }
        if (from.has_defaultsearchproviderimageurlpostparams()) {
            mutable_defaultsearchproviderimageurlpostparams()->::enterprise_management::StringPolicyProto::MergeFrom(from.defaultsearchproviderimageurlpostparams());
        }
        if (from.has_defaultcookiessetting()) {
            mutable_defaultcookiessetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultcookiessetting());
        }
        if (from.has_defaultimagessetting()) {
            mutable_defaultimagessetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultimagessetting());
        }
        if (from.has_defaultjavascriptsetting()) {
            mutable_defaultjavascriptsetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultjavascriptsetting());
        }
        if (from.has_defaultpopupssetting()) {
            mutable_defaultpopupssetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultpopupssetting());
        }
        if (from.has_defaultgeolocationsetting()) {
            mutable_defaultgeolocationsetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultgeolocationsetting());
        }
    }
    if (from._has_bits_[48 / 32] & (0xffu << (48 % 32))) {
        if (from.has_defaultwebbluetoothguardsetting()) {
            mutable_defaultwebbluetoothguardsetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from.defaultwebbluetoothguardsetting());
        }
        if (from.has_cookiesallowedforurls()) {
            mutable_cookiesallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.cookiesallowedforurls());
        }
        if (from.has_cookiesblockedforurls()) {
            mutable_cookiesblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.cookiesblockedforurls());
        }
        if (from.has_cookiessessiononlyforurls()) {
            mutable_cookiessessiononlyforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.cookiessessiononlyforurls());
        }
        if (from.has_imagesallowedforurls()) {
            mutable_imagesallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.imagesallowedforurls());
        }
        if (from.has_imagesblockedforurls()) {
            mutable_imagesblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.imagesblockedforurls());
        }
        if (from.has_javascriptallowedforurls()) {
            mutable_javascriptallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.javascriptallowedforurls());
        }
        if (from.has_javascriptblockedforurls()) {
            mutable_javascriptblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.javascriptblockedforurls());
        }
    }
    if (from._has_bits_[56 / 32] & (0xffu << (56 % 32))) {
        if (from.has_popupsallowedforurls()) {
            mutable_popupsallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.popupsallowedforurls());
        }
        if (from.has_popupsblockedforurls()) {
            mutable_popupsblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.popupsblockedforurls());
        }
        if (from.has_translateenabled()) {
            mutable_translateenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.translateenabled());
        }
        if (from.has_editbookmarksenabled()) {
            mutable_editbookmarksenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.editbookmarksenabled());
        }
        if (from.has_urlblacklist()) {
            mutable_urlblacklist()->::enterprise_management::StringListPolicyProto::MergeFrom(from.urlblacklist());
        }
        if (from.has_urlwhitelist()) {
            mutable_urlwhitelist()->::enterprise_management::StringListPolicyProto::MergeFrom(from.urlwhitelist());
        }
        if (from.has_enablesha1forlocalanchors()) {
            mutable_enablesha1forlocalanchors()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.enablesha1forlocalanchors());
        }
        if (from.has_disablesafebrowsingproceedanyway()) {
            mutable_disablesafebrowsingproceedanyway()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.disablesafebrowsingproceedanyway());
        }
    }
    if (from._has_bits_[64 / 32] & (0xffu << (64 % 32))) {
        if (from.has_variationsrestrictparameter()) {
            mutable_variationsrestrictparameter()->::enterprise_management::StringPolicyProto::MergeFrom(from.variationsrestrictparameter());
        }
        if (from.has_supervisedusercontentproviderenabled()) {
            mutable_supervisedusercontentproviderenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.supervisedusercontentproviderenabled());
        }
        if (from.has_managedbookmarks()) {
            mutable_managedbookmarks()->::enterprise_management::StringPolicyProto::MergeFrom(from.managedbookmarks());
        }
        if (from.has_datacompressionproxyenabled()) {
            mutable_datacompressionproxyenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.datacompressionproxyenabled());
        }
        if (from.has_enabledeprecatedwebplatformfeatures()) {
            mutable_enabledeprecatedwebplatformfeatures()->::enterprise_management::StringListPolicyProto::MergeFrom(from.enabledeprecatedwebplatformfeatures());
        }
        if (from.has_forcebrowsersignin()) {
            mutable_forcebrowsersignin()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.forcebrowsersignin());
        }
        if (from.has_certificatetransparencyenforcementdisabledforurls()) {
            mutable_certificatetransparencyenforcementdisabledforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from.certificatetransparencyenforcementdisabledforurls());
        }
        if (from.has_dheenabled()) {
            mutable_dheenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.dheenabled());
        }
    }
    if (from._has_bits_[72 / 32] & (0xffu << (72 % 32))) {
        if (from.has_contextualsearchenabled()) {
            mutable_contextualsearchenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.contextualsearchenabled());
        }
        if (from.has_sslerroroverrideallowed()) {
            mutable_sslerroroverrideallowed()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.sslerroroverrideallowed());
        }
        if (from.has_alloweddomainsforapps()) {
            mutable_alloweddomainsforapps()->::enterprise_management::StringPolicyProto::MergeFrom(from.alloweddomainsforapps());
        }
        if (from.has_enablemediarouter()) {
            mutable_enablemediarouter()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.enablemediarouter());
        }
        if (from.has_ntpcontentsuggestionsenabled()) {
            mutable_ntpcontentsuggestionsenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from.ntpcontentsuggestionsenabled());
        }
        if (from.has_webrtcudpportrange()) {
            mutable_webrtcudpportrange()->::enterprise_management::StringPolicyProto::MergeFrom(from.webrtcudpportrange());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void CloudPolicySettings::CopyFrom(const CloudPolicySettings& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.CloudPolicySettings)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool CloudPolicySettings::IsInitialized() const
{

    return true;
}

void CloudPolicySettings::Swap(CloudPolicySettings* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void CloudPolicySettings::InternalSwap(CloudPolicySettings* other)
{
    std::swap(alternateerrorpagesenabled_, other->alternateerrorpagesenabled_);
    std::swap(searchsuggestenabled_, other->searchsuggestenabled_);
    std::swap(networkpredictionoptions_, other->networkpredictionoptions_);
    std::swap(javascriptenabled_, other->javascriptenabled_);
    std::swap(incognitoenabled_, other->incognitoenabled_);
    std::swap(incognitomodeavailability_, other->incognitomodeavailability_);
    std::swap(savingbrowserhistorydisabled_, other->savingbrowserhistorydisabled_);
    std::swap(printingenabled_, other->printingenabled_);
    std::swap(forcesafesearch_, other->forcesafesearch_);
    std::swap(forcegooglesafesearch_, other->forcegooglesafesearch_);
    std::swap(forceyoutubesafetymode_, other->forceyoutubesafetymode_);
    std::swap(forceyoutuberestrict_, other->forceyoutuberestrict_);
    std::swap(safebrowsingenabled_, other->safebrowsingenabled_);
    std::swap(passwordmanagerenabled_, other->passwordmanagerenabled_);
    std::swap(autofillenabled_, other->autofillenabled_);
    std::swap(signinallowed_, other->signinallowed_);
    std::swap(proxymode_, other->proxymode_);
    std::swap(proxyservermode_, other->proxyservermode_);
    std::swap(proxyserver_, other->proxyserver_);
    std::swap(proxypacurl_, other->proxypacurl_);
    std::swap(proxybypasslist_, other->proxybypasslist_);
    std::swap(proxysettings_, other->proxysettings_);
    std::swap(authschemes_, other->authschemes_);
    std::swap(disableauthnegotiatecnamelookup_, other->disableauthnegotiatecnamelookup_);
    std::swap(authserverwhitelist_, other->authserverwhitelist_);
    std::swap(authnegotiatedelegatewhitelist_, other->authnegotiatedelegatewhitelist_);
    std::swap(authandroidnegotiateaccounttype_, other->authandroidnegotiateaccounttype_);
    std::swap(defaultsearchproviderenabled_, other->defaultsearchproviderenabled_);
    std::swap(defaultsearchprovidername_, other->defaultsearchprovidername_);
    std::swap(defaultsearchproviderkeyword_, other->defaultsearchproviderkeyword_);
    std::swap(defaultsearchprovidersearchurl_, other->defaultsearchprovidersearchurl_);
    std::swap(defaultsearchprovidersuggesturl_, other->defaultsearchprovidersuggesturl_);
    std::swap(defaultsearchproviderinstanturl_, other->defaultsearchproviderinstanturl_);
    std::swap(defaultsearchprovidericonurl_, other->defaultsearchprovidericonurl_);
    std::swap(defaultsearchproviderencodings_, other->defaultsearchproviderencodings_);
    std::swap(defaultsearchprovideralternateurls_, other->defaultsearchprovideralternateurls_);
    std::swap(defaultsearchprovidersearchtermsreplacementkey_, other->defaultsearchprovidersearchtermsreplacementkey_);
    std::swap(defaultsearchproviderimageurl_, other->defaultsearchproviderimageurl_);
    std::swap(defaultsearchprovidernewtaburl_, other->defaultsearchprovidernewtaburl_);
    std::swap(defaultsearchprovidersearchurlpostparams_, other->defaultsearchprovidersearchurlpostparams_);
    std::swap(defaultsearchprovidersuggesturlpostparams_, other->defaultsearchprovidersuggesturlpostparams_);
    std::swap(defaultsearchproviderinstanturlpostparams_, other->defaultsearchproviderinstanturlpostparams_);
    std::swap(defaultsearchproviderimageurlpostparams_, other->defaultsearchproviderimageurlpostparams_);
    std::swap(defaultcookiessetting_, other->defaultcookiessetting_);
    std::swap(defaultimagessetting_, other->defaultimagessetting_);
    std::swap(defaultjavascriptsetting_, other->defaultjavascriptsetting_);
    std::swap(defaultpopupssetting_, other->defaultpopupssetting_);
    std::swap(defaultgeolocationsetting_, other->defaultgeolocationsetting_);
    std::swap(defaultwebbluetoothguardsetting_, other->defaultwebbluetoothguardsetting_);
    std::swap(cookiesallowedforurls_, other->cookiesallowedforurls_);
    std::swap(cookiesblockedforurls_, other->cookiesblockedforurls_);
    std::swap(cookiessessiononlyforurls_, other->cookiessessiononlyforurls_);
    std::swap(imagesallowedforurls_, other->imagesallowedforurls_);
    std::swap(imagesblockedforurls_, other->imagesblockedforurls_);
    std::swap(javascriptallowedforurls_, other->javascriptallowedforurls_);
    std::swap(javascriptblockedforurls_, other->javascriptblockedforurls_);
    std::swap(popupsallowedforurls_, other->popupsallowedforurls_);
    std::swap(popupsblockedforurls_, other->popupsblockedforurls_);
    std::swap(translateenabled_, other->translateenabled_);
    std::swap(editbookmarksenabled_, other->editbookmarksenabled_);
    std::swap(urlblacklist_, other->urlblacklist_);
    std::swap(urlwhitelist_, other->urlwhitelist_);
    std::swap(enablesha1forlocalanchors_, other->enablesha1forlocalanchors_);
    std::swap(disablesafebrowsingproceedanyway_, other->disablesafebrowsingproceedanyway_);
    std::swap(variationsrestrictparameter_, other->variationsrestrictparameter_);
    std::swap(supervisedusercontentproviderenabled_, other->supervisedusercontentproviderenabled_);
    std::swap(managedbookmarks_, other->managedbookmarks_);
    std::swap(datacompressionproxyenabled_, other->datacompressionproxyenabled_);
    std::swap(enabledeprecatedwebplatformfeatures_, other->enabledeprecatedwebplatformfeatures_);
    std::swap(forcebrowsersignin_, other->forcebrowsersignin_);
    std::swap(certificatetransparencyenforcementdisabledforurls_, other->certificatetransparencyenforcementdisabledforurls_);
    std::swap(dheenabled_, other->dheenabled_);
    std::swap(contextualsearchenabled_, other->contextualsearchenabled_);
    std::swap(sslerroroverrideallowed_, other->sslerroroverrideallowed_);
    std::swap(alloweddomainsforapps_, other->alloweddomainsforapps_);
    std::swap(enablemediarouter_, other->enablemediarouter_);
    std::swap(ntpcontentsuggestionsenabled_, other->ntpcontentsuggestionsenabled_);
    std::swap(webrtcudpportrange_, other->webrtcudpportrange_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    std::swap(_has_bits_[2], other->_has_bits_[2]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string CloudPolicySettings::GetTypeName() const
{
    return "enterprise_management.CloudPolicySettings";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CloudPolicySettings

// optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
bool CloudPolicySettings::has_alternateerrorpagesenabled() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void CloudPolicySettings::set_has_alternateerrorpagesenabled()
{
    _has_bits_[0] |= 0x00000001u;
}
void CloudPolicySettings::clear_has_alternateerrorpagesenabled()
{
    _has_bits_[0] &= ~0x00000001u;
}
void CloudPolicySettings::clear_alternateerrorpagesenabled()
{
    if (alternateerrorpagesenabled_ != NULL)
        alternateerrorpagesenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_alternateerrorpagesenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::alternateerrorpagesenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return alternateerrorpagesenabled_ != NULL ? *alternateerrorpagesenabled_ : *default_instance().alternateerrorpagesenabled_;
#else
    return alternateerrorpagesenabled_ != NULL ? *alternateerrorpagesenabled_ : *default_instance_->alternateerrorpagesenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_alternateerrorpagesenabled()
{
    set_has_alternateerrorpagesenabled();
    if (alternateerrorpagesenabled_ == NULL) {
        alternateerrorpagesenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
    return alternateerrorpagesenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_alternateerrorpagesenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
    clear_has_alternateerrorpagesenabled();
    ::enterprise_management::BooleanPolicyProto* temp = alternateerrorpagesenabled_;
    alternateerrorpagesenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_alternateerrorpagesenabled(::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled)
{
    delete alternateerrorpagesenabled_;
    alternateerrorpagesenabled_ = alternateerrorpagesenabled;
    if (alternateerrorpagesenabled) {
        set_has_alternateerrorpagesenabled();
    } else {
        clear_has_alternateerrorpagesenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
bool CloudPolicySettings::has_searchsuggestenabled() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void CloudPolicySettings::set_has_searchsuggestenabled()
{
    _has_bits_[0] |= 0x00000002u;
}
void CloudPolicySettings::clear_has_searchsuggestenabled()
{
    _has_bits_[0] &= ~0x00000002u;
}
void CloudPolicySettings::clear_searchsuggestenabled()
{
    if (searchsuggestenabled_ != NULL)
        searchsuggestenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_searchsuggestenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::searchsuggestenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return searchsuggestenabled_ != NULL ? *searchsuggestenabled_ : *default_instance().searchsuggestenabled_;
#else
    return searchsuggestenabled_ != NULL ? *searchsuggestenabled_ : *default_instance_->searchsuggestenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_searchsuggestenabled()
{
    set_has_searchsuggestenabled();
    if (searchsuggestenabled_ == NULL) {
        searchsuggestenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
    return searchsuggestenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_searchsuggestenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
    clear_has_searchsuggestenabled();
    ::enterprise_management::BooleanPolicyProto* temp = searchsuggestenabled_;
    searchsuggestenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_searchsuggestenabled(::enterprise_management::BooleanPolicyProto* searchsuggestenabled)
{
    delete searchsuggestenabled_;
    searchsuggestenabled_ = searchsuggestenabled;
    if (searchsuggestenabled) {
        set_has_searchsuggestenabled();
    } else {
        clear_has_searchsuggestenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
}

// optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
bool CloudPolicySettings::has_networkpredictionoptions() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void CloudPolicySettings::set_has_networkpredictionoptions()
{
    _has_bits_[0] |= 0x00000004u;
}
void CloudPolicySettings::clear_has_networkpredictionoptions()
{
    _has_bits_[0] &= ~0x00000004u;
}
void CloudPolicySettings::clear_networkpredictionoptions()
{
    if (networkpredictionoptions_ != NULL)
        networkpredictionoptions_->::enterprise_management::IntegerPolicyProto::Clear();
    clear_has_networkpredictionoptions();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::networkpredictionoptions() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return networkpredictionoptions_ != NULL ? *networkpredictionoptions_ : *default_instance().networkpredictionoptions_;
#else
    return networkpredictionoptions_ != NULL ? *networkpredictionoptions_ : *default_instance_->networkpredictionoptions_;
#endif
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_networkpredictionoptions()
{
    set_has_networkpredictionoptions();
    if (networkpredictionoptions_ == NULL) {
        networkpredictionoptions_ = new ::enterprise_management::IntegerPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
    return networkpredictionoptions_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_networkpredictionoptions()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
    clear_has_networkpredictionoptions();
    ::enterprise_management::IntegerPolicyProto* temp = networkpredictionoptions_;
    networkpredictionoptions_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_networkpredictionoptions(::enterprise_management::IntegerPolicyProto* networkpredictionoptions)
{
    delete networkpredictionoptions_;
    networkpredictionoptions_ = networkpredictionoptions;
    if (networkpredictionoptions) {
        set_has_networkpredictionoptions();
    } else {
        clear_has_networkpredictionoptions();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
}

// optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
bool CloudPolicySettings::has_javascriptenabled() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void CloudPolicySettings::set_has_javascriptenabled()
{
    _has_bits_[0] |= 0x00000008u;
}
void CloudPolicySettings::clear_has_javascriptenabled()
{
    _has_bits_[0] &= ~0x00000008u;
}
void CloudPolicySettings::clear_javascriptenabled()
{
    if (javascriptenabled_ != NULL)
        javascriptenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_javascriptenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::javascriptenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavascriptEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return javascriptenabled_ != NULL ? *javascriptenabled_ : *default_instance().javascriptenabled_;
#else
    return javascriptenabled_ != NULL ? *javascriptenabled_ : *default_instance_->javascriptenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_javascriptenabled()
{
    set_has_javascriptenabled();
    if (javascriptenabled_ == NULL) {
        javascriptenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavascriptEnabled)
    return javascriptenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_javascriptenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavascriptEnabled)
    clear_has_javascriptenabled();
    ::enterprise_management::BooleanPolicyProto* temp = javascriptenabled_;
    javascriptenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_javascriptenabled(::enterprise_management::BooleanPolicyProto* javascriptenabled)
{
    delete javascriptenabled_;
    javascriptenabled_ = javascriptenabled;
    if (javascriptenabled) {
        set_has_javascriptenabled();
    } else {
        clear_has_javascriptenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavascriptEnabled)
}

// optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
bool CloudPolicySettings::has_incognitoenabled() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void CloudPolicySettings::set_has_incognitoenabled()
{
    _has_bits_[0] |= 0x00000010u;
}
void CloudPolicySettings::clear_has_incognitoenabled()
{
    _has_bits_[0] &= ~0x00000010u;
}
void CloudPolicySettings::clear_incognitoenabled()
{
    if (incognitoenabled_ != NULL)
        incognitoenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_incognitoenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::incognitoenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IncognitoEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return incognitoenabled_ != NULL ? *incognitoenabled_ : *default_instance().incognitoenabled_;
#else
    return incognitoenabled_ != NULL ? *incognitoenabled_ : *default_instance_->incognitoenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_incognitoenabled()
{
    set_has_incognitoenabled();
    if (incognitoenabled_ == NULL) {
        incognitoenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IncognitoEnabled)
    return incognitoenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_incognitoenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IncognitoEnabled)
    clear_has_incognitoenabled();
    ::enterprise_management::BooleanPolicyProto* temp = incognitoenabled_;
    incognitoenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_incognitoenabled(::enterprise_management::BooleanPolicyProto* incognitoenabled)
{
    delete incognitoenabled_;
    incognitoenabled_ = incognitoenabled;
    if (incognitoenabled) {
        set_has_incognitoenabled();
    } else {
        clear_has_incognitoenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IncognitoEnabled)
}

// optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
bool CloudPolicySettings::has_incognitomodeavailability() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
void CloudPolicySettings::set_has_incognitomodeavailability()
{
    _has_bits_[0] |= 0x00000020u;
}
void CloudPolicySettings::clear_has_incognitomodeavailability()
{
    _has_bits_[0] &= ~0x00000020u;
}
void CloudPolicySettings::clear_incognitomodeavailability()
{
    if (incognitomodeavailability_ != NULL)
        incognitomodeavailability_->::enterprise_management::IntegerPolicyProto::Clear();
    clear_has_incognitomodeavailability();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::incognitomodeavailability() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return incognitomodeavailability_ != NULL ? *incognitomodeavailability_ : *default_instance().incognitomodeavailability_;
#else
    return incognitomodeavailability_ != NULL ? *incognitomodeavailability_ : *default_instance_->incognitomodeavailability_;
#endif
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_incognitomodeavailability()
{
    set_has_incognitomodeavailability();
    if (incognitomodeavailability_ == NULL) {
        incognitomodeavailability_ = new ::enterprise_management::IntegerPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
    return incognitomodeavailability_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_incognitomodeavailability()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
    clear_has_incognitomodeavailability();
    ::enterprise_management::IntegerPolicyProto* temp = incognitomodeavailability_;
    incognitomodeavailability_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_incognitomodeavailability(::enterprise_management::IntegerPolicyProto* incognitomodeavailability)
{
    delete incognitomodeavailability_;
    incognitomodeavailability_ = incognitomodeavailability;
    if (incognitomodeavailability) {
        set_has_incognitomodeavailability();
    } else {
        clear_has_incognitomodeavailability();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
}

// optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
bool CloudPolicySettings::has_savingbrowserhistorydisabled() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
void CloudPolicySettings::set_has_savingbrowserhistorydisabled()
{
    _has_bits_[0] |= 0x00000040u;
}
void CloudPolicySettings::clear_has_savingbrowserhistorydisabled()
{
    _has_bits_[0] &= ~0x00000040u;
}
void CloudPolicySettings::clear_savingbrowserhistorydisabled()
{
    if (savingbrowserhistorydisabled_ != NULL)
        savingbrowserhistorydisabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_savingbrowserhistorydisabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::savingbrowserhistorydisabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return savingbrowserhistorydisabled_ != NULL ? *savingbrowserhistorydisabled_ : *default_instance().savingbrowserhistorydisabled_;
#else
    return savingbrowserhistorydisabled_ != NULL ? *savingbrowserhistorydisabled_ : *default_instance_->savingbrowserhistorydisabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_savingbrowserhistorydisabled()
{
    set_has_savingbrowserhistorydisabled();
    if (savingbrowserhistorydisabled_ == NULL) {
        savingbrowserhistorydisabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
    return savingbrowserhistorydisabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_savingbrowserhistorydisabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
    clear_has_savingbrowserhistorydisabled();
    ::enterprise_management::BooleanPolicyProto* temp = savingbrowserhistorydisabled_;
    savingbrowserhistorydisabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_savingbrowserhistorydisabled(::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled)
{
    delete savingbrowserhistorydisabled_;
    savingbrowserhistorydisabled_ = savingbrowserhistorydisabled;
    if (savingbrowserhistorydisabled) {
        set_has_savingbrowserhistorydisabled();
    } else {
        clear_has_savingbrowserhistorydisabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
}

// optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
bool CloudPolicySettings::has_printingenabled() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
void CloudPolicySettings::set_has_printingenabled()
{
    _has_bits_[0] |= 0x00000080u;
}
void CloudPolicySettings::clear_has_printingenabled()
{
    _has_bits_[0] &= ~0x00000080u;
}
void CloudPolicySettings::clear_printingenabled()
{
    if (printingenabled_ != NULL)
        printingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_printingenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::printingenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PrintingEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return printingenabled_ != NULL ? *printingenabled_ : *default_instance().printingenabled_;
#else
    return printingenabled_ != NULL ? *printingenabled_ : *default_instance_->printingenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_printingenabled()
{
    set_has_printingenabled();
    if (printingenabled_ == NULL) {
        printingenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PrintingEnabled)
    return printingenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_printingenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PrintingEnabled)
    clear_has_printingenabled();
    ::enterprise_management::BooleanPolicyProto* temp = printingenabled_;
    printingenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_printingenabled(::enterprise_management::BooleanPolicyProto* printingenabled)
{
    delete printingenabled_;
    printingenabled_ = printingenabled;
    if (printingenabled) {
        set_has_printingenabled();
    } else {
        clear_has_printingenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PrintingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
bool CloudPolicySettings::has_forcesafesearch() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
void CloudPolicySettings::set_has_forcesafesearch()
{
    _has_bits_[0] |= 0x00000100u;
}
void CloudPolicySettings::clear_has_forcesafesearch()
{
    _has_bits_[0] &= ~0x00000100u;
}
void CloudPolicySettings::clear_forcesafesearch()
{
    if (forcesafesearch_ != NULL)
        forcesafesearch_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_forcesafesearch();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcesafesearch() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceSafeSearch)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return forcesafesearch_ != NULL ? *forcesafesearch_ : *default_instance().forcesafesearch_;
#else
    return forcesafesearch_ != NULL ? *forcesafesearch_ : *default_instance_->forcesafesearch_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcesafesearch()
{
    set_has_forcesafesearch();
    if (forcesafesearch_ == NULL) {
        forcesafesearch_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceSafeSearch)
    return forcesafesearch_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcesafesearch()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceSafeSearch)
    clear_has_forcesafesearch();
    ::enterprise_management::BooleanPolicyProto* temp = forcesafesearch_;
    forcesafesearch_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_forcesafesearch(::enterprise_management::BooleanPolicyProto* forcesafesearch)
{
    delete forcesafesearch_;
    forcesafesearch_ = forcesafesearch;
    if (forcesafesearch) {
        set_has_forcesafesearch();
    } else {
        clear_has_forcesafesearch();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceSafeSearch)
}

// optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
bool CloudPolicySettings::has_forcegooglesafesearch() const
{
    return (_has_bits_[0] & 0x00000200u) != 0;
}
void CloudPolicySettings::set_has_forcegooglesafesearch()
{
    _has_bits_[0] |= 0x00000200u;
}
void CloudPolicySettings::clear_has_forcegooglesafesearch()
{
    _has_bits_[0] &= ~0x00000200u;
}
void CloudPolicySettings::clear_forcegooglesafesearch()
{
    if (forcegooglesafesearch_ != NULL)
        forcegooglesafesearch_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_forcegooglesafesearch();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcegooglesafesearch() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return forcegooglesafesearch_ != NULL ? *forcegooglesafesearch_ : *default_instance().forcegooglesafesearch_;
#else
    return forcegooglesafesearch_ != NULL ? *forcegooglesafesearch_ : *default_instance_->forcegooglesafesearch_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcegooglesafesearch()
{
    set_has_forcegooglesafesearch();
    if (forcegooglesafesearch_ == NULL) {
        forcegooglesafesearch_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
    return forcegooglesafesearch_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcegooglesafesearch()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
    clear_has_forcegooglesafesearch();
    ::enterprise_management::BooleanPolicyProto* temp = forcegooglesafesearch_;
    forcegooglesafesearch_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_forcegooglesafesearch(::enterprise_management::BooleanPolicyProto* forcegooglesafesearch)
{
    delete forcegooglesafesearch_;
    forcegooglesafesearch_ = forcegooglesafesearch;
    if (forcegooglesafesearch) {
        set_has_forcegooglesafesearch();
    } else {
        clear_has_forcegooglesafesearch();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
}

// optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
bool CloudPolicySettings::has_forceyoutubesafetymode() const
{
    return (_has_bits_[0] & 0x00000400u) != 0;
}
void CloudPolicySettings::set_has_forceyoutubesafetymode()
{
    _has_bits_[0] |= 0x00000400u;
}
void CloudPolicySettings::clear_has_forceyoutubesafetymode()
{
    _has_bits_[0] &= ~0x00000400u;
}
void CloudPolicySettings::clear_forceyoutubesafetymode()
{
    if (forceyoutubesafetymode_ != NULL)
        forceyoutubesafetymode_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_forceyoutubesafetymode();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forceyoutubesafetymode() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return forceyoutubesafetymode_ != NULL ? *forceyoutubesafetymode_ : *default_instance().forceyoutubesafetymode_;
#else
    return forceyoutubesafetymode_ != NULL ? *forceyoutubesafetymode_ : *default_instance_->forceyoutubesafetymode_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forceyoutubesafetymode()
{
    set_has_forceyoutubesafetymode();
    if (forceyoutubesafetymode_ == NULL) {
        forceyoutubesafetymode_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
    return forceyoutubesafetymode_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forceyoutubesafetymode()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
    clear_has_forceyoutubesafetymode();
    ::enterprise_management::BooleanPolicyProto* temp = forceyoutubesafetymode_;
    forceyoutubesafetymode_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_forceyoutubesafetymode(::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode)
{
    delete forceyoutubesafetymode_;
    forceyoutubesafetymode_ = forceyoutubesafetymode;
    if (forceyoutubesafetymode) {
        set_has_forceyoutubesafetymode();
    } else {
        clear_has_forceyoutubesafetymode();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
}

// optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
bool CloudPolicySettings::has_forceyoutuberestrict() const
{
    return (_has_bits_[0] & 0x00000800u) != 0;
}
void CloudPolicySettings::set_has_forceyoutuberestrict()
{
    _has_bits_[0] |= 0x00000800u;
}
void CloudPolicySettings::clear_has_forceyoutuberestrict()
{
    _has_bits_[0] &= ~0x00000800u;
}
void CloudPolicySettings::clear_forceyoutuberestrict()
{
    if (forceyoutuberestrict_ != NULL)
        forceyoutuberestrict_->::enterprise_management::IntegerPolicyProto::Clear();
    clear_has_forceyoutuberestrict();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::forceyoutuberestrict() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return forceyoutuberestrict_ != NULL ? *forceyoutuberestrict_ : *default_instance().forceyoutuberestrict_;
#else
    return forceyoutuberestrict_ != NULL ? *forceyoutuberestrict_ : *default_instance_->forceyoutuberestrict_;
#endif
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_forceyoutuberestrict()
{
    set_has_forceyoutuberestrict();
    if (forceyoutuberestrict_ == NULL) {
        forceyoutuberestrict_ = new ::enterprise_management::IntegerPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
    return forceyoutuberestrict_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_forceyoutuberestrict()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
    clear_has_forceyoutuberestrict();
    ::enterprise_management::IntegerPolicyProto* temp = forceyoutuberestrict_;
    forceyoutuberestrict_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_forceyoutuberestrict(::enterprise_management::IntegerPolicyProto* forceyoutuberestrict)
{
    delete forceyoutuberestrict_;
    forceyoutuberestrict_ = forceyoutuberestrict;
    if (forceyoutuberestrict) {
        set_has_forceyoutuberestrict();
    } else {
        clear_has_forceyoutuberestrict();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
}

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
bool CloudPolicySettings::has_safebrowsingenabled() const
{
    return (_has_bits_[0] & 0x00001000u) != 0;
}
void CloudPolicySettings::set_has_safebrowsingenabled()
{
    _has_bits_[0] |= 0x00001000u;
}
void CloudPolicySettings::clear_has_safebrowsingenabled()
{
    _has_bits_[0] &= ~0x00001000u;
}
void CloudPolicySettings::clear_safebrowsingenabled()
{
    if (safebrowsingenabled_ != NULL)
        safebrowsingenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_safebrowsingenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::safebrowsingenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return safebrowsingenabled_ != NULL ? *safebrowsingenabled_ : *default_instance().safebrowsingenabled_;
#else
    return safebrowsingenabled_ != NULL ? *safebrowsingenabled_ : *default_instance_->safebrowsingenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_safebrowsingenabled()
{
    set_has_safebrowsingenabled();
    if (safebrowsingenabled_ == NULL) {
        safebrowsingenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
    return safebrowsingenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_safebrowsingenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
    clear_has_safebrowsingenabled();
    ::enterprise_management::BooleanPolicyProto* temp = safebrowsingenabled_;
    safebrowsingenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_safebrowsingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingenabled)
{
    delete safebrowsingenabled_;
    safebrowsingenabled_ = safebrowsingenabled;
    if (safebrowsingenabled) {
        set_has_safebrowsingenabled();
    } else {
        clear_has_safebrowsingenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
bool CloudPolicySettings::has_passwordmanagerenabled() const
{
    return (_has_bits_[0] & 0x00002000u) != 0;
}
void CloudPolicySettings::set_has_passwordmanagerenabled()
{
    _has_bits_[0] |= 0x00002000u;
}
void CloudPolicySettings::clear_has_passwordmanagerenabled()
{
    _has_bits_[0] &= ~0x00002000u;
}
void CloudPolicySettings::clear_passwordmanagerenabled()
{
    if (passwordmanagerenabled_ != NULL)
        passwordmanagerenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_passwordmanagerenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::passwordmanagerenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return passwordmanagerenabled_ != NULL ? *passwordmanagerenabled_ : *default_instance().passwordmanagerenabled_;
#else
    return passwordmanagerenabled_ != NULL ? *passwordmanagerenabled_ : *default_instance_->passwordmanagerenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_passwordmanagerenabled()
{
    set_has_passwordmanagerenabled();
    if (passwordmanagerenabled_ == NULL) {
        passwordmanagerenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
    return passwordmanagerenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_passwordmanagerenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
    clear_has_passwordmanagerenabled();
    ::enterprise_management::BooleanPolicyProto* temp = passwordmanagerenabled_;
    passwordmanagerenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_passwordmanagerenabled(::enterprise_management::BooleanPolicyProto* passwordmanagerenabled)
{
    delete passwordmanagerenabled_;
    passwordmanagerenabled_ = passwordmanagerenabled;
    if (passwordmanagerenabled) {
        set_has_passwordmanagerenabled();
    } else {
        clear_has_passwordmanagerenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
bool CloudPolicySettings::has_autofillenabled() const
{
    return (_has_bits_[0] & 0x00004000u) != 0;
}
void CloudPolicySettings::set_has_autofillenabled()
{
    _has_bits_[0] |= 0x00004000u;
}
void CloudPolicySettings::clear_has_autofillenabled()
{
    _has_bits_[0] &= ~0x00004000u;
}
void CloudPolicySettings::clear_autofillenabled()
{
    if (autofillenabled_ != NULL)
        autofillenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_autofillenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autofillenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoFillEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return autofillenabled_ != NULL ? *autofillenabled_ : *default_instance().autofillenabled_;
#else
    return autofillenabled_ != NULL ? *autofillenabled_ : *default_instance_->autofillenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autofillenabled()
{
    set_has_autofillenabled();
    if (autofillenabled_ == NULL) {
        autofillenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoFillEnabled)
    return autofillenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autofillenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoFillEnabled)
    clear_has_autofillenabled();
    ::enterprise_management::BooleanPolicyProto* temp = autofillenabled_;
    autofillenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_autofillenabled(::enterprise_management::BooleanPolicyProto* autofillenabled)
{
    delete autofillenabled_;
    autofillenabled_ = autofillenabled;
    if (autofillenabled) {
        set_has_autofillenabled();
    } else {
        clear_has_autofillenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoFillEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
bool CloudPolicySettings::has_signinallowed() const
{
    return (_has_bits_[0] & 0x00008000u) != 0;
}
void CloudPolicySettings::set_has_signinallowed()
{
    _has_bits_[0] |= 0x00008000u;
}
void CloudPolicySettings::clear_has_signinallowed()
{
    _has_bits_[0] &= ~0x00008000u;
}
void CloudPolicySettings::clear_signinallowed()
{
    if (signinallowed_ != NULL)
        signinallowed_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_signinallowed();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::signinallowed() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SigninAllowed)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return signinallowed_ != NULL ? *signinallowed_ : *default_instance().signinallowed_;
#else
    return signinallowed_ != NULL ? *signinallowed_ : *default_instance_->signinallowed_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_signinallowed()
{
    set_has_signinallowed();
    if (signinallowed_ == NULL) {
        signinallowed_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SigninAllowed)
    return signinallowed_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_signinallowed()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SigninAllowed)
    clear_has_signinallowed();
    ::enterprise_management::BooleanPolicyProto* temp = signinallowed_;
    signinallowed_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_signinallowed(::enterprise_management::BooleanPolicyProto* signinallowed)
{
    delete signinallowed_;
    signinallowed_ = signinallowed;
    if (signinallowed) {
        set_has_signinallowed();
    } else {
        clear_has_signinallowed();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SigninAllowed)
}

// optional .enterprise_management.StringPolicyProto ProxyMode = 23;
bool CloudPolicySettings::has_proxymode() const
{
    return (_has_bits_[0] & 0x00010000u) != 0;
}
void CloudPolicySettings::set_has_proxymode()
{
    _has_bits_[0] |= 0x00010000u;
}
void CloudPolicySettings::clear_has_proxymode()
{
    _has_bits_[0] &= ~0x00010000u;
}
void CloudPolicySettings::clear_proxymode()
{
    if (proxymode_ != NULL)
        proxymode_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_proxymode();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxymode() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyMode)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return proxymode_ != NULL ? *proxymode_ : *default_instance().proxymode_;
#else
    return proxymode_ != NULL ? *proxymode_ : *default_instance_->proxymode_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxymode()
{
    set_has_proxymode();
    if (proxymode_ == NULL) {
        proxymode_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyMode)
    return proxymode_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxymode()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyMode)
    clear_has_proxymode();
    ::enterprise_management::StringPolicyProto* temp = proxymode_;
    proxymode_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_proxymode(::enterprise_management::StringPolicyProto* proxymode)
{
    delete proxymode_;
    proxymode_ = proxymode;
    if (proxymode) {
        set_has_proxymode();
    } else {
        clear_has_proxymode();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyMode)
}

// optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
bool CloudPolicySettings::has_proxyservermode() const
{
    return (_has_bits_[0] & 0x00020000u) != 0;
}
void CloudPolicySettings::set_has_proxyservermode()
{
    _has_bits_[0] |= 0x00020000u;
}
void CloudPolicySettings::clear_has_proxyservermode()
{
    _has_bits_[0] &= ~0x00020000u;
}
void CloudPolicySettings::clear_proxyservermode()
{
    if (proxyservermode_ != NULL)
        proxyservermode_->::enterprise_management::IntegerPolicyProto::Clear();
    clear_has_proxyservermode();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::proxyservermode() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyServerMode)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return proxyservermode_ != NULL ? *proxyservermode_ : *default_instance().proxyservermode_;
#else
    return proxyservermode_ != NULL ? *proxyservermode_ : *default_instance_->proxyservermode_;
#endif
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_proxyservermode()
{
    set_has_proxyservermode();
    if (proxyservermode_ == NULL) {
        proxyservermode_ = new ::enterprise_management::IntegerPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyServerMode)
    return proxyservermode_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_proxyservermode()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyServerMode)
    clear_has_proxyservermode();
    ::enterprise_management::IntegerPolicyProto* temp = proxyservermode_;
    proxyservermode_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_proxyservermode(::enterprise_management::IntegerPolicyProto* proxyservermode)
{
    delete proxyservermode_;
    proxyservermode_ = proxyservermode;
    if (proxyservermode) {
        set_has_proxyservermode();
    } else {
        clear_has_proxyservermode();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyServerMode)
}

// optional .enterprise_management.StringPolicyProto ProxyServer = 25;
bool CloudPolicySettings::has_proxyserver() const
{
    return (_has_bits_[0] & 0x00040000u) != 0;
}
void CloudPolicySettings::set_has_proxyserver()
{
    _has_bits_[0] |= 0x00040000u;
}
void CloudPolicySettings::clear_has_proxyserver()
{
    _has_bits_[0] &= ~0x00040000u;
}
void CloudPolicySettings::clear_proxyserver()
{
    if (proxyserver_ != NULL)
        proxyserver_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_proxyserver();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxyserver() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyServer)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return proxyserver_ != NULL ? *proxyserver_ : *default_instance().proxyserver_;
#else
    return proxyserver_ != NULL ? *proxyserver_ : *default_instance_->proxyserver_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxyserver()
{
    set_has_proxyserver();
    if (proxyserver_ == NULL) {
        proxyserver_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyServer)
    return proxyserver_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxyserver()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyServer)
    clear_has_proxyserver();
    ::enterprise_management::StringPolicyProto* temp = proxyserver_;
    proxyserver_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_proxyserver(::enterprise_management::StringPolicyProto* proxyserver)
{
    delete proxyserver_;
    proxyserver_ = proxyserver;
    if (proxyserver) {
        set_has_proxyserver();
    } else {
        clear_has_proxyserver();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyServer)
}

// optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
bool CloudPolicySettings::has_proxypacurl() const
{
    return (_has_bits_[0] & 0x00080000u) != 0;
}
void CloudPolicySettings::set_has_proxypacurl()
{
    _has_bits_[0] |= 0x00080000u;
}
void CloudPolicySettings::clear_has_proxypacurl()
{
    _has_bits_[0] &= ~0x00080000u;
}
void CloudPolicySettings::clear_proxypacurl()
{
    if (proxypacurl_ != NULL)
        proxypacurl_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_proxypacurl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxypacurl() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyPacUrl)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return proxypacurl_ != NULL ? *proxypacurl_ : *default_instance().proxypacurl_;
#else
    return proxypacurl_ != NULL ? *proxypacurl_ : *default_instance_->proxypacurl_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxypacurl()
{
    set_has_proxypacurl();
    if (proxypacurl_ == NULL) {
        proxypacurl_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyPacUrl)
    return proxypacurl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxypacurl()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyPacUrl)
    clear_has_proxypacurl();
    ::enterprise_management::StringPolicyProto* temp = proxypacurl_;
    proxypacurl_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_proxypacurl(::enterprise_management::StringPolicyProto* proxypacurl)
{
    delete proxypacurl_;
    proxypacurl_ = proxypacurl;
    if (proxypacurl) {
        set_has_proxypacurl();
    } else {
        clear_has_proxypacurl();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyPacUrl)
}

// optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
bool CloudPolicySettings::has_proxybypasslist() const
{
    return (_has_bits_[0] & 0x00100000u) != 0;
}
void CloudPolicySettings::set_has_proxybypasslist()
{
    _has_bits_[0] |= 0x00100000u;
}
void CloudPolicySettings::clear_has_proxybypasslist()
{
    _has_bits_[0] &= ~0x00100000u;
}
void CloudPolicySettings::clear_proxybypasslist()
{
    if (proxybypasslist_ != NULL)
        proxybypasslist_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_proxybypasslist();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxybypasslist() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyBypassList)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return proxybypasslist_ != NULL ? *proxybypasslist_ : *default_instance().proxybypasslist_;
#else
    return proxybypasslist_ != NULL ? *proxybypasslist_ : *default_instance_->proxybypasslist_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxybypasslist()
{
    set_has_proxybypasslist();
    if (proxybypasslist_ == NULL) {
        proxybypasslist_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyBypassList)
    return proxybypasslist_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxybypasslist()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyBypassList)
    clear_has_proxybypasslist();
    ::enterprise_management::StringPolicyProto* temp = proxybypasslist_;
    proxybypasslist_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_proxybypasslist(::enterprise_management::StringPolicyProto* proxybypasslist)
{
    delete proxybypasslist_;
    proxybypasslist_ = proxybypasslist;
    if (proxybypasslist) {
        set_has_proxybypasslist();
    } else {
        clear_has_proxybypasslist();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyBypassList)
}

// optional .enterprise_management.StringPolicyProto ProxySettings = 118;
bool CloudPolicySettings::has_proxysettings() const
{
    return (_has_bits_[0] & 0x00200000u) != 0;
}
void CloudPolicySettings::set_has_proxysettings()
{
    _has_bits_[0] |= 0x00200000u;
}
void CloudPolicySettings::clear_has_proxysettings()
{
    _has_bits_[0] &= ~0x00200000u;
}
void CloudPolicySettings::clear_proxysettings()
{
    if (proxysettings_ != NULL)
        proxysettings_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_proxysettings();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxysettings() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxySettings)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return proxysettings_ != NULL ? *proxysettings_ : *default_instance().proxysettings_;
#else
    return proxysettings_ != NULL ? *proxysettings_ : *default_instance_->proxysettings_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxysettings()
{
    set_has_proxysettings();
    if (proxysettings_ == NULL) {
        proxysettings_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxySettings)
    return proxysettings_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxysettings()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxySettings)
    clear_has_proxysettings();
    ::enterprise_management::StringPolicyProto* temp = proxysettings_;
    proxysettings_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_proxysettings(::enterprise_management::StringPolicyProto* proxysettings)
{
    delete proxysettings_;
    proxysettings_ = proxysettings;
    if (proxysettings) {
        set_has_proxysettings();
    } else {
        clear_has_proxysettings();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxySettings)
}

// optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
bool CloudPolicySettings::has_authschemes() const
{
    return (_has_bits_[0] & 0x00400000u) != 0;
}
void CloudPolicySettings::set_has_authschemes()
{
    _has_bits_[0] |= 0x00400000u;
}
void CloudPolicySettings::clear_has_authschemes()
{
    _has_bits_[0] &= ~0x00400000u;
}
void CloudPolicySettings::clear_authschemes()
{
    if (authschemes_ != NULL)
        authschemes_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_authschemes();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authschemes() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthSchemes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return authschemes_ != NULL ? *authschemes_ : *default_instance().authschemes_;
#else
    return authschemes_ != NULL ? *authschemes_ : *default_instance_->authschemes_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authschemes()
{
    set_has_authschemes();
    if (authschemes_ == NULL) {
        authschemes_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthSchemes)
    return authschemes_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authschemes()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthSchemes)
    clear_has_authschemes();
    ::enterprise_management::StringPolicyProto* temp = authschemes_;
    authschemes_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_authschemes(::enterprise_management::StringPolicyProto* authschemes)
{
    delete authschemes_;
    authschemes_ = authschemes;
    if (authschemes) {
        set_has_authschemes();
    } else {
        clear_has_authschemes();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthSchemes)
}

// optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
bool CloudPolicySettings::has_disableauthnegotiatecnamelookup() const
{
    return (_has_bits_[0] & 0x00800000u) != 0;
}
void CloudPolicySettings::set_has_disableauthnegotiatecnamelookup()
{
    _has_bits_[0] |= 0x00800000u;
}
void CloudPolicySettings::clear_has_disableauthnegotiatecnamelookup()
{
    _has_bits_[0] &= ~0x00800000u;
}
void CloudPolicySettings::clear_disableauthnegotiatecnamelookup()
{
    if (disableauthnegotiatecnamelookup_ != NULL)
        disableauthnegotiatecnamelookup_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_disableauthnegotiatecnamelookup();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disableauthnegotiatecnamelookup() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return disableauthnegotiatecnamelookup_ != NULL ? *disableauthnegotiatecnamelookup_ : *default_instance().disableauthnegotiatecnamelookup_;
#else
    return disableauthnegotiatecnamelookup_ != NULL ? *disableauthnegotiatecnamelookup_ : *default_instance_->disableauthnegotiatecnamelookup_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disableauthnegotiatecnamelookup()
{
    set_has_disableauthnegotiatecnamelookup();
    if (disableauthnegotiatecnamelookup_ == NULL) {
        disableauthnegotiatecnamelookup_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
    return disableauthnegotiatecnamelookup_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disableauthnegotiatecnamelookup()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
    clear_has_disableauthnegotiatecnamelookup();
    ::enterprise_management::BooleanPolicyProto* temp = disableauthnegotiatecnamelookup_;
    disableauthnegotiatecnamelookup_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_disableauthnegotiatecnamelookup(::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup)
{
    delete disableauthnegotiatecnamelookup_;
    disableauthnegotiatecnamelookup_ = disableauthnegotiatecnamelookup;
    if (disableauthnegotiatecnamelookup) {
        set_has_disableauthnegotiatecnamelookup();
    } else {
        clear_has_disableauthnegotiatecnamelookup();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
}

// optional .enterprise_management.StringPolicyProto AuthServerWhitelist = 31;
bool CloudPolicySettings::has_authserverwhitelist() const
{
    return (_has_bits_[0] & 0x01000000u) != 0;
}
void CloudPolicySettings::set_has_authserverwhitelist()
{
    _has_bits_[0] |= 0x01000000u;
}
void CloudPolicySettings::clear_has_authserverwhitelist()
{
    _has_bits_[0] &= ~0x01000000u;
}
void CloudPolicySettings::clear_authserverwhitelist()
{
    if (authserverwhitelist_ != NULL)
        authserverwhitelist_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_authserverwhitelist();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authserverwhitelist() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return authserverwhitelist_ != NULL ? *authserverwhitelist_ : *default_instance().authserverwhitelist_;
#else
    return authserverwhitelist_ != NULL ? *authserverwhitelist_ : *default_instance_->authserverwhitelist_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authserverwhitelist()
{
    set_has_authserverwhitelist();
    if (authserverwhitelist_ == NULL) {
        authserverwhitelist_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
    return authserverwhitelist_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authserverwhitelist()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
    clear_has_authserverwhitelist();
    ::enterprise_management::StringPolicyProto* temp = authserverwhitelist_;
    authserverwhitelist_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_authserverwhitelist(::enterprise_management::StringPolicyProto* authserverwhitelist)
{
    delete authserverwhitelist_;
    authserverwhitelist_ = authserverwhitelist;
    if (authserverwhitelist) {
        set_has_authserverwhitelist();
    } else {
        clear_has_authserverwhitelist();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
}

// optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateWhitelist = 32;
bool CloudPolicySettings::has_authnegotiatedelegatewhitelist() const
{
    return (_has_bits_[0] & 0x02000000u) != 0;
}
void CloudPolicySettings::set_has_authnegotiatedelegatewhitelist()
{
    _has_bits_[0] |= 0x02000000u;
}
void CloudPolicySettings::clear_has_authnegotiatedelegatewhitelist()
{
    _has_bits_[0] &= ~0x02000000u;
}
void CloudPolicySettings::clear_authnegotiatedelegatewhitelist()
{
    if (authnegotiatedelegatewhitelist_ != NULL)
        authnegotiatedelegatewhitelist_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_authnegotiatedelegatewhitelist();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authnegotiatedelegatewhitelist() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return authnegotiatedelegatewhitelist_ != NULL ? *authnegotiatedelegatewhitelist_ : *default_instance().authnegotiatedelegatewhitelist_;
#else
    return authnegotiatedelegatewhitelist_ != NULL ? *authnegotiatedelegatewhitelist_ : *default_instance_->authnegotiatedelegatewhitelist_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authnegotiatedelegatewhitelist()
{
    set_has_authnegotiatedelegatewhitelist();
    if (authnegotiatedelegatewhitelist_ == NULL) {
        authnegotiatedelegatewhitelist_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
    return authnegotiatedelegatewhitelist_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authnegotiatedelegatewhitelist()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
    clear_has_authnegotiatedelegatewhitelist();
    ::enterprise_management::StringPolicyProto* temp = authnegotiatedelegatewhitelist_;
    authnegotiatedelegatewhitelist_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_authnegotiatedelegatewhitelist(::enterprise_management::StringPolicyProto* authnegotiatedelegatewhitelist)
{
    delete authnegotiatedelegatewhitelist_;
    authnegotiatedelegatewhitelist_ = authnegotiatedelegatewhitelist;
    if (authnegotiatedelegatewhitelist) {
        set_has_authnegotiatedelegatewhitelist();
    } else {
        clear_has_authnegotiatedelegatewhitelist();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
}

// optional .enterprise_management.StringPolicyProto AuthAndroidNegotiateAccountType = 307;
bool CloudPolicySettings::has_authandroidnegotiateaccounttype() const
{
    return (_has_bits_[0] & 0x04000000u) != 0;
}
void CloudPolicySettings::set_has_authandroidnegotiateaccounttype()
{
    _has_bits_[0] |= 0x04000000u;
}
void CloudPolicySettings::clear_has_authandroidnegotiateaccounttype()
{
    _has_bits_[0] &= ~0x04000000u;
}
void CloudPolicySettings::clear_authandroidnegotiateaccounttype()
{
    if (authandroidnegotiateaccounttype_ != NULL)
        authandroidnegotiateaccounttype_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_authandroidnegotiateaccounttype();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authandroidnegotiateaccounttype() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthAndroidNegotiateAccountType)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return authandroidnegotiateaccounttype_ != NULL ? *authandroidnegotiateaccounttype_ : *default_instance().authandroidnegotiateaccounttype_;
#else
    return authandroidnegotiateaccounttype_ != NULL ? *authandroidnegotiateaccounttype_ : *default_instance_->authandroidnegotiateaccounttype_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authandroidnegotiateaccounttype()
{
    set_has_authandroidnegotiateaccounttype();
    if (authandroidnegotiateaccounttype_ == NULL) {
        authandroidnegotiateaccounttype_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthAndroidNegotiateAccountType)
    return authandroidnegotiateaccounttype_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authandroidnegotiateaccounttype()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthAndroidNegotiateAccountType)
    clear_has_authandroidnegotiateaccounttype();
    ::enterprise_management::StringPolicyProto* temp = authandroidnegotiateaccounttype_;
    authandroidnegotiateaccounttype_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_authandroidnegotiateaccounttype(::enterprise_management::StringPolicyProto* authandroidnegotiateaccounttype)
{
    delete authandroidnegotiateaccounttype_;
    authandroidnegotiateaccounttype_ = authandroidnegotiateaccounttype;
    if (authandroidnegotiateaccounttype) {
        set_has_authandroidnegotiateaccounttype();
    } else {
        clear_has_authandroidnegotiateaccounttype();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthAndroidNegotiateAccountType)
}

// optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
bool CloudPolicySettings::has_defaultsearchproviderenabled() const
{
    return (_has_bits_[0] & 0x08000000u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchproviderenabled()
{
    _has_bits_[0] |= 0x08000000u;
}
void CloudPolicySettings::clear_has_defaultsearchproviderenabled()
{
    _has_bits_[0] &= ~0x08000000u;
}
void CloudPolicySettings::clear_defaultsearchproviderenabled()
{
    if (defaultsearchproviderenabled_ != NULL)
        defaultsearchproviderenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_defaultsearchproviderenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::defaultsearchproviderenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchproviderenabled_ != NULL ? *defaultsearchproviderenabled_ : *default_instance().defaultsearchproviderenabled_;
#else
    return defaultsearchproviderenabled_ != NULL ? *defaultsearchproviderenabled_ : *default_instance_->defaultsearchproviderenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderenabled()
{
    set_has_defaultsearchproviderenabled();
    if (defaultsearchproviderenabled_ == NULL) {
        defaultsearchproviderenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
    return defaultsearchproviderenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_defaultsearchproviderenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
    clear_has_defaultsearchproviderenabled();
    ::enterprise_management::BooleanPolicyProto* temp = defaultsearchproviderenabled_;
    defaultsearchproviderenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchproviderenabled(::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled)
{
    delete defaultsearchproviderenabled_;
    defaultsearchproviderenabled_ = defaultsearchproviderenabled;
    if (defaultsearchproviderenabled) {
        set_has_defaultsearchproviderenabled();
    } else {
        clear_has_defaultsearchproviderenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
bool CloudPolicySettings::has_defaultsearchprovidername() const
{
    return (_has_bits_[0] & 0x10000000u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidername()
{
    _has_bits_[0] |= 0x10000000u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidername()
{
    _has_bits_[0] &= ~0x10000000u;
}
void CloudPolicySettings::clear_defaultsearchprovidername()
{
    if (defaultsearchprovidername_ != NULL)
        defaultsearchprovidername_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_defaultsearchprovidername();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidername() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchprovidername_ != NULL ? *defaultsearchprovidername_ : *default_instance().defaultsearchprovidername_;
#else
    return defaultsearchprovidername_ != NULL ? *defaultsearchprovidername_ : *default_instance_->defaultsearchprovidername_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidername()
{
    set_has_defaultsearchprovidername();
    if (defaultsearchprovidername_ == NULL) {
        defaultsearchprovidername_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
    return defaultsearchprovidername_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidername()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
    clear_has_defaultsearchprovidername();
    ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidername_;
    defaultsearchprovidername_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidername(::enterprise_management::StringPolicyProto* defaultsearchprovidername)
{
    delete defaultsearchprovidername_;
    defaultsearchprovidername_ = defaultsearchprovidername;
    if (defaultsearchprovidername) {
        set_has_defaultsearchprovidername();
    } else {
        clear_has_defaultsearchprovidername();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
bool CloudPolicySettings::has_defaultsearchproviderkeyword() const
{
    return (_has_bits_[0] & 0x20000000u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchproviderkeyword()
{
    _has_bits_[0] |= 0x20000000u;
}
void CloudPolicySettings::clear_has_defaultsearchproviderkeyword()
{
    _has_bits_[0] &= ~0x20000000u;
}
void CloudPolicySettings::clear_defaultsearchproviderkeyword()
{
    if (defaultsearchproviderkeyword_ != NULL)
        defaultsearchproviderkeyword_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_defaultsearchproviderkeyword();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderkeyword() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchproviderkeyword_ != NULL ? *defaultsearchproviderkeyword_ : *default_instance().defaultsearchproviderkeyword_;
#else
    return defaultsearchproviderkeyword_ != NULL ? *defaultsearchproviderkeyword_ : *default_instance_->defaultsearchproviderkeyword_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderkeyword()
{
    set_has_defaultsearchproviderkeyword();
    if (defaultsearchproviderkeyword_ == NULL) {
        defaultsearchproviderkeyword_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
    return defaultsearchproviderkeyword_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderkeyword()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
    clear_has_defaultsearchproviderkeyword();
    ::enterprise_management::StringPolicyProto* temp = defaultsearchproviderkeyword_;
    defaultsearchproviderkeyword_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchproviderkeyword(::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword)
{
    delete defaultsearchproviderkeyword_;
    defaultsearchproviderkeyword_ = defaultsearchproviderkeyword;
    if (defaultsearchproviderkeyword) {
        set_has_defaultsearchproviderkeyword();
    } else {
        clear_has_defaultsearchproviderkeyword();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
bool CloudPolicySettings::has_defaultsearchprovidersearchurl() const
{
    return (_has_bits_[0] & 0x40000000u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidersearchurl()
{
    _has_bits_[0] |= 0x40000000u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidersearchurl()
{
    _has_bits_[0] &= ~0x40000000u;
}
void CloudPolicySettings::clear_defaultsearchprovidersearchurl()
{
    if (defaultsearchprovidersearchurl_ != NULL)
        defaultsearchprovidersearchurl_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_defaultsearchprovidersearchurl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersearchurl() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchprovidersearchurl_ != NULL ? *defaultsearchprovidersearchurl_ : *default_instance().defaultsearchprovidersearchurl_;
#else
    return defaultsearchprovidersearchurl_ != NULL ? *defaultsearchprovidersearchurl_ : *default_instance_->defaultsearchprovidersearchurl_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersearchurl()
{
    set_has_defaultsearchprovidersearchurl();
    if (defaultsearchprovidersearchurl_ == NULL) {
        defaultsearchprovidersearchurl_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
    return defaultsearchprovidersearchurl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersearchurl()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
    clear_has_defaultsearchprovidersearchurl();
    ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchurl_;
    defaultsearchprovidersearchurl_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidersearchurl(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl)
{
    delete defaultsearchprovidersearchurl_;
    defaultsearchprovidersearchurl_ = defaultsearchprovidersearchurl;
    if (defaultsearchprovidersearchurl) {
        set_has_defaultsearchprovidersearchurl();
    } else {
        clear_has_defaultsearchprovidersearchurl();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
bool CloudPolicySettings::has_defaultsearchprovidersuggesturl() const
{
    return (_has_bits_[0] & 0x80000000u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidersuggesturl()
{
    _has_bits_[0] |= 0x80000000u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidersuggesturl()
{
    _has_bits_[0] &= ~0x80000000u;
}
void CloudPolicySettings::clear_defaultsearchprovidersuggesturl()
{
    if (defaultsearchprovidersuggesturl_ != NULL)
        defaultsearchprovidersuggesturl_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_defaultsearchprovidersuggesturl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersuggesturl() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchprovidersuggesturl_ != NULL ? *defaultsearchprovidersuggesturl_ : *default_instance().defaultsearchprovidersuggesturl_;
#else
    return defaultsearchprovidersuggesturl_ != NULL ? *defaultsearchprovidersuggesturl_ : *default_instance_->defaultsearchprovidersuggesturl_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersuggesturl()
{
    set_has_defaultsearchprovidersuggesturl();
    if (defaultsearchprovidersuggesturl_ == NULL) {
        defaultsearchprovidersuggesturl_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
    return defaultsearchprovidersuggesturl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersuggesturl()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
    clear_has_defaultsearchprovidersuggesturl();
    ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersuggesturl_;
    defaultsearchprovidersuggesturl_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidersuggesturl(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl)
{
    delete defaultsearchprovidersuggesturl_;
    defaultsearchprovidersuggesturl_ = defaultsearchprovidersuggesturl;
    if (defaultsearchprovidersuggesturl) {
        set_has_defaultsearchprovidersuggesturl();
    } else {
        clear_has_defaultsearchprovidersuggesturl();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderInstantURL = 47;
bool CloudPolicySettings::has_defaultsearchproviderinstanturl() const
{
    return (_has_bits_[1] & 0x00000001u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchproviderinstanturl()
{
    _has_bits_[1] |= 0x00000001u;
}
void CloudPolicySettings::clear_has_defaultsearchproviderinstanturl()
{
    _has_bits_[1] &= ~0x00000001u;
}
void CloudPolicySettings::clear_defaultsearchproviderinstanturl()
{
    if (defaultsearchproviderinstanturl_ != NULL)
        defaultsearchproviderinstanturl_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_defaultsearchproviderinstanturl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderinstanturl() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderInstantURL)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchproviderinstanturl_ != NULL ? *defaultsearchproviderinstanturl_ : *default_instance().defaultsearchproviderinstanturl_;
#else
    return defaultsearchproviderinstanturl_ != NULL ? *defaultsearchproviderinstanturl_ : *default_instance_->defaultsearchproviderinstanturl_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderinstanturl()
{
    set_has_defaultsearchproviderinstanturl();
    if (defaultsearchproviderinstanturl_ == NULL) {
        defaultsearchproviderinstanturl_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderInstantURL)
    return defaultsearchproviderinstanturl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderinstanturl()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderInstantURL)
    clear_has_defaultsearchproviderinstanturl();
    ::enterprise_management::StringPolicyProto* temp = defaultsearchproviderinstanturl_;
    defaultsearchproviderinstanturl_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchproviderinstanturl(::enterprise_management::StringPolicyProto* defaultsearchproviderinstanturl)
{
    delete defaultsearchproviderinstanturl_;
    defaultsearchproviderinstanturl_ = defaultsearchproviderinstanturl;
    if (defaultsearchproviderinstanturl) {
        set_has_defaultsearchproviderinstanturl();
    } else {
        clear_has_defaultsearchproviderinstanturl();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderInstantURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
bool CloudPolicySettings::has_defaultsearchprovidericonurl() const
{
    return (_has_bits_[1] & 0x00000002u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidericonurl()
{
    _has_bits_[1] |= 0x00000002u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidericonurl()
{
    _has_bits_[1] &= ~0x00000002u;
}
void CloudPolicySettings::clear_defaultsearchprovidericonurl()
{
    if (defaultsearchprovidericonurl_ != NULL)
        defaultsearchprovidericonurl_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_defaultsearchprovidericonurl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidericonurl() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchprovidericonurl_ != NULL ? *defaultsearchprovidericonurl_ : *default_instance().defaultsearchprovidericonurl_;
#else
    return defaultsearchprovidericonurl_ != NULL ? *defaultsearchprovidericonurl_ : *default_instance_->defaultsearchprovidericonurl_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidericonurl()
{
    set_has_defaultsearchprovidericonurl();
    if (defaultsearchprovidericonurl_ == NULL) {
        defaultsearchprovidericonurl_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
    return defaultsearchprovidericonurl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidericonurl()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
    clear_has_defaultsearchprovidericonurl();
    ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidericonurl_;
    defaultsearchprovidericonurl_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidericonurl(::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl)
{
    delete defaultsearchprovidericonurl_;
    defaultsearchprovidericonurl_ = defaultsearchprovidericonurl;
    if (defaultsearchprovidericonurl) {
        set_has_defaultsearchprovidericonurl();
    } else {
        clear_has_defaultsearchprovidericonurl();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
}

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
bool CloudPolicySettings::has_defaultsearchproviderencodings() const
{
    return (_has_bits_[1] & 0x00000004u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchproviderencodings()
{
    _has_bits_[1] |= 0x00000004u;
}
void CloudPolicySettings::clear_has_defaultsearchproviderencodings()
{
    _has_bits_[1] &= ~0x00000004u;
}
void CloudPolicySettings::clear_defaultsearchproviderencodings()
{
    if (defaultsearchproviderencodings_ != NULL)
        defaultsearchproviderencodings_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_defaultsearchproviderencodings();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::defaultsearchproviderencodings() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchproviderencodings_ != NULL ? *defaultsearchproviderencodings_ : *default_instance().defaultsearchproviderencodings_;
#else
    return defaultsearchproviderencodings_ != NULL ? *defaultsearchproviderencodings_ : *default_instance_->defaultsearchproviderencodings_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderencodings()
{
    set_has_defaultsearchproviderencodings();
    if (defaultsearchproviderencodings_ == NULL) {
        defaultsearchproviderencodings_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
    return defaultsearchproviderencodings_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_defaultsearchproviderencodings()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
    clear_has_defaultsearchproviderencodings();
    ::enterprise_management::StringListPolicyProto* temp = defaultsearchproviderencodings_;
    defaultsearchproviderencodings_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchproviderencodings(::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings)
{
    delete defaultsearchproviderencodings_;
    defaultsearchproviderencodings_ = defaultsearchproviderencodings;
    if (defaultsearchproviderencodings) {
        set_has_defaultsearchproviderencodings();
    } else {
        clear_has_defaultsearchproviderencodings();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
}

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
bool CloudPolicySettings::has_defaultsearchprovideralternateurls() const
{
    return (_has_bits_[1] & 0x00000008u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovideralternateurls()
{
    _has_bits_[1] |= 0x00000008u;
}
void CloudPolicySettings::clear_has_defaultsearchprovideralternateurls()
{
    _has_bits_[1] &= ~0x00000008u;
}
void CloudPolicySettings::clear_defaultsearchprovideralternateurls()
{
    if (defaultsearchprovideralternateurls_ != NULL)
        defaultsearchprovideralternateurls_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_defaultsearchprovideralternateurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::defaultsearchprovideralternateurls() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchprovideralternateurls_ != NULL ? *defaultsearchprovideralternateurls_ : *default_instance().defaultsearchprovideralternateurls_;
#else
    return defaultsearchprovideralternateurls_ != NULL ? *defaultsearchprovideralternateurls_ : *default_instance_->defaultsearchprovideralternateurls_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_defaultsearchprovideralternateurls()
{
    set_has_defaultsearchprovideralternateurls();
    if (defaultsearchprovideralternateurls_ == NULL) {
        defaultsearchprovideralternateurls_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
    return defaultsearchprovideralternateurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_defaultsearchprovideralternateurls()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
    clear_has_defaultsearchprovideralternateurls();
    ::enterprise_management::StringListPolicyProto* temp = defaultsearchprovideralternateurls_;
    defaultsearchprovideralternateurls_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovideralternateurls(::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls)
{
    delete defaultsearchprovideralternateurls_;
    defaultsearchprovideralternateurls_ = defaultsearchprovideralternateurls;
    if (defaultsearchprovideralternateurls) {
        set_has_defaultsearchprovideralternateurls();
    } else {
        clear_has_defaultsearchprovideralternateurls();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchTermsReplacementKey = 173;
bool CloudPolicySettings::has_defaultsearchprovidersearchtermsreplacementkey() const
{
    return (_has_bits_[1] & 0x00000010u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidersearchtermsreplacementkey()
{
    _has_bits_[1] |= 0x00000010u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidersearchtermsreplacementkey()
{
    _has_bits_[1] &= ~0x00000010u;
}
void CloudPolicySettings::clear_defaultsearchprovidersearchtermsreplacementkey()
{
    if (defaultsearchprovidersearchtermsreplacementkey_ != NULL)
        defaultsearchprovidersearchtermsreplacementkey_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_defaultsearchprovidersearchtermsreplacementkey();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersearchtermsreplacementkey() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchTermsReplacementKey)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchprovidersearchtermsreplacementkey_ != NULL ? *defaultsearchprovidersearchtermsreplacementkey_ : *default_instance().defaultsearchprovidersearchtermsreplacementkey_;
#else
    return defaultsearchprovidersearchtermsreplacementkey_ != NULL ? *defaultsearchprovidersearchtermsreplacementkey_ : *default_instance_->defaultsearchprovidersearchtermsreplacementkey_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersearchtermsreplacementkey()
{
    set_has_defaultsearchprovidersearchtermsreplacementkey();
    if (defaultsearchprovidersearchtermsreplacementkey_ == NULL) {
        defaultsearchprovidersearchtermsreplacementkey_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchTermsReplacementKey)
    return defaultsearchprovidersearchtermsreplacementkey_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersearchtermsreplacementkey()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchTermsReplacementKey)
    clear_has_defaultsearchprovidersearchtermsreplacementkey();
    ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchtermsreplacementkey_;
    defaultsearchprovidersearchtermsreplacementkey_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidersearchtermsreplacementkey(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchtermsreplacementkey)
{
    delete defaultsearchprovidersearchtermsreplacementkey_;
    defaultsearchprovidersearchtermsreplacementkey_ = defaultsearchprovidersearchtermsreplacementkey;
    if (defaultsearchprovidersearchtermsreplacementkey) {
        set_has_defaultsearchprovidersearchtermsreplacementkey();
    } else {
        clear_has_defaultsearchprovidersearchtermsreplacementkey();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchTermsReplacementKey)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
bool CloudPolicySettings::has_defaultsearchproviderimageurl() const
{
    return (_has_bits_[1] & 0x00000020u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchproviderimageurl()
{
    _has_bits_[1] |= 0x00000020u;
}
void CloudPolicySettings::clear_has_defaultsearchproviderimageurl()
{
    _has_bits_[1] &= ~0x00000020u;
}
void CloudPolicySettings::clear_defaultsearchproviderimageurl()
{
    if (defaultsearchproviderimageurl_ != NULL)
        defaultsearchproviderimageurl_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_defaultsearchproviderimageurl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderimageurl() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchproviderimageurl_ != NULL ? *defaultsearchproviderimageurl_ : *default_instance().defaultsearchproviderimageurl_;
#else
    return defaultsearchproviderimageurl_ != NULL ? *defaultsearchproviderimageurl_ : *default_instance_->defaultsearchproviderimageurl_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderimageurl()
{
    set_has_defaultsearchproviderimageurl();
    if (defaultsearchproviderimageurl_ == NULL) {
        defaultsearchproviderimageurl_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
    return defaultsearchproviderimageurl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderimageurl()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
    clear_has_defaultsearchproviderimageurl();
    ::enterprise_management::StringPolicyProto* temp = defaultsearchproviderimageurl_;
    defaultsearchproviderimageurl_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchproviderimageurl(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl)
{
    delete defaultsearchproviderimageurl_;
    defaultsearchproviderimageurl_ = defaultsearchproviderimageurl;
    if (defaultsearchproviderimageurl) {
        set_has_defaultsearchproviderimageurl();
    } else {
        clear_has_defaultsearchproviderimageurl();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
bool CloudPolicySettings::has_defaultsearchprovidernewtaburl() const
{
    return (_has_bits_[1] & 0x00000040u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidernewtaburl()
{
    _has_bits_[1] |= 0x00000040u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidernewtaburl()
{
    _has_bits_[1] &= ~0x00000040u;
}
void CloudPolicySettings::clear_defaultsearchprovidernewtaburl()
{
    if (defaultsearchprovidernewtaburl_ != NULL)
        defaultsearchprovidernewtaburl_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_defaultsearchprovidernewtaburl();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidernewtaburl() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchprovidernewtaburl_ != NULL ? *defaultsearchprovidernewtaburl_ : *default_instance().defaultsearchprovidernewtaburl_;
#else
    return defaultsearchprovidernewtaburl_ != NULL ? *defaultsearchprovidernewtaburl_ : *default_instance_->defaultsearchprovidernewtaburl_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidernewtaburl()
{
    set_has_defaultsearchprovidernewtaburl();
    if (defaultsearchprovidernewtaburl_ == NULL) {
        defaultsearchprovidernewtaburl_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
    return defaultsearchprovidernewtaburl_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidernewtaburl()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
    clear_has_defaultsearchprovidernewtaburl();
    ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidernewtaburl_;
    defaultsearchprovidernewtaburl_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidernewtaburl(::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl)
{
    delete defaultsearchprovidernewtaburl_;
    defaultsearchprovidernewtaburl_ = defaultsearchprovidernewtaburl;
    if (defaultsearchprovidernewtaburl) {
        set_has_defaultsearchprovidernewtaburl();
    } else {
        clear_has_defaultsearchprovidernewtaburl();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
bool CloudPolicySettings::has_defaultsearchprovidersearchurlpostparams() const
{
    return (_has_bits_[1] & 0x00000080u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidersearchurlpostparams()
{
    _has_bits_[1] |= 0x00000080u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidersearchurlpostparams()
{
    _has_bits_[1] &= ~0x00000080u;
}
void CloudPolicySettings::clear_defaultsearchprovidersearchurlpostparams()
{
    if (defaultsearchprovidersearchurlpostparams_ != NULL)
        defaultsearchprovidersearchurlpostparams_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_defaultsearchprovidersearchurlpostparams();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersearchurlpostparams() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchprovidersearchurlpostparams_ != NULL ? *defaultsearchprovidersearchurlpostparams_ : *default_instance().defaultsearchprovidersearchurlpostparams_;
#else
    return defaultsearchprovidersearchurlpostparams_ != NULL ? *defaultsearchprovidersearchurlpostparams_ : *default_instance_->defaultsearchprovidersearchurlpostparams_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersearchurlpostparams()
{
    set_has_defaultsearchprovidersearchurlpostparams();
    if (defaultsearchprovidersearchurlpostparams_ == NULL) {
        defaultsearchprovidersearchurlpostparams_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
    return defaultsearchprovidersearchurlpostparams_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersearchurlpostparams()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
    clear_has_defaultsearchprovidersearchurlpostparams();
    ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchurlpostparams_;
    defaultsearchprovidersearchurlpostparams_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidersearchurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams)
{
    delete defaultsearchprovidersearchurlpostparams_;
    defaultsearchprovidersearchurlpostparams_ = defaultsearchprovidersearchurlpostparams;
    if (defaultsearchprovidersearchurlpostparams) {
        set_has_defaultsearchprovidersearchurlpostparams();
    } else {
        clear_has_defaultsearchprovidersearchurlpostparams();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
bool CloudPolicySettings::has_defaultsearchprovidersuggesturlpostparams() const
{
    return (_has_bits_[1] & 0x00000100u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchprovidersuggesturlpostparams()
{
    _has_bits_[1] |= 0x00000100u;
}
void CloudPolicySettings::clear_has_defaultsearchprovidersuggesturlpostparams()
{
    _has_bits_[1] &= ~0x00000100u;
}
void CloudPolicySettings::clear_defaultsearchprovidersuggesturlpostparams()
{
    if (defaultsearchprovidersuggesturlpostparams_ != NULL)
        defaultsearchprovidersuggesturlpostparams_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_defaultsearchprovidersuggesturlpostparams();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersuggesturlpostparams() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchprovidersuggesturlpostparams_ != NULL ? *defaultsearchprovidersuggesturlpostparams_ : *default_instance().defaultsearchprovidersuggesturlpostparams_;
#else
    return defaultsearchprovidersuggesturlpostparams_ != NULL ? *defaultsearchprovidersuggesturlpostparams_ : *default_instance_->defaultsearchprovidersuggesturlpostparams_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersuggesturlpostparams()
{
    set_has_defaultsearchprovidersuggesturlpostparams();
    if (defaultsearchprovidersuggesturlpostparams_ == NULL) {
        defaultsearchprovidersuggesturlpostparams_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
    return defaultsearchprovidersuggesturlpostparams_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersuggesturlpostparams()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
    clear_has_defaultsearchprovidersuggesturlpostparams();
    ::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersuggesturlpostparams_;
    defaultsearchprovidersuggesturlpostparams_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchprovidersuggesturlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams)
{
    delete defaultsearchprovidersuggesturlpostparams_;
    defaultsearchprovidersuggesturlpostparams_ = defaultsearchprovidersuggesturlpostparams;
    if (defaultsearchprovidersuggesturlpostparams) {
        set_has_defaultsearchprovidersuggesturlpostparams();
    } else {
        clear_has_defaultsearchprovidersuggesturlpostparams();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderInstantURLPostParams = 234;
bool CloudPolicySettings::has_defaultsearchproviderinstanturlpostparams() const
{
    return (_has_bits_[1] & 0x00000200u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchproviderinstanturlpostparams()
{
    _has_bits_[1] |= 0x00000200u;
}
void CloudPolicySettings::clear_has_defaultsearchproviderinstanturlpostparams()
{
    _has_bits_[1] &= ~0x00000200u;
}
void CloudPolicySettings::clear_defaultsearchproviderinstanturlpostparams()
{
    if (defaultsearchproviderinstanturlpostparams_ != NULL)
        defaultsearchproviderinstanturlpostparams_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_defaultsearchproviderinstanturlpostparams();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderinstanturlpostparams() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderInstantURLPostParams)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchproviderinstanturlpostparams_ != NULL ? *defaultsearchproviderinstanturlpostparams_ : *default_instance().defaultsearchproviderinstanturlpostparams_;
#else
    return defaultsearchproviderinstanturlpostparams_ != NULL ? *defaultsearchproviderinstanturlpostparams_ : *default_instance_->defaultsearchproviderinstanturlpostparams_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderinstanturlpostparams()
{
    set_has_defaultsearchproviderinstanturlpostparams();
    if (defaultsearchproviderinstanturlpostparams_ == NULL) {
        defaultsearchproviderinstanturlpostparams_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderInstantURLPostParams)
    return defaultsearchproviderinstanturlpostparams_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderinstanturlpostparams()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderInstantURLPostParams)
    clear_has_defaultsearchproviderinstanturlpostparams();
    ::enterprise_management::StringPolicyProto* temp = defaultsearchproviderinstanturlpostparams_;
    defaultsearchproviderinstanturlpostparams_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchproviderinstanturlpostparams(::enterprise_management::StringPolicyProto* defaultsearchproviderinstanturlpostparams)
{
    delete defaultsearchproviderinstanturlpostparams_;
    defaultsearchproviderinstanturlpostparams_ = defaultsearchproviderinstanturlpostparams;
    if (defaultsearchproviderinstanturlpostparams) {
        set_has_defaultsearchproviderinstanturlpostparams();
    } else {
        clear_has_defaultsearchproviderinstanturlpostparams();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderInstantURLPostParams)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
bool CloudPolicySettings::has_defaultsearchproviderimageurlpostparams() const
{
    return (_has_bits_[1] & 0x00000400u) != 0;
}
void CloudPolicySettings::set_has_defaultsearchproviderimageurlpostparams()
{
    _has_bits_[1] |= 0x00000400u;
}
void CloudPolicySettings::clear_has_defaultsearchproviderimageurlpostparams()
{
    _has_bits_[1] &= ~0x00000400u;
}
void CloudPolicySettings::clear_defaultsearchproviderimageurlpostparams()
{
    if (defaultsearchproviderimageurlpostparams_ != NULL)
        defaultsearchproviderimageurlpostparams_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_defaultsearchproviderimageurlpostparams();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderimageurlpostparams() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultsearchproviderimageurlpostparams_ != NULL ? *defaultsearchproviderimageurlpostparams_ : *default_instance().defaultsearchproviderimageurlpostparams_;
#else
    return defaultsearchproviderimageurlpostparams_ != NULL ? *defaultsearchproviderimageurlpostparams_ : *default_instance_->defaultsearchproviderimageurlpostparams_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderimageurlpostparams()
{
    set_has_defaultsearchproviderimageurlpostparams();
    if (defaultsearchproviderimageurlpostparams_ == NULL) {
        defaultsearchproviderimageurlpostparams_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
    return defaultsearchproviderimageurlpostparams_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderimageurlpostparams()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
    clear_has_defaultsearchproviderimageurlpostparams();
    ::enterprise_management::StringPolicyProto* temp = defaultsearchproviderimageurlpostparams_;
    defaultsearchproviderimageurlpostparams_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultsearchproviderimageurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams)
{
    delete defaultsearchproviderimageurlpostparams_;
    defaultsearchproviderimageurlpostparams_ = defaultsearchproviderimageurlpostparams;
    if (defaultsearchproviderimageurlpostparams) {
        set_has_defaultsearchproviderimageurlpostparams();
    } else {
        clear_has_defaultsearchproviderimageurlpostparams();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
}

// optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
bool CloudPolicySettings::has_defaultcookiessetting() const
{
    return (_has_bits_[1] & 0x00000800u) != 0;
}
void CloudPolicySettings::set_has_defaultcookiessetting()
{
    _has_bits_[1] |= 0x00000800u;
}
void CloudPolicySettings::clear_has_defaultcookiessetting()
{
    _has_bits_[1] &= ~0x00000800u;
}
void CloudPolicySettings::clear_defaultcookiessetting()
{
    if (defaultcookiessetting_ != NULL)
        defaultcookiessetting_->::enterprise_management::IntegerPolicyProto::Clear();
    clear_has_defaultcookiessetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultcookiessetting() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultcookiessetting_ != NULL ? *defaultcookiessetting_ : *default_instance().defaultcookiessetting_;
#else
    return defaultcookiessetting_ != NULL ? *defaultcookiessetting_ : *default_instance_->defaultcookiessetting_;
#endif
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultcookiessetting()
{
    set_has_defaultcookiessetting();
    if (defaultcookiessetting_ == NULL) {
        defaultcookiessetting_ = new ::enterprise_management::IntegerPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
    return defaultcookiessetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultcookiessetting()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
    clear_has_defaultcookiessetting();
    ::enterprise_management::IntegerPolicyProto* temp = defaultcookiessetting_;
    defaultcookiessetting_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultcookiessetting(::enterprise_management::IntegerPolicyProto* defaultcookiessetting)
{
    delete defaultcookiessetting_;
    defaultcookiessetting_ = defaultcookiessetting;
    if (defaultcookiessetting) {
        set_has_defaultcookiessetting();
    } else {
        clear_has_defaultcookiessetting();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultImagesSetting = 51;
bool CloudPolicySettings::has_defaultimagessetting() const
{
    return (_has_bits_[1] & 0x00001000u) != 0;
}
void CloudPolicySettings::set_has_defaultimagessetting()
{
    _has_bits_[1] |= 0x00001000u;
}
void CloudPolicySettings::clear_has_defaultimagessetting()
{
    _has_bits_[1] &= ~0x00001000u;
}
void CloudPolicySettings::clear_defaultimagessetting()
{
    if (defaultimagessetting_ != NULL)
        defaultimagessetting_->::enterprise_management::IntegerPolicyProto::Clear();
    clear_has_defaultimagessetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultimagessetting() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultimagessetting_ != NULL ? *defaultimagessetting_ : *default_instance().defaultimagessetting_;
#else
    return defaultimagessetting_ != NULL ? *defaultimagessetting_ : *default_instance_->defaultimagessetting_;
#endif
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultimagessetting()
{
    set_has_defaultimagessetting();
    if (defaultimagessetting_ == NULL) {
        defaultimagessetting_ = new ::enterprise_management::IntegerPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
    return defaultimagessetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultimagessetting()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
    clear_has_defaultimagessetting();
    ::enterprise_management::IntegerPolicyProto* temp = defaultimagessetting_;
    defaultimagessetting_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultimagessetting(::enterprise_management::IntegerPolicyProto* defaultimagessetting)
{
    delete defaultimagessetting_;
    defaultimagessetting_ = defaultimagessetting;
    if (defaultimagessetting) {
        set_has_defaultimagessetting();
    } else {
        clear_has_defaultimagessetting();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
bool CloudPolicySettings::has_defaultjavascriptsetting() const
{
    return (_has_bits_[1] & 0x00002000u) != 0;
}
void CloudPolicySettings::set_has_defaultjavascriptsetting()
{
    _has_bits_[1] |= 0x00002000u;
}
void CloudPolicySettings::clear_has_defaultjavascriptsetting()
{
    _has_bits_[1] &= ~0x00002000u;
}
void CloudPolicySettings::clear_defaultjavascriptsetting()
{
    if (defaultjavascriptsetting_ != NULL)
        defaultjavascriptsetting_->::enterprise_management::IntegerPolicyProto::Clear();
    clear_has_defaultjavascriptsetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultjavascriptsetting() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultjavascriptsetting_ != NULL ? *defaultjavascriptsetting_ : *default_instance().defaultjavascriptsetting_;
#else
    return defaultjavascriptsetting_ != NULL ? *defaultjavascriptsetting_ : *default_instance_->defaultjavascriptsetting_;
#endif
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultjavascriptsetting()
{
    set_has_defaultjavascriptsetting();
    if (defaultjavascriptsetting_ == NULL) {
        defaultjavascriptsetting_ = new ::enterprise_management::IntegerPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
    return defaultjavascriptsetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultjavascriptsetting()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
    clear_has_defaultjavascriptsetting();
    ::enterprise_management::IntegerPolicyProto* temp = defaultjavascriptsetting_;
    defaultjavascriptsetting_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultjavascriptsetting(::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting)
{
    delete defaultjavascriptsetting_;
    defaultjavascriptsetting_ = defaultjavascriptsetting;
    if (defaultjavascriptsetting) {
        set_has_defaultjavascriptsetting();
    } else {
        clear_has_defaultjavascriptsetting();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
bool CloudPolicySettings::has_defaultpopupssetting() const
{
    return (_has_bits_[1] & 0x00004000u) != 0;
}
void CloudPolicySettings::set_has_defaultpopupssetting()
{
    _has_bits_[1] |= 0x00004000u;
}
void CloudPolicySettings::clear_has_defaultpopupssetting()
{
    _has_bits_[1] &= ~0x00004000u;
}
void CloudPolicySettings::clear_defaultpopupssetting()
{
    if (defaultpopupssetting_ != NULL)
        defaultpopupssetting_->::enterprise_management::IntegerPolicyProto::Clear();
    clear_has_defaultpopupssetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultpopupssetting() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultpopupssetting_ != NULL ? *defaultpopupssetting_ : *default_instance().defaultpopupssetting_;
#else
    return defaultpopupssetting_ != NULL ? *defaultpopupssetting_ : *default_instance_->defaultpopupssetting_;
#endif
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultpopupssetting()
{
    set_has_defaultpopupssetting();
    if (defaultpopupssetting_ == NULL) {
        defaultpopupssetting_ = new ::enterprise_management::IntegerPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
    return defaultpopupssetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultpopupssetting()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
    clear_has_defaultpopupssetting();
    ::enterprise_management::IntegerPolicyProto* temp = defaultpopupssetting_;
    defaultpopupssetting_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultpopupssetting(::enterprise_management::IntegerPolicyProto* defaultpopupssetting)
{
    delete defaultpopupssetting_;
    defaultpopupssetting_ = defaultpopupssetting;
    if (defaultpopupssetting) {
        set_has_defaultpopupssetting();
    } else {
        clear_has_defaultpopupssetting();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
bool CloudPolicySettings::has_defaultgeolocationsetting() const
{
    return (_has_bits_[1] & 0x00008000u) != 0;
}
void CloudPolicySettings::set_has_defaultgeolocationsetting()
{
    _has_bits_[1] |= 0x00008000u;
}
void CloudPolicySettings::clear_has_defaultgeolocationsetting()
{
    _has_bits_[1] &= ~0x00008000u;
}
void CloudPolicySettings::clear_defaultgeolocationsetting()
{
    if (defaultgeolocationsetting_ != NULL)
        defaultgeolocationsetting_->::enterprise_management::IntegerPolicyProto::Clear();
    clear_has_defaultgeolocationsetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultgeolocationsetting() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultgeolocationsetting_ != NULL ? *defaultgeolocationsetting_ : *default_instance().defaultgeolocationsetting_;
#else
    return defaultgeolocationsetting_ != NULL ? *defaultgeolocationsetting_ : *default_instance_->defaultgeolocationsetting_;
#endif
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultgeolocationsetting()
{
    set_has_defaultgeolocationsetting();
    if (defaultgeolocationsetting_ == NULL) {
        defaultgeolocationsetting_ = new ::enterprise_management::IntegerPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
    return defaultgeolocationsetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultgeolocationsetting()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
    clear_has_defaultgeolocationsetting();
    ::enterprise_management::IntegerPolicyProto* temp = defaultgeolocationsetting_;
    defaultgeolocationsetting_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultgeolocationsetting(::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting)
{
    delete defaultgeolocationsetting_;
    defaultgeolocationsetting_ = defaultgeolocationsetting;
    if (defaultgeolocationsetting) {
        set_has_defaultgeolocationsetting();
    } else {
        clear_has_defaultgeolocationsetting();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
bool CloudPolicySettings::has_defaultwebbluetoothguardsetting() const
{
    return (_has_bits_[1] & 0x00010000u) != 0;
}
void CloudPolicySettings::set_has_defaultwebbluetoothguardsetting()
{
    _has_bits_[1] |= 0x00010000u;
}
void CloudPolicySettings::clear_has_defaultwebbluetoothguardsetting()
{
    _has_bits_[1] &= ~0x00010000u;
}
void CloudPolicySettings::clear_defaultwebbluetoothguardsetting()
{
    if (defaultwebbluetoothguardsetting_ != NULL)
        defaultwebbluetoothguardsetting_->::enterprise_management::IntegerPolicyProto::Clear();
    clear_has_defaultwebbluetoothguardsetting();
}
const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultwebbluetoothguardsetting() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return defaultwebbluetoothguardsetting_ != NULL ? *defaultwebbluetoothguardsetting_ : *default_instance().defaultwebbluetoothguardsetting_;
#else
    return defaultwebbluetoothguardsetting_ != NULL ? *defaultwebbluetoothguardsetting_ : *default_instance_->defaultwebbluetoothguardsetting_;
#endif
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultwebbluetoothguardsetting()
{
    set_has_defaultwebbluetoothguardsetting();
    if (defaultwebbluetoothguardsetting_ == NULL) {
        defaultwebbluetoothguardsetting_ = new ::enterprise_management::IntegerPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
    return defaultwebbluetoothguardsetting_;
}
::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultwebbluetoothguardsetting()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
    clear_has_defaultwebbluetoothguardsetting();
    ::enterprise_management::IntegerPolicyProto* temp = defaultwebbluetoothguardsetting_;
    defaultwebbluetoothguardsetting_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_defaultwebbluetoothguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting)
{
    delete defaultwebbluetoothguardsetting_;
    defaultwebbluetoothguardsetting_ = defaultwebbluetoothguardsetting;
    if (defaultwebbluetoothguardsetting) {
        set_has_defaultwebbluetoothguardsetting();
    } else {
        clear_has_defaultwebbluetoothguardsetting();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
}

// optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
bool CloudPolicySettings::has_cookiesallowedforurls() const
{
    return (_has_bits_[1] & 0x00020000u) != 0;
}
void CloudPolicySettings::set_has_cookiesallowedforurls()
{
    _has_bits_[1] |= 0x00020000u;
}
void CloudPolicySettings::clear_has_cookiesallowedforurls()
{
    _has_bits_[1] &= ~0x00020000u;
}
void CloudPolicySettings::clear_cookiesallowedforurls()
{
    if (cookiesallowedforurls_ != NULL)
        cookiesallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_cookiesallowedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiesallowedforurls() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return cookiesallowedforurls_ != NULL ? *cookiesallowedforurls_ : *default_instance().cookiesallowedforurls_;
#else
    return cookiesallowedforurls_ != NULL ? *cookiesallowedforurls_ : *default_instance_->cookiesallowedforurls_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiesallowedforurls()
{
    set_has_cookiesallowedforurls();
    if (cookiesallowedforurls_ == NULL) {
        cookiesallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
    return cookiesallowedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiesallowedforurls()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
    clear_has_cookiesallowedforurls();
    ::enterprise_management::StringListPolicyProto* temp = cookiesallowedforurls_;
    cookiesallowedforurls_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_cookiesallowedforurls(::enterprise_management::StringListPolicyProto* cookiesallowedforurls)
{
    delete cookiesallowedforurls_;
    cookiesallowedforurls_ = cookiesallowedforurls;
    if (cookiesallowedforurls) {
        set_has_cookiesallowedforurls();
    } else {
        clear_has_cookiesallowedforurls();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
bool CloudPolicySettings::has_cookiesblockedforurls() const
{
    return (_has_bits_[1] & 0x00040000u) != 0;
}
void CloudPolicySettings::set_has_cookiesblockedforurls()
{
    _has_bits_[1] |= 0x00040000u;
}
void CloudPolicySettings::clear_has_cookiesblockedforurls()
{
    _has_bits_[1] &= ~0x00040000u;
}
void CloudPolicySettings::clear_cookiesblockedforurls()
{
    if (cookiesblockedforurls_ != NULL)
        cookiesblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_cookiesblockedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiesblockedforurls() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return cookiesblockedforurls_ != NULL ? *cookiesblockedforurls_ : *default_instance().cookiesblockedforurls_;
#else
    return cookiesblockedforurls_ != NULL ? *cookiesblockedforurls_ : *default_instance_->cookiesblockedforurls_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiesblockedforurls()
{
    set_has_cookiesblockedforurls();
    if (cookiesblockedforurls_ == NULL) {
        cookiesblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
    return cookiesblockedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiesblockedforurls()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
    clear_has_cookiesblockedforurls();
    ::enterprise_management::StringListPolicyProto* temp = cookiesblockedforurls_;
    cookiesblockedforurls_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_cookiesblockedforurls(::enterprise_management::StringListPolicyProto* cookiesblockedforurls)
{
    delete cookiesblockedforurls_;
    cookiesblockedforurls_ = cookiesblockedforurls;
    if (cookiesblockedforurls) {
        set_has_cookiesblockedforurls();
    } else {
        clear_has_cookiesblockedforurls();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
bool CloudPolicySettings::has_cookiessessiononlyforurls() const
{
    return (_has_bits_[1] & 0x00080000u) != 0;
}
void CloudPolicySettings::set_has_cookiessessiononlyforurls()
{
    _has_bits_[1] |= 0x00080000u;
}
void CloudPolicySettings::clear_has_cookiessessiononlyforurls()
{
    _has_bits_[1] &= ~0x00080000u;
}
void CloudPolicySettings::clear_cookiessessiononlyforurls()
{
    if (cookiessessiononlyforurls_ != NULL)
        cookiessessiononlyforurls_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_cookiessessiononlyforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiessessiononlyforurls() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return cookiessessiononlyforurls_ != NULL ? *cookiessessiononlyforurls_ : *default_instance().cookiessessiononlyforurls_;
#else
    return cookiessessiononlyforurls_ != NULL ? *cookiessessiononlyforurls_ : *default_instance_->cookiessessiononlyforurls_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiessessiononlyforurls()
{
    set_has_cookiessessiononlyforurls();
    if (cookiessessiononlyforurls_ == NULL) {
        cookiessessiononlyforurls_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
    return cookiessessiononlyforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiessessiononlyforurls()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
    clear_has_cookiessessiononlyforurls();
    ::enterprise_management::StringListPolicyProto* temp = cookiessessiononlyforurls_;
    cookiessessiononlyforurls_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_cookiessessiononlyforurls(::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls)
{
    delete cookiessessiononlyforurls_;
    cookiessessiononlyforurls_ = cookiessessiononlyforurls;
    if (cookiessessiononlyforurls) {
        set_has_cookiessessiononlyforurls();
    } else {
        clear_has_cookiessessiononlyforurls();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
}

// optional .enterprise_management.StringListPolicyProto ImagesAllowedForUrls = 71;
bool CloudPolicySettings::has_imagesallowedforurls() const
{
    return (_has_bits_[1] & 0x00100000u) != 0;
}
void CloudPolicySettings::set_has_imagesallowedforurls()
{
    _has_bits_[1] |= 0x00100000u;
}
void CloudPolicySettings::clear_has_imagesallowedforurls()
{
    _has_bits_[1] &= ~0x00100000u;
}
void CloudPolicySettings::clear_imagesallowedforurls()
{
    if (imagesallowedforurls_ != NULL)
        imagesallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_imagesallowedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::imagesallowedforurls() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return imagesallowedforurls_ != NULL ? *imagesallowedforurls_ : *default_instance().imagesallowedforurls_;
#else
    return imagesallowedforurls_ != NULL ? *imagesallowedforurls_ : *default_instance_->imagesallowedforurls_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_imagesallowedforurls()
{
    set_has_imagesallowedforurls();
    if (imagesallowedforurls_ == NULL) {
        imagesallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
    return imagesallowedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_imagesallowedforurls()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
    clear_has_imagesallowedforurls();
    ::enterprise_management::StringListPolicyProto* temp = imagesallowedforurls_;
    imagesallowedforurls_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_imagesallowedforurls(::enterprise_management::StringListPolicyProto* imagesallowedforurls)
{
    delete imagesallowedforurls_;
    imagesallowedforurls_ = imagesallowedforurls;
    if (imagesallowedforurls) {
        set_has_imagesallowedforurls();
    } else {
        clear_has_imagesallowedforurls();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto ImagesBlockedForUrls = 72;
bool CloudPolicySettings::has_imagesblockedforurls() const
{
    return (_has_bits_[1] & 0x00200000u) != 0;
}
void CloudPolicySettings::set_has_imagesblockedforurls()
{
    _has_bits_[1] |= 0x00200000u;
}
void CloudPolicySettings::clear_has_imagesblockedforurls()
{
    _has_bits_[1] &= ~0x00200000u;
}
void CloudPolicySettings::clear_imagesblockedforurls()
{
    if (imagesblockedforurls_ != NULL)
        imagesblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_imagesblockedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::imagesblockedforurls() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return imagesblockedforurls_ != NULL ? *imagesblockedforurls_ : *default_instance().imagesblockedforurls_;
#else
    return imagesblockedforurls_ != NULL ? *imagesblockedforurls_ : *default_instance_->imagesblockedforurls_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_imagesblockedforurls()
{
    set_has_imagesblockedforurls();
    if (imagesblockedforurls_ == NULL) {
        imagesblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
    return imagesblockedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_imagesblockedforurls()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
    clear_has_imagesblockedforurls();
    ::enterprise_management::StringListPolicyProto* temp = imagesblockedforurls_;
    imagesblockedforurls_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_imagesblockedforurls(::enterprise_management::StringListPolicyProto* imagesblockedforurls)
{
    delete imagesblockedforurls_;
    imagesblockedforurls_ = imagesblockedforurls;
    if (imagesblockedforurls) {
        set_has_imagesblockedforurls();
    } else {
        clear_has_imagesblockedforurls();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
bool CloudPolicySettings::has_javascriptallowedforurls() const
{
    return (_has_bits_[1] & 0x00400000u) != 0;
}
void CloudPolicySettings::set_has_javascriptallowedforurls()
{
    _has_bits_[1] |= 0x00400000u;
}
void CloudPolicySettings::clear_has_javascriptallowedforurls()
{
    _has_bits_[1] &= ~0x00400000u;
}
void CloudPolicySettings::clear_javascriptallowedforurls()
{
    if (javascriptallowedforurls_ != NULL)
        javascriptallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_javascriptallowedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::javascriptallowedforurls() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return javascriptallowedforurls_ != NULL ? *javascriptallowedforurls_ : *default_instance().javascriptallowedforurls_;
#else
    return javascriptallowedforurls_ != NULL ? *javascriptallowedforurls_ : *default_instance_->javascriptallowedforurls_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_javascriptallowedforurls()
{
    set_has_javascriptallowedforurls();
    if (javascriptallowedforurls_ == NULL) {
        javascriptallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
    return javascriptallowedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_javascriptallowedforurls()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
    clear_has_javascriptallowedforurls();
    ::enterprise_management::StringListPolicyProto* temp = javascriptallowedforurls_;
    javascriptallowedforurls_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_javascriptallowedforurls(::enterprise_management::StringListPolicyProto* javascriptallowedforurls)
{
    delete javascriptallowedforurls_;
    javascriptallowedforurls_ = javascriptallowedforurls;
    if (javascriptallowedforurls) {
        set_has_javascriptallowedforurls();
    } else {
        clear_has_javascriptallowedforurls();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
bool CloudPolicySettings::has_javascriptblockedforurls() const
{
    return (_has_bits_[1] & 0x00800000u) != 0;
}
void CloudPolicySettings::set_has_javascriptblockedforurls()
{
    _has_bits_[1] |= 0x00800000u;
}
void CloudPolicySettings::clear_has_javascriptblockedforurls()
{
    _has_bits_[1] &= ~0x00800000u;
}
void CloudPolicySettings::clear_javascriptblockedforurls()
{
    if (javascriptblockedforurls_ != NULL)
        javascriptblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_javascriptblockedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::javascriptblockedforurls() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return javascriptblockedforurls_ != NULL ? *javascriptblockedforurls_ : *default_instance().javascriptblockedforurls_;
#else
    return javascriptblockedforurls_ != NULL ? *javascriptblockedforurls_ : *default_instance_->javascriptblockedforurls_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_javascriptblockedforurls()
{
    set_has_javascriptblockedforurls();
    if (javascriptblockedforurls_ == NULL) {
        javascriptblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
    return javascriptblockedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_javascriptblockedforurls()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
    clear_has_javascriptblockedforurls();
    ::enterprise_management::StringListPolicyProto* temp = javascriptblockedforurls_;
    javascriptblockedforurls_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_javascriptblockedforurls(::enterprise_management::StringListPolicyProto* javascriptblockedforurls)
{
    delete javascriptblockedforurls_;
    javascriptblockedforurls_ = javascriptblockedforurls;
    if (javascriptblockedforurls) {
        set_has_javascriptblockedforurls();
    } else {
        clear_has_javascriptblockedforurls();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
bool CloudPolicySettings::has_popupsallowedforurls() const
{
    return (_has_bits_[1] & 0x01000000u) != 0;
}
void CloudPolicySettings::set_has_popupsallowedforurls()
{
    _has_bits_[1] |= 0x01000000u;
}
void CloudPolicySettings::clear_has_popupsallowedforurls()
{
    _has_bits_[1] &= ~0x01000000u;
}
void CloudPolicySettings::clear_popupsallowedforurls()
{
    if (popupsallowedforurls_ != NULL)
        popupsallowedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_popupsallowedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::popupsallowedforurls() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return popupsallowedforurls_ != NULL ? *popupsallowedforurls_ : *default_instance().popupsallowedforurls_;
#else
    return popupsallowedforurls_ != NULL ? *popupsallowedforurls_ : *default_instance_->popupsallowedforurls_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_popupsallowedforurls()
{
    set_has_popupsallowedforurls();
    if (popupsallowedforurls_ == NULL) {
        popupsallowedforurls_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
    return popupsallowedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_popupsallowedforurls()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
    clear_has_popupsallowedforurls();
    ::enterprise_management::StringListPolicyProto* temp = popupsallowedforurls_;
    popupsallowedforurls_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_popupsallowedforurls(::enterprise_management::StringListPolicyProto* popupsallowedforurls)
{
    delete popupsallowedforurls_;
    popupsallowedforurls_ = popupsallowedforurls;
    if (popupsallowedforurls) {
        set_has_popupsallowedforurls();
    } else {
        clear_has_popupsallowedforurls();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
bool CloudPolicySettings::has_popupsblockedforurls() const
{
    return (_has_bits_[1] & 0x02000000u) != 0;
}
void CloudPolicySettings::set_has_popupsblockedforurls()
{
    _has_bits_[1] |= 0x02000000u;
}
void CloudPolicySettings::clear_has_popupsblockedforurls()
{
    _has_bits_[1] &= ~0x02000000u;
}
void CloudPolicySettings::clear_popupsblockedforurls()
{
    if (popupsblockedforurls_ != NULL)
        popupsblockedforurls_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_popupsblockedforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::popupsblockedforurls() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return popupsblockedforurls_ != NULL ? *popupsblockedforurls_ : *default_instance().popupsblockedforurls_;
#else
    return popupsblockedforurls_ != NULL ? *popupsblockedforurls_ : *default_instance_->popupsblockedforurls_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_popupsblockedforurls()
{
    set_has_popupsblockedforurls();
    if (popupsblockedforurls_ == NULL) {
        popupsblockedforurls_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
    return popupsblockedforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_popupsblockedforurls()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
    clear_has_popupsblockedforurls();
    ::enterprise_management::StringListPolicyProto* temp = popupsblockedforurls_;
    popupsblockedforurls_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_popupsblockedforurls(::enterprise_management::StringListPolicyProto* popupsblockedforurls)
{
    delete popupsblockedforurls_;
    popupsblockedforurls_ = popupsblockedforurls;
    if (popupsblockedforurls) {
        set_has_popupsblockedforurls();
    } else {
        clear_has_popupsblockedforurls();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
}

// optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
bool CloudPolicySettings::has_translateenabled() const
{
    return (_has_bits_[1] & 0x04000000u) != 0;
}
void CloudPolicySettings::set_has_translateenabled()
{
    _has_bits_[1] |= 0x04000000u;
}
void CloudPolicySettings::clear_has_translateenabled()
{
    _has_bits_[1] &= ~0x04000000u;
}
void CloudPolicySettings::clear_translateenabled()
{
    if (translateenabled_ != NULL)
        translateenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_translateenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::translateenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.TranslateEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return translateenabled_ != NULL ? *translateenabled_ : *default_instance().translateenabled_;
#else
    return translateenabled_ != NULL ? *translateenabled_ : *default_instance_->translateenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_translateenabled()
{
    set_has_translateenabled();
    if (translateenabled_ == NULL) {
        translateenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.TranslateEnabled)
    return translateenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_translateenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.TranslateEnabled)
    clear_has_translateenabled();
    ::enterprise_management::BooleanPolicyProto* temp = translateenabled_;
    translateenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_translateenabled(::enterprise_management::BooleanPolicyProto* translateenabled)
{
    delete translateenabled_;
    translateenabled_ = translateenabled;
    if (translateenabled) {
        set_has_translateenabled();
    } else {
        clear_has_translateenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.TranslateEnabled)
}

// optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
bool CloudPolicySettings::has_editbookmarksenabled() const
{
    return (_has_bits_[1] & 0x08000000u) != 0;
}
void CloudPolicySettings::set_has_editbookmarksenabled()
{
    _has_bits_[1] |= 0x08000000u;
}
void CloudPolicySettings::clear_has_editbookmarksenabled()
{
    _has_bits_[1] &= ~0x08000000u;
}
void CloudPolicySettings::clear_editbookmarksenabled()
{
    if (editbookmarksenabled_ != NULL)
        editbookmarksenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_editbookmarksenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::editbookmarksenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return editbookmarksenabled_ != NULL ? *editbookmarksenabled_ : *default_instance().editbookmarksenabled_;
#else
    return editbookmarksenabled_ != NULL ? *editbookmarksenabled_ : *default_instance_->editbookmarksenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_editbookmarksenabled()
{
    set_has_editbookmarksenabled();
    if (editbookmarksenabled_ == NULL) {
        editbookmarksenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
    return editbookmarksenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_editbookmarksenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
    clear_has_editbookmarksenabled();
    ::enterprise_management::BooleanPolicyProto* temp = editbookmarksenabled_;
    editbookmarksenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_editbookmarksenabled(::enterprise_management::BooleanPolicyProto* editbookmarksenabled)
{
    delete editbookmarksenabled_;
    editbookmarksenabled_ = editbookmarksenabled;
    if (editbookmarksenabled) {
        set_has_editbookmarksenabled();
    } else {
        clear_has_editbookmarksenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
}

// optional .enterprise_management.StringListPolicyProto URLBlacklist = 105;
bool CloudPolicySettings::has_urlblacklist() const
{
    return (_has_bits_[1] & 0x10000000u) != 0;
}
void CloudPolicySettings::set_has_urlblacklist()
{
    _has_bits_[1] |= 0x10000000u;
}
void CloudPolicySettings::clear_has_urlblacklist()
{
    _has_bits_[1] &= ~0x10000000u;
}
void CloudPolicySettings::clear_urlblacklist()
{
    if (urlblacklist_ != NULL)
        urlblacklist_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_urlblacklist();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlblacklist() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLBlacklist)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return urlblacklist_ != NULL ? *urlblacklist_ : *default_instance().urlblacklist_;
#else
    return urlblacklist_ != NULL ? *urlblacklist_ : *default_instance_->urlblacklist_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlblacklist()
{
    set_has_urlblacklist();
    if (urlblacklist_ == NULL) {
        urlblacklist_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLBlacklist)
    return urlblacklist_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlblacklist()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLBlacklist)
    clear_has_urlblacklist();
    ::enterprise_management::StringListPolicyProto* temp = urlblacklist_;
    urlblacklist_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_urlblacklist(::enterprise_management::StringListPolicyProto* urlblacklist)
{
    delete urlblacklist_;
    urlblacklist_ = urlblacklist;
    if (urlblacklist) {
        set_has_urlblacklist();
    } else {
        clear_has_urlblacklist();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLBlacklist)
}

// optional .enterprise_management.StringListPolicyProto URLWhitelist = 106;
bool CloudPolicySettings::has_urlwhitelist() const
{
    return (_has_bits_[1] & 0x20000000u) != 0;
}
void CloudPolicySettings::set_has_urlwhitelist()
{
    _has_bits_[1] |= 0x20000000u;
}
void CloudPolicySettings::clear_has_urlwhitelist()
{
    _has_bits_[1] &= ~0x20000000u;
}
void CloudPolicySettings::clear_urlwhitelist()
{
    if (urlwhitelist_ != NULL)
        urlwhitelist_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_urlwhitelist();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlwhitelist() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLWhitelist)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return urlwhitelist_ != NULL ? *urlwhitelist_ : *default_instance().urlwhitelist_;
#else
    return urlwhitelist_ != NULL ? *urlwhitelist_ : *default_instance_->urlwhitelist_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlwhitelist()
{
    set_has_urlwhitelist();
    if (urlwhitelist_ == NULL) {
        urlwhitelist_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLWhitelist)
    return urlwhitelist_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlwhitelist()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLWhitelist)
    clear_has_urlwhitelist();
    ::enterprise_management::StringListPolicyProto* temp = urlwhitelist_;
    urlwhitelist_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_urlwhitelist(::enterprise_management::StringListPolicyProto* urlwhitelist)
{
    delete urlwhitelist_;
    urlwhitelist_ = urlwhitelist;
    if (urlwhitelist) {
        set_has_urlwhitelist();
    } else {
        clear_has_urlwhitelist();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLWhitelist)
}

// optional .enterprise_management.BooleanPolicyProto EnableSha1ForLocalAnchors = 342;
bool CloudPolicySettings::has_enablesha1forlocalanchors() const
{
    return (_has_bits_[1] & 0x40000000u) != 0;
}
void CloudPolicySettings::set_has_enablesha1forlocalanchors()
{
    _has_bits_[1] |= 0x40000000u;
}
void CloudPolicySettings::clear_has_enablesha1forlocalanchors()
{
    _has_bits_[1] &= ~0x40000000u;
}
void CloudPolicySettings::clear_enablesha1forlocalanchors()
{
    if (enablesha1forlocalanchors_ != NULL)
        enablesha1forlocalanchors_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_enablesha1forlocalanchors();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enablesha1forlocalanchors() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableSha1ForLocalAnchors)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return enablesha1forlocalanchors_ != NULL ? *enablesha1forlocalanchors_ : *default_instance().enablesha1forlocalanchors_;
#else
    return enablesha1forlocalanchors_ != NULL ? *enablesha1forlocalanchors_ : *default_instance_->enablesha1forlocalanchors_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enablesha1forlocalanchors()
{
    set_has_enablesha1forlocalanchors();
    if (enablesha1forlocalanchors_ == NULL) {
        enablesha1forlocalanchors_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableSha1ForLocalAnchors)
    return enablesha1forlocalanchors_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enablesha1forlocalanchors()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableSha1ForLocalAnchors)
    clear_has_enablesha1forlocalanchors();
    ::enterprise_management::BooleanPolicyProto* temp = enablesha1forlocalanchors_;
    enablesha1forlocalanchors_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_enablesha1forlocalanchors(::enterprise_management::BooleanPolicyProto* enablesha1forlocalanchors)
{
    delete enablesha1forlocalanchors_;
    enablesha1forlocalanchors_ = enablesha1forlocalanchors;
    if (enablesha1forlocalanchors) {
        set_has_enablesha1forlocalanchors();
    } else {
        clear_has_enablesha1forlocalanchors();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableSha1ForLocalAnchors)
}

// optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
bool CloudPolicySettings::has_disablesafebrowsingproceedanyway() const
{
    return (_has_bits_[1] & 0x80000000u) != 0;
}
void CloudPolicySettings::set_has_disablesafebrowsingproceedanyway()
{
    _has_bits_[1] |= 0x80000000u;
}
void CloudPolicySettings::clear_has_disablesafebrowsingproceedanyway()
{
    _has_bits_[1] &= ~0x80000000u;
}
void CloudPolicySettings::clear_disablesafebrowsingproceedanyway()
{
    if (disablesafebrowsingproceedanyway_ != NULL)
        disablesafebrowsingproceedanyway_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_disablesafebrowsingproceedanyway();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disablesafebrowsingproceedanyway() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return disablesafebrowsingproceedanyway_ != NULL ? *disablesafebrowsingproceedanyway_ : *default_instance().disablesafebrowsingproceedanyway_;
#else
    return disablesafebrowsingproceedanyway_ != NULL ? *disablesafebrowsingproceedanyway_ : *default_instance_->disablesafebrowsingproceedanyway_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disablesafebrowsingproceedanyway()
{
    set_has_disablesafebrowsingproceedanyway();
    if (disablesafebrowsingproceedanyway_ == NULL) {
        disablesafebrowsingproceedanyway_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
    return disablesafebrowsingproceedanyway_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disablesafebrowsingproceedanyway()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
    clear_has_disablesafebrowsingproceedanyway();
    ::enterprise_management::BooleanPolicyProto* temp = disablesafebrowsingproceedanyway_;
    disablesafebrowsingproceedanyway_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_disablesafebrowsingproceedanyway(::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway)
{
    delete disablesafebrowsingproceedanyway_;
    disablesafebrowsingproceedanyway_ = disablesafebrowsingproceedanyway;
    if (disablesafebrowsingproceedanyway) {
        set_has_disablesafebrowsingproceedanyway();
    } else {
        clear_has_disablesafebrowsingproceedanyway();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
}

// optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
bool CloudPolicySettings::has_variationsrestrictparameter() const
{
    return (_has_bits_[2] & 0x00000001u) != 0;
}
void CloudPolicySettings::set_has_variationsrestrictparameter()
{
    _has_bits_[2] |= 0x00000001u;
}
void CloudPolicySettings::clear_has_variationsrestrictparameter()
{
    _has_bits_[2] &= ~0x00000001u;
}
void CloudPolicySettings::clear_variationsrestrictparameter()
{
    if (variationsrestrictparameter_ != NULL)
        variationsrestrictparameter_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_variationsrestrictparameter();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::variationsrestrictparameter() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return variationsrestrictparameter_ != NULL ? *variationsrestrictparameter_ : *default_instance().variationsrestrictparameter_;
#else
    return variationsrestrictparameter_ != NULL ? *variationsrestrictparameter_ : *default_instance_->variationsrestrictparameter_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_variationsrestrictparameter()
{
    set_has_variationsrestrictparameter();
    if (variationsrestrictparameter_ == NULL) {
        variationsrestrictparameter_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
    return variationsrestrictparameter_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_variationsrestrictparameter()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
    clear_has_variationsrestrictparameter();
    ::enterprise_management::StringPolicyProto* temp = variationsrestrictparameter_;
    variationsrestrictparameter_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_variationsrestrictparameter(::enterprise_management::StringPolicyProto* variationsrestrictparameter)
{
    delete variationsrestrictparameter_;
    variationsrestrictparameter_ = variationsrestrictparameter;
    if (variationsrestrictparameter) {
        set_has_variationsrestrictparameter();
    } else {
        clear_has_variationsrestrictparameter();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
}

// optional .enterprise_management.BooleanPolicyProto SupervisedUserContentProviderEnabled = 314;
bool CloudPolicySettings::has_supervisedusercontentproviderenabled() const
{
    return (_has_bits_[2] & 0x00000002u) != 0;
}
void CloudPolicySettings::set_has_supervisedusercontentproviderenabled()
{
    _has_bits_[2] |= 0x00000002u;
}
void CloudPolicySettings::clear_has_supervisedusercontentproviderenabled()
{
    _has_bits_[2] &= ~0x00000002u;
}
void CloudPolicySettings::clear_supervisedusercontentproviderenabled()
{
    if (supervisedusercontentproviderenabled_ != NULL)
        supervisedusercontentproviderenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_supervisedusercontentproviderenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::supervisedusercontentproviderenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SupervisedUserContentProviderEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return supervisedusercontentproviderenabled_ != NULL ? *supervisedusercontentproviderenabled_ : *default_instance().supervisedusercontentproviderenabled_;
#else
    return supervisedusercontentproviderenabled_ != NULL ? *supervisedusercontentproviderenabled_ : *default_instance_->supervisedusercontentproviderenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_supervisedusercontentproviderenabled()
{
    set_has_supervisedusercontentproviderenabled();
    if (supervisedusercontentproviderenabled_ == NULL) {
        supervisedusercontentproviderenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SupervisedUserContentProviderEnabled)
    return supervisedusercontentproviderenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_supervisedusercontentproviderenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SupervisedUserContentProviderEnabled)
    clear_has_supervisedusercontentproviderenabled();
    ::enterprise_management::BooleanPolicyProto* temp = supervisedusercontentproviderenabled_;
    supervisedusercontentproviderenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_supervisedusercontentproviderenabled(::enterprise_management::BooleanPolicyProto* supervisedusercontentproviderenabled)
{
    delete supervisedusercontentproviderenabled_;
    supervisedusercontentproviderenabled_ = supervisedusercontentproviderenabled;
    if (supervisedusercontentproviderenabled) {
        set_has_supervisedusercontentproviderenabled();
    } else {
        clear_has_supervisedusercontentproviderenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SupervisedUserContentProviderEnabled)
}

// optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
bool CloudPolicySettings::has_managedbookmarks() const
{
    return (_has_bits_[2] & 0x00000004u) != 0;
}
void CloudPolicySettings::set_has_managedbookmarks()
{
    _has_bits_[2] |= 0x00000004u;
}
void CloudPolicySettings::clear_has_managedbookmarks()
{
    _has_bits_[2] &= ~0x00000004u;
}
void CloudPolicySettings::clear_managedbookmarks()
{
    if (managedbookmarks_ != NULL)
        managedbookmarks_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_managedbookmarks();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::managedbookmarks() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ManagedBookmarks)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return managedbookmarks_ != NULL ? *managedbookmarks_ : *default_instance().managedbookmarks_;
#else
    return managedbookmarks_ != NULL ? *managedbookmarks_ : *default_instance_->managedbookmarks_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_managedbookmarks()
{
    set_has_managedbookmarks();
    if (managedbookmarks_ == NULL) {
        managedbookmarks_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ManagedBookmarks)
    return managedbookmarks_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_managedbookmarks()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ManagedBookmarks)
    clear_has_managedbookmarks();
    ::enterprise_management::StringPolicyProto* temp = managedbookmarks_;
    managedbookmarks_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_managedbookmarks(::enterprise_management::StringPolicyProto* managedbookmarks)
{
    delete managedbookmarks_;
    managedbookmarks_ = managedbookmarks;
    if (managedbookmarks) {
        set_has_managedbookmarks();
    } else {
        clear_has_managedbookmarks();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ManagedBookmarks)
}

// optional .enterprise_management.BooleanPolicyProto DataCompressionProxyEnabled = 243;
bool CloudPolicySettings::has_datacompressionproxyenabled() const
{
    return (_has_bits_[2] & 0x00000008u) != 0;
}
void CloudPolicySettings::set_has_datacompressionproxyenabled()
{
    _has_bits_[2] |= 0x00000008u;
}
void CloudPolicySettings::clear_has_datacompressionproxyenabled()
{
    _has_bits_[2] &= ~0x00000008u;
}
void CloudPolicySettings::clear_datacompressionproxyenabled()
{
    if (datacompressionproxyenabled_ != NULL)
        datacompressionproxyenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_datacompressionproxyenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::datacompressionproxyenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DataCompressionProxyEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return datacompressionproxyenabled_ != NULL ? *datacompressionproxyenabled_ : *default_instance().datacompressionproxyenabled_;
#else
    return datacompressionproxyenabled_ != NULL ? *datacompressionproxyenabled_ : *default_instance_->datacompressionproxyenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_datacompressionproxyenabled()
{
    set_has_datacompressionproxyenabled();
    if (datacompressionproxyenabled_ == NULL) {
        datacompressionproxyenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DataCompressionProxyEnabled)
    return datacompressionproxyenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_datacompressionproxyenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DataCompressionProxyEnabled)
    clear_has_datacompressionproxyenabled();
    ::enterprise_management::BooleanPolicyProto* temp = datacompressionproxyenabled_;
    datacompressionproxyenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_datacompressionproxyenabled(::enterprise_management::BooleanPolicyProto* datacompressionproxyenabled)
{
    delete datacompressionproxyenabled_;
    datacompressionproxyenabled_ = datacompressionproxyenabled;
    if (datacompressionproxyenabled) {
        set_has_datacompressionproxyenabled();
    } else {
        clear_has_datacompressionproxyenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DataCompressionProxyEnabled)
}

// optional .enterprise_management.StringListPolicyProto EnableDeprecatedWebPlatformFeatures = 272;
bool CloudPolicySettings::has_enabledeprecatedwebplatformfeatures() const
{
    return (_has_bits_[2] & 0x00000010u) != 0;
}
void CloudPolicySettings::set_has_enabledeprecatedwebplatformfeatures()
{
    _has_bits_[2] |= 0x00000010u;
}
void CloudPolicySettings::clear_has_enabledeprecatedwebplatformfeatures()
{
    _has_bits_[2] &= ~0x00000010u;
}
void CloudPolicySettings::clear_enabledeprecatedwebplatformfeatures()
{
    if (enabledeprecatedwebplatformfeatures_ != NULL)
        enabledeprecatedwebplatformfeatures_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_enabledeprecatedwebplatformfeatures();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::enabledeprecatedwebplatformfeatures() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return enabledeprecatedwebplatformfeatures_ != NULL ? *enabledeprecatedwebplatformfeatures_ : *default_instance().enabledeprecatedwebplatformfeatures_;
#else
    return enabledeprecatedwebplatformfeatures_ != NULL ? *enabledeprecatedwebplatformfeatures_ : *default_instance_->enabledeprecatedwebplatformfeatures_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_enabledeprecatedwebplatformfeatures()
{
    set_has_enabledeprecatedwebplatformfeatures();
    if (enabledeprecatedwebplatformfeatures_ == NULL) {
        enabledeprecatedwebplatformfeatures_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
    return enabledeprecatedwebplatformfeatures_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_enabledeprecatedwebplatformfeatures()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
    clear_has_enabledeprecatedwebplatformfeatures();
    ::enterprise_management::StringListPolicyProto* temp = enabledeprecatedwebplatformfeatures_;
    enabledeprecatedwebplatformfeatures_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_enabledeprecatedwebplatformfeatures(::enterprise_management::StringListPolicyProto* enabledeprecatedwebplatformfeatures)
{
    delete enabledeprecatedwebplatformfeatures_;
    enabledeprecatedwebplatformfeatures_ = enabledeprecatedwebplatformfeatures;
    if (enabledeprecatedwebplatformfeatures) {
        set_has_enabledeprecatedwebplatformfeatures();
    } else {
        clear_has_enabledeprecatedwebplatformfeatures();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
}

// optional .enterprise_management.BooleanPolicyProto ForceBrowserSignin = 348;
bool CloudPolicySettings::has_forcebrowsersignin() const
{
    return (_has_bits_[2] & 0x00000020u) != 0;
}
void CloudPolicySettings::set_has_forcebrowsersignin()
{
    _has_bits_[2] |= 0x00000020u;
}
void CloudPolicySettings::clear_has_forcebrowsersignin()
{
    _has_bits_[2] &= ~0x00000020u;
}
void CloudPolicySettings::clear_forcebrowsersignin()
{
    if (forcebrowsersignin_ != NULL)
        forcebrowsersignin_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_forcebrowsersignin();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcebrowsersignin() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceBrowserSignin)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return forcebrowsersignin_ != NULL ? *forcebrowsersignin_ : *default_instance().forcebrowsersignin_;
#else
    return forcebrowsersignin_ != NULL ? *forcebrowsersignin_ : *default_instance_->forcebrowsersignin_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcebrowsersignin()
{
    set_has_forcebrowsersignin();
    if (forcebrowsersignin_ == NULL) {
        forcebrowsersignin_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceBrowserSignin)
    return forcebrowsersignin_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcebrowsersignin()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceBrowserSignin)
    clear_has_forcebrowsersignin();
    ::enterprise_management::BooleanPolicyProto* temp = forcebrowsersignin_;
    forcebrowsersignin_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_forcebrowsersignin(::enterprise_management::BooleanPolicyProto* forcebrowsersignin)
{
    delete forcebrowsersignin_;
    forcebrowsersignin_ = forcebrowsersignin;
    if (forcebrowsersignin) {
        set_has_forcebrowsersignin();
    } else {
        clear_has_forcebrowsersignin();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceBrowserSignin)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforurls() const
{
    return (_has_bits_[2] & 0x00000040u) != 0;
}
void CloudPolicySettings::set_has_certificatetransparencyenforcementdisabledforurls()
{
    _has_bits_[2] |= 0x00000040u;
}
void CloudPolicySettings::clear_has_certificatetransparencyenforcementdisabledforurls()
{
    _has_bits_[2] &= ~0x00000040u;
}
void CloudPolicySettings::clear_certificatetransparencyenforcementdisabledforurls()
{
    if (certificatetransparencyenforcementdisabledforurls_ != NULL)
        certificatetransparencyenforcementdisabledforurls_->::enterprise_management::StringListPolicyProto::Clear();
    clear_has_certificatetransparencyenforcementdisabledforurls();
}
const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforurls() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return certificatetransparencyenforcementdisabledforurls_ != NULL ? *certificatetransparencyenforcementdisabledforurls_ : *default_instance().certificatetransparencyenforcementdisabledforurls_;
#else
    return certificatetransparencyenforcementdisabledforurls_ != NULL ? *certificatetransparencyenforcementdisabledforurls_ : *default_instance_->certificatetransparencyenforcementdisabledforurls_;
#endif
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforurls()
{
    set_has_certificatetransparencyenforcementdisabledforurls();
    if (certificatetransparencyenforcementdisabledforurls_ == NULL) {
        certificatetransparencyenforcementdisabledforurls_ = new ::enterprise_management::StringListPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
    return certificatetransparencyenforcementdisabledforurls_;
}
::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforurls()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
    clear_has_certificatetransparencyenforcementdisabledforurls();
    ::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforurls_;
    certificatetransparencyenforcementdisabledforurls_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforurls(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls)
{
    delete certificatetransparencyenforcementdisabledforurls_;
    certificatetransparencyenforcementdisabledforurls_ = certificatetransparencyenforcementdisabledforurls;
    if (certificatetransparencyenforcementdisabledforurls) {
        set_has_certificatetransparencyenforcementdisabledforurls();
    } else {
        clear_has_certificatetransparencyenforcementdisabledforurls();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
}

// optional .enterprise_management.BooleanPolicyProto DHEEnabled = 336;
bool CloudPolicySettings::has_dheenabled() const
{
    return (_has_bits_[2] & 0x00000080u) != 0;
}
void CloudPolicySettings::set_has_dheenabled()
{
    _has_bits_[2] |= 0x00000080u;
}
void CloudPolicySettings::clear_has_dheenabled()
{
    _has_bits_[2] &= ~0x00000080u;
}
void CloudPolicySettings::clear_dheenabled()
{
    if (dheenabled_ != NULL)
        dheenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_dheenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::dheenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DHEEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return dheenabled_ != NULL ? *dheenabled_ : *default_instance().dheenabled_;
#else
    return dheenabled_ != NULL ? *dheenabled_ : *default_instance_->dheenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_dheenabled()
{
    set_has_dheenabled();
    if (dheenabled_ == NULL) {
        dheenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DHEEnabled)
    return dheenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_dheenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DHEEnabled)
    clear_has_dheenabled();
    ::enterprise_management::BooleanPolicyProto* temp = dheenabled_;
    dheenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_dheenabled(::enterprise_management::BooleanPolicyProto* dheenabled)
{
    delete dheenabled_;
    dheenabled_ = dheenabled;
    if (dheenabled) {
        set_has_dheenabled();
    } else {
        clear_has_dheenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DHEEnabled)
}

// optional .enterprise_management.BooleanPolicyProto ContextualSearchEnabled = 283;
bool CloudPolicySettings::has_contextualsearchenabled() const
{
    return (_has_bits_[2] & 0x00000100u) != 0;
}
void CloudPolicySettings::set_has_contextualsearchenabled()
{
    _has_bits_[2] |= 0x00000100u;
}
void CloudPolicySettings::clear_has_contextualsearchenabled()
{
    _has_bits_[2] &= ~0x00000100u;
}
void CloudPolicySettings::clear_contextualsearchenabled()
{
    if (contextualsearchenabled_ != NULL)
        contextualsearchenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_contextualsearchenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::contextualsearchenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ContextualSearchEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return contextualsearchenabled_ != NULL ? *contextualsearchenabled_ : *default_instance().contextualsearchenabled_;
#else
    return contextualsearchenabled_ != NULL ? *contextualsearchenabled_ : *default_instance_->contextualsearchenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_contextualsearchenabled()
{
    set_has_contextualsearchenabled();
    if (contextualsearchenabled_ == NULL) {
        contextualsearchenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ContextualSearchEnabled)
    return contextualsearchenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_contextualsearchenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ContextualSearchEnabled)
    clear_has_contextualsearchenabled();
    ::enterprise_management::BooleanPolicyProto* temp = contextualsearchenabled_;
    contextualsearchenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_contextualsearchenabled(::enterprise_management::BooleanPolicyProto* contextualsearchenabled)
{
    delete contextualsearchenabled_;
    contextualsearchenabled_ = contextualsearchenabled;
    if (contextualsearchenabled) {
        set_has_contextualsearchenabled();
    } else {
        clear_has_contextualsearchenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ContextualSearchEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
bool CloudPolicySettings::has_sslerroroverrideallowed() const
{
    return (_has_bits_[2] & 0x00000200u) != 0;
}
void CloudPolicySettings::set_has_sslerroroverrideallowed()
{
    _has_bits_[2] |= 0x00000200u;
}
void CloudPolicySettings::clear_has_sslerroroverrideallowed()
{
    _has_bits_[2] &= ~0x00000200u;
}
void CloudPolicySettings::clear_sslerroroverrideallowed()
{
    if (sslerroroverrideallowed_ != NULL)
        sslerroroverrideallowed_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_sslerroroverrideallowed();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::sslerroroverrideallowed() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return sslerroroverrideallowed_ != NULL ? *sslerroroverrideallowed_ : *default_instance().sslerroroverrideallowed_;
#else
    return sslerroroverrideallowed_ != NULL ? *sslerroroverrideallowed_ : *default_instance_->sslerroroverrideallowed_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_sslerroroverrideallowed()
{
    set_has_sslerroroverrideallowed();
    if (sslerroroverrideallowed_ == NULL) {
        sslerroroverrideallowed_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
    return sslerroroverrideallowed_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_sslerroroverrideallowed()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
    clear_has_sslerroroverrideallowed();
    ::enterprise_management::BooleanPolicyProto* temp = sslerroroverrideallowed_;
    sslerroroverrideallowed_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_sslerroroverrideallowed(::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed)
{
    delete sslerroroverrideallowed_;
    sslerroroverrideallowed_ = sslerroroverrideallowed;
    if (sslerroroverrideallowed) {
        set_has_sslerroroverrideallowed();
    } else {
        clear_has_sslerroroverrideallowed();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
}

// optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
bool CloudPolicySettings::has_alloweddomainsforapps() const
{
    return (_has_bits_[2] & 0x00000400u) != 0;
}
void CloudPolicySettings::set_has_alloweddomainsforapps()
{
    _has_bits_[2] |= 0x00000400u;
}
void CloudPolicySettings::clear_has_alloweddomainsforapps()
{
    _has_bits_[2] &= ~0x00000400u;
}
void CloudPolicySettings::clear_alloweddomainsforapps()
{
    if (alloweddomainsforapps_ != NULL)
        alloweddomainsforapps_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_alloweddomainsforapps();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::alloweddomainsforapps() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return alloweddomainsforapps_ != NULL ? *alloweddomainsforapps_ : *default_instance().alloweddomainsforapps_;
#else
    return alloweddomainsforapps_ != NULL ? *alloweddomainsforapps_ : *default_instance_->alloweddomainsforapps_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_alloweddomainsforapps()
{
    set_has_alloweddomainsforapps();
    if (alloweddomainsforapps_ == NULL) {
        alloweddomainsforapps_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
    return alloweddomainsforapps_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_alloweddomainsforapps()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
    clear_has_alloweddomainsforapps();
    ::enterprise_management::StringPolicyProto* temp = alloweddomainsforapps_;
    alloweddomainsforapps_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_alloweddomainsforapps(::enterprise_management::StringPolicyProto* alloweddomainsforapps)
{
    delete alloweddomainsforapps_;
    alloweddomainsforapps_ = alloweddomainsforapps;
    if (alloweddomainsforapps) {
        set_has_alloweddomainsforapps();
    } else {
        clear_has_alloweddomainsforapps();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
}

// optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
bool CloudPolicySettings::has_enablemediarouter() const
{
    return (_has_bits_[2] & 0x00000800u) != 0;
}
void CloudPolicySettings::set_has_enablemediarouter()
{
    _has_bits_[2] |= 0x00000800u;
}
void CloudPolicySettings::clear_has_enablemediarouter()
{
    _has_bits_[2] &= ~0x00000800u;
}
void CloudPolicySettings::clear_enablemediarouter()
{
    if (enablemediarouter_ != NULL)
        enablemediarouter_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_enablemediarouter();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enablemediarouter() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableMediaRouter)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return enablemediarouter_ != NULL ? *enablemediarouter_ : *default_instance().enablemediarouter_;
#else
    return enablemediarouter_ != NULL ? *enablemediarouter_ : *default_instance_->enablemediarouter_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enablemediarouter()
{
    set_has_enablemediarouter();
    if (enablemediarouter_ == NULL) {
        enablemediarouter_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableMediaRouter)
    return enablemediarouter_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enablemediarouter()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableMediaRouter)
    clear_has_enablemediarouter();
    ::enterprise_management::BooleanPolicyProto* temp = enablemediarouter_;
    enablemediarouter_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_enablemediarouter(::enterprise_management::BooleanPolicyProto* enablemediarouter)
{
    delete enablemediarouter_;
    enablemediarouter_ = enablemediarouter;
    if (enablemediarouter) {
        set_has_enablemediarouter();
    } else {
        clear_has_enablemediarouter();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableMediaRouter)
}

// optional .enterprise_management.BooleanPolicyProto NTPContentSuggestionsEnabled = 340;
bool CloudPolicySettings::has_ntpcontentsuggestionsenabled() const
{
    return (_has_bits_[2] & 0x00001000u) != 0;
}
void CloudPolicySettings::set_has_ntpcontentsuggestionsenabled()
{
    _has_bits_[2] |= 0x00001000u;
}
void CloudPolicySettings::clear_has_ntpcontentsuggestionsenabled()
{
    _has_bits_[2] &= ~0x00001000u;
}
void CloudPolicySettings::clear_ntpcontentsuggestionsenabled()
{
    if (ntpcontentsuggestionsenabled_ != NULL)
        ntpcontentsuggestionsenabled_->::enterprise_management::BooleanPolicyProto::Clear();
    clear_has_ntpcontentsuggestionsenabled();
}
const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::ntpcontentsuggestionsenabled() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NTPContentSuggestionsEnabled)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return ntpcontentsuggestionsenabled_ != NULL ? *ntpcontentsuggestionsenabled_ : *default_instance().ntpcontentsuggestionsenabled_;
#else
    return ntpcontentsuggestionsenabled_ != NULL ? *ntpcontentsuggestionsenabled_ : *default_instance_->ntpcontentsuggestionsenabled_;
#endif
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_ntpcontentsuggestionsenabled()
{
    set_has_ntpcontentsuggestionsenabled();
    if (ntpcontentsuggestionsenabled_ == NULL) {
        ntpcontentsuggestionsenabled_ = new ::enterprise_management::BooleanPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NTPContentSuggestionsEnabled)
    return ntpcontentsuggestionsenabled_;
}
::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_ntpcontentsuggestionsenabled()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NTPContentSuggestionsEnabled)
    clear_has_ntpcontentsuggestionsenabled();
    ::enterprise_management::BooleanPolicyProto* temp = ntpcontentsuggestionsenabled_;
    ntpcontentsuggestionsenabled_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_ntpcontentsuggestionsenabled(::enterprise_management::BooleanPolicyProto* ntpcontentsuggestionsenabled)
{
    delete ntpcontentsuggestionsenabled_;
    ntpcontentsuggestionsenabled_ = ntpcontentsuggestionsenabled;
    if (ntpcontentsuggestionsenabled) {
        set_has_ntpcontentsuggestionsenabled();
    } else {
        clear_has_ntpcontentsuggestionsenabled();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NTPContentSuggestionsEnabled)
}

// optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
bool CloudPolicySettings::has_webrtcudpportrange() const
{
    return (_has_bits_[2] & 0x00002000u) != 0;
}
void CloudPolicySettings::set_has_webrtcudpportrange()
{
    _has_bits_[2] |= 0x00002000u;
}
void CloudPolicySettings::clear_has_webrtcudpportrange()
{
    _has_bits_[2] &= ~0x00002000u;
}
void CloudPolicySettings::clear_webrtcudpportrange()
{
    if (webrtcudpportrange_ != NULL)
        webrtcudpportrange_->::enterprise_management::StringPolicyProto::Clear();
    clear_has_webrtcudpportrange();
}
const ::enterprise_management::StringPolicyProto& CloudPolicySettings::webrtcudpportrange() const
{
    // @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return webrtcudpportrange_ != NULL ? *webrtcudpportrange_ : *default_instance().webrtcudpportrange_;
#else
    return webrtcudpportrange_ != NULL ? *webrtcudpportrange_ : *default_instance_->webrtcudpportrange_;
#endif
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_webrtcudpportrange()
{
    set_has_webrtcudpportrange();
    if (webrtcudpportrange_ == NULL) {
        webrtcudpportrange_ = new ::enterprise_management::StringPolicyProto;
    }
    // @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
    return webrtcudpportrange_;
}
::enterprise_management::StringPolicyProto* CloudPolicySettings::release_webrtcudpportrange()
{
    // @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
    clear_has_webrtcudpportrange();
    ::enterprise_management::StringPolicyProto* temp = webrtcudpportrange_;
    webrtcudpportrange_ = NULL;
    return temp;
}
void CloudPolicySettings::set_allocated_webrtcudpportrange(::enterprise_management::StringPolicyProto* webrtcudpportrange)
{
    delete webrtcudpportrange_;
    webrtcudpportrange_ = webrtcudpportrange;
    if (webrtcudpportrange) {
        set_has_webrtcudpportrange();
    } else {
        clear_has_webrtcudpportrange();
    }
    // @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace enterprise_management

// @@protoc_insertion_point(global_scope)
