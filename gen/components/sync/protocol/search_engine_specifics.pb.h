// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: search_engine_specifics.proto

#ifndef PROTOBUF_search_5fengine_5fspecifics_2eproto__INCLUDED
#define PROTOBUF_search_5fengine_5fspecifics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_search_5fengine_5fspecifics_2eproto();
void protobuf_AssignDesc_search_5fengine_5fspecifics_2eproto();
void protobuf_ShutdownFile_search_5fengine_5fspecifics_2eproto();

class SearchEngineSpecifics;

// ===================================================================

class SearchEngineSpecifics : public ::google::protobuf::MessageLite {
public:
    SearchEngineSpecifics();
    virtual ~SearchEngineSpecifics();

    SearchEngineSpecifics(const SearchEngineSpecifics& from);

    inline SearchEngineSpecifics& operator=(const SearchEngineSpecifics& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const SearchEngineSpecifics& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const SearchEngineSpecifics* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(SearchEngineSpecifics* other);

    // implements Message ----------------------------------------------

    inline SearchEngineSpecifics* New() const { return New(NULL); }

    SearchEngineSpecifics* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const SearchEngineSpecifics& from);
    void MergeFrom(const SearchEngineSpecifics& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(SearchEngineSpecifics* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional string short_name = 1;
    bool has_short_name() const;
    void clear_short_name();
    static const int kShortNameFieldNumber = 1;
    const ::std::string& short_name() const;
    void set_short_name(const ::std::string& value);
    void set_short_name(const char* value);
    void set_short_name(const char* value, size_t size);
    ::std::string* mutable_short_name();
    ::std::string* release_short_name();
    void set_allocated_short_name(::std::string* short_name);

    // optional string keyword = 2;
    bool has_keyword() const;
    void clear_keyword();
    static const int kKeywordFieldNumber = 2;
    const ::std::string& keyword() const;
    void set_keyword(const ::std::string& value);
    void set_keyword(const char* value);
    void set_keyword(const char* value, size_t size);
    ::std::string* mutable_keyword();
    ::std::string* release_keyword();
    void set_allocated_keyword(::std::string* keyword);

    // optional string favicon_url = 3;
    bool has_favicon_url() const;
    void clear_favicon_url();
    static const int kFaviconUrlFieldNumber = 3;
    const ::std::string& favicon_url() const;
    void set_favicon_url(const ::std::string& value);
    void set_favicon_url(const char* value);
    void set_favicon_url(const char* value, size_t size);
    ::std::string* mutable_favicon_url();
    ::std::string* release_favicon_url();
    void set_allocated_favicon_url(::std::string* favicon_url);

    // optional string url = 4;
    bool has_url() const;
    void clear_url();
    static const int kUrlFieldNumber = 4;
    const ::std::string& url() const;
    void set_url(const ::std::string& value);
    void set_url(const char* value);
    void set_url(const char* value, size_t size);
    ::std::string* mutable_url();
    ::std::string* release_url();
    void set_allocated_url(::std::string* url);

    // optional bool safe_for_autoreplace = 5;
    bool has_safe_for_autoreplace() const;
    void clear_safe_for_autoreplace();
    static const int kSafeForAutoreplaceFieldNumber = 5;
    bool safe_for_autoreplace() const;
    void set_safe_for_autoreplace(bool value);

    // optional string originating_url = 6;
    bool has_originating_url() const;
    void clear_originating_url();
    static const int kOriginatingUrlFieldNumber = 6;
    const ::std::string& originating_url() const;
    void set_originating_url(const ::std::string& value);
    void set_originating_url(const char* value);
    void set_originating_url(const char* value, size_t size);
    ::std::string* mutable_originating_url();
    ::std::string* release_originating_url();
    void set_allocated_originating_url(::std::string* originating_url);

    // optional int64 date_created = 7;
    bool has_date_created() const;
    void clear_date_created();
    static const int kDateCreatedFieldNumber = 7;
    ::google::protobuf::int64 date_created() const;
    void set_date_created(::google::protobuf::int64 value);

    // optional string input_encodings = 8;
    bool has_input_encodings() const;
    void clear_input_encodings();
    static const int kInputEncodingsFieldNumber = 8;
    const ::std::string& input_encodings() const;
    void set_input_encodings(const ::std::string& value);
    void set_input_encodings(const char* value);
    void set_input_encodings(const char* value, size_t size);
    ::std::string* mutable_input_encodings();
    ::std::string* release_input_encodings();
    void set_allocated_input_encodings(::std::string* input_encodings);

    // optional bool deprecated_show_in_default_list = 9 [deprecated = true];
    PROTOBUF_DEPRECATED_ATTR bool has_deprecated_show_in_default_list() const;
    PROTOBUF_DEPRECATED_ATTR void clear_deprecated_show_in_default_list();
    PROTOBUF_DEPRECATED_ATTR static const int kDeprecatedShowInDefaultListFieldNumber = 9;
    PROTOBUF_DEPRECATED_ATTR bool deprecated_show_in_default_list() const;
    PROTOBUF_DEPRECATED_ATTR void set_deprecated_show_in_default_list(bool value);

    // optional string suggestions_url = 10;
    bool has_suggestions_url() const;
    void clear_suggestions_url();
    static const int kSuggestionsUrlFieldNumber = 10;
    const ::std::string& suggestions_url() const;
    void set_suggestions_url(const ::std::string& value);
    void set_suggestions_url(const char* value);
    void set_suggestions_url(const char* value, size_t size);
    ::std::string* mutable_suggestions_url();
    ::std::string* release_suggestions_url();
    void set_allocated_suggestions_url(::std::string* suggestions_url);

    // optional int32 prepopulate_id = 11;
    bool has_prepopulate_id() const;
    void clear_prepopulate_id();
    static const int kPrepopulateIdFieldNumber = 11;
    ::google::protobuf::int32 prepopulate_id() const;
    void set_prepopulate_id(::google::protobuf::int32 value);

    // optional bool autogenerate_keyword = 12;
    bool has_autogenerate_keyword() const;
    void clear_autogenerate_keyword();
    static const int kAutogenerateKeywordFieldNumber = 12;
    bool autogenerate_keyword() const;
    void set_autogenerate_keyword(bool value);

    // optional string instant_url = 15;
    bool has_instant_url() const;
    void clear_instant_url();
    static const int kInstantUrlFieldNumber = 15;
    const ::std::string& instant_url() const;
    void set_instant_url(const ::std::string& value);
    void set_instant_url(const char* value);
    void set_instant_url(const char* value, size_t size);
    ::std::string* mutable_instant_url();
    ::std::string* release_instant_url();
    void set_allocated_instant_url(::std::string* instant_url);

    // optional int64 last_modified = 17;
    bool has_last_modified() const;
    void clear_last_modified();
    static const int kLastModifiedFieldNumber = 17;
    ::google::protobuf::int64 last_modified() const;
    void set_last_modified(::google::protobuf::int64 value);

    // optional string sync_guid = 18;
    bool has_sync_guid() const;
    void clear_sync_guid();
    static const int kSyncGuidFieldNumber = 18;
    const ::std::string& sync_guid() const;
    void set_sync_guid(const ::std::string& value);
    void set_sync_guid(const char* value);
    void set_sync_guid(const char* value, size_t size);
    ::std::string* mutable_sync_guid();
    ::std::string* release_sync_guid();
    void set_allocated_sync_guid(::std::string* sync_guid);

    // repeated string alternate_urls = 19;
    int alternate_urls_size() const;
    void clear_alternate_urls();
    static const int kAlternateUrlsFieldNumber = 19;
    const ::std::string& alternate_urls(int index) const;
    ::std::string* mutable_alternate_urls(int index);
    void set_alternate_urls(int index, const ::std::string& value);
    void set_alternate_urls(int index, const char* value);
    void set_alternate_urls(int index, const char* value, size_t size);
    ::std::string* add_alternate_urls();
    void add_alternate_urls(const ::std::string& value);
    void add_alternate_urls(const char* value);
    void add_alternate_urls(const char* value, size_t size);
    const ::google::protobuf::RepeatedPtrField<::std::string>& alternate_urls() const;
    ::google::protobuf::RepeatedPtrField<::std::string>* mutable_alternate_urls();

    // optional string search_terms_replacement_key = 20;
    bool has_search_terms_replacement_key() const;
    void clear_search_terms_replacement_key();
    static const int kSearchTermsReplacementKeyFieldNumber = 20;
    const ::std::string& search_terms_replacement_key() const;
    void set_search_terms_replacement_key(const ::std::string& value);
    void set_search_terms_replacement_key(const char* value);
    void set_search_terms_replacement_key(const char* value, size_t size);
    ::std::string* mutable_search_terms_replacement_key();
    ::std::string* release_search_terms_replacement_key();
    void set_allocated_search_terms_replacement_key(::std::string* search_terms_replacement_key);

    // optional string image_url = 21;
    bool has_image_url() const;
    void clear_image_url();
    static const int kImageUrlFieldNumber = 21;
    const ::std::string& image_url() const;
    void set_image_url(const ::std::string& value);
    void set_image_url(const char* value);
    void set_image_url(const char* value, size_t size);
    ::std::string* mutable_image_url();
    ::std::string* release_image_url();
    void set_allocated_image_url(::std::string* image_url);

    // optional string search_url_post_params = 22;
    bool has_search_url_post_params() const;
    void clear_search_url_post_params();
    static const int kSearchUrlPostParamsFieldNumber = 22;
    const ::std::string& search_url_post_params() const;
    void set_search_url_post_params(const ::std::string& value);
    void set_search_url_post_params(const char* value);
    void set_search_url_post_params(const char* value, size_t size);
    ::std::string* mutable_search_url_post_params();
    ::std::string* release_search_url_post_params();
    void set_allocated_search_url_post_params(::std::string* search_url_post_params);

    // optional string suggestions_url_post_params = 23;
    bool has_suggestions_url_post_params() const;
    void clear_suggestions_url_post_params();
    static const int kSuggestionsUrlPostParamsFieldNumber = 23;
    const ::std::string& suggestions_url_post_params() const;
    void set_suggestions_url_post_params(const ::std::string& value);
    void set_suggestions_url_post_params(const char* value);
    void set_suggestions_url_post_params(const char* value, size_t size);
    ::std::string* mutable_suggestions_url_post_params();
    ::std::string* release_suggestions_url_post_params();
    void set_allocated_suggestions_url_post_params(::std::string* suggestions_url_post_params);

    // optional string instant_url_post_params = 24;
    bool has_instant_url_post_params() const;
    void clear_instant_url_post_params();
    static const int kInstantUrlPostParamsFieldNumber = 24;
    const ::std::string& instant_url_post_params() const;
    void set_instant_url_post_params(const ::std::string& value);
    void set_instant_url_post_params(const char* value);
    void set_instant_url_post_params(const char* value, size_t size);
    ::std::string* mutable_instant_url_post_params();
    ::std::string* release_instant_url_post_params();
    void set_allocated_instant_url_post_params(::std::string* instant_url_post_params);

    // optional string image_url_post_params = 25;
    bool has_image_url_post_params() const;
    void clear_image_url_post_params();
    static const int kImageUrlPostParamsFieldNumber = 25;
    const ::std::string& image_url_post_params() const;
    void set_image_url_post_params(const ::std::string& value);
    void set_image_url_post_params(const char* value);
    void set_image_url_post_params(const char* value, size_t size);
    ::std::string* mutable_image_url_post_params();
    ::std::string* release_image_url_post_params();
    void set_allocated_image_url_post_params(::std::string* image_url_post_params);

    // optional string new_tab_url = 26;
    bool has_new_tab_url() const;
    void clear_new_tab_url();
    static const int kNewTabUrlFieldNumber = 26;
    const ::std::string& new_tab_url() const;
    void set_new_tab_url(const ::std::string& value);
    void set_new_tab_url(const char* value);
    void set_new_tab_url(const char* value, size_t size);
    ::std::string* mutable_new_tab_url();
    ::std::string* release_new_tab_url();
    void set_allocated_new_tab_url(::std::string* new_tab_url);

    // @@protoc_insertion_point(class_scope:sync_pb.SearchEngineSpecifics)
private:
    inline void set_has_short_name();
    inline void clear_has_short_name();
    inline void set_has_keyword();
    inline void clear_has_keyword();
    inline void set_has_favicon_url();
    inline void clear_has_favicon_url();
    inline void set_has_url();
    inline void clear_has_url();
    inline void set_has_safe_for_autoreplace();
    inline void clear_has_safe_for_autoreplace();
    inline void set_has_originating_url();
    inline void clear_has_originating_url();
    inline void set_has_date_created();
    inline void clear_has_date_created();
    inline void set_has_input_encodings();
    inline void clear_has_input_encodings();
    inline void set_has_deprecated_show_in_default_list();
    inline void clear_has_deprecated_show_in_default_list();
    inline void set_has_suggestions_url();
    inline void clear_has_suggestions_url();
    inline void set_has_prepopulate_id();
    inline void clear_has_prepopulate_id();
    inline void set_has_autogenerate_keyword();
    inline void clear_has_autogenerate_keyword();
    inline void set_has_instant_url();
    inline void clear_has_instant_url();
    inline void set_has_last_modified();
    inline void clear_has_last_modified();
    inline void set_has_sync_guid();
    inline void clear_has_sync_guid();
    inline void set_has_search_terms_replacement_key();
    inline void clear_has_search_terms_replacement_key();
    inline void set_has_image_url();
    inline void clear_has_image_url();
    inline void set_has_search_url_post_params();
    inline void clear_has_search_url_post_params();
    inline void set_has_suggestions_url_post_params();
    inline void clear_has_suggestions_url_post_params();
    inline void set_has_instant_url_post_params();
    inline void clear_has_instant_url_post_params();
    inline void set_has_image_url_post_params();
    inline void clear_has_image_url_post_params();
    inline void set_has_new_tab_url();
    inline void clear_has_new_tab_url();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr short_name_;
    ::google::protobuf::internal::ArenaStringPtr keyword_;
    ::google::protobuf::internal::ArenaStringPtr favicon_url_;
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::google::protobuf::internal::ArenaStringPtr originating_url_;
    ::google::protobuf::int64 date_created_;
    ::google::protobuf::internal::ArenaStringPtr input_encodings_;
    bool safe_for_autoreplace_;
    bool deprecated_show_in_default_list_;
    bool autogenerate_keyword_;
    ::google::protobuf::int32 prepopulate_id_;
    ::google::protobuf::internal::ArenaStringPtr suggestions_url_;
    ::google::protobuf::internal::ArenaStringPtr instant_url_;
    ::google::protobuf::int64 last_modified_;
    ::google::protobuf::internal::ArenaStringPtr sync_guid_;
    ::google::protobuf::RepeatedPtrField<::std::string> alternate_urls_;
    ::google::protobuf::internal::ArenaStringPtr search_terms_replacement_key_;
    ::google::protobuf::internal::ArenaStringPtr image_url_;
    ::google::protobuf::internal::ArenaStringPtr search_url_post_params_;
    ::google::protobuf::internal::ArenaStringPtr suggestions_url_post_params_;
    ::google::protobuf::internal::ArenaStringPtr instant_url_post_params_;
    ::google::protobuf::internal::ArenaStringPtr image_url_post_params_;
    ::google::protobuf::internal::ArenaStringPtr new_tab_url_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_search_5fengine_5fspecifics_2eproto_impl();
#else
    friend void protobuf_AddDesc_search_5fengine_5fspecifics_2eproto();
#endif
    friend void protobuf_AssignDesc_search_5fengine_5fspecifics_2eproto();
    friend void protobuf_ShutdownFile_search_5fengine_5fspecifics_2eproto();

    void InitAsDefaultInstance();
    static SearchEngineSpecifics* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchEngineSpecifics

// optional string short_name = 1;
inline bool SearchEngineSpecifics::has_short_name() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchEngineSpecifics::set_has_short_name()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void SearchEngineSpecifics::clear_has_short_name()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void SearchEngineSpecifics::clear_short_name()
{
    short_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_short_name();
}
inline const ::std::string& SearchEngineSpecifics::short_name() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.short_name)
    return short_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_short_name(const ::std::string& value)
{
    set_has_short_name();
    short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.short_name)
}
inline void SearchEngineSpecifics::set_short_name(const char* value)
{
    set_has_short_name();
    short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.short_name)
}
inline void SearchEngineSpecifics::set_short_name(const char* value, size_t size)
{
    set_has_short_name();
    short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.short_name)
}
inline ::std::string* SearchEngineSpecifics::mutable_short_name()
{
    set_has_short_name();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.short_name)
    return short_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_short_name()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.short_name)
    clear_has_short_name();
    return short_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_short_name(::std::string* short_name)
{
    if (short_name != NULL) {
        set_has_short_name();
    } else {
        clear_has_short_name();
    }
    short_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), short_name);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.short_name)
}

// optional string keyword = 2;
inline bool SearchEngineSpecifics::has_keyword() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SearchEngineSpecifics::set_has_keyword()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void SearchEngineSpecifics::clear_has_keyword()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void SearchEngineSpecifics::clear_keyword()
{
    keyword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_keyword();
}
inline const ::std::string& SearchEngineSpecifics::keyword() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.keyword)
    return keyword_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_keyword(const ::std::string& value)
{
    set_has_keyword();
    keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.keyword)
}
inline void SearchEngineSpecifics::set_keyword(const char* value)
{
    set_has_keyword();
    keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.keyword)
}
inline void SearchEngineSpecifics::set_keyword(const char* value, size_t size)
{
    set_has_keyword();
    keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.keyword)
}
inline ::std::string* SearchEngineSpecifics::mutable_keyword()
{
    set_has_keyword();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.keyword)
    return keyword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_keyword()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.keyword)
    clear_has_keyword();
    return keyword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_keyword(::std::string* keyword)
{
    if (keyword != NULL) {
        set_has_keyword();
    } else {
        clear_has_keyword();
    }
    keyword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyword);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.keyword)
}

// optional string favicon_url = 3;
inline bool SearchEngineSpecifics::has_favicon_url() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SearchEngineSpecifics::set_has_favicon_url()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void SearchEngineSpecifics::clear_has_favicon_url()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void SearchEngineSpecifics::clear_favicon_url()
{
    favicon_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_favicon_url();
}
inline const ::std::string& SearchEngineSpecifics::favicon_url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.favicon_url)
    return favicon_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_favicon_url(const ::std::string& value)
{
    set_has_favicon_url();
    favicon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.favicon_url)
}
inline void SearchEngineSpecifics::set_favicon_url(const char* value)
{
    set_has_favicon_url();
    favicon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.favicon_url)
}
inline void SearchEngineSpecifics::set_favicon_url(const char* value, size_t size)
{
    set_has_favicon_url();
    favicon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.favicon_url)
}
inline ::std::string* SearchEngineSpecifics::mutable_favicon_url()
{
    set_has_favicon_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.favicon_url)
    return favicon_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_favicon_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.favicon_url)
    clear_has_favicon_url();
    return favicon_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_favicon_url(::std::string* favicon_url)
{
    if (favicon_url != NULL) {
        set_has_favicon_url();
    } else {
        clear_has_favicon_url();
    }
    favicon_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), favicon_url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.favicon_url)
}

// optional string url = 4;
inline bool SearchEngineSpecifics::has_url() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SearchEngineSpecifics::set_has_url()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void SearchEngineSpecifics::clear_has_url()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void SearchEngineSpecifics::clear_url()
{
    url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_url();
}
inline const ::std::string& SearchEngineSpecifics::url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.url)
    return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_url(const ::std::string& value)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.url)
}
inline void SearchEngineSpecifics::set_url(const char* value)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.url)
}
inline void SearchEngineSpecifics::set_url(const char* value, size_t size)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.url)
}
inline ::std::string* SearchEngineSpecifics::mutable_url()
{
    set_has_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.url)
    return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.url)
    clear_has_url();
    return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_url(::std::string* url)
{
    if (url != NULL) {
        set_has_url();
    } else {
        clear_has_url();
    }
    url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.url)
}

// optional bool safe_for_autoreplace = 5;
inline bool SearchEngineSpecifics::has_safe_for_autoreplace() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SearchEngineSpecifics::set_has_safe_for_autoreplace()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void SearchEngineSpecifics::clear_has_safe_for_autoreplace()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void SearchEngineSpecifics::clear_safe_for_autoreplace()
{
    safe_for_autoreplace_ = false;
    clear_has_safe_for_autoreplace();
}
inline bool SearchEngineSpecifics::safe_for_autoreplace() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.safe_for_autoreplace)
    return safe_for_autoreplace_;
}
inline void SearchEngineSpecifics::set_safe_for_autoreplace(bool value)
{
    set_has_safe_for_autoreplace();
    safe_for_autoreplace_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.safe_for_autoreplace)
}

// optional string originating_url = 6;
inline bool SearchEngineSpecifics::has_originating_url() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SearchEngineSpecifics::set_has_originating_url()
{
    _has_bits_[0] |= 0x00000020u;
}
inline void SearchEngineSpecifics::clear_has_originating_url()
{
    _has_bits_[0] &= ~0x00000020u;
}
inline void SearchEngineSpecifics::clear_originating_url()
{
    originating_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_originating_url();
}
inline const ::std::string& SearchEngineSpecifics::originating_url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.originating_url)
    return originating_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_originating_url(const ::std::string& value)
{
    set_has_originating_url();
    originating_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.originating_url)
}
inline void SearchEngineSpecifics::set_originating_url(const char* value)
{
    set_has_originating_url();
    originating_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.originating_url)
}
inline void SearchEngineSpecifics::set_originating_url(const char* value, size_t size)
{
    set_has_originating_url();
    originating_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.originating_url)
}
inline ::std::string* SearchEngineSpecifics::mutable_originating_url()
{
    set_has_originating_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.originating_url)
    return originating_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_originating_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.originating_url)
    clear_has_originating_url();
    return originating_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_originating_url(::std::string* originating_url)
{
    if (originating_url != NULL) {
        set_has_originating_url();
    } else {
        clear_has_originating_url();
    }
    originating_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), originating_url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.originating_url)
}

// optional int64 date_created = 7;
inline bool SearchEngineSpecifics::has_date_created() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SearchEngineSpecifics::set_has_date_created()
{
    _has_bits_[0] |= 0x00000040u;
}
inline void SearchEngineSpecifics::clear_has_date_created()
{
    _has_bits_[0] &= ~0x00000040u;
}
inline void SearchEngineSpecifics::clear_date_created()
{
    date_created_ = GOOGLE_LONGLONG(0);
    clear_has_date_created();
}
inline ::google::protobuf::int64 SearchEngineSpecifics::date_created() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.date_created)
    return date_created_;
}
inline void SearchEngineSpecifics::set_date_created(::google::protobuf::int64 value)
{
    set_has_date_created();
    date_created_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.date_created)
}

// optional string input_encodings = 8;
inline bool SearchEngineSpecifics::has_input_encodings() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SearchEngineSpecifics::set_has_input_encodings()
{
    _has_bits_[0] |= 0x00000080u;
}
inline void SearchEngineSpecifics::clear_has_input_encodings()
{
    _has_bits_[0] &= ~0x00000080u;
}
inline void SearchEngineSpecifics::clear_input_encodings()
{
    input_encodings_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_input_encodings();
}
inline const ::std::string& SearchEngineSpecifics::input_encodings() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.input_encodings)
    return input_encodings_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_input_encodings(const ::std::string& value)
{
    set_has_input_encodings();
    input_encodings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.input_encodings)
}
inline void SearchEngineSpecifics::set_input_encodings(const char* value)
{
    set_has_input_encodings();
    input_encodings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.input_encodings)
}
inline void SearchEngineSpecifics::set_input_encodings(const char* value, size_t size)
{
    set_has_input_encodings();
    input_encodings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.input_encodings)
}
inline ::std::string* SearchEngineSpecifics::mutable_input_encodings()
{
    set_has_input_encodings();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.input_encodings)
    return input_encodings_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_input_encodings()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.input_encodings)
    clear_has_input_encodings();
    return input_encodings_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_input_encodings(::std::string* input_encodings)
{
    if (input_encodings != NULL) {
        set_has_input_encodings();
    } else {
        clear_has_input_encodings();
    }
    input_encodings_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_encodings);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.input_encodings)
}

// optional bool deprecated_show_in_default_list = 9 [deprecated = true];
inline bool SearchEngineSpecifics::has_deprecated_show_in_default_list() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SearchEngineSpecifics::set_has_deprecated_show_in_default_list()
{
    _has_bits_[0] |= 0x00000100u;
}
inline void SearchEngineSpecifics::clear_has_deprecated_show_in_default_list()
{
    _has_bits_[0] &= ~0x00000100u;
}
inline void SearchEngineSpecifics::clear_deprecated_show_in_default_list()
{
    deprecated_show_in_default_list_ = false;
    clear_has_deprecated_show_in_default_list();
}
inline bool SearchEngineSpecifics::deprecated_show_in_default_list() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.deprecated_show_in_default_list)
    return deprecated_show_in_default_list_;
}
inline void SearchEngineSpecifics::set_deprecated_show_in_default_list(bool value)
{
    set_has_deprecated_show_in_default_list();
    deprecated_show_in_default_list_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.deprecated_show_in_default_list)
}

// optional string suggestions_url = 10;
inline bool SearchEngineSpecifics::has_suggestions_url() const
{
    return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SearchEngineSpecifics::set_has_suggestions_url()
{
    _has_bits_[0] |= 0x00000200u;
}
inline void SearchEngineSpecifics::clear_has_suggestions_url()
{
    _has_bits_[0] &= ~0x00000200u;
}
inline void SearchEngineSpecifics::clear_suggestions_url()
{
    suggestions_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_suggestions_url();
}
inline const ::std::string& SearchEngineSpecifics::suggestions_url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.suggestions_url)
    return suggestions_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_suggestions_url(const ::std::string& value)
{
    set_has_suggestions_url();
    suggestions_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.suggestions_url)
}
inline void SearchEngineSpecifics::set_suggestions_url(const char* value)
{
    set_has_suggestions_url();
    suggestions_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.suggestions_url)
}
inline void SearchEngineSpecifics::set_suggestions_url(const char* value, size_t size)
{
    set_has_suggestions_url();
    suggestions_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.suggestions_url)
}
inline ::std::string* SearchEngineSpecifics::mutable_suggestions_url()
{
    set_has_suggestions_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.suggestions_url)
    return suggestions_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_suggestions_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.suggestions_url)
    clear_has_suggestions_url();
    return suggestions_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_suggestions_url(::std::string* suggestions_url)
{
    if (suggestions_url != NULL) {
        set_has_suggestions_url();
    } else {
        clear_has_suggestions_url();
    }
    suggestions_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suggestions_url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.suggestions_url)
}

// optional int32 prepopulate_id = 11;
inline bool SearchEngineSpecifics::has_prepopulate_id() const
{
    return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SearchEngineSpecifics::set_has_prepopulate_id()
{
    _has_bits_[0] |= 0x00000400u;
}
inline void SearchEngineSpecifics::clear_has_prepopulate_id()
{
    _has_bits_[0] &= ~0x00000400u;
}
inline void SearchEngineSpecifics::clear_prepopulate_id()
{
    prepopulate_id_ = 0;
    clear_has_prepopulate_id();
}
inline ::google::protobuf::int32 SearchEngineSpecifics::prepopulate_id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.prepopulate_id)
    return prepopulate_id_;
}
inline void SearchEngineSpecifics::set_prepopulate_id(::google::protobuf::int32 value)
{
    set_has_prepopulate_id();
    prepopulate_id_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.prepopulate_id)
}

// optional bool autogenerate_keyword = 12;
inline bool SearchEngineSpecifics::has_autogenerate_keyword() const
{
    return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SearchEngineSpecifics::set_has_autogenerate_keyword()
{
    _has_bits_[0] |= 0x00000800u;
}
inline void SearchEngineSpecifics::clear_has_autogenerate_keyword()
{
    _has_bits_[0] &= ~0x00000800u;
}
inline void SearchEngineSpecifics::clear_autogenerate_keyword()
{
    autogenerate_keyword_ = false;
    clear_has_autogenerate_keyword();
}
inline bool SearchEngineSpecifics::autogenerate_keyword() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.autogenerate_keyword)
    return autogenerate_keyword_;
}
inline void SearchEngineSpecifics::set_autogenerate_keyword(bool value)
{
    set_has_autogenerate_keyword();
    autogenerate_keyword_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.autogenerate_keyword)
}

// optional string instant_url = 15;
inline bool SearchEngineSpecifics::has_instant_url() const
{
    return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SearchEngineSpecifics::set_has_instant_url()
{
    _has_bits_[0] |= 0x00001000u;
}
inline void SearchEngineSpecifics::clear_has_instant_url()
{
    _has_bits_[0] &= ~0x00001000u;
}
inline void SearchEngineSpecifics::clear_instant_url()
{
    instant_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_instant_url();
}
inline const ::std::string& SearchEngineSpecifics::instant_url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.instant_url)
    return instant_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_instant_url(const ::std::string& value)
{
    set_has_instant_url();
    instant_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.instant_url)
}
inline void SearchEngineSpecifics::set_instant_url(const char* value)
{
    set_has_instant_url();
    instant_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.instant_url)
}
inline void SearchEngineSpecifics::set_instant_url(const char* value, size_t size)
{
    set_has_instant_url();
    instant_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.instant_url)
}
inline ::std::string* SearchEngineSpecifics::mutable_instant_url()
{
    set_has_instant_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.instant_url)
    return instant_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_instant_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.instant_url)
    clear_has_instant_url();
    return instant_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_instant_url(::std::string* instant_url)
{
    if (instant_url != NULL) {
        set_has_instant_url();
    } else {
        clear_has_instant_url();
    }
    instant_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instant_url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.instant_url)
}

// optional int64 last_modified = 17;
inline bool SearchEngineSpecifics::has_last_modified() const
{
    return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SearchEngineSpecifics::set_has_last_modified()
{
    _has_bits_[0] |= 0x00002000u;
}
inline void SearchEngineSpecifics::clear_has_last_modified()
{
    _has_bits_[0] &= ~0x00002000u;
}
inline void SearchEngineSpecifics::clear_last_modified()
{
    last_modified_ = GOOGLE_LONGLONG(0);
    clear_has_last_modified();
}
inline ::google::protobuf::int64 SearchEngineSpecifics::last_modified() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.last_modified)
    return last_modified_;
}
inline void SearchEngineSpecifics::set_last_modified(::google::protobuf::int64 value)
{
    set_has_last_modified();
    last_modified_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.last_modified)
}

// optional string sync_guid = 18;
inline bool SearchEngineSpecifics::has_sync_guid() const
{
    return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SearchEngineSpecifics::set_has_sync_guid()
{
    _has_bits_[0] |= 0x00004000u;
}
inline void SearchEngineSpecifics::clear_has_sync_guid()
{
    _has_bits_[0] &= ~0x00004000u;
}
inline void SearchEngineSpecifics::clear_sync_guid()
{
    sync_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_sync_guid();
}
inline const ::std::string& SearchEngineSpecifics::sync_guid() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.sync_guid)
    return sync_guid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_sync_guid(const ::std::string& value)
{
    set_has_sync_guid();
    sync_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.sync_guid)
}
inline void SearchEngineSpecifics::set_sync_guid(const char* value)
{
    set_has_sync_guid();
    sync_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.sync_guid)
}
inline void SearchEngineSpecifics::set_sync_guid(const char* value, size_t size)
{
    set_has_sync_guid();
    sync_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.sync_guid)
}
inline ::std::string* SearchEngineSpecifics::mutable_sync_guid()
{
    set_has_sync_guid();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.sync_guid)
    return sync_guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_sync_guid()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.sync_guid)
    clear_has_sync_guid();
    return sync_guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_sync_guid(::std::string* sync_guid)
{
    if (sync_guid != NULL) {
        set_has_sync_guid();
    } else {
        clear_has_sync_guid();
    }
    sync_guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sync_guid);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.sync_guid)
}

// repeated string alternate_urls = 19;
inline int SearchEngineSpecifics::alternate_urls_size() const
{
    return alternate_urls_.size();
}
inline void SearchEngineSpecifics::clear_alternate_urls()
{
    alternate_urls_.Clear();
}
inline const ::std::string& SearchEngineSpecifics::alternate_urls(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.alternate_urls)
    return alternate_urls_.Get(index);
}
inline ::std::string* SearchEngineSpecifics::mutable_alternate_urls(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.alternate_urls)
    return alternate_urls_.Mutable(index);
}
inline void SearchEngineSpecifics::set_alternate_urls(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.alternate_urls)
    alternate_urls_.Mutable(index)->assign(value);
}
inline void SearchEngineSpecifics::set_alternate_urls(int index, const char* value)
{
    alternate_urls_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.alternate_urls)
}
inline void SearchEngineSpecifics::set_alternate_urls(int index, const char* value, size_t size)
{
    alternate_urls_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.alternate_urls)
}
inline ::std::string* SearchEngineSpecifics::add_alternate_urls()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.SearchEngineSpecifics.alternate_urls)
    return alternate_urls_.Add();
}
inline void SearchEngineSpecifics::add_alternate_urls(const ::std::string& value)
{
    alternate_urls_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.SearchEngineSpecifics.alternate_urls)
}
inline void SearchEngineSpecifics::add_alternate_urls(const char* value)
{
    alternate_urls_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.SearchEngineSpecifics.alternate_urls)
}
inline void SearchEngineSpecifics::add_alternate_urls(const char* value, size_t size)
{
    alternate_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.SearchEngineSpecifics.alternate_urls)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
SearchEngineSpecifics::alternate_urls() const
{
    // @@protoc_insertion_point(field_list:sync_pb.SearchEngineSpecifics.alternate_urls)
    return alternate_urls_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
SearchEngineSpecifics::mutable_alternate_urls()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.SearchEngineSpecifics.alternate_urls)
    return &alternate_urls_;
}

// optional string search_terms_replacement_key = 20;
inline bool SearchEngineSpecifics::has_search_terms_replacement_key() const
{
    return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SearchEngineSpecifics::set_has_search_terms_replacement_key()
{
    _has_bits_[0] |= 0x00010000u;
}
inline void SearchEngineSpecifics::clear_has_search_terms_replacement_key()
{
    _has_bits_[0] &= ~0x00010000u;
}
inline void SearchEngineSpecifics::clear_search_terms_replacement_key()
{
    search_terms_replacement_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_search_terms_replacement_key();
}
inline const ::std::string& SearchEngineSpecifics::search_terms_replacement_key() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
    return search_terms_replacement_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_search_terms_replacement_key(const ::std::string& value)
{
    set_has_search_terms_replacement_key();
    search_terms_replacement_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
}
inline void SearchEngineSpecifics::set_search_terms_replacement_key(const char* value)
{
    set_has_search_terms_replacement_key();
    search_terms_replacement_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
}
inline void SearchEngineSpecifics::set_search_terms_replacement_key(const char* value, size_t size)
{
    set_has_search_terms_replacement_key();
    search_terms_replacement_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
}
inline ::std::string* SearchEngineSpecifics::mutable_search_terms_replacement_key()
{
    set_has_search_terms_replacement_key();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
    return search_terms_replacement_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_search_terms_replacement_key()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
    clear_has_search_terms_replacement_key();
    return search_terms_replacement_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_search_terms_replacement_key(::std::string* search_terms_replacement_key)
{
    if (search_terms_replacement_key != NULL) {
        set_has_search_terms_replacement_key();
    } else {
        clear_has_search_terms_replacement_key();
    }
    search_terms_replacement_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_terms_replacement_key);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.search_terms_replacement_key)
}

// optional string image_url = 21;
inline bool SearchEngineSpecifics::has_image_url() const
{
    return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SearchEngineSpecifics::set_has_image_url()
{
    _has_bits_[0] |= 0x00020000u;
}
inline void SearchEngineSpecifics::clear_has_image_url()
{
    _has_bits_[0] &= ~0x00020000u;
}
inline void SearchEngineSpecifics::clear_image_url()
{
    image_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_image_url();
}
inline const ::std::string& SearchEngineSpecifics::image_url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.image_url)
    return image_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_image_url(const ::std::string& value)
{
    set_has_image_url();
    image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.image_url)
}
inline void SearchEngineSpecifics::set_image_url(const char* value)
{
    set_has_image_url();
    image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.image_url)
}
inline void SearchEngineSpecifics::set_image_url(const char* value, size_t size)
{
    set_has_image_url();
    image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.image_url)
}
inline ::std::string* SearchEngineSpecifics::mutable_image_url()
{
    set_has_image_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.image_url)
    return image_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_image_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.image_url)
    clear_has_image_url();
    return image_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_image_url(::std::string* image_url)
{
    if (image_url != NULL) {
        set_has_image_url();
    } else {
        clear_has_image_url();
    }
    image_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.image_url)
}

// optional string search_url_post_params = 22;
inline bool SearchEngineSpecifics::has_search_url_post_params() const
{
    return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SearchEngineSpecifics::set_has_search_url_post_params()
{
    _has_bits_[0] |= 0x00040000u;
}
inline void SearchEngineSpecifics::clear_has_search_url_post_params()
{
    _has_bits_[0] &= ~0x00040000u;
}
inline void SearchEngineSpecifics::clear_search_url_post_params()
{
    search_url_post_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_search_url_post_params();
}
inline const ::std::string& SearchEngineSpecifics::search_url_post_params() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.search_url_post_params)
    return search_url_post_params_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_search_url_post_params(const ::std::string& value)
{
    set_has_search_url_post_params();
    search_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.search_url_post_params)
}
inline void SearchEngineSpecifics::set_search_url_post_params(const char* value)
{
    set_has_search_url_post_params();
    search_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.search_url_post_params)
}
inline void SearchEngineSpecifics::set_search_url_post_params(const char* value, size_t size)
{
    set_has_search_url_post_params();
    search_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.search_url_post_params)
}
inline ::std::string* SearchEngineSpecifics::mutable_search_url_post_params()
{
    set_has_search_url_post_params();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.search_url_post_params)
    return search_url_post_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_search_url_post_params()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.search_url_post_params)
    clear_has_search_url_post_params();
    return search_url_post_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_search_url_post_params(::std::string* search_url_post_params)
{
    if (search_url_post_params != NULL) {
        set_has_search_url_post_params();
    } else {
        clear_has_search_url_post_params();
    }
    search_url_post_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_url_post_params);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.search_url_post_params)
}

// optional string suggestions_url_post_params = 23;
inline bool SearchEngineSpecifics::has_suggestions_url_post_params() const
{
    return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SearchEngineSpecifics::set_has_suggestions_url_post_params()
{
    _has_bits_[0] |= 0x00080000u;
}
inline void SearchEngineSpecifics::clear_has_suggestions_url_post_params()
{
    _has_bits_[0] &= ~0x00080000u;
}
inline void SearchEngineSpecifics::clear_suggestions_url_post_params()
{
    suggestions_url_post_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_suggestions_url_post_params();
}
inline const ::std::string& SearchEngineSpecifics::suggestions_url_post_params() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
    return suggestions_url_post_params_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_suggestions_url_post_params(const ::std::string& value)
{
    set_has_suggestions_url_post_params();
    suggestions_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
}
inline void SearchEngineSpecifics::set_suggestions_url_post_params(const char* value)
{
    set_has_suggestions_url_post_params();
    suggestions_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
}
inline void SearchEngineSpecifics::set_suggestions_url_post_params(const char* value, size_t size)
{
    set_has_suggestions_url_post_params();
    suggestions_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
}
inline ::std::string* SearchEngineSpecifics::mutable_suggestions_url_post_params()
{
    set_has_suggestions_url_post_params();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
    return suggestions_url_post_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_suggestions_url_post_params()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
    clear_has_suggestions_url_post_params();
    return suggestions_url_post_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_suggestions_url_post_params(::std::string* suggestions_url_post_params)
{
    if (suggestions_url_post_params != NULL) {
        set_has_suggestions_url_post_params();
    } else {
        clear_has_suggestions_url_post_params();
    }
    suggestions_url_post_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suggestions_url_post_params);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.suggestions_url_post_params)
}

// optional string instant_url_post_params = 24;
inline bool SearchEngineSpecifics::has_instant_url_post_params() const
{
    return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SearchEngineSpecifics::set_has_instant_url_post_params()
{
    _has_bits_[0] |= 0x00100000u;
}
inline void SearchEngineSpecifics::clear_has_instant_url_post_params()
{
    _has_bits_[0] &= ~0x00100000u;
}
inline void SearchEngineSpecifics::clear_instant_url_post_params()
{
    instant_url_post_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_instant_url_post_params();
}
inline const ::std::string& SearchEngineSpecifics::instant_url_post_params() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.instant_url_post_params)
    return instant_url_post_params_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_instant_url_post_params(const ::std::string& value)
{
    set_has_instant_url_post_params();
    instant_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.instant_url_post_params)
}
inline void SearchEngineSpecifics::set_instant_url_post_params(const char* value)
{
    set_has_instant_url_post_params();
    instant_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.instant_url_post_params)
}
inline void SearchEngineSpecifics::set_instant_url_post_params(const char* value, size_t size)
{
    set_has_instant_url_post_params();
    instant_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.instant_url_post_params)
}
inline ::std::string* SearchEngineSpecifics::mutable_instant_url_post_params()
{
    set_has_instant_url_post_params();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.instant_url_post_params)
    return instant_url_post_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_instant_url_post_params()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.instant_url_post_params)
    clear_has_instant_url_post_params();
    return instant_url_post_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_instant_url_post_params(::std::string* instant_url_post_params)
{
    if (instant_url_post_params != NULL) {
        set_has_instant_url_post_params();
    } else {
        clear_has_instant_url_post_params();
    }
    instant_url_post_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instant_url_post_params);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.instant_url_post_params)
}

// optional string image_url_post_params = 25;
inline bool SearchEngineSpecifics::has_image_url_post_params() const
{
    return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SearchEngineSpecifics::set_has_image_url_post_params()
{
    _has_bits_[0] |= 0x00200000u;
}
inline void SearchEngineSpecifics::clear_has_image_url_post_params()
{
    _has_bits_[0] &= ~0x00200000u;
}
inline void SearchEngineSpecifics::clear_image_url_post_params()
{
    image_url_post_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_image_url_post_params();
}
inline const ::std::string& SearchEngineSpecifics::image_url_post_params() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.image_url_post_params)
    return image_url_post_params_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_image_url_post_params(const ::std::string& value)
{
    set_has_image_url_post_params();
    image_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.image_url_post_params)
}
inline void SearchEngineSpecifics::set_image_url_post_params(const char* value)
{
    set_has_image_url_post_params();
    image_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.image_url_post_params)
}
inline void SearchEngineSpecifics::set_image_url_post_params(const char* value, size_t size)
{
    set_has_image_url_post_params();
    image_url_post_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.image_url_post_params)
}
inline ::std::string* SearchEngineSpecifics::mutable_image_url_post_params()
{
    set_has_image_url_post_params();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.image_url_post_params)
    return image_url_post_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_image_url_post_params()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.image_url_post_params)
    clear_has_image_url_post_params();
    return image_url_post_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_image_url_post_params(::std::string* image_url_post_params)
{
    if (image_url_post_params != NULL) {
        set_has_image_url_post_params();
    } else {
        clear_has_image_url_post_params();
    }
    image_url_post_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_url_post_params);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.image_url_post_params)
}

// optional string new_tab_url = 26;
inline bool SearchEngineSpecifics::has_new_tab_url() const
{
    return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void SearchEngineSpecifics::set_has_new_tab_url()
{
    _has_bits_[0] |= 0x00400000u;
}
inline void SearchEngineSpecifics::clear_has_new_tab_url()
{
    _has_bits_[0] &= ~0x00400000u;
}
inline void SearchEngineSpecifics::clear_new_tab_url()
{
    new_tab_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_new_tab_url();
}
inline const ::std::string& SearchEngineSpecifics::new_tab_url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SearchEngineSpecifics.new_tab_url)
    return new_tab_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_new_tab_url(const ::std::string& value)
{
    set_has_new_tab_url();
    new_tab_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.SearchEngineSpecifics.new_tab_url)
}
inline void SearchEngineSpecifics::set_new_tab_url(const char* value)
{
    set_has_new_tab_url();
    new_tab_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.SearchEngineSpecifics.new_tab_url)
}
inline void SearchEngineSpecifics::set_new_tab_url(const char* value, size_t size)
{
    set_has_new_tab_url();
    new_tab_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.SearchEngineSpecifics.new_tab_url)
}
inline ::std::string* SearchEngineSpecifics::mutable_new_tab_url()
{
    set_has_new_tab_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.SearchEngineSpecifics.new_tab_url)
    return new_tab_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchEngineSpecifics::release_new_tab_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.SearchEngineSpecifics.new_tab_url)
    clear_has_new_tab_url();
    return new_tab_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchEngineSpecifics::set_allocated_new_tab_url(::std::string* new_tab_url)
{
    if (new_tab_url != NULL) {
        set_has_new_tab_url();
    } else {
        clear_has_new_tab_url();
    }
    new_tab_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_tab_url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SearchEngineSpecifics.new_tab_url)
}

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_search_5fengine_5fspecifics_2eproto__INCLUDED
