// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app_specifics.proto

#ifndef PROTOBUF_app_5fspecifics_2eproto__INCLUDED
#define PROTOBUF_app_5fspecifics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include "extension_specifics.pb.h"
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_app_5fspecifics_2eproto();
void protobuf_AssignDesc_app_5fspecifics_2eproto();
void protobuf_ShutdownFile_app_5fspecifics_2eproto();

class AppNotificationSettings;
class AppSpecifics;
class LinkedAppIconInfo;

enum AppSpecifics_LaunchType {
    AppSpecifics_LaunchType_PINNED = 0,
    AppSpecifics_LaunchType_REGULAR = 1,
    AppSpecifics_LaunchType_FULLSCREEN = 2,
    AppSpecifics_LaunchType_WINDOW = 3
};
bool AppSpecifics_LaunchType_IsValid(int value);
const AppSpecifics_LaunchType AppSpecifics_LaunchType_LaunchType_MIN = AppSpecifics_LaunchType_PINNED;
const AppSpecifics_LaunchType AppSpecifics_LaunchType_LaunchType_MAX = AppSpecifics_LaunchType_WINDOW;
const int AppSpecifics_LaunchType_LaunchType_ARRAYSIZE = AppSpecifics_LaunchType_LaunchType_MAX + 1;

// ===================================================================

class AppNotificationSettings : public ::google::protobuf::MessageLite {
public:
    AppNotificationSettings();
    virtual ~AppNotificationSettings();

    AppNotificationSettings(const AppNotificationSettings& from);

    inline AppNotificationSettings& operator=(const AppNotificationSettings& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const AppNotificationSettings& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const AppNotificationSettings* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(AppNotificationSettings* other);

    // implements Message ----------------------------------------------

    inline AppNotificationSettings* New() const { return New(NULL); }

    AppNotificationSettings* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const AppNotificationSettings& from);
    void MergeFrom(const AppNotificationSettings& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(AppNotificationSettings* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional bool initial_setup_done = 1;
    bool has_initial_setup_done() const;
    void clear_initial_setup_done();
    static const int kInitialSetupDoneFieldNumber = 1;
    bool initial_setup_done() const;
    void set_initial_setup_done(bool value);

    // optional bool disabled = 2;
    bool has_disabled() const;
    void clear_disabled();
    static const int kDisabledFieldNumber = 2;
    bool disabled() const;
    void set_disabled(bool value);

    // optional string oauth_client_id = 3;
    bool has_oauth_client_id() const;
    void clear_oauth_client_id();
    static const int kOauthClientIdFieldNumber = 3;
    const ::std::string& oauth_client_id() const;
    void set_oauth_client_id(const ::std::string& value);
    void set_oauth_client_id(const char* value);
    void set_oauth_client_id(const char* value, size_t size);
    ::std::string* mutable_oauth_client_id();
    ::std::string* release_oauth_client_id();
    void set_allocated_oauth_client_id(::std::string* oauth_client_id);

    // @@protoc_insertion_point(class_scope:sync_pb.AppNotificationSettings)
private:
    inline void set_has_initial_setup_done();
    inline void clear_has_initial_setup_done();
    inline void set_has_disabled();
    inline void clear_has_disabled();
    inline void set_has_oauth_client_id();
    inline void clear_has_oauth_client_id();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr oauth_client_id_;
    bool initial_setup_done_;
    bool disabled_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_app_5fspecifics_2eproto_impl();
#else
    friend void protobuf_AddDesc_app_5fspecifics_2eproto();
#endif
    friend void protobuf_AssignDesc_app_5fspecifics_2eproto();
    friend void protobuf_ShutdownFile_app_5fspecifics_2eproto();

    void InitAsDefaultInstance();
    static AppNotificationSettings* default_instance_;
};
// -------------------------------------------------------------------

class LinkedAppIconInfo : public ::google::protobuf::MessageLite {
public:
    LinkedAppIconInfo();
    virtual ~LinkedAppIconInfo();

    LinkedAppIconInfo(const LinkedAppIconInfo& from);

    inline LinkedAppIconInfo& operator=(const LinkedAppIconInfo& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const LinkedAppIconInfo& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const LinkedAppIconInfo* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(LinkedAppIconInfo* other);

    // implements Message ----------------------------------------------

    inline LinkedAppIconInfo* New() const { return New(NULL); }

    LinkedAppIconInfo* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const LinkedAppIconInfo& from);
    void MergeFrom(const LinkedAppIconInfo& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(LinkedAppIconInfo* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional string url = 1;
    bool has_url() const;
    void clear_url();
    static const int kUrlFieldNumber = 1;
    const ::std::string& url() const;
    void set_url(const ::std::string& value);
    void set_url(const char* value);
    void set_url(const char* value, size_t size);
    ::std::string* mutable_url();
    ::std::string* release_url();
    void set_allocated_url(::std::string* url);

    // optional uint32 size = 2;
    bool has_size() const;
    void clear_size();
    static const int kSizeFieldNumber = 2;
    ::google::protobuf::uint32 size() const;
    void set_size(::google::protobuf::uint32 value);

    // @@protoc_insertion_point(class_scope:sync_pb.LinkedAppIconInfo)
private:
    inline void set_has_url();
    inline void clear_has_url();
    inline void set_has_size();
    inline void clear_has_size();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::google::protobuf::uint32 size_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_app_5fspecifics_2eproto_impl();
#else
    friend void protobuf_AddDesc_app_5fspecifics_2eproto();
#endif
    friend void protobuf_AssignDesc_app_5fspecifics_2eproto();
    friend void protobuf_ShutdownFile_app_5fspecifics_2eproto();

    void InitAsDefaultInstance();
    static LinkedAppIconInfo* default_instance_;
};
// -------------------------------------------------------------------

class AppSpecifics : public ::google::protobuf::MessageLite {
public:
    AppSpecifics();
    virtual ~AppSpecifics();

    AppSpecifics(const AppSpecifics& from);

    inline AppSpecifics& operator=(const AppSpecifics& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const AppSpecifics& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const AppSpecifics* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(AppSpecifics* other);

    // implements Message ----------------------------------------------

    inline AppSpecifics* New() const { return New(NULL); }

    AppSpecifics* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const AppSpecifics& from);
    void MergeFrom(const AppSpecifics& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(AppSpecifics* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef AppSpecifics_LaunchType LaunchType;
    static const LaunchType PINNED = AppSpecifics_LaunchType_PINNED;
    static const LaunchType REGULAR = AppSpecifics_LaunchType_REGULAR;
    static const LaunchType FULLSCREEN = AppSpecifics_LaunchType_FULLSCREEN;
    static const LaunchType WINDOW = AppSpecifics_LaunchType_WINDOW;
    static inline bool LaunchType_IsValid(int value)
    {
        return AppSpecifics_LaunchType_IsValid(value);
    }
    static const LaunchType LaunchType_MIN = AppSpecifics_LaunchType_LaunchType_MIN;
    static const LaunchType LaunchType_MAX = AppSpecifics_LaunchType_LaunchType_MAX;
    static const int LaunchType_ARRAYSIZE = AppSpecifics_LaunchType_LaunchType_ARRAYSIZE;

    // accessors -------------------------------------------------------

    // optional .sync_pb.ExtensionSpecifics extension = 1;
    bool has_extension() const;
    void clear_extension();
    static const int kExtensionFieldNumber = 1;
    const ::sync_pb::ExtensionSpecifics& extension() const;
    ::sync_pb::ExtensionSpecifics* mutable_extension();
    ::sync_pb::ExtensionSpecifics* release_extension();
    void set_allocated_extension(::sync_pb::ExtensionSpecifics* extension);

    // optional .sync_pb.AppNotificationSettings notification_settings = 2;
    bool has_notification_settings() const;
    void clear_notification_settings();
    static const int kNotificationSettingsFieldNumber = 2;
    const ::sync_pb::AppNotificationSettings& notification_settings() const;
    ::sync_pb::AppNotificationSettings* mutable_notification_settings();
    ::sync_pb::AppNotificationSettings* release_notification_settings();
    void set_allocated_notification_settings(::sync_pb::AppNotificationSettings* notification_settings);

    // optional string app_launch_ordinal = 3;
    bool has_app_launch_ordinal() const;
    void clear_app_launch_ordinal();
    static const int kAppLaunchOrdinalFieldNumber = 3;
    const ::std::string& app_launch_ordinal() const;
    void set_app_launch_ordinal(const ::std::string& value);
    void set_app_launch_ordinal(const char* value);
    void set_app_launch_ordinal(const char* value, size_t size);
    ::std::string* mutable_app_launch_ordinal();
    ::std::string* release_app_launch_ordinal();
    void set_allocated_app_launch_ordinal(::std::string* app_launch_ordinal);

    // optional string page_ordinal = 4;
    bool has_page_ordinal() const;
    void clear_page_ordinal();
    static const int kPageOrdinalFieldNumber = 4;
    const ::std::string& page_ordinal() const;
    void set_page_ordinal(const ::std::string& value);
    void set_page_ordinal(const char* value);
    void set_page_ordinal(const char* value, size_t size);
    ::std::string* mutable_page_ordinal();
    ::std::string* release_page_ordinal();
    void set_allocated_page_ordinal(::std::string* page_ordinal);

    // optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;
    bool has_launch_type() const;
    void clear_launch_type();
    static const int kLaunchTypeFieldNumber = 5;
    ::sync_pb::AppSpecifics_LaunchType launch_type() const;
    void set_launch_type(::sync_pb::AppSpecifics_LaunchType value);

    // optional string bookmark_app_url = 6;
    bool has_bookmark_app_url() const;
    void clear_bookmark_app_url();
    static const int kBookmarkAppUrlFieldNumber = 6;
    const ::std::string& bookmark_app_url() const;
    void set_bookmark_app_url(const ::std::string& value);
    void set_bookmark_app_url(const char* value);
    void set_bookmark_app_url(const char* value, size_t size);
    ::std::string* mutable_bookmark_app_url();
    ::std::string* release_bookmark_app_url();
    void set_allocated_bookmark_app_url(::std::string* bookmark_app_url);

    // optional string bookmark_app_description = 7;
    bool has_bookmark_app_description() const;
    void clear_bookmark_app_description();
    static const int kBookmarkAppDescriptionFieldNumber = 7;
    const ::std::string& bookmark_app_description() const;
    void set_bookmark_app_description(const ::std::string& value);
    void set_bookmark_app_description(const char* value);
    void set_bookmark_app_description(const char* value, size_t size);
    ::std::string* mutable_bookmark_app_description();
    ::std::string* release_bookmark_app_description();
    void set_allocated_bookmark_app_description(::std::string* bookmark_app_description);

    // optional string bookmark_app_icon_color = 8;
    bool has_bookmark_app_icon_color() const;
    void clear_bookmark_app_icon_color();
    static const int kBookmarkAppIconColorFieldNumber = 8;
    const ::std::string& bookmark_app_icon_color() const;
    void set_bookmark_app_icon_color(const ::std::string& value);
    void set_bookmark_app_icon_color(const char* value);
    void set_bookmark_app_icon_color(const char* value, size_t size);
    ::std::string* mutable_bookmark_app_icon_color();
    ::std::string* release_bookmark_app_icon_color();
    void set_allocated_bookmark_app_icon_color(::std::string* bookmark_app_icon_color);

    // repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;
    int linked_app_icons_size() const;
    void clear_linked_app_icons();
    static const int kLinkedAppIconsFieldNumber = 9;
    const ::sync_pb::LinkedAppIconInfo& linked_app_icons(int index) const;
    ::sync_pb::LinkedAppIconInfo* mutable_linked_app_icons(int index);
    ::sync_pb::LinkedAppIconInfo* add_linked_app_icons();
    ::google::protobuf::RepeatedPtrField<::sync_pb::LinkedAppIconInfo>*
    mutable_linked_app_icons();
    const ::google::protobuf::RepeatedPtrField<::sync_pb::LinkedAppIconInfo>&
    linked_app_icons() const;

    // @@protoc_insertion_point(class_scope:sync_pb.AppSpecifics)
private:
    inline void set_has_extension();
    inline void clear_has_extension();
    inline void set_has_notification_settings();
    inline void clear_has_notification_settings();
    inline void set_has_app_launch_ordinal();
    inline void clear_has_app_launch_ordinal();
    inline void set_has_page_ordinal();
    inline void clear_has_page_ordinal();
    inline void set_has_launch_type();
    inline void clear_has_launch_type();
    inline void set_has_bookmark_app_url();
    inline void clear_has_bookmark_app_url();
    inline void set_has_bookmark_app_description();
    inline void clear_has_bookmark_app_description();
    inline void set_has_bookmark_app_icon_color();
    inline void clear_has_bookmark_app_icon_color();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::sync_pb::ExtensionSpecifics* extension_;
    ::sync_pb::AppNotificationSettings* notification_settings_;
    ::google::protobuf::internal::ArenaStringPtr app_launch_ordinal_;
    ::google::protobuf::internal::ArenaStringPtr page_ordinal_;
    ::google::protobuf::internal::ArenaStringPtr bookmark_app_url_;
    ::google::protobuf::internal::ArenaStringPtr bookmark_app_description_;
    ::google::protobuf::internal::ArenaStringPtr bookmark_app_icon_color_;
    ::google::protobuf::RepeatedPtrField<::sync_pb::LinkedAppIconInfo> linked_app_icons_;
    int launch_type_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_app_5fspecifics_2eproto_impl();
#else
    friend void protobuf_AddDesc_app_5fspecifics_2eproto();
#endif
    friend void protobuf_AssignDesc_app_5fspecifics_2eproto();
    friend void protobuf_ShutdownFile_app_5fspecifics_2eproto();

    void InitAsDefaultInstance();
    static AppSpecifics* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AppNotificationSettings

// optional bool initial_setup_done = 1;
inline bool AppNotificationSettings::has_initial_setup_done() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppNotificationSettings::set_has_initial_setup_done()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void AppNotificationSettings::clear_has_initial_setup_done()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void AppNotificationSettings::clear_initial_setup_done()
{
    initial_setup_done_ = false;
    clear_has_initial_setup_done();
}
inline bool AppNotificationSettings::initial_setup_done() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppNotificationSettings.initial_setup_done)
    return initial_setup_done_;
}
inline void AppNotificationSettings::set_initial_setup_done(bool value)
{
    set_has_initial_setup_done();
    initial_setup_done_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.AppNotificationSettings.initial_setup_done)
}

// optional bool disabled = 2;
inline bool AppNotificationSettings::has_disabled() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppNotificationSettings::set_has_disabled()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void AppNotificationSettings::clear_has_disabled()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void AppNotificationSettings::clear_disabled()
{
    disabled_ = false;
    clear_has_disabled();
}
inline bool AppNotificationSettings::disabled() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppNotificationSettings.disabled)
    return disabled_;
}
inline void AppNotificationSettings::set_disabled(bool value)
{
    set_has_disabled();
    disabled_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.AppNotificationSettings.disabled)
}

// optional string oauth_client_id = 3;
inline bool AppNotificationSettings::has_oauth_client_id() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppNotificationSettings::set_has_oauth_client_id()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void AppNotificationSettings::clear_has_oauth_client_id()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void AppNotificationSettings::clear_oauth_client_id()
{
    oauth_client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_oauth_client_id();
}
inline const ::std::string& AppNotificationSettings::oauth_client_id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppNotificationSettings.oauth_client_id)
    return oauth_client_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppNotificationSettings::set_oauth_client_id(const ::std::string& value)
{
    set_has_oauth_client_id();
    oauth_client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppNotificationSettings.oauth_client_id)
}
inline void AppNotificationSettings::set_oauth_client_id(const char* value)
{
    set_has_oauth_client_id();
    oauth_client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppNotificationSettings.oauth_client_id)
}
inline void AppNotificationSettings::set_oauth_client_id(const char* value, size_t size)
{
    set_has_oauth_client_id();
    oauth_client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppNotificationSettings.oauth_client_id)
}
inline ::std::string* AppNotificationSettings::mutable_oauth_client_id()
{
    set_has_oauth_client_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppNotificationSettings.oauth_client_id)
    return oauth_client_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppNotificationSettings::release_oauth_client_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppNotificationSettings.oauth_client_id)
    clear_has_oauth_client_id();
    return oauth_client_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppNotificationSettings::set_allocated_oauth_client_id(::std::string* oauth_client_id)
{
    if (oauth_client_id != NULL) {
        set_has_oauth_client_id();
    } else {
        clear_has_oauth_client_id();
    }
    oauth_client_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oauth_client_id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppNotificationSettings.oauth_client_id)
}

// -------------------------------------------------------------------

// LinkedAppIconInfo

// optional string url = 1;
inline bool LinkedAppIconInfo::has_url() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LinkedAppIconInfo::set_has_url()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void LinkedAppIconInfo::clear_has_url()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void LinkedAppIconInfo::clear_url()
{
    url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_url();
}
inline const ::std::string& LinkedAppIconInfo::url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.LinkedAppIconInfo.url)
    return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinkedAppIconInfo::set_url(const ::std::string& value)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.LinkedAppIconInfo.url)
}
inline void LinkedAppIconInfo::set_url(const char* value)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.LinkedAppIconInfo.url)
}
inline void LinkedAppIconInfo::set_url(const char* value, size_t size)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.LinkedAppIconInfo.url)
}
inline ::std::string* LinkedAppIconInfo::mutable_url()
{
    set_has_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.LinkedAppIconInfo.url)
    return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LinkedAppIconInfo::release_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.LinkedAppIconInfo.url)
    clear_has_url();
    return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinkedAppIconInfo::set_allocated_url(::std::string* url)
{
    if (url != NULL) {
        set_has_url();
    } else {
        clear_has_url();
    }
    url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.LinkedAppIconInfo.url)
}

// optional uint32 size = 2;
inline bool LinkedAppIconInfo::has_size() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LinkedAppIconInfo::set_has_size()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void LinkedAppIconInfo::clear_has_size()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void LinkedAppIconInfo::clear_size()
{
    size_ = 0u;
    clear_has_size();
}
inline ::google::protobuf::uint32 LinkedAppIconInfo::size() const
{
    // @@protoc_insertion_point(field_get:sync_pb.LinkedAppIconInfo.size)
    return size_;
}
inline void LinkedAppIconInfo::set_size(::google::protobuf::uint32 value)
{
    set_has_size();
    size_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.LinkedAppIconInfo.size)
}

// -------------------------------------------------------------------

// AppSpecifics

// optional .sync_pb.ExtensionSpecifics extension = 1;
inline bool AppSpecifics::has_extension() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppSpecifics::set_has_extension()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void AppSpecifics::clear_has_extension()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void AppSpecifics::clear_extension()
{
    if (extension_ != NULL)
        extension_->::sync_pb::ExtensionSpecifics::Clear();
    clear_has_extension();
}
inline const ::sync_pb::ExtensionSpecifics& AppSpecifics::extension() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.extension)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return extension_ != NULL ? *extension_ : *default_instance().extension_;
#else
    return extension_ != NULL ? *extension_ : *default_instance_->extension_;
#endif
}
inline ::sync_pb::ExtensionSpecifics* AppSpecifics::mutable_extension()
{
    set_has_extension();
    if (extension_ == NULL) {
        extension_ = new ::sync_pb::ExtensionSpecifics;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.extension)
    return extension_;
}
inline ::sync_pb::ExtensionSpecifics* AppSpecifics::release_extension()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppSpecifics.extension)
    clear_has_extension();
    ::sync_pb::ExtensionSpecifics* temp = extension_;
    extension_ = NULL;
    return temp;
}
inline void AppSpecifics::set_allocated_extension(::sync_pb::ExtensionSpecifics* extension)
{
    delete extension_;
    extension_ = extension;
    if (extension) {
        set_has_extension();
    } else {
        clear_has_extension();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppSpecifics.extension)
}

// optional .sync_pb.AppNotificationSettings notification_settings = 2;
inline bool AppSpecifics::has_notification_settings() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppSpecifics::set_has_notification_settings()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void AppSpecifics::clear_has_notification_settings()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void AppSpecifics::clear_notification_settings()
{
    if (notification_settings_ != NULL)
        notification_settings_->::sync_pb::AppNotificationSettings::Clear();
    clear_has_notification_settings();
}
inline const ::sync_pb::AppNotificationSettings& AppSpecifics::notification_settings() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.notification_settings)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return notification_settings_ != NULL ? *notification_settings_ : *default_instance().notification_settings_;
#else
    return notification_settings_ != NULL ? *notification_settings_ : *default_instance_->notification_settings_;
#endif
}
inline ::sync_pb::AppNotificationSettings* AppSpecifics::mutable_notification_settings()
{
    set_has_notification_settings();
    if (notification_settings_ == NULL) {
        notification_settings_ = new ::sync_pb::AppNotificationSettings;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.notification_settings)
    return notification_settings_;
}
inline ::sync_pb::AppNotificationSettings* AppSpecifics::release_notification_settings()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppSpecifics.notification_settings)
    clear_has_notification_settings();
    ::sync_pb::AppNotificationSettings* temp = notification_settings_;
    notification_settings_ = NULL;
    return temp;
}
inline void AppSpecifics::set_allocated_notification_settings(::sync_pb::AppNotificationSettings* notification_settings)
{
    delete notification_settings_;
    notification_settings_ = notification_settings;
    if (notification_settings) {
        set_has_notification_settings();
    } else {
        clear_has_notification_settings();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppSpecifics.notification_settings)
}

// optional string app_launch_ordinal = 3;
inline bool AppSpecifics::has_app_launch_ordinal() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppSpecifics::set_has_app_launch_ordinal()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void AppSpecifics::clear_has_app_launch_ordinal()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void AppSpecifics::clear_app_launch_ordinal()
{
    app_launch_ordinal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_app_launch_ordinal();
}
inline const ::std::string& AppSpecifics::app_launch_ordinal() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.app_launch_ordinal)
    return app_launch_ordinal_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppSpecifics::set_app_launch_ordinal(const ::std::string& value)
{
    set_has_app_launch_ordinal();
    app_launch_ordinal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppSpecifics.app_launch_ordinal)
}
inline void AppSpecifics::set_app_launch_ordinal(const char* value)
{
    set_has_app_launch_ordinal();
    app_launch_ordinal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppSpecifics.app_launch_ordinal)
}
inline void AppSpecifics::set_app_launch_ordinal(const char* value, size_t size)
{
    set_has_app_launch_ordinal();
    app_launch_ordinal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppSpecifics.app_launch_ordinal)
}
inline ::std::string* AppSpecifics::mutable_app_launch_ordinal()
{
    set_has_app_launch_ordinal();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.app_launch_ordinal)
    return app_launch_ordinal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppSpecifics::release_app_launch_ordinal()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppSpecifics.app_launch_ordinal)
    clear_has_app_launch_ordinal();
    return app_launch_ordinal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppSpecifics::set_allocated_app_launch_ordinal(::std::string* app_launch_ordinal)
{
    if (app_launch_ordinal != NULL) {
        set_has_app_launch_ordinal();
    } else {
        clear_has_app_launch_ordinal();
    }
    app_launch_ordinal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_launch_ordinal);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppSpecifics.app_launch_ordinal)
}

// optional string page_ordinal = 4;
inline bool AppSpecifics::has_page_ordinal() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppSpecifics::set_has_page_ordinal()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void AppSpecifics::clear_has_page_ordinal()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void AppSpecifics::clear_page_ordinal()
{
    page_ordinal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_page_ordinal();
}
inline const ::std::string& AppSpecifics::page_ordinal() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.page_ordinal)
    return page_ordinal_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppSpecifics::set_page_ordinal(const ::std::string& value)
{
    set_has_page_ordinal();
    page_ordinal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppSpecifics.page_ordinal)
}
inline void AppSpecifics::set_page_ordinal(const char* value)
{
    set_has_page_ordinal();
    page_ordinal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppSpecifics.page_ordinal)
}
inline void AppSpecifics::set_page_ordinal(const char* value, size_t size)
{
    set_has_page_ordinal();
    page_ordinal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppSpecifics.page_ordinal)
}
inline ::std::string* AppSpecifics::mutable_page_ordinal()
{
    set_has_page_ordinal();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.page_ordinal)
    return page_ordinal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppSpecifics::release_page_ordinal()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppSpecifics.page_ordinal)
    clear_has_page_ordinal();
    return page_ordinal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppSpecifics::set_allocated_page_ordinal(::std::string* page_ordinal)
{
    if (page_ordinal != NULL) {
        set_has_page_ordinal();
    } else {
        clear_has_page_ordinal();
    }
    page_ordinal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_ordinal);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppSpecifics.page_ordinal)
}

// optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;
inline bool AppSpecifics::has_launch_type() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppSpecifics::set_has_launch_type()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void AppSpecifics::clear_has_launch_type()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void AppSpecifics::clear_launch_type()
{
    launch_type_ = 0;
    clear_has_launch_type();
}
inline ::sync_pb::AppSpecifics_LaunchType AppSpecifics::launch_type() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.launch_type)
    return static_cast<::sync_pb::AppSpecifics_LaunchType>(launch_type_);
}
inline void AppSpecifics::set_launch_type(::sync_pb::AppSpecifics_LaunchType value)
{
    assert(::sync_pb::AppSpecifics_LaunchType_IsValid(value));
    set_has_launch_type();
    launch_type_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.AppSpecifics.launch_type)
}

// optional string bookmark_app_url = 6;
inline bool AppSpecifics::has_bookmark_app_url() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AppSpecifics::set_has_bookmark_app_url()
{
    _has_bits_[0] |= 0x00000020u;
}
inline void AppSpecifics::clear_has_bookmark_app_url()
{
    _has_bits_[0] &= ~0x00000020u;
}
inline void AppSpecifics::clear_bookmark_app_url()
{
    bookmark_app_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_bookmark_app_url();
}
inline const ::std::string& AppSpecifics::bookmark_app_url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.bookmark_app_url)
    return bookmark_app_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppSpecifics::set_bookmark_app_url(const ::std::string& value)
{
    set_has_bookmark_app_url();
    bookmark_app_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppSpecifics.bookmark_app_url)
}
inline void AppSpecifics::set_bookmark_app_url(const char* value)
{
    set_has_bookmark_app_url();
    bookmark_app_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppSpecifics.bookmark_app_url)
}
inline void AppSpecifics::set_bookmark_app_url(const char* value, size_t size)
{
    set_has_bookmark_app_url();
    bookmark_app_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppSpecifics.bookmark_app_url)
}
inline ::std::string* AppSpecifics::mutable_bookmark_app_url()
{
    set_has_bookmark_app_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.bookmark_app_url)
    return bookmark_app_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppSpecifics::release_bookmark_app_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppSpecifics.bookmark_app_url)
    clear_has_bookmark_app_url();
    return bookmark_app_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppSpecifics::set_allocated_bookmark_app_url(::std::string* bookmark_app_url)
{
    if (bookmark_app_url != NULL) {
        set_has_bookmark_app_url();
    } else {
        clear_has_bookmark_app_url();
    }
    bookmark_app_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bookmark_app_url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppSpecifics.bookmark_app_url)
}

// optional string bookmark_app_description = 7;
inline bool AppSpecifics::has_bookmark_app_description() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AppSpecifics::set_has_bookmark_app_description()
{
    _has_bits_[0] |= 0x00000040u;
}
inline void AppSpecifics::clear_has_bookmark_app_description()
{
    _has_bits_[0] &= ~0x00000040u;
}
inline void AppSpecifics::clear_bookmark_app_description()
{
    bookmark_app_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_bookmark_app_description();
}
inline const ::std::string& AppSpecifics::bookmark_app_description() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.bookmark_app_description)
    return bookmark_app_description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppSpecifics::set_bookmark_app_description(const ::std::string& value)
{
    set_has_bookmark_app_description();
    bookmark_app_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppSpecifics.bookmark_app_description)
}
inline void AppSpecifics::set_bookmark_app_description(const char* value)
{
    set_has_bookmark_app_description();
    bookmark_app_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppSpecifics.bookmark_app_description)
}
inline void AppSpecifics::set_bookmark_app_description(const char* value, size_t size)
{
    set_has_bookmark_app_description();
    bookmark_app_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppSpecifics.bookmark_app_description)
}
inline ::std::string* AppSpecifics::mutable_bookmark_app_description()
{
    set_has_bookmark_app_description();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.bookmark_app_description)
    return bookmark_app_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppSpecifics::release_bookmark_app_description()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppSpecifics.bookmark_app_description)
    clear_has_bookmark_app_description();
    return bookmark_app_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppSpecifics::set_allocated_bookmark_app_description(::std::string* bookmark_app_description)
{
    if (bookmark_app_description != NULL) {
        set_has_bookmark_app_description();
    } else {
        clear_has_bookmark_app_description();
    }
    bookmark_app_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bookmark_app_description);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppSpecifics.bookmark_app_description)
}

// optional string bookmark_app_icon_color = 8;
inline bool AppSpecifics::has_bookmark_app_icon_color() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AppSpecifics::set_has_bookmark_app_icon_color()
{
    _has_bits_[0] |= 0x00000080u;
}
inline void AppSpecifics::clear_has_bookmark_app_icon_color()
{
    _has_bits_[0] &= ~0x00000080u;
}
inline void AppSpecifics::clear_bookmark_app_icon_color()
{
    bookmark_app_icon_color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_bookmark_app_icon_color();
}
inline const ::std::string& AppSpecifics::bookmark_app_icon_color() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.bookmark_app_icon_color)
    return bookmark_app_icon_color_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppSpecifics::set_bookmark_app_icon_color(const ::std::string& value)
{
    set_has_bookmark_app_icon_color();
    bookmark_app_icon_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppSpecifics.bookmark_app_icon_color)
}
inline void AppSpecifics::set_bookmark_app_icon_color(const char* value)
{
    set_has_bookmark_app_icon_color();
    bookmark_app_icon_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppSpecifics.bookmark_app_icon_color)
}
inline void AppSpecifics::set_bookmark_app_icon_color(const char* value, size_t size)
{
    set_has_bookmark_app_icon_color();
    bookmark_app_icon_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppSpecifics.bookmark_app_icon_color)
}
inline ::std::string* AppSpecifics::mutable_bookmark_app_icon_color()
{
    set_has_bookmark_app_icon_color();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.bookmark_app_icon_color)
    return bookmark_app_icon_color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppSpecifics::release_bookmark_app_icon_color()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppSpecifics.bookmark_app_icon_color)
    clear_has_bookmark_app_icon_color();
    return bookmark_app_icon_color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppSpecifics::set_allocated_bookmark_app_icon_color(::std::string* bookmark_app_icon_color)
{
    if (bookmark_app_icon_color != NULL) {
        set_has_bookmark_app_icon_color();
    } else {
        clear_has_bookmark_app_icon_color();
    }
    bookmark_app_icon_color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bookmark_app_icon_color);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppSpecifics.bookmark_app_icon_color)
}

// repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;
inline int AppSpecifics::linked_app_icons_size() const
{
    return linked_app_icons_.size();
}
inline void AppSpecifics::clear_linked_app_icons()
{
    linked_app_icons_.Clear();
}
inline const ::sync_pb::LinkedAppIconInfo& AppSpecifics::linked_app_icons(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.linked_app_icons)
    return linked_app_icons_.Get(index);
}
inline ::sync_pb::LinkedAppIconInfo* AppSpecifics::mutable_linked_app_icons(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.linked_app_icons)
    return linked_app_icons_.Mutable(index);
}
inline ::sync_pb::LinkedAppIconInfo* AppSpecifics::add_linked_app_icons()
{
    // @@protoc_insertion_point(field_add:sync_pb.AppSpecifics.linked_app_icons)
    return linked_app_icons_.Add();
}
inline ::google::protobuf::RepeatedPtrField<::sync_pb::LinkedAppIconInfo>*
AppSpecifics::mutable_linked_app_icons()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AppSpecifics.linked_app_icons)
    return &linked_app_icons_;
}
inline const ::google::protobuf::RepeatedPtrField<::sync_pb::LinkedAppIconInfo>&
AppSpecifics::linked_app_icons() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AppSpecifics.linked_app_icons)
    return linked_app_icons_;
}

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// @@protoc_insertion_point(namespace_scope)

} // namespace sync_pb

#ifndef SWIG
namespace google {
namespace protobuf {

    template <>
    struct is_proto_enum<::sync_pb::AppSpecifics_LaunchType> : ::google::protobuf::internal::true_type {
    };

} // namespace protobuf
} // namespace google
#endif // SWIG

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_app_5fspecifics_2eproto__INCLUDED
