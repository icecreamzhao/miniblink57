// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app_specifics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "app_specifics.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {

void protobuf_ShutdownFile_app_5fspecifics_2eproto()
{
    delete AppNotificationSettings::default_instance_;
    delete LinkedAppIconInfo::default_instance_;
    delete AppSpecifics::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_app_5fspecifics_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_app_5fspecifics_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    ::sync_pb::protobuf_AddDesc_extension_5fspecifics_2eproto();
    AppNotificationSettings::default_instance_ = new AppNotificationSettings();
    LinkedAppIconInfo::default_instance_ = new LinkedAppIconInfo();
    AppSpecifics::default_instance_ = new AppSpecifics();
    AppNotificationSettings::default_instance_->InitAsDefaultInstance();
    LinkedAppIconInfo::default_instance_->InitAsDefaultInstance();
    AppSpecifics::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_app_5fspecifics_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_app_5fspecifics_2eproto_once_);
void protobuf_AddDesc_app_5fspecifics_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_app_5fspecifics_2eproto_once_,
        &protobuf_AddDesc_app_5fspecifics_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_app_5fspecifics_2eproto {
    StaticDescriptorInitializer_app_5fspecifics_2eproto()
    {
        protobuf_AddDesc_app_5fspecifics_2eproto();
    }
} static_descriptor_initializer_app_5fspecifics_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForAppNotificationSettings(
    AppNotificationSettings* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppNotificationSettings::kInitialSetupDoneFieldNumber;
const int AppNotificationSettings::kDisabledFieldNumber;
const int AppNotificationSettings::kOauthClientIdFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

AppNotificationSettings::AppNotificationSettings()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.AppNotificationSettings)
}

void AppNotificationSettings::InitAsDefaultInstance()
{
}

AppNotificationSettings::AppNotificationSettings(const AppNotificationSettings& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.AppNotificationSettings)
}

void AppNotificationSettings::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    initial_setup_done_ = false;
    disabled_ = false;
    oauth_client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppNotificationSettings::~AppNotificationSettings()
{
    // @@protoc_insertion_point(destructor:sync_pb.AppNotificationSettings)
    SharedDtor();
}

void AppNotificationSettings::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    oauth_client_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void AppNotificationSettings::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AppNotificationSettings& AppNotificationSettings::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_app_5fspecifics_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_app_5fspecifics_2eproto();
#endif
    return *default_instance_;
}

AppNotificationSettings* AppNotificationSettings::default_instance_ = NULL;

AppNotificationSettings* AppNotificationSettings::New(::google::protobuf::Arena* arena) const
{
    AppNotificationSettings* n = new AppNotificationSettings;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void AppNotificationSettings::Clear()
{
// @@protoc_insertion_point(message_clear_start:sync_pb.AppNotificationSettings)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                             \
    _Pragma("clang diagnostic push")                                                                              \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(AppNotificationSettings, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<AppNotificationSettings*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    if (_has_bits_[0 / 32] & 7u) {
        ZR_(initial_setup_done_, disabled_);
        if (has_oauth_client_id()) {
            oauth_client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }

#undef ZR_HELPER_
#undef ZR_

    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AppNotificationSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForAppNotificationSettings, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.AppNotificationSettings)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional bool initial_setup_done = 1;
        case 1: {
            if (tag == 8) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                    input, &initial_setup_done_)));
                set_has_initial_setup_done();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(16))
                goto parse_disabled;
            break;
        }

        // optional bool disabled = 2;
        case 2: {
            if (tag == 16) {
            parse_disabled:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                    input, &disabled_)));
                set_has_disabled();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(26))
                goto parse_oauth_client_id;
            break;
        }

        // optional string oauth_client_id = 3;
        case 3: {
            if (tag == 26) {
            parse_oauth_client_id:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_oauth_client_id()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.AppNotificationSettings)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.AppNotificationSettings)
    return false;
#undef DO_
}

void AppNotificationSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.AppNotificationSettings)
    // optional bool initial_setup_done = 1;
    if (has_initial_setup_done()) {
        ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->initial_setup_done(), output);
    }

    // optional bool disabled = 2;
    if (has_disabled()) {
        ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->disabled(), output);
    }

    // optional string oauth_client_id = 3;
    if (has_oauth_client_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            3, this->oauth_client_id(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.AppNotificationSettings)
}

int AppNotificationSettings::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.AppNotificationSettings)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 7u) {
        // optional bool initial_setup_done = 1;
        if (has_initial_setup_done()) {
            total_size += 1 + 1;
        }

        // optional bool disabled = 2;
        if (has_disabled()) {
            total_size += 1 + 1;
        }

        // optional string oauth_client_id = 3;
        if (has_oauth_client_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->oauth_client_id());
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void AppNotificationSettings::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const AppNotificationSettings*>(&from));
}

void AppNotificationSettings::MergeFrom(const AppNotificationSettings& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.AppNotificationSettings)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_initial_setup_done()) {
            set_initial_setup_done(from.initial_setup_done());
        }
        if (from.has_disabled()) {
            set_disabled(from.disabled());
        }
        if (from.has_oauth_client_id()) {
            set_has_oauth_client_id();
            oauth_client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oauth_client_id_);
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void AppNotificationSettings::CopyFrom(const AppNotificationSettings& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.AppNotificationSettings)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool AppNotificationSettings::IsInitialized() const
{

    return true;
}

void AppNotificationSettings::Swap(AppNotificationSettings* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void AppNotificationSettings::InternalSwap(AppNotificationSettings* other)
{
    std::swap(initial_setup_done_, other->initial_setup_done_);
    std::swap(disabled_, other->disabled_);
    oauth_client_id_.Swap(&other->oauth_client_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string AppNotificationSettings::GetTypeName() const
{
    return "sync_pb.AppNotificationSettings";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppNotificationSettings

// optional bool initial_setup_done = 1;
bool AppNotificationSettings::has_initial_setup_done() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppNotificationSettings::set_has_initial_setup_done()
{
    _has_bits_[0] |= 0x00000001u;
}
void AppNotificationSettings::clear_has_initial_setup_done()
{
    _has_bits_[0] &= ~0x00000001u;
}
void AppNotificationSettings::clear_initial_setup_done()
{
    initial_setup_done_ = false;
    clear_has_initial_setup_done();
}
bool AppNotificationSettings::initial_setup_done() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppNotificationSettings.initial_setup_done)
    return initial_setup_done_;
}
void AppNotificationSettings::set_initial_setup_done(bool value)
{
    set_has_initial_setup_done();
    initial_setup_done_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.AppNotificationSettings.initial_setup_done)
}

// optional bool disabled = 2;
bool AppNotificationSettings::has_disabled() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppNotificationSettings::set_has_disabled()
{
    _has_bits_[0] |= 0x00000002u;
}
void AppNotificationSettings::clear_has_disabled()
{
    _has_bits_[0] &= ~0x00000002u;
}
void AppNotificationSettings::clear_disabled()
{
    disabled_ = false;
    clear_has_disabled();
}
bool AppNotificationSettings::disabled() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppNotificationSettings.disabled)
    return disabled_;
}
void AppNotificationSettings::set_disabled(bool value)
{
    set_has_disabled();
    disabled_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.AppNotificationSettings.disabled)
}

// optional string oauth_client_id = 3;
bool AppNotificationSettings::has_oauth_client_id() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void AppNotificationSettings::set_has_oauth_client_id()
{
    _has_bits_[0] |= 0x00000004u;
}
void AppNotificationSettings::clear_has_oauth_client_id()
{
    _has_bits_[0] &= ~0x00000004u;
}
void AppNotificationSettings::clear_oauth_client_id()
{
    oauth_client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_oauth_client_id();
}
const ::std::string& AppNotificationSettings::oauth_client_id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppNotificationSettings.oauth_client_id)
    return oauth_client_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotificationSettings::set_oauth_client_id(const ::std::string& value)
{
    set_has_oauth_client_id();
    oauth_client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppNotificationSettings.oauth_client_id)
}
void AppNotificationSettings::set_oauth_client_id(const char* value)
{
    set_has_oauth_client_id();
    oauth_client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppNotificationSettings.oauth_client_id)
}
void AppNotificationSettings::set_oauth_client_id(const char* value, size_t size)
{
    set_has_oauth_client_id();
    oauth_client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppNotificationSettings.oauth_client_id)
}
::std::string* AppNotificationSettings::mutable_oauth_client_id()
{
    set_has_oauth_client_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppNotificationSettings.oauth_client_id)
    return oauth_client_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotificationSettings::release_oauth_client_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppNotificationSettings.oauth_client_id)
    clear_has_oauth_client_id();
    return oauth_client_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotificationSettings::set_allocated_oauth_client_id(::std::string* oauth_client_id)
{
    if (oauth_client_id != NULL) {
        set_has_oauth_client_id();
    } else {
        clear_has_oauth_client_id();
    }
    oauth_client_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oauth_client_id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppNotificationSettings.oauth_client_id)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForLinkedAppIconInfo(
    LinkedAppIconInfo* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkedAppIconInfo::kUrlFieldNumber;
const int LinkedAppIconInfo::kSizeFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

LinkedAppIconInfo::LinkedAppIconInfo()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.LinkedAppIconInfo)
}

void LinkedAppIconInfo::InitAsDefaultInstance()
{
}

LinkedAppIconInfo::LinkedAppIconInfo(const LinkedAppIconInfo& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.LinkedAppIconInfo)
}

void LinkedAppIconInfo::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    size_ = 0u;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LinkedAppIconInfo::~LinkedAppIconInfo()
{
    // @@protoc_insertion_point(destructor:sync_pb.LinkedAppIconInfo)
    SharedDtor();
}

void LinkedAppIconInfo::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void LinkedAppIconInfo::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const LinkedAppIconInfo& LinkedAppIconInfo::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_app_5fspecifics_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_app_5fspecifics_2eproto();
#endif
    return *default_instance_;
}

LinkedAppIconInfo* LinkedAppIconInfo::default_instance_ = NULL;

LinkedAppIconInfo* LinkedAppIconInfo::New(::google::protobuf::Arena* arena) const
{
    LinkedAppIconInfo* n = new LinkedAppIconInfo;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void LinkedAppIconInfo::Clear()
{
    // @@protoc_insertion_point(message_clear_start:sync_pb.LinkedAppIconInfo)
    if (_has_bits_[0 / 32] & 3u) {
        if (has_url()) {
            url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        size_ = 0u;
    }
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LinkedAppIconInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForLinkedAppIconInfo, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.LinkedAppIconInfo)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional string url = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_url()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(16))
                goto parse_size;
            break;
        }

        // optional uint32 size = 2;
        case 2: {
            if (tag == 16) {
            parse_size:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                    input, &size_)));
                set_has_size();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.LinkedAppIconInfo)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.LinkedAppIconInfo)
    return false;
#undef DO_
}

void LinkedAppIconInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.LinkedAppIconInfo)
    // optional string url = 1;
    if (has_url()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->url(), output);
    }

    // optional uint32 size = 2;
    if (has_size()) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->size(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.LinkedAppIconInfo)
}

int LinkedAppIconInfo::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.LinkedAppIconInfo)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 3u) {
        // optional string url = 1;
        if (has_url()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->url());
        }

        // optional uint32 size = 2;
        if (has_size()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(this->size());
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void LinkedAppIconInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const LinkedAppIconInfo*>(&from));
}

void LinkedAppIconInfo::MergeFrom(const LinkedAppIconInfo& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.LinkedAppIconInfo)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_url()) {
            set_has_url();
            url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
        }
        if (from.has_size()) {
            set_size(from.size());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void LinkedAppIconInfo::CopyFrom(const LinkedAppIconInfo& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.LinkedAppIconInfo)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool LinkedAppIconInfo::IsInitialized() const
{

    return true;
}

void LinkedAppIconInfo::Swap(LinkedAppIconInfo* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void LinkedAppIconInfo::InternalSwap(LinkedAppIconInfo* other)
{
    url_.Swap(&other->url_);
    std::swap(size_, other->size_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string LinkedAppIconInfo::GetTypeName() const
{
    return "sync_pb.LinkedAppIconInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LinkedAppIconInfo

// optional string url = 1;
bool LinkedAppIconInfo::has_url() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void LinkedAppIconInfo::set_has_url()
{
    _has_bits_[0] |= 0x00000001u;
}
void LinkedAppIconInfo::clear_has_url()
{
    _has_bits_[0] &= ~0x00000001u;
}
void LinkedAppIconInfo::clear_url()
{
    url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_url();
}
const ::std::string& LinkedAppIconInfo::url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.LinkedAppIconInfo.url)
    return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LinkedAppIconInfo::set_url(const ::std::string& value)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.LinkedAppIconInfo.url)
}
void LinkedAppIconInfo::set_url(const char* value)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.LinkedAppIconInfo.url)
}
void LinkedAppIconInfo::set_url(const char* value, size_t size)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.LinkedAppIconInfo.url)
}
::std::string* LinkedAppIconInfo::mutable_url()
{
    set_has_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.LinkedAppIconInfo.url)
    return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LinkedAppIconInfo::release_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.LinkedAppIconInfo.url)
    clear_has_url();
    return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LinkedAppIconInfo::set_allocated_url(::std::string* url)
{
    if (url != NULL) {
        set_has_url();
    } else {
        clear_has_url();
    }
    url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.LinkedAppIconInfo.url)
}

// optional uint32 size = 2;
bool LinkedAppIconInfo::has_size() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void LinkedAppIconInfo::set_has_size()
{
    _has_bits_[0] |= 0x00000002u;
}
void LinkedAppIconInfo::clear_has_size()
{
    _has_bits_[0] &= ~0x00000002u;
}
void LinkedAppIconInfo::clear_size()
{
    size_ = 0u;
    clear_has_size();
}
::google::protobuf::uint32 LinkedAppIconInfo::size() const
{
    // @@protoc_insertion_point(field_get:sync_pb.LinkedAppIconInfo.size)
    return size_;
}
void LinkedAppIconInfo::set_size(::google::protobuf::uint32 value)
{
    set_has_size();
    size_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.LinkedAppIconInfo.size)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForAppSpecifics(
    AppSpecifics* ptr)
{
    return ptr->mutable_unknown_fields();
}

bool AppSpecifics_LaunchType_IsValid(int value)
{
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
        return true;
    default:
        return false;
    }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AppSpecifics_LaunchType AppSpecifics::PINNED;
const AppSpecifics_LaunchType AppSpecifics::REGULAR;
const AppSpecifics_LaunchType AppSpecifics::FULLSCREEN;
const AppSpecifics_LaunchType AppSpecifics::WINDOW;
const AppSpecifics_LaunchType AppSpecifics::LaunchType_MIN;
const AppSpecifics_LaunchType AppSpecifics::LaunchType_MAX;
const int AppSpecifics::LaunchType_ARRAYSIZE;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppSpecifics::kExtensionFieldNumber;
const int AppSpecifics::kNotificationSettingsFieldNumber;
const int AppSpecifics::kAppLaunchOrdinalFieldNumber;
const int AppSpecifics::kPageOrdinalFieldNumber;
const int AppSpecifics::kLaunchTypeFieldNumber;
const int AppSpecifics::kBookmarkAppUrlFieldNumber;
const int AppSpecifics::kBookmarkAppDescriptionFieldNumber;
const int AppSpecifics::kBookmarkAppIconColorFieldNumber;
const int AppSpecifics::kLinkedAppIconsFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

AppSpecifics::AppSpecifics()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.AppSpecifics)
}

void AppSpecifics::InitAsDefaultInstance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    extension_ = const_cast<::sync_pb::ExtensionSpecifics*>(
        ::sync_pb::ExtensionSpecifics::internal_default_instance());
#else
    extension_ = const_cast<::sync_pb::ExtensionSpecifics*>(&::sync_pb::ExtensionSpecifics::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    notification_settings_ = const_cast<::sync_pb::AppNotificationSettings*>(
        ::sync_pb::AppNotificationSettings::internal_default_instance());
#else
    notification_settings_ = const_cast<::sync_pb::AppNotificationSettings*>(&::sync_pb::AppNotificationSettings::default_instance());
#endif
}

AppSpecifics::AppSpecifics(const AppSpecifics& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.AppSpecifics)
}

void AppSpecifics::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    extension_ = NULL;
    notification_settings_ = NULL;
    app_launch_ordinal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    page_ordinal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    launch_type_ = 0;
    bookmark_app_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    bookmark_app_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    bookmark_app_icon_color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppSpecifics::~AppSpecifics()
{
    // @@protoc_insertion_point(destructor:sync_pb.AppSpecifics)
    SharedDtor();
}

void AppSpecifics::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    app_launch_ordinal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    page_ordinal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    bookmark_app_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    bookmark_app_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    bookmark_app_icon_color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
        delete extension_;
        delete notification_settings_;
    }
}

void AppSpecifics::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AppSpecifics& AppSpecifics::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_app_5fspecifics_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_app_5fspecifics_2eproto();
#endif
    return *default_instance_;
}

AppSpecifics* AppSpecifics::default_instance_ = NULL;

AppSpecifics* AppSpecifics::New(::google::protobuf::Arena* arena) const
{
    AppSpecifics* n = new AppSpecifics;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void AppSpecifics::Clear()
{
    // @@protoc_insertion_point(message_clear_start:sync_pb.AppSpecifics)
    if (_has_bits_[0 / 32] & 255u) {
        if (has_extension()) {
            if (extension_ != NULL)
                extension_->::sync_pb::ExtensionSpecifics::Clear();
        }
        if (has_notification_settings()) {
            if (notification_settings_ != NULL)
                notification_settings_->::sync_pb::AppNotificationSettings::Clear();
        }
        if (has_app_launch_ordinal()) {
            app_launch_ordinal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_page_ordinal()) {
            page_ordinal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        launch_type_ = 0;
        if (has_bookmark_app_url()) {
            bookmark_app_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_bookmark_app_description()) {
            bookmark_app_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_bookmark_app_icon_color()) {
            bookmark_app_icon_color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }
    linked_app_icons_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AppSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForAppSpecifics, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.AppSpecifics)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional .sync_pb.ExtensionSpecifics extension = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_extension()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_notification_settings;
            break;
        }

        // optional .sync_pb.AppNotificationSettings notification_settings = 2;
        case 2: {
            if (tag == 18) {
            parse_notification_settings:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_notification_settings()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(26))
                goto parse_app_launch_ordinal;
            break;
        }

        // optional string app_launch_ordinal = 3;
        case 3: {
            if (tag == 26) {
            parse_app_launch_ordinal:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_app_launch_ordinal()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(34))
                goto parse_page_ordinal;
            break;
        }

        // optional string page_ordinal = 4;
        case 4: {
            if (tag == 34) {
            parse_page_ordinal:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_page_ordinal()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(40))
                goto parse_launch_type;
            break;
        }

        // optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;
        case 5: {
            if (tag == 40) {
            parse_launch_type:
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::sync_pb::AppSpecifics_LaunchType_IsValid(value)) {
                    set_launch_type(static_cast<::sync_pb::AppSpecifics_LaunchType>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(40);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(50))
                goto parse_bookmark_app_url;
            break;
        }

        // optional string bookmark_app_url = 6;
        case 6: {
            if (tag == 50) {
            parse_bookmark_app_url:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_bookmark_app_url()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(58))
                goto parse_bookmark_app_description;
            break;
        }

        // optional string bookmark_app_description = 7;
        case 7: {
            if (tag == 58) {
            parse_bookmark_app_description:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_bookmark_app_description()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(66))
                goto parse_bookmark_app_icon_color;
            break;
        }

        // optional string bookmark_app_icon_color = 8;
        case 8: {
            if (tag == 66) {
            parse_bookmark_app_icon_color:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_bookmark_app_icon_color()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(74))
                goto parse_linked_app_icons;
            break;
        }

        // repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;
        case 9: {
            if (tag == 74) {
            parse_linked_app_icons:
                DO_(input->IncrementRecursionDepth());
            parse_loop_linked_app_icons:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                    input, add_linked_app_icons()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(74))
                goto parse_loop_linked_app_icons;
            input->UnsafeDecrementRecursionDepth();
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.AppSpecifics)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.AppSpecifics)
    return false;
#undef DO_
}

void AppSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.AppSpecifics)
    // optional .sync_pb.ExtensionSpecifics extension = 1;
    if (has_extension()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            1, *this->extension_, output);
    }

    // optional .sync_pb.AppNotificationSettings notification_settings = 2;
    if (has_notification_settings()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            2, *this->notification_settings_, output);
    }

    // optional string app_launch_ordinal = 3;
    if (has_app_launch_ordinal()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            3, this->app_launch_ordinal(), output);
    }

    // optional string page_ordinal = 4;
    if (has_page_ordinal()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            4, this->page_ordinal(), output);
    }

    // optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;
    if (has_launch_type()) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            5, this->launch_type(), output);
    }

    // optional string bookmark_app_url = 6;
    if (has_bookmark_app_url()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            6, this->bookmark_app_url(), output);
    }

    // optional string bookmark_app_description = 7;
    if (has_bookmark_app_description()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            7, this->bookmark_app_description(), output);
    }

    // optional string bookmark_app_icon_color = 8;
    if (has_bookmark_app_icon_color()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            8, this->bookmark_app_icon_color(), output);
    }

    // repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;
    for (unsigned int i = 0, n = this->linked_app_icons_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            9, this->linked_app_icons(i), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.AppSpecifics)
}

int AppSpecifics::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.AppSpecifics)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 255u) {
        // optional .sync_pb.ExtensionSpecifics extension = 1;
        if (has_extension()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->extension_);
        }

        // optional .sync_pb.AppNotificationSettings notification_settings = 2;
        if (has_notification_settings()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->notification_settings_);
        }

        // optional string app_launch_ordinal = 3;
        if (has_app_launch_ordinal()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->app_launch_ordinal());
        }

        // optional string page_ordinal = 4;
        if (has_page_ordinal()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->page_ordinal());
        }

        // optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;
        if (has_launch_type()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->launch_type());
        }

        // optional string bookmark_app_url = 6;
        if (has_bookmark_app_url()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->bookmark_app_url());
        }

        // optional string bookmark_app_description = 7;
        if (has_bookmark_app_description()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->bookmark_app_description());
        }

        // optional string bookmark_app_icon_color = 8;
        if (has_bookmark_app_icon_color()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->bookmark_app_icon_color());
        }
    }
    // repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;
    total_size += 1 * this->linked_app_icons_size();
    for (int i = 0; i < this->linked_app_icons_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
            this->linked_app_icons(i));
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void AppSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const AppSpecifics*>(&from));
}

void AppSpecifics::MergeFrom(const AppSpecifics& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.AppSpecifics)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    linked_app_icons_.MergeFrom(from.linked_app_icons_);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_extension()) {
            mutable_extension()->::sync_pb::ExtensionSpecifics::MergeFrom(from.extension());
        }
        if (from.has_notification_settings()) {
            mutable_notification_settings()->::sync_pb::AppNotificationSettings::MergeFrom(from.notification_settings());
        }
        if (from.has_app_launch_ordinal()) {
            set_has_app_launch_ordinal();
            app_launch_ordinal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_launch_ordinal_);
        }
        if (from.has_page_ordinal()) {
            set_has_page_ordinal();
            page_ordinal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_ordinal_);
        }
        if (from.has_launch_type()) {
            set_launch_type(from.launch_type());
        }
        if (from.has_bookmark_app_url()) {
            set_has_bookmark_app_url();
            bookmark_app_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookmark_app_url_);
        }
        if (from.has_bookmark_app_description()) {
            set_has_bookmark_app_description();
            bookmark_app_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookmark_app_description_);
        }
        if (from.has_bookmark_app_icon_color()) {
            set_has_bookmark_app_icon_color();
            bookmark_app_icon_color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bookmark_app_icon_color_);
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void AppSpecifics::CopyFrom(const AppSpecifics& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.AppSpecifics)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool AppSpecifics::IsInitialized() const
{

    return true;
}

void AppSpecifics::Swap(AppSpecifics* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void AppSpecifics::InternalSwap(AppSpecifics* other)
{
    std::swap(extension_, other->extension_);
    std::swap(notification_settings_, other->notification_settings_);
    app_launch_ordinal_.Swap(&other->app_launch_ordinal_);
    page_ordinal_.Swap(&other->page_ordinal_);
    std::swap(launch_type_, other->launch_type_);
    bookmark_app_url_.Swap(&other->bookmark_app_url_);
    bookmark_app_description_.Swap(&other->bookmark_app_description_);
    bookmark_app_icon_color_.Swap(&other->bookmark_app_icon_color_);
    linked_app_icons_.UnsafeArenaSwap(&other->linked_app_icons_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string AppSpecifics::GetTypeName() const
{
    return "sync_pb.AppSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppSpecifics

// optional .sync_pb.ExtensionSpecifics extension = 1;
bool AppSpecifics::has_extension() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppSpecifics::set_has_extension()
{
    _has_bits_[0] |= 0x00000001u;
}
void AppSpecifics::clear_has_extension()
{
    _has_bits_[0] &= ~0x00000001u;
}
void AppSpecifics::clear_extension()
{
    if (extension_ != NULL)
        extension_->::sync_pb::ExtensionSpecifics::Clear();
    clear_has_extension();
}
const ::sync_pb::ExtensionSpecifics& AppSpecifics::extension() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.extension)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return extension_ != NULL ? *extension_ : *default_instance().extension_;
#else
    return extension_ != NULL ? *extension_ : *default_instance_->extension_;
#endif
}
::sync_pb::ExtensionSpecifics* AppSpecifics::mutable_extension()
{
    set_has_extension();
    if (extension_ == NULL) {
        extension_ = new ::sync_pb::ExtensionSpecifics;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.extension)
    return extension_;
}
::sync_pb::ExtensionSpecifics* AppSpecifics::release_extension()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppSpecifics.extension)
    clear_has_extension();
    ::sync_pb::ExtensionSpecifics* temp = extension_;
    extension_ = NULL;
    return temp;
}
void AppSpecifics::set_allocated_extension(::sync_pb::ExtensionSpecifics* extension)
{
    delete extension_;
    extension_ = extension;
    if (extension) {
        set_has_extension();
    } else {
        clear_has_extension();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppSpecifics.extension)
}

// optional .sync_pb.AppNotificationSettings notification_settings = 2;
bool AppSpecifics::has_notification_settings() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppSpecifics::set_has_notification_settings()
{
    _has_bits_[0] |= 0x00000002u;
}
void AppSpecifics::clear_has_notification_settings()
{
    _has_bits_[0] &= ~0x00000002u;
}
void AppSpecifics::clear_notification_settings()
{
    if (notification_settings_ != NULL)
        notification_settings_->::sync_pb::AppNotificationSettings::Clear();
    clear_has_notification_settings();
}
const ::sync_pb::AppNotificationSettings& AppSpecifics::notification_settings() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.notification_settings)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return notification_settings_ != NULL ? *notification_settings_ : *default_instance().notification_settings_;
#else
    return notification_settings_ != NULL ? *notification_settings_ : *default_instance_->notification_settings_;
#endif
}
::sync_pb::AppNotificationSettings* AppSpecifics::mutable_notification_settings()
{
    set_has_notification_settings();
    if (notification_settings_ == NULL) {
        notification_settings_ = new ::sync_pb::AppNotificationSettings;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.notification_settings)
    return notification_settings_;
}
::sync_pb::AppNotificationSettings* AppSpecifics::release_notification_settings()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppSpecifics.notification_settings)
    clear_has_notification_settings();
    ::sync_pb::AppNotificationSettings* temp = notification_settings_;
    notification_settings_ = NULL;
    return temp;
}
void AppSpecifics::set_allocated_notification_settings(::sync_pb::AppNotificationSettings* notification_settings)
{
    delete notification_settings_;
    notification_settings_ = notification_settings;
    if (notification_settings) {
        set_has_notification_settings();
    } else {
        clear_has_notification_settings();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppSpecifics.notification_settings)
}

// optional string app_launch_ordinal = 3;
bool AppSpecifics::has_app_launch_ordinal() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void AppSpecifics::set_has_app_launch_ordinal()
{
    _has_bits_[0] |= 0x00000004u;
}
void AppSpecifics::clear_has_app_launch_ordinal()
{
    _has_bits_[0] &= ~0x00000004u;
}
void AppSpecifics::clear_app_launch_ordinal()
{
    app_launch_ordinal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_app_launch_ordinal();
}
const ::std::string& AppSpecifics::app_launch_ordinal() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.app_launch_ordinal)
    return app_launch_ordinal_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSpecifics::set_app_launch_ordinal(const ::std::string& value)
{
    set_has_app_launch_ordinal();
    app_launch_ordinal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppSpecifics.app_launch_ordinal)
}
void AppSpecifics::set_app_launch_ordinal(const char* value)
{
    set_has_app_launch_ordinal();
    app_launch_ordinal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppSpecifics.app_launch_ordinal)
}
void AppSpecifics::set_app_launch_ordinal(const char* value, size_t size)
{
    set_has_app_launch_ordinal();
    app_launch_ordinal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppSpecifics.app_launch_ordinal)
}
::std::string* AppSpecifics::mutable_app_launch_ordinal()
{
    set_has_app_launch_ordinal();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.app_launch_ordinal)
    return app_launch_ordinal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppSpecifics::release_app_launch_ordinal()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppSpecifics.app_launch_ordinal)
    clear_has_app_launch_ordinal();
    return app_launch_ordinal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSpecifics::set_allocated_app_launch_ordinal(::std::string* app_launch_ordinal)
{
    if (app_launch_ordinal != NULL) {
        set_has_app_launch_ordinal();
    } else {
        clear_has_app_launch_ordinal();
    }
    app_launch_ordinal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_launch_ordinal);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppSpecifics.app_launch_ordinal)
}

// optional string page_ordinal = 4;
bool AppSpecifics::has_page_ordinal() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void AppSpecifics::set_has_page_ordinal()
{
    _has_bits_[0] |= 0x00000008u;
}
void AppSpecifics::clear_has_page_ordinal()
{
    _has_bits_[0] &= ~0x00000008u;
}
void AppSpecifics::clear_page_ordinal()
{
    page_ordinal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_page_ordinal();
}
const ::std::string& AppSpecifics::page_ordinal() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.page_ordinal)
    return page_ordinal_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSpecifics::set_page_ordinal(const ::std::string& value)
{
    set_has_page_ordinal();
    page_ordinal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppSpecifics.page_ordinal)
}
void AppSpecifics::set_page_ordinal(const char* value)
{
    set_has_page_ordinal();
    page_ordinal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppSpecifics.page_ordinal)
}
void AppSpecifics::set_page_ordinal(const char* value, size_t size)
{
    set_has_page_ordinal();
    page_ordinal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppSpecifics.page_ordinal)
}
::std::string* AppSpecifics::mutable_page_ordinal()
{
    set_has_page_ordinal();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.page_ordinal)
    return page_ordinal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppSpecifics::release_page_ordinal()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppSpecifics.page_ordinal)
    clear_has_page_ordinal();
    return page_ordinal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSpecifics::set_allocated_page_ordinal(::std::string* page_ordinal)
{
    if (page_ordinal != NULL) {
        set_has_page_ordinal();
    } else {
        clear_has_page_ordinal();
    }
    page_ordinal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_ordinal);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppSpecifics.page_ordinal)
}

// optional .sync_pb.AppSpecifics.LaunchType launch_type = 5;
bool AppSpecifics::has_launch_type() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void AppSpecifics::set_has_launch_type()
{
    _has_bits_[0] |= 0x00000010u;
}
void AppSpecifics::clear_has_launch_type()
{
    _has_bits_[0] &= ~0x00000010u;
}
void AppSpecifics::clear_launch_type()
{
    launch_type_ = 0;
    clear_has_launch_type();
}
::sync_pb::AppSpecifics_LaunchType AppSpecifics::launch_type() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.launch_type)
    return static_cast<::sync_pb::AppSpecifics_LaunchType>(launch_type_);
}
void AppSpecifics::set_launch_type(::sync_pb::AppSpecifics_LaunchType value)
{
    assert(::sync_pb::AppSpecifics_LaunchType_IsValid(value));
    set_has_launch_type();
    launch_type_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.AppSpecifics.launch_type)
}

// optional string bookmark_app_url = 6;
bool AppSpecifics::has_bookmark_app_url() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
void AppSpecifics::set_has_bookmark_app_url()
{
    _has_bits_[0] |= 0x00000020u;
}
void AppSpecifics::clear_has_bookmark_app_url()
{
    _has_bits_[0] &= ~0x00000020u;
}
void AppSpecifics::clear_bookmark_app_url()
{
    bookmark_app_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_bookmark_app_url();
}
const ::std::string& AppSpecifics::bookmark_app_url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.bookmark_app_url)
    return bookmark_app_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSpecifics::set_bookmark_app_url(const ::std::string& value)
{
    set_has_bookmark_app_url();
    bookmark_app_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppSpecifics.bookmark_app_url)
}
void AppSpecifics::set_bookmark_app_url(const char* value)
{
    set_has_bookmark_app_url();
    bookmark_app_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppSpecifics.bookmark_app_url)
}
void AppSpecifics::set_bookmark_app_url(const char* value, size_t size)
{
    set_has_bookmark_app_url();
    bookmark_app_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppSpecifics.bookmark_app_url)
}
::std::string* AppSpecifics::mutable_bookmark_app_url()
{
    set_has_bookmark_app_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.bookmark_app_url)
    return bookmark_app_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppSpecifics::release_bookmark_app_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppSpecifics.bookmark_app_url)
    clear_has_bookmark_app_url();
    return bookmark_app_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSpecifics::set_allocated_bookmark_app_url(::std::string* bookmark_app_url)
{
    if (bookmark_app_url != NULL) {
        set_has_bookmark_app_url();
    } else {
        clear_has_bookmark_app_url();
    }
    bookmark_app_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bookmark_app_url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppSpecifics.bookmark_app_url)
}

// optional string bookmark_app_description = 7;
bool AppSpecifics::has_bookmark_app_description() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
void AppSpecifics::set_has_bookmark_app_description()
{
    _has_bits_[0] |= 0x00000040u;
}
void AppSpecifics::clear_has_bookmark_app_description()
{
    _has_bits_[0] &= ~0x00000040u;
}
void AppSpecifics::clear_bookmark_app_description()
{
    bookmark_app_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_bookmark_app_description();
}
const ::std::string& AppSpecifics::bookmark_app_description() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.bookmark_app_description)
    return bookmark_app_description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSpecifics::set_bookmark_app_description(const ::std::string& value)
{
    set_has_bookmark_app_description();
    bookmark_app_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppSpecifics.bookmark_app_description)
}
void AppSpecifics::set_bookmark_app_description(const char* value)
{
    set_has_bookmark_app_description();
    bookmark_app_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppSpecifics.bookmark_app_description)
}
void AppSpecifics::set_bookmark_app_description(const char* value, size_t size)
{
    set_has_bookmark_app_description();
    bookmark_app_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppSpecifics.bookmark_app_description)
}
::std::string* AppSpecifics::mutable_bookmark_app_description()
{
    set_has_bookmark_app_description();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.bookmark_app_description)
    return bookmark_app_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppSpecifics::release_bookmark_app_description()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppSpecifics.bookmark_app_description)
    clear_has_bookmark_app_description();
    return bookmark_app_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSpecifics::set_allocated_bookmark_app_description(::std::string* bookmark_app_description)
{
    if (bookmark_app_description != NULL) {
        set_has_bookmark_app_description();
    } else {
        clear_has_bookmark_app_description();
    }
    bookmark_app_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bookmark_app_description);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppSpecifics.bookmark_app_description)
}

// optional string bookmark_app_icon_color = 8;
bool AppSpecifics::has_bookmark_app_icon_color() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
void AppSpecifics::set_has_bookmark_app_icon_color()
{
    _has_bits_[0] |= 0x00000080u;
}
void AppSpecifics::clear_has_bookmark_app_icon_color()
{
    _has_bits_[0] &= ~0x00000080u;
}
void AppSpecifics::clear_bookmark_app_icon_color()
{
    bookmark_app_icon_color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_bookmark_app_icon_color();
}
const ::std::string& AppSpecifics::bookmark_app_icon_color() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.bookmark_app_icon_color)
    return bookmark_app_icon_color_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSpecifics::set_bookmark_app_icon_color(const ::std::string& value)
{
    set_has_bookmark_app_icon_color();
    bookmark_app_icon_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppSpecifics.bookmark_app_icon_color)
}
void AppSpecifics::set_bookmark_app_icon_color(const char* value)
{
    set_has_bookmark_app_icon_color();
    bookmark_app_icon_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppSpecifics.bookmark_app_icon_color)
}
void AppSpecifics::set_bookmark_app_icon_color(const char* value, size_t size)
{
    set_has_bookmark_app_icon_color();
    bookmark_app_icon_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppSpecifics.bookmark_app_icon_color)
}
::std::string* AppSpecifics::mutable_bookmark_app_icon_color()
{
    set_has_bookmark_app_icon_color();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.bookmark_app_icon_color)
    return bookmark_app_icon_color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppSpecifics::release_bookmark_app_icon_color()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppSpecifics.bookmark_app_icon_color)
    clear_has_bookmark_app_icon_color();
    return bookmark_app_icon_color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSpecifics::set_allocated_bookmark_app_icon_color(::std::string* bookmark_app_icon_color)
{
    if (bookmark_app_icon_color != NULL) {
        set_has_bookmark_app_icon_color();
    } else {
        clear_has_bookmark_app_icon_color();
    }
    bookmark_app_icon_color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bookmark_app_icon_color);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppSpecifics.bookmark_app_icon_color)
}

// repeated .sync_pb.LinkedAppIconInfo linked_app_icons = 9;
int AppSpecifics::linked_app_icons_size() const
{
    return linked_app_icons_.size();
}
void AppSpecifics::clear_linked_app_icons()
{
    linked_app_icons_.Clear();
}
const ::sync_pb::LinkedAppIconInfo& AppSpecifics::linked_app_icons(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppSpecifics.linked_app_icons)
    return linked_app_icons_.Get(index);
}
::sync_pb::LinkedAppIconInfo* AppSpecifics::mutable_linked_app_icons(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.AppSpecifics.linked_app_icons)
    return linked_app_icons_.Mutable(index);
}
::sync_pb::LinkedAppIconInfo* AppSpecifics::add_linked_app_icons()
{
    // @@protoc_insertion_point(field_add:sync_pb.AppSpecifics.linked_app_icons)
    return linked_app_icons_.Add();
}
::google::protobuf::RepeatedPtrField<::sync_pb::LinkedAppIconInfo>*
AppSpecifics::mutable_linked_app_icons()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AppSpecifics.linked_app_icons)
    return &linked_app_icons_;
}
const ::google::protobuf::RepeatedPtrField<::sync_pb::LinkedAppIconInfo>&
AppSpecifics::linked_app_icons() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AppSpecifics.linked_app_icons)
    return linked_app_icons_;
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace sync_pb

// @@protoc_insertion_point(global_scope)
