// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app_notification_specifics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "app_notification_specifics.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {

void protobuf_ShutdownFile_app_5fnotification_5fspecifics_2eproto()
{
    delete AppNotification::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_app_5fnotification_5fspecifics_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_app_5fnotification_5fspecifics_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    AppNotification::default_instance_ = new AppNotification();
    AppNotification::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_app_5fnotification_5fspecifics_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_app_5fnotification_5fspecifics_2eproto_once_);
void protobuf_AddDesc_app_5fnotification_5fspecifics_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_app_5fnotification_5fspecifics_2eproto_once_,
        &protobuf_AddDesc_app_5fnotification_5fspecifics_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_app_5fnotification_5fspecifics_2eproto {
    StaticDescriptorInitializer_app_5fnotification_5fspecifics_2eproto()
    {
        protobuf_AddDesc_app_5fnotification_5fspecifics_2eproto();
    }
} static_descriptor_initializer_app_5fnotification_5fspecifics_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForAppNotification(
    AppNotification* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppNotification::kGuidFieldNumber;
const int AppNotification::kAppIdFieldNumber;
const int AppNotification::kCreationTimestampMsFieldNumber;
const int AppNotification::kTitleFieldNumber;
const int AppNotification::kBodyTextFieldNumber;
const int AppNotification::kLinkUrlFieldNumber;
const int AppNotification::kLinkTextFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

AppNotification::AppNotification()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.AppNotification)
}

void AppNotification::InitAsDefaultInstance()
{
}

AppNotification::AppNotification(const AppNotification& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.AppNotification)
}

void AppNotification::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    creation_timestamp_ms_ = GOOGLE_LONGLONG(0);
    title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    body_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    link_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    link_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppNotification::~AppNotification()
{
    // @@protoc_insertion_point(destructor:sync_pb.AppNotification)
    SharedDtor();
}

void AppNotification::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    app_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    body_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    link_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    link_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void AppNotification::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AppNotification& AppNotification::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_app_5fnotification_5fspecifics_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_app_5fnotification_5fspecifics_2eproto();
#endif
    return *default_instance_;
}

AppNotification* AppNotification::default_instance_ = NULL;

AppNotification* AppNotification::New(::google::protobuf::Arena* arena) const
{
    AppNotification* n = new AppNotification;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void AppNotification::Clear()
{
    // @@protoc_insertion_point(message_clear_start:sync_pb.AppNotification)
    if (_has_bits_[0 / 32] & 127u) {
        if (has_guid()) {
            guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_app_id()) {
            app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        creation_timestamp_ms_ = GOOGLE_LONGLONG(0);
        if (has_title()) {
            title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_body_text()) {
            body_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_link_url()) {
            link_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_link_text()) {
            link_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AppNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForAppNotification, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.AppNotification)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional string guid = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_guid()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_app_id;
            break;
        }

        // optional string app_id = 2;
        case 2: {
            if (tag == 18) {
            parse_app_id:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_app_id()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_creation_timestamp_ms;
            break;
        }

        // optional int64 creation_timestamp_ms = 3;
        case 3: {
            if (tag == 24) {
            parse_creation_timestamp_ms:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &creation_timestamp_ms_)));
                set_has_creation_timestamp_ms();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(34))
                goto parse_title;
            break;
        }

        // optional string title = 4;
        case 4: {
            if (tag == 34) {
            parse_title:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_title()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(42))
                goto parse_body_text;
            break;
        }

        // optional string body_text = 5;
        case 5: {
            if (tag == 42) {
            parse_body_text:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_body_text()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(50))
                goto parse_link_url;
            break;
        }

        // optional string link_url = 6;
        case 6: {
            if (tag == 50) {
            parse_link_url:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_link_url()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(58))
                goto parse_link_text;
            break;
        }

        // optional string link_text = 7;
        case 7: {
            if (tag == 58) {
            parse_link_text:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_link_text()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.AppNotification)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.AppNotification)
    return false;
#undef DO_
}

void AppNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.AppNotification)
    // optional string guid = 1;
    if (has_guid()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->guid(), output);
    }

    // optional string app_id = 2;
    if (has_app_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            2, this->app_id(), output);
    }

    // optional int64 creation_timestamp_ms = 3;
    if (has_creation_timestamp_ms()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->creation_timestamp_ms(), output);
    }

    // optional string title = 4;
    if (has_title()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            4, this->title(), output);
    }

    // optional string body_text = 5;
    if (has_body_text()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            5, this->body_text(), output);
    }

    // optional string link_url = 6;
    if (has_link_url()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            6, this->link_url(), output);
    }

    // optional string link_text = 7;
    if (has_link_text()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            7, this->link_text(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.AppNotification)
}

int AppNotification::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.AppNotification)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 127u) {
        // optional string guid = 1;
        if (has_guid()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->guid());
        }

        // optional string app_id = 2;
        if (has_app_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->app_id());
        }

        // optional int64 creation_timestamp_ms = 3;
        if (has_creation_timestamp_ms()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->creation_timestamp_ms());
        }

        // optional string title = 4;
        if (has_title()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->title());
        }

        // optional string body_text = 5;
        if (has_body_text()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->body_text());
        }

        // optional string link_url = 6;
        if (has_link_url()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->link_url());
        }

        // optional string link_text = 7;
        if (has_link_text()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->link_text());
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void AppNotification::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const AppNotification*>(&from));
}

void AppNotification::MergeFrom(const AppNotification& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.AppNotification)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_guid()) {
            set_has_guid();
            guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
        }
        if (from.has_app_id()) {
            set_has_app_id();
            app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
        }
        if (from.has_creation_timestamp_ms()) {
            set_creation_timestamp_ms(from.creation_timestamp_ms());
        }
        if (from.has_title()) {
            set_has_title();
            title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
        }
        if (from.has_body_text()) {
            set_has_body_text();
            body_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_text_);
        }
        if (from.has_link_url()) {
            set_has_link_url();
            link_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_url_);
        }
        if (from.has_link_text()) {
            set_has_link_text();
            link_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_text_);
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void AppNotification::CopyFrom(const AppNotification& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.AppNotification)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool AppNotification::IsInitialized() const
{

    return true;
}

void AppNotification::Swap(AppNotification* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void AppNotification::InternalSwap(AppNotification* other)
{
    guid_.Swap(&other->guid_);
    app_id_.Swap(&other->app_id_);
    std::swap(creation_timestamp_ms_, other->creation_timestamp_ms_);
    title_.Swap(&other->title_);
    body_text_.Swap(&other->body_text_);
    link_url_.Swap(&other->link_url_);
    link_text_.Swap(&other->link_text_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string AppNotification::GetTypeName() const
{
    return "sync_pb.AppNotification";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppNotification

// optional string guid = 1;
bool AppNotification::has_guid() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppNotification::set_has_guid()
{
    _has_bits_[0] |= 0x00000001u;
}
void AppNotification::clear_has_guid()
{
    _has_bits_[0] &= ~0x00000001u;
}
void AppNotification::clear_guid()
{
    guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_guid();
}
const ::std::string& AppNotification::guid() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppNotification.guid)
    return guid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_guid(const ::std::string& value)
{
    set_has_guid();
    guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppNotification.guid)
}
void AppNotification::set_guid(const char* value)
{
    set_has_guid();
    guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppNotification.guid)
}
void AppNotification::set_guid(const char* value, size_t size)
{
    set_has_guid();
    guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppNotification.guid)
}
::std::string* AppNotification::mutable_guid()
{
    set_has_guid();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppNotification.guid)
    return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotification::release_guid()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppNotification.guid)
    clear_has_guid();
    return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_allocated_guid(::std::string* guid)
{
    if (guid != NULL) {
        set_has_guid();
    } else {
        clear_has_guid();
    }
    guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppNotification.guid)
}

// optional string app_id = 2;
bool AppNotification::has_app_id() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppNotification::set_has_app_id()
{
    _has_bits_[0] |= 0x00000002u;
}
void AppNotification::clear_has_app_id()
{
    _has_bits_[0] &= ~0x00000002u;
}
void AppNotification::clear_app_id()
{
    app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_app_id();
}
const ::std::string& AppNotification::app_id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppNotification.app_id)
    return app_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_app_id(const ::std::string& value)
{
    set_has_app_id();
    app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppNotification.app_id)
}
void AppNotification::set_app_id(const char* value)
{
    set_has_app_id();
    app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppNotification.app_id)
}
void AppNotification::set_app_id(const char* value, size_t size)
{
    set_has_app_id();
    app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppNotification.app_id)
}
::std::string* AppNotification::mutable_app_id()
{
    set_has_app_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppNotification.app_id)
    return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotification::release_app_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppNotification.app_id)
    clear_has_app_id();
    return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_allocated_app_id(::std::string* app_id)
{
    if (app_id != NULL) {
        set_has_app_id();
    } else {
        clear_has_app_id();
    }
    app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppNotification.app_id)
}

// optional int64 creation_timestamp_ms = 3;
bool AppNotification::has_creation_timestamp_ms() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void AppNotification::set_has_creation_timestamp_ms()
{
    _has_bits_[0] |= 0x00000004u;
}
void AppNotification::clear_has_creation_timestamp_ms()
{
    _has_bits_[0] &= ~0x00000004u;
}
void AppNotification::clear_creation_timestamp_ms()
{
    creation_timestamp_ms_ = GOOGLE_LONGLONG(0);
    clear_has_creation_timestamp_ms();
}
::google::protobuf::int64 AppNotification::creation_timestamp_ms() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppNotification.creation_timestamp_ms)
    return creation_timestamp_ms_;
}
void AppNotification::set_creation_timestamp_ms(::google::protobuf::int64 value)
{
    set_has_creation_timestamp_ms();
    creation_timestamp_ms_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.AppNotification.creation_timestamp_ms)
}

// optional string title = 4;
bool AppNotification::has_title() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void AppNotification::set_has_title()
{
    _has_bits_[0] |= 0x00000008u;
}
void AppNotification::clear_has_title()
{
    _has_bits_[0] &= ~0x00000008u;
}
void AppNotification::clear_title()
{
    title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_title();
}
const ::std::string& AppNotification::title() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppNotification.title)
    return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_title(const ::std::string& value)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppNotification.title)
}
void AppNotification::set_title(const char* value)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppNotification.title)
}
void AppNotification::set_title(const char* value, size_t size)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppNotification.title)
}
::std::string* AppNotification::mutable_title()
{
    set_has_title();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppNotification.title)
    return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotification::release_title()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppNotification.title)
    clear_has_title();
    return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_allocated_title(::std::string* title)
{
    if (title != NULL) {
        set_has_title();
    } else {
        clear_has_title();
    }
    title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppNotification.title)
}

// optional string body_text = 5;
bool AppNotification::has_body_text() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void AppNotification::set_has_body_text()
{
    _has_bits_[0] |= 0x00000010u;
}
void AppNotification::clear_has_body_text()
{
    _has_bits_[0] &= ~0x00000010u;
}
void AppNotification::clear_body_text()
{
    body_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_body_text();
}
const ::std::string& AppNotification::body_text() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppNotification.body_text)
    return body_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_body_text(const ::std::string& value)
{
    set_has_body_text();
    body_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppNotification.body_text)
}
void AppNotification::set_body_text(const char* value)
{
    set_has_body_text();
    body_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppNotification.body_text)
}
void AppNotification::set_body_text(const char* value, size_t size)
{
    set_has_body_text();
    body_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppNotification.body_text)
}
::std::string* AppNotification::mutable_body_text()
{
    set_has_body_text();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppNotification.body_text)
    return body_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotification::release_body_text()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppNotification.body_text)
    clear_has_body_text();
    return body_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_allocated_body_text(::std::string* body_text)
{
    if (body_text != NULL) {
        set_has_body_text();
    } else {
        clear_has_body_text();
    }
    body_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_text);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppNotification.body_text)
}

// optional string link_url = 6;
bool AppNotification::has_link_url() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
void AppNotification::set_has_link_url()
{
    _has_bits_[0] |= 0x00000020u;
}
void AppNotification::clear_has_link_url()
{
    _has_bits_[0] &= ~0x00000020u;
}
void AppNotification::clear_link_url()
{
    link_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_link_url();
}
const ::std::string& AppNotification::link_url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppNotification.link_url)
    return link_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_link_url(const ::std::string& value)
{
    set_has_link_url();
    link_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppNotification.link_url)
}
void AppNotification::set_link_url(const char* value)
{
    set_has_link_url();
    link_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppNotification.link_url)
}
void AppNotification::set_link_url(const char* value, size_t size)
{
    set_has_link_url();
    link_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppNotification.link_url)
}
::std::string* AppNotification::mutable_link_url()
{
    set_has_link_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppNotification.link_url)
    return link_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotification::release_link_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppNotification.link_url)
    clear_has_link_url();
    return link_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_allocated_link_url(::std::string* link_url)
{
    if (link_url != NULL) {
        set_has_link_url();
    } else {
        clear_has_link_url();
    }
    link_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link_url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppNotification.link_url)
}

// optional string link_text = 7;
bool AppNotification::has_link_text() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
void AppNotification::set_has_link_text()
{
    _has_bits_[0] |= 0x00000040u;
}
void AppNotification::clear_has_link_text()
{
    _has_bits_[0] &= ~0x00000040u;
}
void AppNotification::clear_link_text()
{
    link_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_link_text();
}
const ::std::string& AppNotification::link_text() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AppNotification.link_text)
    return link_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_link_text(const ::std::string& value)
{
    set_has_link_text();
    link_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AppNotification.link_text)
}
void AppNotification::set_link_text(const char* value)
{
    set_has_link_text();
    link_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AppNotification.link_text)
}
void AppNotification::set_link_text(const char* value, size_t size)
{
    set_has_link_text();
    link_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AppNotification.link_text)
}
::std::string* AppNotification::mutable_link_text()
{
    set_has_link_text();
    // @@protoc_insertion_point(field_mutable:sync_pb.AppNotification.link_text)
    return link_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotification::release_link_text()
{
    // @@protoc_insertion_point(field_release:sync_pb.AppNotification.link_text)
    clear_has_link_text();
    return link_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotification::set_allocated_link_text(::std::string* link_text)
{
    if (link_text != NULL) {
        set_has_link_text();
    } else {
        clear_has_link_text();
    }
    link_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link_text);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AppNotification.link_text)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace sync_pb

// @@protoc_insertion_point(global_scope)
