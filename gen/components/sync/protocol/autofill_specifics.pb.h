// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: autofill_specifics.proto

#ifndef PROTOBUF_autofill_5fspecifics_2eproto__INCLUDED
#define PROTOBUF_autofill_5fspecifics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_autofill_5fspecifics_2eproto();
void protobuf_AssignDesc_autofill_5fspecifics_2eproto();
void protobuf_ShutdownFile_autofill_5fspecifics_2eproto();

class AutofillProfileSpecifics;
class AutofillSpecifics;
class AutofillWalletSpecifics;
class WalletMaskedCreditCard;
class WalletMetadataSpecifics;
class WalletPostalAddress;

enum WalletMaskedCreditCard_WalletCardStatus {
    WalletMaskedCreditCard_WalletCardStatus_VALID = 0,
    WalletMaskedCreditCard_WalletCardStatus_EXPIRED = 1
};
bool WalletMaskedCreditCard_WalletCardStatus_IsValid(int value);
const WalletMaskedCreditCard_WalletCardStatus WalletMaskedCreditCard_WalletCardStatus_WalletCardStatus_MIN = WalletMaskedCreditCard_WalletCardStatus_VALID;
const WalletMaskedCreditCard_WalletCardStatus WalletMaskedCreditCard_WalletCardStatus_WalletCardStatus_MAX = WalletMaskedCreditCard_WalletCardStatus_EXPIRED;
const int WalletMaskedCreditCard_WalletCardStatus_WalletCardStatus_ARRAYSIZE = WalletMaskedCreditCard_WalletCardStatus_WalletCardStatus_MAX + 1;

enum WalletMaskedCreditCard_WalletCardType {
    WalletMaskedCreditCard_WalletCardType_UNKNOWN = 0,
    WalletMaskedCreditCard_WalletCardType_AMEX = 1,
    WalletMaskedCreditCard_WalletCardType_DISCOVER = 2,
    WalletMaskedCreditCard_WalletCardType_JCB = 3,
    WalletMaskedCreditCard_WalletCardType_MAESTRO = 4,
    WalletMaskedCreditCard_WalletCardType_MASTER_CARD = 5,
    WalletMaskedCreditCard_WalletCardType_SOLO = 6,
    WalletMaskedCreditCard_WalletCardType_SWITCH = 7,
    WalletMaskedCreditCard_WalletCardType_VISA = 8
};
bool WalletMaskedCreditCard_WalletCardType_IsValid(int value);
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard_WalletCardType_WalletCardType_MIN = WalletMaskedCreditCard_WalletCardType_UNKNOWN;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard_WalletCardType_WalletCardType_MAX = WalletMaskedCreditCard_WalletCardType_VISA;
const int WalletMaskedCreditCard_WalletCardType_WalletCardType_ARRAYSIZE = WalletMaskedCreditCard_WalletCardType_WalletCardType_MAX + 1;

enum WalletMaskedCreditCard_WalletCardClass {
    WalletMaskedCreditCard_WalletCardClass_UNKNOWN_CARD_CLASS = 0,
    WalletMaskedCreditCard_WalletCardClass_CREDIT = 1,
    WalletMaskedCreditCard_WalletCardClass_DEBIT = 2,
    WalletMaskedCreditCard_WalletCardClass_PREPAID = 3
};
bool WalletMaskedCreditCard_WalletCardClass_IsValid(int value);
const WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard_WalletCardClass_WalletCardClass_MIN = WalletMaskedCreditCard_WalletCardClass_UNKNOWN_CARD_CLASS;
const WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard_WalletCardClass_WalletCardClass_MAX = WalletMaskedCreditCard_WalletCardClass_PREPAID;
const int WalletMaskedCreditCard_WalletCardClass_WalletCardClass_ARRAYSIZE = WalletMaskedCreditCard_WalletCardClass_WalletCardClass_MAX + 1;

enum AutofillWalletSpecifics_WalletInfoType {
    AutofillWalletSpecifics_WalletInfoType_UNKNOWN = 0,
    AutofillWalletSpecifics_WalletInfoType_MASKED_CREDIT_CARD = 1,
    AutofillWalletSpecifics_WalletInfoType_POSTAL_ADDRESS = 2
};
bool AutofillWalletSpecifics_WalletInfoType_IsValid(int value);
const AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics_WalletInfoType_WalletInfoType_MIN = AutofillWalletSpecifics_WalletInfoType_UNKNOWN;
const AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics_WalletInfoType_WalletInfoType_MAX = AutofillWalletSpecifics_WalletInfoType_POSTAL_ADDRESS;
const int AutofillWalletSpecifics_WalletInfoType_WalletInfoType_ARRAYSIZE = AutofillWalletSpecifics_WalletInfoType_WalletInfoType_MAX + 1;

enum WalletMetadataSpecifics_Type {
    WalletMetadataSpecifics_Type_UNKNOWN = 0,
    WalletMetadataSpecifics_Type_CARD = 1,
    WalletMetadataSpecifics_Type_ADDRESS = 2
};
bool WalletMetadataSpecifics_Type_IsValid(int value);
const WalletMetadataSpecifics_Type WalletMetadataSpecifics_Type_Type_MIN = WalletMetadataSpecifics_Type_UNKNOWN;
const WalletMetadataSpecifics_Type WalletMetadataSpecifics_Type_Type_MAX = WalletMetadataSpecifics_Type_ADDRESS;
const int WalletMetadataSpecifics_Type_Type_ARRAYSIZE = WalletMetadataSpecifics_Type_Type_MAX + 1;

// ===================================================================

class AutofillProfileSpecifics : public ::google::protobuf::MessageLite {
public:
    AutofillProfileSpecifics();
    virtual ~AutofillProfileSpecifics();

    AutofillProfileSpecifics(const AutofillProfileSpecifics& from);

    inline AutofillProfileSpecifics& operator=(const AutofillProfileSpecifics& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const AutofillProfileSpecifics& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const AutofillProfileSpecifics* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillProfileSpecifics* other);

    // implements Message ----------------------------------------------

    inline AutofillProfileSpecifics* New() const { return New(NULL); }

    AutofillProfileSpecifics* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const AutofillProfileSpecifics& from);
    void MergeFrom(const AutofillProfileSpecifics& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(AutofillProfileSpecifics* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional string guid = 15;
    bool has_guid() const;
    void clear_guid();
    static const int kGuidFieldNumber = 15;
    const ::std::string& guid() const;
    void set_guid(const ::std::string& value);
    void set_guid(const char* value);
    void set_guid(const char* value, size_t size);
    ::std::string* mutable_guid();
    ::std::string* release_guid();
    void set_allocated_guid(::std::string* guid);

    // optional string origin = 16;
    bool has_origin() const;
    void clear_origin();
    static const int kOriginFieldNumber = 16;
    const ::std::string& origin() const;
    void set_origin(const ::std::string& value);
    void set_origin(const char* value);
    void set_origin(const char* value, size_t size);
    ::std::string* mutable_origin();
    ::std::string* release_origin();
    void set_allocated_origin(::std::string* origin);

    // optional int64 use_count = 22;
    bool has_use_count() const;
    void clear_use_count();
    static const int kUseCountFieldNumber = 22;
    ::google::protobuf::int64 use_count() const;
    void set_use_count(::google::protobuf::int64 value);

    // optional int64 use_date = 23;
    bool has_use_date() const;
    void clear_use_date();
    static const int kUseDateFieldNumber = 23;
    ::google::protobuf::int64 use_date() const;
    void set_use_date(::google::protobuf::int64 value);

    // repeated string name_first = 2;
    int name_first_size() const;
    void clear_name_first();
    static const int kNameFirstFieldNumber = 2;
    const ::std::string& name_first(int index) const;
    ::std::string* mutable_name_first(int index);
    void set_name_first(int index, const ::std::string& value);
    void set_name_first(int index, const char* value);
    void set_name_first(int index, const char* value, size_t size);
    ::std::string* add_name_first();
    void add_name_first(const ::std::string& value);
    void add_name_first(const char* value);
    void add_name_first(const char* value, size_t size);
    const ::google::protobuf::RepeatedPtrField<::std::string>& name_first() const;
    ::google::protobuf::RepeatedPtrField<::std::string>* mutable_name_first();

    // repeated string name_middle = 3;
    int name_middle_size() const;
    void clear_name_middle();
    static const int kNameMiddleFieldNumber = 3;
    const ::std::string& name_middle(int index) const;
    ::std::string* mutable_name_middle(int index);
    void set_name_middle(int index, const ::std::string& value);
    void set_name_middle(int index, const char* value);
    void set_name_middle(int index, const char* value, size_t size);
    ::std::string* add_name_middle();
    void add_name_middle(const ::std::string& value);
    void add_name_middle(const char* value);
    void add_name_middle(const char* value, size_t size);
    const ::google::protobuf::RepeatedPtrField<::std::string>& name_middle() const;
    ::google::protobuf::RepeatedPtrField<::std::string>* mutable_name_middle();

    // repeated string name_last = 4;
    int name_last_size() const;
    void clear_name_last();
    static const int kNameLastFieldNumber = 4;
    const ::std::string& name_last(int index) const;
    ::std::string* mutable_name_last(int index);
    void set_name_last(int index, const ::std::string& value);
    void set_name_last(int index, const char* value);
    void set_name_last(int index, const char* value, size_t size);
    ::std::string* add_name_last();
    void add_name_last(const ::std::string& value);
    void add_name_last(const char* value);
    void add_name_last(const char* value, size_t size);
    const ::google::protobuf::RepeatedPtrField<::std::string>& name_last() const;
    ::google::protobuf::RepeatedPtrField<::std::string>* mutable_name_last();

    // repeated string name_full = 21;
    int name_full_size() const;
    void clear_name_full();
    static const int kNameFullFieldNumber = 21;
    const ::std::string& name_full(int index) const;
    ::std::string* mutable_name_full(int index);
    void set_name_full(int index, const ::std::string& value);
    void set_name_full(int index, const char* value);
    void set_name_full(int index, const char* value, size_t size);
    ::std::string* add_name_full();
    void add_name_full(const ::std::string& value);
    void add_name_full(const char* value);
    void add_name_full(const char* value, size_t size);
    const ::google::protobuf::RepeatedPtrField<::std::string>& name_full() const;
    ::google::protobuf::RepeatedPtrField<::std::string>* mutable_name_full();

    // repeated string email_address = 5;
    int email_address_size() const;
    void clear_email_address();
    static const int kEmailAddressFieldNumber = 5;
    const ::std::string& email_address(int index) const;
    ::std::string* mutable_email_address(int index);
    void set_email_address(int index, const ::std::string& value);
    void set_email_address(int index, const char* value);
    void set_email_address(int index, const char* value, size_t size);
    ::std::string* add_email_address();
    void add_email_address(const ::std::string& value);
    void add_email_address(const char* value);
    void add_email_address(const char* value, size_t size);
    const ::google::protobuf::RepeatedPtrField<::std::string>& email_address() const;
    ::google::protobuf::RepeatedPtrField<::std::string>* mutable_email_address();

    // optional string company_name = 6;
    bool has_company_name() const;
    void clear_company_name();
    static const int kCompanyNameFieldNumber = 6;
    const ::std::string& company_name() const;
    void set_company_name(const ::std::string& value);
    void set_company_name(const char* value);
    void set_company_name(const char* value, size_t size);
    ::std::string* mutable_company_name();
    ::std::string* release_company_name();
    void set_allocated_company_name(::std::string* company_name);

    // optional string address_home_line1 = 7;
    bool has_address_home_line1() const;
    void clear_address_home_line1();
    static const int kAddressHomeLine1FieldNumber = 7;
    const ::std::string& address_home_line1() const;
    void set_address_home_line1(const ::std::string& value);
    void set_address_home_line1(const char* value);
    void set_address_home_line1(const char* value, size_t size);
    ::std::string* mutable_address_home_line1();
    ::std::string* release_address_home_line1();
    void set_allocated_address_home_line1(::std::string* address_home_line1);

    // optional string address_home_line2 = 8;
    bool has_address_home_line2() const;
    void clear_address_home_line2();
    static const int kAddressHomeLine2FieldNumber = 8;
    const ::std::string& address_home_line2() const;
    void set_address_home_line2(const ::std::string& value);
    void set_address_home_line2(const char* value);
    void set_address_home_line2(const char* value, size_t size);
    ::std::string* mutable_address_home_line2();
    ::std::string* release_address_home_line2();
    void set_allocated_address_home_line2(::std::string* address_home_line2);

    // optional string address_home_city = 9;
    bool has_address_home_city() const;
    void clear_address_home_city();
    static const int kAddressHomeCityFieldNumber = 9;
    const ::std::string& address_home_city() const;
    void set_address_home_city(const ::std::string& value);
    void set_address_home_city(const char* value);
    void set_address_home_city(const char* value, size_t size);
    ::std::string* mutable_address_home_city();
    ::std::string* release_address_home_city();
    void set_allocated_address_home_city(::std::string* address_home_city);

    // optional string address_home_state = 10;
    bool has_address_home_state() const;
    void clear_address_home_state();
    static const int kAddressHomeStateFieldNumber = 10;
    const ::std::string& address_home_state() const;
    void set_address_home_state(const ::std::string& value);
    void set_address_home_state(const char* value);
    void set_address_home_state(const char* value, size_t size);
    ::std::string* mutable_address_home_state();
    ::std::string* release_address_home_state();
    void set_allocated_address_home_state(::std::string* address_home_state);

    // optional string address_home_zip = 11;
    bool has_address_home_zip() const;
    void clear_address_home_zip();
    static const int kAddressHomeZipFieldNumber = 11;
    const ::std::string& address_home_zip() const;
    void set_address_home_zip(const ::std::string& value);
    void set_address_home_zip(const char* value);
    void set_address_home_zip(const char* value, size_t size);
    ::std::string* mutable_address_home_zip();
    ::std::string* release_address_home_zip();
    void set_allocated_address_home_zip(::std::string* address_home_zip);

    // optional string address_home_country = 12;
    bool has_address_home_country() const;
    void clear_address_home_country();
    static const int kAddressHomeCountryFieldNumber = 12;
    const ::std::string& address_home_country() const;
    void set_address_home_country(const ::std::string& value);
    void set_address_home_country(const char* value);
    void set_address_home_country(const char* value, size_t size);
    ::std::string* mutable_address_home_country();
    ::std::string* release_address_home_country();
    void set_allocated_address_home_country(::std::string* address_home_country);

    // optional string address_home_street_address = 17;
    bool has_address_home_street_address() const;
    void clear_address_home_street_address();
    static const int kAddressHomeStreetAddressFieldNumber = 17;
    const ::std::string& address_home_street_address() const;
    void set_address_home_street_address(const ::std::string& value);
    void set_address_home_street_address(const char* value);
    void set_address_home_street_address(const char* value, size_t size);
    ::std::string* mutable_address_home_street_address();
    ::std::string* release_address_home_street_address();
    void set_allocated_address_home_street_address(::std::string* address_home_street_address);

    // optional string address_home_sorting_code = 18;
    bool has_address_home_sorting_code() const;
    void clear_address_home_sorting_code();
    static const int kAddressHomeSortingCodeFieldNumber = 18;
    const ::std::string& address_home_sorting_code() const;
    void set_address_home_sorting_code(const ::std::string& value);
    void set_address_home_sorting_code(const char* value);
    void set_address_home_sorting_code(const char* value, size_t size);
    ::std::string* mutable_address_home_sorting_code();
    ::std::string* release_address_home_sorting_code();
    void set_allocated_address_home_sorting_code(::std::string* address_home_sorting_code);

    // optional string address_home_dependent_locality = 19;
    bool has_address_home_dependent_locality() const;
    void clear_address_home_dependent_locality();
    static const int kAddressHomeDependentLocalityFieldNumber = 19;
    const ::std::string& address_home_dependent_locality() const;
    void set_address_home_dependent_locality(const ::std::string& value);
    void set_address_home_dependent_locality(const char* value);
    void set_address_home_dependent_locality(const char* value, size_t size);
    ::std::string* mutable_address_home_dependent_locality();
    ::std::string* release_address_home_dependent_locality();
    void set_allocated_address_home_dependent_locality(::std::string* address_home_dependent_locality);

    // optional string address_home_language_code = 20;
    bool has_address_home_language_code() const;
    void clear_address_home_language_code();
    static const int kAddressHomeLanguageCodeFieldNumber = 20;
    const ::std::string& address_home_language_code() const;
    void set_address_home_language_code(const ::std::string& value);
    void set_address_home_language_code(const char* value);
    void set_address_home_language_code(const char* value, size_t size);
    ::std::string* mutable_address_home_language_code();
    ::std::string* release_address_home_language_code();
    void set_allocated_address_home_language_code(::std::string* address_home_language_code);

    // repeated string phone_home_whole_number = 13;
    int phone_home_whole_number_size() const;
    void clear_phone_home_whole_number();
    static const int kPhoneHomeWholeNumberFieldNumber = 13;
    const ::std::string& phone_home_whole_number(int index) const;
    ::std::string* mutable_phone_home_whole_number(int index);
    void set_phone_home_whole_number(int index, const ::std::string& value);
    void set_phone_home_whole_number(int index, const char* value);
    void set_phone_home_whole_number(int index, const char* value, size_t size);
    ::std::string* add_phone_home_whole_number();
    void add_phone_home_whole_number(const ::std::string& value);
    void add_phone_home_whole_number(const char* value);
    void add_phone_home_whole_number(const char* value, size_t size);
    const ::google::protobuf::RepeatedPtrField<::std::string>& phone_home_whole_number() const;
    ::google::protobuf::RepeatedPtrField<::std::string>* mutable_phone_home_whole_number();

    // optional string label = 1 [deprecated = true];
    PROTOBUF_DEPRECATED_ATTR bool has_label() const;
    PROTOBUF_DEPRECATED_ATTR void clear_label();
    PROTOBUF_DEPRECATED_ATTR static const int kLabelFieldNumber = 1;
    PROTOBUF_DEPRECATED_ATTR const ::std::string& label() const;
    PROTOBUF_DEPRECATED_ATTR void set_label(const ::std::string& value);
    PROTOBUF_DEPRECATED_ATTR void set_label(const char* value);
    PROTOBUF_DEPRECATED_ATTR void set_label(const char* value, size_t size);
    PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_label();
    PROTOBUF_DEPRECATED_ATTR ::std::string* release_label();
    PROTOBUF_DEPRECATED_ATTR void set_allocated_label(::std::string* label);

    // optional string phone_fax_whole_number = 14 [deprecated = true];
    PROTOBUF_DEPRECATED_ATTR bool has_phone_fax_whole_number() const;
    PROTOBUF_DEPRECATED_ATTR void clear_phone_fax_whole_number();
    PROTOBUF_DEPRECATED_ATTR static const int kPhoneFaxWholeNumberFieldNumber = 14;
    PROTOBUF_DEPRECATED_ATTR const ::std::string& phone_fax_whole_number() const;
    PROTOBUF_DEPRECATED_ATTR void set_phone_fax_whole_number(const ::std::string& value);
    PROTOBUF_DEPRECATED_ATTR void set_phone_fax_whole_number(const char* value);
    PROTOBUF_DEPRECATED_ATTR void set_phone_fax_whole_number(const char* value, size_t size);
    PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_phone_fax_whole_number();
    PROTOBUF_DEPRECATED_ATTR ::std::string* release_phone_fax_whole_number();
    PROTOBUF_DEPRECATED_ATTR void set_allocated_phone_fax_whole_number(::std::string* phone_fax_whole_number);

    // @@protoc_insertion_point(class_scope:sync_pb.AutofillProfileSpecifics)
private:
    inline void set_has_guid();
    inline void clear_has_guid();
    inline void set_has_origin();
    inline void clear_has_origin();
    inline void set_has_use_count();
    inline void clear_has_use_count();
    inline void set_has_use_date();
    inline void clear_has_use_date();
    inline void set_has_company_name();
    inline void clear_has_company_name();
    inline void set_has_address_home_line1();
    inline void clear_has_address_home_line1();
    inline void set_has_address_home_line2();
    inline void clear_has_address_home_line2();
    inline void set_has_address_home_city();
    inline void clear_has_address_home_city();
    inline void set_has_address_home_state();
    inline void clear_has_address_home_state();
    inline void set_has_address_home_zip();
    inline void clear_has_address_home_zip();
    inline void set_has_address_home_country();
    inline void clear_has_address_home_country();
    inline void set_has_address_home_street_address();
    inline void clear_has_address_home_street_address();
    inline void set_has_address_home_sorting_code();
    inline void clear_has_address_home_sorting_code();
    inline void set_has_address_home_dependent_locality();
    inline void clear_has_address_home_dependent_locality();
    inline void set_has_address_home_language_code();
    inline void clear_has_address_home_language_code();
    inline void set_has_label();
    inline void clear_has_label();
    inline void set_has_phone_fax_whole_number();
    inline void clear_has_phone_fax_whole_number();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr guid_;
    ::google::protobuf::internal::ArenaStringPtr origin_;
    ::google::protobuf::int64 use_count_;
    ::google::protobuf::int64 use_date_;
    ::google::protobuf::RepeatedPtrField<::std::string> name_first_;
    ::google::protobuf::RepeatedPtrField<::std::string> name_middle_;
    ::google::protobuf::RepeatedPtrField<::std::string> name_last_;
    ::google::protobuf::RepeatedPtrField<::std::string> name_full_;
    ::google::protobuf::RepeatedPtrField<::std::string> email_address_;
    ::google::protobuf::internal::ArenaStringPtr company_name_;
    ::google::protobuf::internal::ArenaStringPtr address_home_line1_;
    ::google::protobuf::internal::ArenaStringPtr address_home_line2_;
    ::google::protobuf::internal::ArenaStringPtr address_home_city_;
    ::google::protobuf::internal::ArenaStringPtr address_home_state_;
    ::google::protobuf::internal::ArenaStringPtr address_home_zip_;
    ::google::protobuf::internal::ArenaStringPtr address_home_country_;
    ::google::protobuf::internal::ArenaStringPtr address_home_street_address_;
    ::google::protobuf::internal::ArenaStringPtr address_home_sorting_code_;
    ::google::protobuf::internal::ArenaStringPtr address_home_dependent_locality_;
    ::google::protobuf::internal::ArenaStringPtr address_home_language_code_;
    ::google::protobuf::RepeatedPtrField<::std::string> phone_home_whole_number_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    ::google::protobuf::internal::ArenaStringPtr phone_fax_whole_number_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_autofill_5fspecifics_2eproto_impl();
#else
    friend void protobuf_AddDesc_autofill_5fspecifics_2eproto();
#endif
    friend void protobuf_AssignDesc_autofill_5fspecifics_2eproto();
    friend void protobuf_ShutdownFile_autofill_5fspecifics_2eproto();

    void InitAsDefaultInstance();
    static AutofillProfileSpecifics* default_instance_;
};
// -------------------------------------------------------------------

class AutofillSpecifics : public ::google::protobuf::MessageLite {
public:
    AutofillSpecifics();
    virtual ~AutofillSpecifics();

    AutofillSpecifics(const AutofillSpecifics& from);

    inline AutofillSpecifics& operator=(const AutofillSpecifics& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const AutofillSpecifics& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const AutofillSpecifics* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillSpecifics* other);

    // implements Message ----------------------------------------------

    inline AutofillSpecifics* New() const { return New(NULL); }

    AutofillSpecifics* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const AutofillSpecifics& from);
    void MergeFrom(const AutofillSpecifics& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(AutofillSpecifics* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional string name = 1;
    bool has_name() const;
    void clear_name();
    static const int kNameFieldNumber = 1;
    const ::std::string& name() const;
    void set_name(const ::std::string& value);
    void set_name(const char* value);
    void set_name(const char* value, size_t size);
    ::std::string* mutable_name();
    ::std::string* release_name();
    void set_allocated_name(::std::string* name);

    // optional string value = 2;
    bool has_value() const;
    void clear_value();
    static const int kValueFieldNumber = 2;
    const ::std::string& value() const;
    void set_value(const ::std::string& value);
    void set_value(const char* value);
    void set_value(const char* value, size_t size);
    ::std::string* mutable_value();
    ::std::string* release_value();
    void set_allocated_value(::std::string* value);

    // repeated int64 usage_timestamp = 3;
    int usage_timestamp_size() const;
    void clear_usage_timestamp();
    static const int kUsageTimestampFieldNumber = 3;
    ::google::protobuf::int64 usage_timestamp(int index) const;
    void set_usage_timestamp(int index, ::google::protobuf::int64 value);
    void add_usage_timestamp(::google::protobuf::int64 value);
    const ::google::protobuf::RepeatedField<::google::protobuf::int64>&
    usage_timestamp() const;
    ::google::protobuf::RepeatedField<::google::protobuf::int64>*
    mutable_usage_timestamp();

    // optional .sync_pb.AutofillProfileSpecifics profile = 4;
    bool has_profile() const;
    void clear_profile();
    static const int kProfileFieldNumber = 4;
    const ::sync_pb::AutofillProfileSpecifics& profile() const;
    ::sync_pb::AutofillProfileSpecifics* mutable_profile();
    ::sync_pb::AutofillProfileSpecifics* release_profile();
    void set_allocated_profile(::sync_pb::AutofillProfileSpecifics* profile);

    // @@protoc_insertion_point(class_scope:sync_pb.AutofillSpecifics)
private:
    inline void set_has_name();
    inline void clear_has_name();
    inline void set_has_value();
    inline void clear_has_value();
    inline void set_has_profile();
    inline void clear_has_profile();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::google::protobuf::RepeatedField<::google::protobuf::int64> usage_timestamp_;
    ::sync_pb::AutofillProfileSpecifics* profile_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_autofill_5fspecifics_2eproto_impl();
#else
    friend void protobuf_AddDesc_autofill_5fspecifics_2eproto();
#endif
    friend void protobuf_AssignDesc_autofill_5fspecifics_2eproto();
    friend void protobuf_ShutdownFile_autofill_5fspecifics_2eproto();

    void InitAsDefaultInstance();
    static AutofillSpecifics* default_instance_;
};
// -------------------------------------------------------------------

class WalletMaskedCreditCard : public ::google::protobuf::MessageLite {
public:
    WalletMaskedCreditCard();
    virtual ~WalletMaskedCreditCard();

    WalletMaskedCreditCard(const WalletMaskedCreditCard& from);

    inline WalletMaskedCreditCard& operator=(const WalletMaskedCreditCard& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const WalletMaskedCreditCard& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const WalletMaskedCreditCard* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(WalletMaskedCreditCard* other);

    // implements Message ----------------------------------------------

    inline WalletMaskedCreditCard* New() const { return New(NULL); }

    WalletMaskedCreditCard* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const WalletMaskedCreditCard& from);
    void MergeFrom(const WalletMaskedCreditCard& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(WalletMaskedCreditCard* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef WalletMaskedCreditCard_WalletCardStatus WalletCardStatus;
    static const WalletCardStatus VALID = WalletMaskedCreditCard_WalletCardStatus_VALID;
    static const WalletCardStatus EXPIRED = WalletMaskedCreditCard_WalletCardStatus_EXPIRED;
    static inline bool WalletCardStatus_IsValid(int value)
    {
        return WalletMaskedCreditCard_WalletCardStatus_IsValid(value);
    }
    static const WalletCardStatus WalletCardStatus_MIN = WalletMaskedCreditCard_WalletCardStatus_WalletCardStatus_MIN;
    static const WalletCardStatus WalletCardStatus_MAX = WalletMaskedCreditCard_WalletCardStatus_WalletCardStatus_MAX;
    static const int WalletCardStatus_ARRAYSIZE = WalletMaskedCreditCard_WalletCardStatus_WalletCardStatus_ARRAYSIZE;

    typedef WalletMaskedCreditCard_WalletCardType WalletCardType;
    static const WalletCardType UNKNOWN = WalletMaskedCreditCard_WalletCardType_UNKNOWN;
    static const WalletCardType AMEX = WalletMaskedCreditCard_WalletCardType_AMEX;
    static const WalletCardType DISCOVER = WalletMaskedCreditCard_WalletCardType_DISCOVER;
    static const WalletCardType JCB = WalletMaskedCreditCard_WalletCardType_JCB;
    static const WalletCardType MAESTRO = WalletMaskedCreditCard_WalletCardType_MAESTRO;
    static const WalletCardType MASTER_CARD = WalletMaskedCreditCard_WalletCardType_MASTER_CARD;
    static const WalletCardType SOLO = WalletMaskedCreditCard_WalletCardType_SOLO;
    static const WalletCardType SWITCH = WalletMaskedCreditCard_WalletCardType_SWITCH;
    static const WalletCardType VISA = WalletMaskedCreditCard_WalletCardType_VISA;
    static inline bool WalletCardType_IsValid(int value)
    {
        return WalletMaskedCreditCard_WalletCardType_IsValid(value);
    }
    static const WalletCardType WalletCardType_MIN = WalletMaskedCreditCard_WalletCardType_WalletCardType_MIN;
    static const WalletCardType WalletCardType_MAX = WalletMaskedCreditCard_WalletCardType_WalletCardType_MAX;
    static const int WalletCardType_ARRAYSIZE = WalletMaskedCreditCard_WalletCardType_WalletCardType_ARRAYSIZE;

    typedef WalletMaskedCreditCard_WalletCardClass WalletCardClass;
    static const WalletCardClass UNKNOWN_CARD_CLASS = WalletMaskedCreditCard_WalletCardClass_UNKNOWN_CARD_CLASS;
    static const WalletCardClass CREDIT = WalletMaskedCreditCard_WalletCardClass_CREDIT;
    static const WalletCardClass DEBIT = WalletMaskedCreditCard_WalletCardClass_DEBIT;
    static const WalletCardClass PREPAID = WalletMaskedCreditCard_WalletCardClass_PREPAID;
    static inline bool WalletCardClass_IsValid(int value)
    {
        return WalletMaskedCreditCard_WalletCardClass_IsValid(value);
    }
    static const WalletCardClass WalletCardClass_MIN = WalletMaskedCreditCard_WalletCardClass_WalletCardClass_MIN;
    static const WalletCardClass WalletCardClass_MAX = WalletMaskedCreditCard_WalletCardClass_WalletCardClass_MAX;
    static const int WalletCardClass_ARRAYSIZE = WalletMaskedCreditCard_WalletCardClass_WalletCardClass_ARRAYSIZE;

    // accessors -------------------------------------------------------

    // optional string id = 1;
    bool has_id() const;
    void clear_id();
    static const int kIdFieldNumber = 1;
    const ::std::string& id() const;
    void set_id(const ::std::string& value);
    void set_id(const char* value);
    void set_id(const char* value, size_t size);
    ::std::string* mutable_id();
    ::std::string* release_id();
    void set_allocated_id(::std::string* id);

    // optional .sync_pb.WalletMaskedCreditCard.WalletCardStatus status = 2;
    bool has_status() const;
    void clear_status();
    static const int kStatusFieldNumber = 2;
    ::sync_pb::WalletMaskedCreditCard_WalletCardStatus status() const;
    void set_status(::sync_pb::WalletMaskedCreditCard_WalletCardStatus value);

    // optional string name_on_card = 3;
    bool has_name_on_card() const;
    void clear_name_on_card();
    static const int kNameOnCardFieldNumber = 3;
    const ::std::string& name_on_card() const;
    void set_name_on_card(const ::std::string& value);
    void set_name_on_card(const char* value);
    void set_name_on_card(const char* value, size_t size);
    ::std::string* mutable_name_on_card();
    ::std::string* release_name_on_card();
    void set_allocated_name_on_card(::std::string* name_on_card);

    // optional .sync_pb.WalletMaskedCreditCard.WalletCardType type = 4;
    bool has_type() const;
    void clear_type();
    static const int kTypeFieldNumber = 4;
    ::sync_pb::WalletMaskedCreditCard_WalletCardType type() const;
    void set_type(::sync_pb::WalletMaskedCreditCard_WalletCardType value);

    // optional string last_four = 5;
    bool has_last_four() const;
    void clear_last_four();
    static const int kLastFourFieldNumber = 5;
    const ::std::string& last_four() const;
    void set_last_four(const ::std::string& value);
    void set_last_four(const char* value);
    void set_last_four(const char* value, size_t size);
    ::std::string* mutable_last_four();
    ::std::string* release_last_four();
    void set_allocated_last_four(::std::string* last_four);

    // optional int32 exp_month = 6;
    bool has_exp_month() const;
    void clear_exp_month();
    static const int kExpMonthFieldNumber = 6;
    ::google::protobuf::int32 exp_month() const;
    void set_exp_month(::google::protobuf::int32 value);

    // optional int32 exp_year = 7;
    bool has_exp_year() const;
    void clear_exp_year();
    static const int kExpYearFieldNumber = 7;
    ::google::protobuf::int32 exp_year() const;
    void set_exp_year(::google::protobuf::int32 value);

    // optional string billing_address_id = 8;
    bool has_billing_address_id() const;
    void clear_billing_address_id();
    static const int kBillingAddressIdFieldNumber = 8;
    const ::std::string& billing_address_id() const;
    void set_billing_address_id(const ::std::string& value);
    void set_billing_address_id(const char* value);
    void set_billing_address_id(const char* value, size_t size);
    ::std::string* mutable_billing_address_id();
    ::std::string* release_billing_address_id();
    void set_allocated_billing_address_id(::std::string* billing_address_id);

    // optional .sync_pb.WalletMaskedCreditCard.WalletCardClass card_class = 9;
    bool has_card_class() const;
    void clear_card_class();
    static const int kCardClassFieldNumber = 9;
    ::sync_pb::WalletMaskedCreditCard_WalletCardClass card_class() const;
    void set_card_class(::sync_pb::WalletMaskedCreditCard_WalletCardClass value);

    // @@protoc_insertion_point(class_scope:sync_pb.WalletMaskedCreditCard)
private:
    inline void set_has_id();
    inline void clear_has_id();
    inline void set_has_status();
    inline void clear_has_status();
    inline void set_has_name_on_card();
    inline void clear_has_name_on_card();
    inline void set_has_type();
    inline void clear_has_type();
    inline void set_has_last_four();
    inline void clear_has_last_four();
    inline void set_has_exp_month();
    inline void clear_has_exp_month();
    inline void set_has_exp_year();
    inline void clear_has_exp_year();
    inline void set_has_billing_address_id();
    inline void clear_has_billing_address_id();
    inline void set_has_card_class();
    inline void clear_has_card_class();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_on_card_;
    int status_;
    int type_;
    ::google::protobuf::internal::ArenaStringPtr last_four_;
    ::google::protobuf::int32 exp_month_;
    ::google::protobuf::int32 exp_year_;
    ::google::protobuf::internal::ArenaStringPtr billing_address_id_;
    int card_class_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_autofill_5fspecifics_2eproto_impl();
#else
    friend void protobuf_AddDesc_autofill_5fspecifics_2eproto();
#endif
    friend void protobuf_AssignDesc_autofill_5fspecifics_2eproto();
    friend void protobuf_ShutdownFile_autofill_5fspecifics_2eproto();

    void InitAsDefaultInstance();
    static WalletMaskedCreditCard* default_instance_;
};
// -------------------------------------------------------------------

class WalletPostalAddress : public ::google::protobuf::MessageLite {
public:
    WalletPostalAddress();
    virtual ~WalletPostalAddress();

    WalletPostalAddress(const WalletPostalAddress& from);

    inline WalletPostalAddress& operator=(const WalletPostalAddress& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const WalletPostalAddress& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const WalletPostalAddress* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(WalletPostalAddress* other);

    // implements Message ----------------------------------------------

    inline WalletPostalAddress* New() const { return New(NULL); }

    WalletPostalAddress* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const WalletPostalAddress& from);
    void MergeFrom(const WalletPostalAddress& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(WalletPostalAddress* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional string id = 1;
    bool has_id() const;
    void clear_id();
    static const int kIdFieldNumber = 1;
    const ::std::string& id() const;
    void set_id(const ::std::string& value);
    void set_id(const char* value);
    void set_id(const char* value, size_t size);
    ::std::string* mutable_id();
    ::std::string* release_id();
    void set_allocated_id(::std::string* id);

    // optional string recipient_name = 12;
    bool has_recipient_name() const;
    void clear_recipient_name();
    static const int kRecipientNameFieldNumber = 12;
    const ::std::string& recipient_name() const;
    void set_recipient_name(const ::std::string& value);
    void set_recipient_name(const char* value);
    void set_recipient_name(const char* value, size_t size);
    ::std::string* mutable_recipient_name();
    ::std::string* release_recipient_name();
    void set_allocated_recipient_name(::std::string* recipient_name);

    // optional string company_name = 2;
    bool has_company_name() const;
    void clear_company_name();
    static const int kCompanyNameFieldNumber = 2;
    const ::std::string& company_name() const;
    void set_company_name(const ::std::string& value);
    void set_company_name(const char* value);
    void set_company_name(const char* value, size_t size);
    ::std::string* mutable_company_name();
    ::std::string* release_company_name();
    void set_allocated_company_name(::std::string* company_name);

    // repeated string street_address = 3;
    int street_address_size() const;
    void clear_street_address();
    static const int kStreetAddressFieldNumber = 3;
    const ::std::string& street_address(int index) const;
    ::std::string* mutable_street_address(int index);
    void set_street_address(int index, const ::std::string& value);
    void set_street_address(int index, const char* value);
    void set_street_address(int index, const char* value, size_t size);
    ::std::string* add_street_address();
    void add_street_address(const ::std::string& value);
    void add_street_address(const char* value);
    void add_street_address(const char* value, size_t size);
    const ::google::protobuf::RepeatedPtrField<::std::string>& street_address() const;
    ::google::protobuf::RepeatedPtrField<::std::string>* mutable_street_address();

    // optional string address_1 = 4;
    bool has_address_1() const;
    void clear_address_1();
    static const int kAddress1FieldNumber = 4;
    const ::std::string& address_1() const;
    void set_address_1(const ::std::string& value);
    void set_address_1(const char* value);
    void set_address_1(const char* value, size_t size);
    ::std::string* mutable_address_1();
    ::std::string* release_address_1();
    void set_allocated_address_1(::std::string* address_1);

    // optional string address_2 = 5;
    bool has_address_2() const;
    void clear_address_2();
    static const int kAddress2FieldNumber = 5;
    const ::std::string& address_2() const;
    void set_address_2(const ::std::string& value);
    void set_address_2(const char* value);
    void set_address_2(const char* value, size_t size);
    ::std::string* mutable_address_2();
    ::std::string* release_address_2();
    void set_allocated_address_2(::std::string* address_2);

    // optional string address_3 = 6;
    bool has_address_3() const;
    void clear_address_3();
    static const int kAddress3FieldNumber = 6;
    const ::std::string& address_3() const;
    void set_address_3(const ::std::string& value);
    void set_address_3(const char* value);
    void set_address_3(const char* value, size_t size);
    ::std::string* mutable_address_3();
    ::std::string* release_address_3();
    void set_allocated_address_3(::std::string* address_3);

    // optional string address_4 = 7;
    bool has_address_4() const;
    void clear_address_4();
    static const int kAddress4FieldNumber = 7;
    const ::std::string& address_4() const;
    void set_address_4(const ::std::string& value);
    void set_address_4(const char* value);
    void set_address_4(const char* value, size_t size);
    ::std::string* mutable_address_4();
    ::std::string* release_address_4();
    void set_allocated_address_4(::std::string* address_4);

    // optional string postal_code = 8;
    bool has_postal_code() const;
    void clear_postal_code();
    static const int kPostalCodeFieldNumber = 8;
    const ::std::string& postal_code() const;
    void set_postal_code(const ::std::string& value);
    void set_postal_code(const char* value);
    void set_postal_code(const char* value, size_t size);
    ::std::string* mutable_postal_code();
    ::std::string* release_postal_code();
    void set_allocated_postal_code(::std::string* postal_code);

    // optional string sorting_code = 9;
    bool has_sorting_code() const;
    void clear_sorting_code();
    static const int kSortingCodeFieldNumber = 9;
    const ::std::string& sorting_code() const;
    void set_sorting_code(const ::std::string& value);
    void set_sorting_code(const char* value);
    void set_sorting_code(const char* value, size_t size);
    ::std::string* mutable_sorting_code();
    ::std::string* release_sorting_code();
    void set_allocated_sorting_code(::std::string* sorting_code);

    // optional string country_code = 10;
    bool has_country_code() const;
    void clear_country_code();
    static const int kCountryCodeFieldNumber = 10;
    const ::std::string& country_code() const;
    void set_country_code(const ::std::string& value);
    void set_country_code(const char* value);
    void set_country_code(const char* value, size_t size);
    ::std::string* mutable_country_code();
    ::std::string* release_country_code();
    void set_allocated_country_code(::std::string* country_code);

    // optional string language_code = 11;
    bool has_language_code() const;
    void clear_language_code();
    static const int kLanguageCodeFieldNumber = 11;
    const ::std::string& language_code() const;
    void set_language_code(const ::std::string& value);
    void set_language_code(const char* value);
    void set_language_code(const char* value, size_t size);
    ::std::string* mutable_language_code();
    ::std::string* release_language_code();
    void set_allocated_language_code(::std::string* language_code);

    // optional string phone_number = 13;
    bool has_phone_number() const;
    void clear_phone_number();
    static const int kPhoneNumberFieldNumber = 13;
    const ::std::string& phone_number() const;
    void set_phone_number(const ::std::string& value);
    void set_phone_number(const char* value);
    void set_phone_number(const char* value, size_t size);
    ::std::string* mutable_phone_number();
    ::std::string* release_phone_number();
    void set_allocated_phone_number(::std::string* phone_number);

    // @@protoc_insertion_point(class_scope:sync_pb.WalletPostalAddress)
private:
    inline void set_has_id();
    inline void clear_has_id();
    inline void set_has_recipient_name();
    inline void clear_has_recipient_name();
    inline void set_has_company_name();
    inline void clear_has_company_name();
    inline void set_has_address_1();
    inline void clear_has_address_1();
    inline void set_has_address_2();
    inline void clear_has_address_2();
    inline void set_has_address_3();
    inline void clear_has_address_3();
    inline void set_has_address_4();
    inline void clear_has_address_4();
    inline void set_has_postal_code();
    inline void clear_has_postal_code();
    inline void set_has_sorting_code();
    inline void clear_has_sorting_code();
    inline void set_has_country_code();
    inline void clear_has_country_code();
    inline void set_has_language_code();
    inline void clear_has_language_code();
    inline void set_has_phone_number();
    inline void clear_has_phone_number();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr recipient_name_;
    ::google::protobuf::internal::ArenaStringPtr company_name_;
    ::google::protobuf::RepeatedPtrField<::std::string> street_address_;
    ::google::protobuf::internal::ArenaStringPtr address_1_;
    ::google::protobuf::internal::ArenaStringPtr address_2_;
    ::google::protobuf::internal::ArenaStringPtr address_3_;
    ::google::protobuf::internal::ArenaStringPtr address_4_;
    ::google::protobuf::internal::ArenaStringPtr postal_code_;
    ::google::protobuf::internal::ArenaStringPtr sorting_code_;
    ::google::protobuf::internal::ArenaStringPtr country_code_;
    ::google::protobuf::internal::ArenaStringPtr language_code_;
    ::google::protobuf::internal::ArenaStringPtr phone_number_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_autofill_5fspecifics_2eproto_impl();
#else
    friend void protobuf_AddDesc_autofill_5fspecifics_2eproto();
#endif
    friend void protobuf_AssignDesc_autofill_5fspecifics_2eproto();
    friend void protobuf_ShutdownFile_autofill_5fspecifics_2eproto();

    void InitAsDefaultInstance();
    static WalletPostalAddress* default_instance_;
};
// -------------------------------------------------------------------

class AutofillWalletSpecifics : public ::google::protobuf::MessageLite {
public:
    AutofillWalletSpecifics();
    virtual ~AutofillWalletSpecifics();

    AutofillWalletSpecifics(const AutofillWalletSpecifics& from);

    inline AutofillWalletSpecifics& operator=(const AutofillWalletSpecifics& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const AutofillWalletSpecifics& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const AutofillWalletSpecifics* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillWalletSpecifics* other);

    // implements Message ----------------------------------------------

    inline AutofillWalletSpecifics* New() const { return New(NULL); }

    AutofillWalletSpecifics* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const AutofillWalletSpecifics& from);
    void MergeFrom(const AutofillWalletSpecifics& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(AutofillWalletSpecifics* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef AutofillWalletSpecifics_WalletInfoType WalletInfoType;
    static const WalletInfoType UNKNOWN = AutofillWalletSpecifics_WalletInfoType_UNKNOWN;
    static const WalletInfoType MASKED_CREDIT_CARD = AutofillWalletSpecifics_WalletInfoType_MASKED_CREDIT_CARD;
    static const WalletInfoType POSTAL_ADDRESS = AutofillWalletSpecifics_WalletInfoType_POSTAL_ADDRESS;
    static inline bool WalletInfoType_IsValid(int value)
    {
        return AutofillWalletSpecifics_WalletInfoType_IsValid(value);
    }
    static const WalletInfoType WalletInfoType_MIN = AutofillWalletSpecifics_WalletInfoType_WalletInfoType_MIN;
    static const WalletInfoType WalletInfoType_MAX = AutofillWalletSpecifics_WalletInfoType_WalletInfoType_MAX;
    static const int WalletInfoType_ARRAYSIZE = AutofillWalletSpecifics_WalletInfoType_WalletInfoType_ARRAYSIZE;

    // accessors -------------------------------------------------------

    // optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;
    bool has_type() const;
    void clear_type();
    static const int kTypeFieldNumber = 1;
    ::sync_pb::AutofillWalletSpecifics_WalletInfoType type() const;
    void set_type(::sync_pb::AutofillWalletSpecifics_WalletInfoType value);

    // optional .sync_pb.WalletMaskedCreditCard masked_card = 2;
    bool has_masked_card() const;
    void clear_masked_card();
    static const int kMaskedCardFieldNumber = 2;
    const ::sync_pb::WalletMaskedCreditCard& masked_card() const;
    ::sync_pb::WalletMaskedCreditCard* mutable_masked_card();
    ::sync_pb::WalletMaskedCreditCard* release_masked_card();
    void set_allocated_masked_card(::sync_pb::WalletMaskedCreditCard* masked_card);

    // optional .sync_pb.WalletPostalAddress address = 3;
    bool has_address() const;
    void clear_address();
    static const int kAddressFieldNumber = 3;
    const ::sync_pb::WalletPostalAddress& address() const;
    ::sync_pb::WalletPostalAddress* mutable_address();
    ::sync_pb::WalletPostalAddress* release_address();
    void set_allocated_address(::sync_pb::WalletPostalAddress* address);

    // @@protoc_insertion_point(class_scope:sync_pb.AutofillWalletSpecifics)
private:
    inline void set_has_type();
    inline void clear_has_type();
    inline void set_has_masked_card();
    inline void clear_has_masked_card();
    inline void set_has_address();
    inline void clear_has_address();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::sync_pb::WalletMaskedCreditCard* masked_card_;
    ::sync_pb::WalletPostalAddress* address_;
    int type_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_autofill_5fspecifics_2eproto_impl();
#else
    friend void protobuf_AddDesc_autofill_5fspecifics_2eproto();
#endif
    friend void protobuf_AssignDesc_autofill_5fspecifics_2eproto();
    friend void protobuf_ShutdownFile_autofill_5fspecifics_2eproto();

    void InitAsDefaultInstance();
    static AutofillWalletSpecifics* default_instance_;
};
// -------------------------------------------------------------------

class WalletMetadataSpecifics : public ::google::protobuf::MessageLite {
public:
    WalletMetadataSpecifics();
    virtual ~WalletMetadataSpecifics();

    WalletMetadataSpecifics(const WalletMetadataSpecifics& from);

    inline WalletMetadataSpecifics& operator=(const WalletMetadataSpecifics& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const WalletMetadataSpecifics& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const WalletMetadataSpecifics* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(WalletMetadataSpecifics* other);

    // implements Message ----------------------------------------------

    inline WalletMetadataSpecifics* New() const { return New(NULL); }

    WalletMetadataSpecifics* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const WalletMetadataSpecifics& from);
    void MergeFrom(const WalletMetadataSpecifics& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(WalletMetadataSpecifics* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef WalletMetadataSpecifics_Type Type;
    static const Type UNKNOWN = WalletMetadataSpecifics_Type_UNKNOWN;
    static const Type CARD = WalletMetadataSpecifics_Type_CARD;
    static const Type ADDRESS = WalletMetadataSpecifics_Type_ADDRESS;
    static inline bool Type_IsValid(int value)
    {
        return WalletMetadataSpecifics_Type_IsValid(value);
    }
    static const Type Type_MIN = WalletMetadataSpecifics_Type_Type_MIN;
    static const Type Type_MAX = WalletMetadataSpecifics_Type_Type_MAX;
    static const int Type_ARRAYSIZE = WalletMetadataSpecifics_Type_Type_ARRAYSIZE;

    // accessors -------------------------------------------------------

    // optional .sync_pb.WalletMetadataSpecifics.Type type = 1;
    bool has_type() const;
    void clear_type();
    static const int kTypeFieldNumber = 1;
    ::sync_pb::WalletMetadataSpecifics_Type type() const;
    void set_type(::sync_pb::WalletMetadataSpecifics_Type value);

    // optional string id = 2;
    bool has_id() const;
    void clear_id();
    static const int kIdFieldNumber = 2;
    const ::std::string& id() const;
    void set_id(const ::std::string& value);
    void set_id(const char* value);
    void set_id(const char* value, size_t size);
    ::std::string* mutable_id();
    ::std::string* release_id();
    void set_allocated_id(::std::string* id);

    // optional int64 use_count = 3;
    bool has_use_count() const;
    void clear_use_count();
    static const int kUseCountFieldNumber = 3;
    ::google::protobuf::int64 use_count() const;
    void set_use_count(::google::protobuf::int64 value);

    // optional int64 use_date = 4;
    bool has_use_date() const;
    void clear_use_date();
    static const int kUseDateFieldNumber = 4;
    ::google::protobuf::int64 use_date() const;
    void set_use_date(::google::protobuf::int64 value);

    // optional string card_billing_address_id = 5;
    bool has_card_billing_address_id() const;
    void clear_card_billing_address_id();
    static const int kCardBillingAddressIdFieldNumber = 5;
    const ::std::string& card_billing_address_id() const;
    void set_card_billing_address_id(const ::std::string& value);
    void set_card_billing_address_id(const char* value);
    void set_card_billing_address_id(const char* value, size_t size);
    ::std::string* mutable_card_billing_address_id();
    ::std::string* release_card_billing_address_id();
    void set_allocated_card_billing_address_id(::std::string* card_billing_address_id);

    // optional bool address_has_converted = 6;
    bool has_address_has_converted() const;
    void clear_address_has_converted();
    static const int kAddressHasConvertedFieldNumber = 6;
    bool address_has_converted() const;
    void set_address_has_converted(bool value);

    // @@protoc_insertion_point(class_scope:sync_pb.WalletMetadataSpecifics)
private:
    inline void set_has_type();
    inline void clear_has_type();
    inline void set_has_id();
    inline void clear_has_id();
    inline void set_has_use_count();
    inline void clear_has_use_count();
    inline void set_has_use_date();
    inline void clear_has_use_date();
    inline void set_has_card_billing_address_id();
    inline void clear_has_card_billing_address_id();
    inline void set_has_address_has_converted();
    inline void clear_has_address_has_converted();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::int64 use_count_;
    int type_;
    bool address_has_converted_;
    ::google::protobuf::int64 use_date_;
    ::google::protobuf::internal::ArenaStringPtr card_billing_address_id_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_autofill_5fspecifics_2eproto_impl();
#else
    friend void protobuf_AddDesc_autofill_5fspecifics_2eproto();
#endif
    friend void protobuf_AssignDesc_autofill_5fspecifics_2eproto();
    friend void protobuf_ShutdownFile_autofill_5fspecifics_2eproto();

    void InitAsDefaultInstance();
    static WalletMetadataSpecifics* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AutofillProfileSpecifics

// optional string guid = 15;
inline bool AutofillProfileSpecifics::has_guid() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillProfileSpecifics::set_has_guid()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void AutofillProfileSpecifics::clear_has_guid()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillProfileSpecifics::clear_guid()
{
    guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_guid();
}
inline const ::std::string& AutofillProfileSpecifics::guid() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.guid)
    return guid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_guid(const ::std::string& value)
{
    set_has_guid();
    guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.guid)
}
inline void AutofillProfileSpecifics::set_guid(const char* value)
{
    set_has_guid();
    guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.guid)
}
inline void AutofillProfileSpecifics::set_guid(const char* value, size_t size)
{
    set_has_guid();
    guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.guid)
}
inline ::std::string* AutofillProfileSpecifics::mutable_guid()
{
    set_has_guid();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.guid)
    return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_guid()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.guid)
    clear_has_guid();
    return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_guid(::std::string* guid)
{
    if (guid != NULL) {
        set_has_guid();
    } else {
        clear_has_guid();
    }
    guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.guid)
}

// optional string origin = 16;
inline bool AutofillProfileSpecifics::has_origin() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutofillProfileSpecifics::set_has_origin()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void AutofillProfileSpecifics::clear_has_origin()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void AutofillProfileSpecifics::clear_origin()
{
    origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_origin();
}
inline const ::std::string& AutofillProfileSpecifics::origin() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.origin)
    return origin_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_origin(const ::std::string& value)
{
    set_has_origin();
    origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.origin)
}
inline void AutofillProfileSpecifics::set_origin(const char* value)
{
    set_has_origin();
    origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.origin)
}
inline void AutofillProfileSpecifics::set_origin(const char* value, size_t size)
{
    set_has_origin();
    origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.origin)
}
inline ::std::string* AutofillProfileSpecifics::mutable_origin()
{
    set_has_origin();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.origin)
    return origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_origin()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.origin)
    clear_has_origin();
    return origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_origin(::std::string* origin)
{
    if (origin != NULL) {
        set_has_origin();
    } else {
        clear_has_origin();
    }
    origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.origin)
}

// optional int64 use_count = 22;
inline bool AutofillProfileSpecifics::has_use_count() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AutofillProfileSpecifics::set_has_use_count()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void AutofillProfileSpecifics::clear_has_use_count()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void AutofillProfileSpecifics::clear_use_count()
{
    use_count_ = GOOGLE_LONGLONG(0);
    clear_has_use_count();
}
inline ::google::protobuf::int64 AutofillProfileSpecifics::use_count() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.use_count)
    return use_count_;
}
inline void AutofillProfileSpecifics::set_use_count(::google::protobuf::int64 value)
{
    set_has_use_count();
    use_count_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.use_count)
}

// optional int64 use_date = 23;
inline bool AutofillProfileSpecifics::has_use_date() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AutofillProfileSpecifics::set_has_use_date()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void AutofillProfileSpecifics::clear_has_use_date()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void AutofillProfileSpecifics::clear_use_date()
{
    use_date_ = GOOGLE_LONGLONG(0);
    clear_has_use_date();
}
inline ::google::protobuf::int64 AutofillProfileSpecifics::use_date() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.use_date)
    return use_date_;
}
inline void AutofillProfileSpecifics::set_use_date(::google::protobuf::int64 value)
{
    set_has_use_date();
    use_date_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.use_date)
}

// repeated string name_first = 2;
inline int AutofillProfileSpecifics::name_first_size() const
{
    return name_first_.size();
}
inline void AutofillProfileSpecifics::clear_name_first()
{
    name_first_.Clear();
}
inline const ::std::string& AutofillProfileSpecifics::name_first(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.name_first)
    return name_first_.Get(index);
}
inline ::std::string* AutofillProfileSpecifics::mutable_name_first(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.name_first)
    return name_first_.Mutable(index);
}
inline void AutofillProfileSpecifics::set_name_first(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_first)
    name_first_.Mutable(index)->assign(value);
}
inline void AutofillProfileSpecifics::set_name_first(int index, const char* value)
{
    name_first_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.name_first)
}
inline void AutofillProfileSpecifics::set_name_first(int index, const char* value, size_t size)
{
    name_first_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.name_first)
}
inline ::std::string* AutofillProfileSpecifics::add_name_first()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.name_first)
    return name_first_.Add();
}
inline void AutofillProfileSpecifics::add_name_first(const ::std::string& value)
{
    name_first_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_first)
}
inline void AutofillProfileSpecifics::add_name_first(const char* value)
{
    name_first_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.name_first)
}
inline void AutofillProfileSpecifics::add_name_first(const char* value, size_t size)
{
    name_first_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.name_first)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
AutofillProfileSpecifics::name_first() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.name_first)
    return name_first_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
AutofillProfileSpecifics::mutable_name_first()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.name_first)
    return &name_first_;
}

// repeated string name_middle = 3;
inline int AutofillProfileSpecifics::name_middle_size() const
{
    return name_middle_.size();
}
inline void AutofillProfileSpecifics::clear_name_middle()
{
    name_middle_.Clear();
}
inline const ::std::string& AutofillProfileSpecifics::name_middle(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.name_middle)
    return name_middle_.Get(index);
}
inline ::std::string* AutofillProfileSpecifics::mutable_name_middle(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.name_middle)
    return name_middle_.Mutable(index);
}
inline void AutofillProfileSpecifics::set_name_middle(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_middle)
    name_middle_.Mutable(index)->assign(value);
}
inline void AutofillProfileSpecifics::set_name_middle(int index, const char* value)
{
    name_middle_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.name_middle)
}
inline void AutofillProfileSpecifics::set_name_middle(int index, const char* value, size_t size)
{
    name_middle_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.name_middle)
}
inline ::std::string* AutofillProfileSpecifics::add_name_middle()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.name_middle)
    return name_middle_.Add();
}
inline void AutofillProfileSpecifics::add_name_middle(const ::std::string& value)
{
    name_middle_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_middle)
}
inline void AutofillProfileSpecifics::add_name_middle(const char* value)
{
    name_middle_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.name_middle)
}
inline void AutofillProfileSpecifics::add_name_middle(const char* value, size_t size)
{
    name_middle_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.name_middle)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
AutofillProfileSpecifics::name_middle() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.name_middle)
    return name_middle_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
AutofillProfileSpecifics::mutable_name_middle()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.name_middle)
    return &name_middle_;
}

// repeated string name_last = 4;
inline int AutofillProfileSpecifics::name_last_size() const
{
    return name_last_.size();
}
inline void AutofillProfileSpecifics::clear_name_last()
{
    name_last_.Clear();
}
inline const ::std::string& AutofillProfileSpecifics::name_last(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.name_last)
    return name_last_.Get(index);
}
inline ::std::string* AutofillProfileSpecifics::mutable_name_last(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.name_last)
    return name_last_.Mutable(index);
}
inline void AutofillProfileSpecifics::set_name_last(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_last)
    name_last_.Mutable(index)->assign(value);
}
inline void AutofillProfileSpecifics::set_name_last(int index, const char* value)
{
    name_last_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.name_last)
}
inline void AutofillProfileSpecifics::set_name_last(int index, const char* value, size_t size)
{
    name_last_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.name_last)
}
inline ::std::string* AutofillProfileSpecifics::add_name_last()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.name_last)
    return name_last_.Add();
}
inline void AutofillProfileSpecifics::add_name_last(const ::std::string& value)
{
    name_last_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_last)
}
inline void AutofillProfileSpecifics::add_name_last(const char* value)
{
    name_last_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.name_last)
}
inline void AutofillProfileSpecifics::add_name_last(const char* value, size_t size)
{
    name_last_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.name_last)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
AutofillProfileSpecifics::name_last() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.name_last)
    return name_last_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
AutofillProfileSpecifics::mutable_name_last()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.name_last)
    return &name_last_;
}

// repeated string name_full = 21;
inline int AutofillProfileSpecifics::name_full_size() const
{
    return name_full_.size();
}
inline void AutofillProfileSpecifics::clear_name_full()
{
    name_full_.Clear();
}
inline const ::std::string& AutofillProfileSpecifics::name_full(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.name_full)
    return name_full_.Get(index);
}
inline ::std::string* AutofillProfileSpecifics::mutable_name_full(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.name_full)
    return name_full_.Mutable(index);
}
inline void AutofillProfileSpecifics::set_name_full(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_full)
    name_full_.Mutable(index)->assign(value);
}
inline void AutofillProfileSpecifics::set_name_full(int index, const char* value)
{
    name_full_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.name_full)
}
inline void AutofillProfileSpecifics::set_name_full(int index, const char* value, size_t size)
{
    name_full_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.name_full)
}
inline ::std::string* AutofillProfileSpecifics::add_name_full()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.name_full)
    return name_full_.Add();
}
inline void AutofillProfileSpecifics::add_name_full(const ::std::string& value)
{
    name_full_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_full)
}
inline void AutofillProfileSpecifics::add_name_full(const char* value)
{
    name_full_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.name_full)
}
inline void AutofillProfileSpecifics::add_name_full(const char* value, size_t size)
{
    name_full_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.name_full)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
AutofillProfileSpecifics::name_full() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.name_full)
    return name_full_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
AutofillProfileSpecifics::mutable_name_full()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.name_full)
    return &name_full_;
}

// repeated string email_address = 5;
inline int AutofillProfileSpecifics::email_address_size() const
{
    return email_address_.size();
}
inline void AutofillProfileSpecifics::clear_email_address()
{
    email_address_.Clear();
}
inline const ::std::string& AutofillProfileSpecifics::email_address(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.email_address)
    return email_address_.Get(index);
}
inline ::std::string* AutofillProfileSpecifics::mutable_email_address(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.email_address)
    return email_address_.Mutable(index);
}
inline void AutofillProfileSpecifics::set_email_address(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.email_address)
    email_address_.Mutable(index)->assign(value);
}
inline void AutofillProfileSpecifics::set_email_address(int index, const char* value)
{
    email_address_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.email_address)
}
inline void AutofillProfileSpecifics::set_email_address(int index, const char* value, size_t size)
{
    email_address_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.email_address)
}
inline ::std::string* AutofillProfileSpecifics::add_email_address()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.email_address)
    return email_address_.Add();
}
inline void AutofillProfileSpecifics::add_email_address(const ::std::string& value)
{
    email_address_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.email_address)
}
inline void AutofillProfileSpecifics::add_email_address(const char* value)
{
    email_address_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.email_address)
}
inline void AutofillProfileSpecifics::add_email_address(const char* value, size_t size)
{
    email_address_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.email_address)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
AutofillProfileSpecifics::email_address() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.email_address)
    return email_address_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
AutofillProfileSpecifics::mutable_email_address()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.email_address)
    return &email_address_;
}

// optional string company_name = 6;
inline bool AutofillProfileSpecifics::has_company_name() const
{
    return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AutofillProfileSpecifics::set_has_company_name()
{
    _has_bits_[0] |= 0x00000200u;
}
inline void AutofillProfileSpecifics::clear_has_company_name()
{
    _has_bits_[0] &= ~0x00000200u;
}
inline void AutofillProfileSpecifics::clear_company_name()
{
    company_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_company_name();
}
inline const ::std::string& AutofillProfileSpecifics::company_name() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.company_name)
    return company_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_company_name(const ::std::string& value)
{
    set_has_company_name();
    company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.company_name)
}
inline void AutofillProfileSpecifics::set_company_name(const char* value)
{
    set_has_company_name();
    company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.company_name)
}
inline void AutofillProfileSpecifics::set_company_name(const char* value, size_t size)
{
    set_has_company_name();
    company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.company_name)
}
inline ::std::string* AutofillProfileSpecifics::mutable_company_name()
{
    set_has_company_name();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.company_name)
    return company_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_company_name()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.company_name)
    clear_has_company_name();
    return company_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_company_name(::std::string* company_name)
{
    if (company_name != NULL) {
        set_has_company_name();
    } else {
        clear_has_company_name();
    }
    company_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), company_name);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.company_name)
}

// optional string address_home_line1 = 7;
inline bool AutofillProfileSpecifics::has_address_home_line1() const
{
    return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AutofillProfileSpecifics::set_has_address_home_line1()
{
    _has_bits_[0] |= 0x00000400u;
}
inline void AutofillProfileSpecifics::clear_has_address_home_line1()
{
    _has_bits_[0] &= ~0x00000400u;
}
inline void AutofillProfileSpecifics::clear_address_home_line1()
{
    address_home_line1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_line1();
}
inline const ::std::string& AutofillProfileSpecifics::address_home_line1() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_line1)
    return address_home_line1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_address_home_line1(const ::std::string& value)
{
    set_has_address_home_line1();
    address_home_line1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_line1)
}
inline void AutofillProfileSpecifics::set_address_home_line1(const char* value)
{
    set_has_address_home_line1();
    address_home_line1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_line1)
}
inline void AutofillProfileSpecifics::set_address_home_line1(const char* value, size_t size)
{
    set_has_address_home_line1();
    address_home_line1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_line1)
}
inline ::std::string* AutofillProfileSpecifics::mutable_address_home_line1()
{
    set_has_address_home_line1();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_line1)
    return address_home_line1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_address_home_line1()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_line1)
    clear_has_address_home_line1();
    return address_home_line1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_address_home_line1(::std::string* address_home_line1)
{
    if (address_home_line1 != NULL) {
        set_has_address_home_line1();
    } else {
        clear_has_address_home_line1();
    }
    address_home_line1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_line1);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_line1)
}

// optional string address_home_line2 = 8;
inline bool AutofillProfileSpecifics::has_address_home_line2() const
{
    return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AutofillProfileSpecifics::set_has_address_home_line2()
{
    _has_bits_[0] |= 0x00000800u;
}
inline void AutofillProfileSpecifics::clear_has_address_home_line2()
{
    _has_bits_[0] &= ~0x00000800u;
}
inline void AutofillProfileSpecifics::clear_address_home_line2()
{
    address_home_line2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_line2();
}
inline const ::std::string& AutofillProfileSpecifics::address_home_line2() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_line2)
    return address_home_line2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_address_home_line2(const ::std::string& value)
{
    set_has_address_home_line2();
    address_home_line2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_line2)
}
inline void AutofillProfileSpecifics::set_address_home_line2(const char* value)
{
    set_has_address_home_line2();
    address_home_line2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_line2)
}
inline void AutofillProfileSpecifics::set_address_home_line2(const char* value, size_t size)
{
    set_has_address_home_line2();
    address_home_line2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_line2)
}
inline ::std::string* AutofillProfileSpecifics::mutable_address_home_line2()
{
    set_has_address_home_line2();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_line2)
    return address_home_line2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_address_home_line2()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_line2)
    clear_has_address_home_line2();
    return address_home_line2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_address_home_line2(::std::string* address_home_line2)
{
    if (address_home_line2 != NULL) {
        set_has_address_home_line2();
    } else {
        clear_has_address_home_line2();
    }
    address_home_line2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_line2);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_line2)
}

// optional string address_home_city = 9;
inline bool AutofillProfileSpecifics::has_address_home_city() const
{
    return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AutofillProfileSpecifics::set_has_address_home_city()
{
    _has_bits_[0] |= 0x00001000u;
}
inline void AutofillProfileSpecifics::clear_has_address_home_city()
{
    _has_bits_[0] &= ~0x00001000u;
}
inline void AutofillProfileSpecifics::clear_address_home_city()
{
    address_home_city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_city();
}
inline const ::std::string& AutofillProfileSpecifics::address_home_city() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_city)
    return address_home_city_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_address_home_city(const ::std::string& value)
{
    set_has_address_home_city();
    address_home_city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_city)
}
inline void AutofillProfileSpecifics::set_address_home_city(const char* value)
{
    set_has_address_home_city();
    address_home_city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_city)
}
inline void AutofillProfileSpecifics::set_address_home_city(const char* value, size_t size)
{
    set_has_address_home_city();
    address_home_city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_city)
}
inline ::std::string* AutofillProfileSpecifics::mutable_address_home_city()
{
    set_has_address_home_city();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_city)
    return address_home_city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_address_home_city()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_city)
    clear_has_address_home_city();
    return address_home_city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_address_home_city(::std::string* address_home_city)
{
    if (address_home_city != NULL) {
        set_has_address_home_city();
    } else {
        clear_has_address_home_city();
    }
    address_home_city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_city);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_city)
}

// optional string address_home_state = 10;
inline bool AutofillProfileSpecifics::has_address_home_state() const
{
    return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AutofillProfileSpecifics::set_has_address_home_state()
{
    _has_bits_[0] |= 0x00002000u;
}
inline void AutofillProfileSpecifics::clear_has_address_home_state()
{
    _has_bits_[0] &= ~0x00002000u;
}
inline void AutofillProfileSpecifics::clear_address_home_state()
{
    address_home_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_state();
}
inline const ::std::string& AutofillProfileSpecifics::address_home_state() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_state)
    return address_home_state_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_address_home_state(const ::std::string& value)
{
    set_has_address_home_state();
    address_home_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_state)
}
inline void AutofillProfileSpecifics::set_address_home_state(const char* value)
{
    set_has_address_home_state();
    address_home_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_state)
}
inline void AutofillProfileSpecifics::set_address_home_state(const char* value, size_t size)
{
    set_has_address_home_state();
    address_home_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_state)
}
inline ::std::string* AutofillProfileSpecifics::mutable_address_home_state()
{
    set_has_address_home_state();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_state)
    return address_home_state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_address_home_state()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_state)
    clear_has_address_home_state();
    return address_home_state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_address_home_state(::std::string* address_home_state)
{
    if (address_home_state != NULL) {
        set_has_address_home_state();
    } else {
        clear_has_address_home_state();
    }
    address_home_state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_state);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_state)
}

// optional string address_home_zip = 11;
inline bool AutofillProfileSpecifics::has_address_home_zip() const
{
    return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AutofillProfileSpecifics::set_has_address_home_zip()
{
    _has_bits_[0] |= 0x00004000u;
}
inline void AutofillProfileSpecifics::clear_has_address_home_zip()
{
    _has_bits_[0] &= ~0x00004000u;
}
inline void AutofillProfileSpecifics::clear_address_home_zip()
{
    address_home_zip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_zip();
}
inline const ::std::string& AutofillProfileSpecifics::address_home_zip() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_zip)
    return address_home_zip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_address_home_zip(const ::std::string& value)
{
    set_has_address_home_zip();
    address_home_zip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_zip)
}
inline void AutofillProfileSpecifics::set_address_home_zip(const char* value)
{
    set_has_address_home_zip();
    address_home_zip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_zip)
}
inline void AutofillProfileSpecifics::set_address_home_zip(const char* value, size_t size)
{
    set_has_address_home_zip();
    address_home_zip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_zip)
}
inline ::std::string* AutofillProfileSpecifics::mutable_address_home_zip()
{
    set_has_address_home_zip();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_zip)
    return address_home_zip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_address_home_zip()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_zip)
    clear_has_address_home_zip();
    return address_home_zip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_address_home_zip(::std::string* address_home_zip)
{
    if (address_home_zip != NULL) {
        set_has_address_home_zip();
    } else {
        clear_has_address_home_zip();
    }
    address_home_zip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_zip);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_zip)
}

// optional string address_home_country = 12;
inline bool AutofillProfileSpecifics::has_address_home_country() const
{
    return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void AutofillProfileSpecifics::set_has_address_home_country()
{
    _has_bits_[0] |= 0x00008000u;
}
inline void AutofillProfileSpecifics::clear_has_address_home_country()
{
    _has_bits_[0] &= ~0x00008000u;
}
inline void AutofillProfileSpecifics::clear_address_home_country()
{
    address_home_country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_country();
}
inline const ::std::string& AutofillProfileSpecifics::address_home_country() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_country)
    return address_home_country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_address_home_country(const ::std::string& value)
{
    set_has_address_home_country();
    address_home_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_country)
}
inline void AutofillProfileSpecifics::set_address_home_country(const char* value)
{
    set_has_address_home_country();
    address_home_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_country)
}
inline void AutofillProfileSpecifics::set_address_home_country(const char* value, size_t size)
{
    set_has_address_home_country();
    address_home_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_country)
}
inline ::std::string* AutofillProfileSpecifics::mutable_address_home_country()
{
    set_has_address_home_country();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_country)
    return address_home_country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_address_home_country()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_country)
    clear_has_address_home_country();
    return address_home_country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_address_home_country(::std::string* address_home_country)
{
    if (address_home_country != NULL) {
        set_has_address_home_country();
    } else {
        clear_has_address_home_country();
    }
    address_home_country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_country);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_country)
}

// optional string address_home_street_address = 17;
inline bool AutofillProfileSpecifics::has_address_home_street_address() const
{
    return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void AutofillProfileSpecifics::set_has_address_home_street_address()
{
    _has_bits_[0] |= 0x00010000u;
}
inline void AutofillProfileSpecifics::clear_has_address_home_street_address()
{
    _has_bits_[0] &= ~0x00010000u;
}
inline void AutofillProfileSpecifics::clear_address_home_street_address()
{
    address_home_street_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_street_address();
}
inline const ::std::string& AutofillProfileSpecifics::address_home_street_address() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_street_address)
    return address_home_street_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_address_home_street_address(const ::std::string& value)
{
    set_has_address_home_street_address();
    address_home_street_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_street_address)
}
inline void AutofillProfileSpecifics::set_address_home_street_address(const char* value)
{
    set_has_address_home_street_address();
    address_home_street_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_street_address)
}
inline void AutofillProfileSpecifics::set_address_home_street_address(const char* value, size_t size)
{
    set_has_address_home_street_address();
    address_home_street_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_street_address)
}
inline ::std::string* AutofillProfileSpecifics::mutable_address_home_street_address()
{
    set_has_address_home_street_address();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_street_address)
    return address_home_street_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_address_home_street_address()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_street_address)
    clear_has_address_home_street_address();
    return address_home_street_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_address_home_street_address(::std::string* address_home_street_address)
{
    if (address_home_street_address != NULL) {
        set_has_address_home_street_address();
    } else {
        clear_has_address_home_street_address();
    }
    address_home_street_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_street_address);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_street_address)
}

// optional string address_home_sorting_code = 18;
inline bool AutofillProfileSpecifics::has_address_home_sorting_code() const
{
    return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void AutofillProfileSpecifics::set_has_address_home_sorting_code()
{
    _has_bits_[0] |= 0x00020000u;
}
inline void AutofillProfileSpecifics::clear_has_address_home_sorting_code()
{
    _has_bits_[0] &= ~0x00020000u;
}
inline void AutofillProfileSpecifics::clear_address_home_sorting_code()
{
    address_home_sorting_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_sorting_code();
}
inline const ::std::string& AutofillProfileSpecifics::address_home_sorting_code() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
    return address_home_sorting_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_address_home_sorting_code(const ::std::string& value)
{
    set_has_address_home_sorting_code();
    address_home_sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
}
inline void AutofillProfileSpecifics::set_address_home_sorting_code(const char* value)
{
    set_has_address_home_sorting_code();
    address_home_sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
}
inline void AutofillProfileSpecifics::set_address_home_sorting_code(const char* value, size_t size)
{
    set_has_address_home_sorting_code();
    address_home_sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
}
inline ::std::string* AutofillProfileSpecifics::mutable_address_home_sorting_code()
{
    set_has_address_home_sorting_code();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
    return address_home_sorting_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_address_home_sorting_code()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
    clear_has_address_home_sorting_code();
    return address_home_sorting_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_address_home_sorting_code(::std::string* address_home_sorting_code)
{
    if (address_home_sorting_code != NULL) {
        set_has_address_home_sorting_code();
    } else {
        clear_has_address_home_sorting_code();
    }
    address_home_sorting_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_sorting_code);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
}

// optional string address_home_dependent_locality = 19;
inline bool AutofillProfileSpecifics::has_address_home_dependent_locality() const
{
    return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void AutofillProfileSpecifics::set_has_address_home_dependent_locality()
{
    _has_bits_[0] |= 0x00040000u;
}
inline void AutofillProfileSpecifics::clear_has_address_home_dependent_locality()
{
    _has_bits_[0] &= ~0x00040000u;
}
inline void AutofillProfileSpecifics::clear_address_home_dependent_locality()
{
    address_home_dependent_locality_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_dependent_locality();
}
inline const ::std::string& AutofillProfileSpecifics::address_home_dependent_locality() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
    return address_home_dependent_locality_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_address_home_dependent_locality(const ::std::string& value)
{
    set_has_address_home_dependent_locality();
    address_home_dependent_locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
}
inline void AutofillProfileSpecifics::set_address_home_dependent_locality(const char* value)
{
    set_has_address_home_dependent_locality();
    address_home_dependent_locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
}
inline void AutofillProfileSpecifics::set_address_home_dependent_locality(const char* value, size_t size)
{
    set_has_address_home_dependent_locality();
    address_home_dependent_locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
}
inline ::std::string* AutofillProfileSpecifics::mutable_address_home_dependent_locality()
{
    set_has_address_home_dependent_locality();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
    return address_home_dependent_locality_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_address_home_dependent_locality()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
    clear_has_address_home_dependent_locality();
    return address_home_dependent_locality_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_address_home_dependent_locality(::std::string* address_home_dependent_locality)
{
    if (address_home_dependent_locality != NULL) {
        set_has_address_home_dependent_locality();
    } else {
        clear_has_address_home_dependent_locality();
    }
    address_home_dependent_locality_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_dependent_locality);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
}

// optional string address_home_language_code = 20;
inline bool AutofillProfileSpecifics::has_address_home_language_code() const
{
    return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void AutofillProfileSpecifics::set_has_address_home_language_code()
{
    _has_bits_[0] |= 0x00080000u;
}
inline void AutofillProfileSpecifics::clear_has_address_home_language_code()
{
    _has_bits_[0] &= ~0x00080000u;
}
inline void AutofillProfileSpecifics::clear_address_home_language_code()
{
    address_home_language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_language_code();
}
inline const ::std::string& AutofillProfileSpecifics::address_home_language_code() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_language_code)
    return address_home_language_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_address_home_language_code(const ::std::string& value)
{
    set_has_address_home_language_code();
    address_home_language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_language_code)
}
inline void AutofillProfileSpecifics::set_address_home_language_code(const char* value)
{
    set_has_address_home_language_code();
    address_home_language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_language_code)
}
inline void AutofillProfileSpecifics::set_address_home_language_code(const char* value, size_t size)
{
    set_has_address_home_language_code();
    address_home_language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_language_code)
}
inline ::std::string* AutofillProfileSpecifics::mutable_address_home_language_code()
{
    set_has_address_home_language_code();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_language_code)
    return address_home_language_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_address_home_language_code()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_language_code)
    clear_has_address_home_language_code();
    return address_home_language_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_address_home_language_code(::std::string* address_home_language_code)
{
    if (address_home_language_code != NULL) {
        set_has_address_home_language_code();
    } else {
        clear_has_address_home_language_code();
    }
    address_home_language_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_language_code);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_language_code)
}

// repeated string phone_home_whole_number = 13;
inline int AutofillProfileSpecifics::phone_home_whole_number_size() const
{
    return phone_home_whole_number_.size();
}
inline void AutofillProfileSpecifics::clear_phone_home_whole_number()
{
    phone_home_whole_number_.Clear();
}
inline const ::std::string& AutofillProfileSpecifics::phone_home_whole_number(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
    return phone_home_whole_number_.Get(index);
}
inline ::std::string* AutofillProfileSpecifics::mutable_phone_home_whole_number(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
    return phone_home_whole_number_.Mutable(index);
}
inline void AutofillProfileSpecifics::set_phone_home_whole_number(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
    phone_home_whole_number_.Mutable(index)->assign(value);
}
inline void AutofillProfileSpecifics::set_phone_home_whole_number(int index, const char* value)
{
    phone_home_whole_number_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
inline void AutofillProfileSpecifics::set_phone_home_whole_number(int index, const char* value, size_t size)
{
    phone_home_whole_number_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
inline ::std::string* AutofillProfileSpecifics::add_phone_home_whole_number()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
    return phone_home_whole_number_.Add();
}
inline void AutofillProfileSpecifics::add_phone_home_whole_number(const ::std::string& value)
{
    phone_home_whole_number_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
inline void AutofillProfileSpecifics::add_phone_home_whole_number(const char* value)
{
    phone_home_whole_number_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
inline void AutofillProfileSpecifics::add_phone_home_whole_number(const char* value, size_t size)
{
    phone_home_whole_number_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
AutofillProfileSpecifics::phone_home_whole_number() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
    return phone_home_whole_number_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
AutofillProfileSpecifics::mutable_phone_home_whole_number()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
    return &phone_home_whole_number_;
}

// optional string label = 1 [deprecated = true];
inline bool AutofillProfileSpecifics::has_label() const
{
    return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void AutofillProfileSpecifics::set_has_label()
{
    _has_bits_[0] |= 0x00200000u;
}
inline void AutofillProfileSpecifics::clear_has_label()
{
    _has_bits_[0] &= ~0x00200000u;
}
inline void AutofillProfileSpecifics::clear_label()
{
    label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_label();
}
inline const ::std::string& AutofillProfileSpecifics::label() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.label)
    return label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_label(const ::std::string& value)
{
    set_has_label();
    label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.label)
}
inline void AutofillProfileSpecifics::set_label(const char* value)
{
    set_has_label();
    label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.label)
}
inline void AutofillProfileSpecifics::set_label(const char* value, size_t size)
{
    set_has_label();
    label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.label)
}
inline ::std::string* AutofillProfileSpecifics::mutable_label()
{
    set_has_label();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.label)
    return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_label()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.label)
    clear_has_label();
    return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_label(::std::string* label)
{
    if (label != NULL) {
        set_has_label();
    } else {
        clear_has_label();
    }
    label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.label)
}

// optional string phone_fax_whole_number = 14 [deprecated = true];
inline bool AutofillProfileSpecifics::has_phone_fax_whole_number() const
{
    return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void AutofillProfileSpecifics::set_has_phone_fax_whole_number()
{
    _has_bits_[0] |= 0x00400000u;
}
inline void AutofillProfileSpecifics::clear_has_phone_fax_whole_number()
{
    _has_bits_[0] &= ~0x00400000u;
}
inline void AutofillProfileSpecifics::clear_phone_fax_whole_number()
{
    phone_fax_whole_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_phone_fax_whole_number();
}
inline const ::std::string& AutofillProfileSpecifics::phone_fax_whole_number() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
    return phone_fax_whole_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_phone_fax_whole_number(const ::std::string& value)
{
    set_has_phone_fax_whole_number();
    phone_fax_whole_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
}
inline void AutofillProfileSpecifics::set_phone_fax_whole_number(const char* value)
{
    set_has_phone_fax_whole_number();
    phone_fax_whole_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
}
inline void AutofillProfileSpecifics::set_phone_fax_whole_number(const char* value, size_t size)
{
    set_has_phone_fax_whole_number();
    phone_fax_whole_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
}
inline ::std::string* AutofillProfileSpecifics::mutable_phone_fax_whole_number()
{
    set_has_phone_fax_whole_number();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
    return phone_fax_whole_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillProfileSpecifics::release_phone_fax_whole_number()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
    clear_has_phone_fax_whole_number();
    return phone_fax_whole_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillProfileSpecifics::set_allocated_phone_fax_whole_number(::std::string* phone_fax_whole_number)
{
    if (phone_fax_whole_number != NULL) {
        set_has_phone_fax_whole_number();
    } else {
        clear_has_phone_fax_whole_number();
    }
    phone_fax_whole_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_fax_whole_number);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
}

// -------------------------------------------------------------------

// AutofillSpecifics

// optional string name = 1;
inline bool AutofillSpecifics::has_name() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillSpecifics::set_has_name()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void AutofillSpecifics::clear_has_name()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillSpecifics::clear_name()
{
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_name();
}
inline const ::std::string& AutofillSpecifics::name() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillSpecifics.name)
    return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillSpecifics::set_name(const ::std::string& value)
{
    set_has_name();
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillSpecifics.name)
}
inline void AutofillSpecifics::set_name(const char* value)
{
    set_has_name();
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillSpecifics.name)
}
inline void AutofillSpecifics::set_name(const char* value, size_t size)
{
    set_has_name();
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillSpecifics.name)
}
inline ::std::string* AutofillSpecifics::mutable_name()
{
    set_has_name();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillSpecifics.name)
    return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillSpecifics::release_name()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillSpecifics.name)
    clear_has_name();
    return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillSpecifics::set_allocated_name(::std::string* name)
{
    if (name != NULL) {
        set_has_name();
    } else {
        clear_has_name();
    }
    name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillSpecifics.name)
}

// optional string value = 2;
inline bool AutofillSpecifics::has_value() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutofillSpecifics::set_has_value()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void AutofillSpecifics::clear_has_value()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void AutofillSpecifics::clear_value()
{
    value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
}
inline const ::std::string& AutofillSpecifics::value() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillSpecifics.value)
    return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillSpecifics::set_value(const ::std::string& value)
{
    set_has_value();
    value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillSpecifics.value)
}
inline void AutofillSpecifics::set_value(const char* value)
{
    set_has_value();
    value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillSpecifics.value)
}
inline void AutofillSpecifics::set_value(const char* value, size_t size)
{
    set_has_value();
    value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillSpecifics.value)
}
inline ::std::string* AutofillSpecifics::mutable_value()
{
    set_has_value();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillSpecifics.value)
    return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillSpecifics::release_value()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillSpecifics.value)
    clear_has_value();
    return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillSpecifics::set_allocated_value(::std::string* value)
{
    if (value != NULL) {
        set_has_value();
    } else {
        clear_has_value();
    }
    value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillSpecifics.value)
}

// repeated int64 usage_timestamp = 3;
inline int AutofillSpecifics::usage_timestamp_size() const
{
    return usage_timestamp_.size();
}
inline void AutofillSpecifics::clear_usage_timestamp()
{
    usage_timestamp_.Clear();
}
inline ::google::protobuf::int64 AutofillSpecifics::usage_timestamp(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillSpecifics.usage_timestamp)
    return usage_timestamp_.Get(index);
}
inline void AutofillSpecifics::set_usage_timestamp(int index, ::google::protobuf::int64 value)
{
    usage_timestamp_.Set(index, value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillSpecifics.usage_timestamp)
}
inline void AutofillSpecifics::add_usage_timestamp(::google::protobuf::int64 value)
{
    usage_timestamp_.Add(value);
    // @@protoc_insertion_point(field_add:sync_pb.AutofillSpecifics.usage_timestamp)
}
inline const ::google::protobuf::RepeatedField<::google::protobuf::int64>&
AutofillSpecifics::usage_timestamp() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AutofillSpecifics.usage_timestamp)
    return usage_timestamp_;
}
inline ::google::protobuf::RepeatedField<::google::protobuf::int64>*
AutofillSpecifics::mutable_usage_timestamp()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillSpecifics.usage_timestamp)
    return &usage_timestamp_;
}

// optional .sync_pb.AutofillProfileSpecifics profile = 4;
inline bool AutofillSpecifics::has_profile() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AutofillSpecifics::set_has_profile()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void AutofillSpecifics::clear_has_profile()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void AutofillSpecifics::clear_profile()
{
    if (profile_ != NULL)
        profile_->::sync_pb::AutofillProfileSpecifics::Clear();
    clear_has_profile();
}
inline const ::sync_pb::AutofillProfileSpecifics& AutofillSpecifics::profile() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillSpecifics.profile)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return profile_ != NULL ? *profile_ : *default_instance().profile_;
#else
    return profile_ != NULL ? *profile_ : *default_instance_->profile_;
#endif
}
inline ::sync_pb::AutofillProfileSpecifics* AutofillSpecifics::mutable_profile()
{
    set_has_profile();
    if (profile_ == NULL) {
        profile_ = new ::sync_pb::AutofillProfileSpecifics;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillSpecifics.profile)
    return profile_;
}
inline ::sync_pb::AutofillProfileSpecifics* AutofillSpecifics::release_profile()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillSpecifics.profile)
    clear_has_profile();
    ::sync_pb::AutofillProfileSpecifics* temp = profile_;
    profile_ = NULL;
    return temp;
}
inline void AutofillSpecifics::set_allocated_profile(::sync_pb::AutofillProfileSpecifics* profile)
{
    delete profile_;
    profile_ = profile;
    if (profile) {
        set_has_profile();
    } else {
        clear_has_profile();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillSpecifics.profile)
}

// -------------------------------------------------------------------

// WalletMaskedCreditCard

// optional string id = 1;
inline bool WalletMaskedCreditCard::has_id() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WalletMaskedCreditCard::set_has_id()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void WalletMaskedCreditCard::clear_has_id()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void WalletMaskedCreditCard::clear_id()
{
    id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_id();
}
inline const ::std::string& WalletMaskedCreditCard::id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.id)
    return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletMaskedCreditCard::set_id(const ::std::string& value)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.id)
}
inline void WalletMaskedCreditCard::set_id(const char* value)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletMaskedCreditCard.id)
}
inline void WalletMaskedCreditCard::set_id(const char* value, size_t size)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMaskedCreditCard.id)
}
inline ::std::string* WalletMaskedCreditCard::mutable_id()
{
    set_has_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletMaskedCreditCard.id)
    return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletMaskedCreditCard::release_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletMaskedCreditCard.id)
    clear_has_id();
    return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletMaskedCreditCard::set_allocated_id(::std::string* id)
{
    if (id != NULL) {
        set_has_id();
    } else {
        clear_has_id();
    }
    id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMaskedCreditCard.id)
}

// optional .sync_pb.WalletMaskedCreditCard.WalletCardStatus status = 2;
inline bool WalletMaskedCreditCard::has_status() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WalletMaskedCreditCard::set_has_status()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void WalletMaskedCreditCard::clear_has_status()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void WalletMaskedCreditCard::clear_status()
{
    status_ = 0;
    clear_has_status();
}
inline ::sync_pb::WalletMaskedCreditCard_WalletCardStatus WalletMaskedCreditCard::status() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.status)
    return static_cast<::sync_pb::WalletMaskedCreditCard_WalletCardStatus>(status_);
}
inline void WalletMaskedCreditCard::set_status(::sync_pb::WalletMaskedCreditCard_WalletCardStatus value)
{
    assert(::sync_pb::WalletMaskedCreditCard_WalletCardStatus_IsValid(value));
    set_has_status();
    status_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.status)
}

// optional string name_on_card = 3;
inline bool WalletMaskedCreditCard::has_name_on_card() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WalletMaskedCreditCard::set_has_name_on_card()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void WalletMaskedCreditCard::clear_has_name_on_card()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void WalletMaskedCreditCard::clear_name_on_card()
{
    name_on_card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_name_on_card();
}
inline const ::std::string& WalletMaskedCreditCard::name_on_card() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.name_on_card)
    return name_on_card_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletMaskedCreditCard::set_name_on_card(const ::std::string& value)
{
    set_has_name_on_card();
    name_on_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.name_on_card)
}
inline void WalletMaskedCreditCard::set_name_on_card(const char* value)
{
    set_has_name_on_card();
    name_on_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletMaskedCreditCard.name_on_card)
}
inline void WalletMaskedCreditCard::set_name_on_card(const char* value, size_t size)
{
    set_has_name_on_card();
    name_on_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMaskedCreditCard.name_on_card)
}
inline ::std::string* WalletMaskedCreditCard::mutable_name_on_card()
{
    set_has_name_on_card();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletMaskedCreditCard.name_on_card)
    return name_on_card_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletMaskedCreditCard::release_name_on_card()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletMaskedCreditCard.name_on_card)
    clear_has_name_on_card();
    return name_on_card_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletMaskedCreditCard::set_allocated_name_on_card(::std::string* name_on_card)
{
    if (name_on_card != NULL) {
        set_has_name_on_card();
    } else {
        clear_has_name_on_card();
    }
    name_on_card_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name_on_card);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMaskedCreditCard.name_on_card)
}

// optional .sync_pb.WalletMaskedCreditCard.WalletCardType type = 4;
inline bool WalletMaskedCreditCard::has_type() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WalletMaskedCreditCard::set_has_type()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void WalletMaskedCreditCard::clear_has_type()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void WalletMaskedCreditCard::clear_type()
{
    type_ = 0;
    clear_has_type();
}
inline ::sync_pb::WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::type() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.type)
    return static_cast<::sync_pb::WalletMaskedCreditCard_WalletCardType>(type_);
}
inline void WalletMaskedCreditCard::set_type(::sync_pb::WalletMaskedCreditCard_WalletCardType value)
{
    assert(::sync_pb::WalletMaskedCreditCard_WalletCardType_IsValid(value));
    set_has_type();
    type_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.type)
}

// optional string last_four = 5;
inline bool WalletMaskedCreditCard::has_last_four() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WalletMaskedCreditCard::set_has_last_four()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void WalletMaskedCreditCard::clear_has_last_four()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void WalletMaskedCreditCard::clear_last_four()
{
    last_four_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_last_four();
}
inline const ::std::string& WalletMaskedCreditCard::last_four() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.last_four)
    return last_four_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletMaskedCreditCard::set_last_four(const ::std::string& value)
{
    set_has_last_four();
    last_four_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.last_four)
}
inline void WalletMaskedCreditCard::set_last_four(const char* value)
{
    set_has_last_four();
    last_four_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletMaskedCreditCard.last_four)
}
inline void WalletMaskedCreditCard::set_last_four(const char* value, size_t size)
{
    set_has_last_four();
    last_four_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMaskedCreditCard.last_four)
}
inline ::std::string* WalletMaskedCreditCard::mutable_last_four()
{
    set_has_last_four();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletMaskedCreditCard.last_four)
    return last_four_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletMaskedCreditCard::release_last_four()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletMaskedCreditCard.last_four)
    clear_has_last_four();
    return last_four_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletMaskedCreditCard::set_allocated_last_four(::std::string* last_four)
{
    if (last_four != NULL) {
        set_has_last_four();
    } else {
        clear_has_last_four();
    }
    last_four_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_four);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMaskedCreditCard.last_four)
}

// optional int32 exp_month = 6;
inline bool WalletMaskedCreditCard::has_exp_month() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WalletMaskedCreditCard::set_has_exp_month()
{
    _has_bits_[0] |= 0x00000020u;
}
inline void WalletMaskedCreditCard::clear_has_exp_month()
{
    _has_bits_[0] &= ~0x00000020u;
}
inline void WalletMaskedCreditCard::clear_exp_month()
{
    exp_month_ = 0;
    clear_has_exp_month();
}
inline ::google::protobuf::int32 WalletMaskedCreditCard::exp_month() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.exp_month)
    return exp_month_;
}
inline void WalletMaskedCreditCard::set_exp_month(::google::protobuf::int32 value)
{
    set_has_exp_month();
    exp_month_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.exp_month)
}

// optional int32 exp_year = 7;
inline bool WalletMaskedCreditCard::has_exp_year() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WalletMaskedCreditCard::set_has_exp_year()
{
    _has_bits_[0] |= 0x00000040u;
}
inline void WalletMaskedCreditCard::clear_has_exp_year()
{
    _has_bits_[0] &= ~0x00000040u;
}
inline void WalletMaskedCreditCard::clear_exp_year()
{
    exp_year_ = 0;
    clear_has_exp_year();
}
inline ::google::protobuf::int32 WalletMaskedCreditCard::exp_year() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.exp_year)
    return exp_year_;
}
inline void WalletMaskedCreditCard::set_exp_year(::google::protobuf::int32 value)
{
    set_has_exp_year();
    exp_year_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.exp_year)
}

// optional string billing_address_id = 8;
inline bool WalletMaskedCreditCard::has_billing_address_id() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WalletMaskedCreditCard::set_has_billing_address_id()
{
    _has_bits_[0] |= 0x00000080u;
}
inline void WalletMaskedCreditCard::clear_has_billing_address_id()
{
    _has_bits_[0] &= ~0x00000080u;
}
inline void WalletMaskedCreditCard::clear_billing_address_id()
{
    billing_address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_billing_address_id();
}
inline const ::std::string& WalletMaskedCreditCard::billing_address_id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.billing_address_id)
    return billing_address_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletMaskedCreditCard::set_billing_address_id(const ::std::string& value)
{
    set_has_billing_address_id();
    billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.billing_address_id)
}
inline void WalletMaskedCreditCard::set_billing_address_id(const char* value)
{
    set_has_billing_address_id();
    billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletMaskedCreditCard.billing_address_id)
}
inline void WalletMaskedCreditCard::set_billing_address_id(const char* value, size_t size)
{
    set_has_billing_address_id();
    billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMaskedCreditCard.billing_address_id)
}
inline ::std::string* WalletMaskedCreditCard::mutable_billing_address_id()
{
    set_has_billing_address_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletMaskedCreditCard.billing_address_id)
    return billing_address_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletMaskedCreditCard::release_billing_address_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletMaskedCreditCard.billing_address_id)
    clear_has_billing_address_id();
    return billing_address_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletMaskedCreditCard::set_allocated_billing_address_id(::std::string* billing_address_id)
{
    if (billing_address_id != NULL) {
        set_has_billing_address_id();
    } else {
        clear_has_billing_address_id();
    }
    billing_address_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billing_address_id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMaskedCreditCard.billing_address_id)
}

// optional .sync_pb.WalletMaskedCreditCard.WalletCardClass card_class = 9;
inline bool WalletMaskedCreditCard::has_card_class() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WalletMaskedCreditCard::set_has_card_class()
{
    _has_bits_[0] |= 0x00000100u;
}
inline void WalletMaskedCreditCard::clear_has_card_class()
{
    _has_bits_[0] &= ~0x00000100u;
}
inline void WalletMaskedCreditCard::clear_card_class()
{
    card_class_ = 0;
    clear_has_card_class();
}
inline ::sync_pb::WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::card_class() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.card_class)
    return static_cast<::sync_pb::WalletMaskedCreditCard_WalletCardClass>(card_class_);
}
inline void WalletMaskedCreditCard::set_card_class(::sync_pb::WalletMaskedCreditCard_WalletCardClass value)
{
    assert(::sync_pb::WalletMaskedCreditCard_WalletCardClass_IsValid(value));
    set_has_card_class();
    card_class_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.card_class)
}

// -------------------------------------------------------------------

// WalletPostalAddress

// optional string id = 1;
inline bool WalletPostalAddress::has_id() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WalletPostalAddress::set_has_id()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void WalletPostalAddress::clear_has_id()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void WalletPostalAddress::clear_id()
{
    id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_id();
}
inline const ::std::string& WalletPostalAddress::id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.id)
    return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_id(const ::std::string& value)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.id)
}
inline void WalletPostalAddress::set_id(const char* value)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.id)
}
inline void WalletPostalAddress::set_id(const char* value, size_t size)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.id)
}
inline ::std::string* WalletPostalAddress::mutable_id()
{
    set_has_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.id)
    return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletPostalAddress::release_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.id)
    clear_has_id();
    return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_allocated_id(::std::string* id)
{
    if (id != NULL) {
        set_has_id();
    } else {
        clear_has_id();
    }
    id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.id)
}

// optional string recipient_name = 12;
inline bool WalletPostalAddress::has_recipient_name() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WalletPostalAddress::set_has_recipient_name()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void WalletPostalAddress::clear_has_recipient_name()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void WalletPostalAddress::clear_recipient_name()
{
    recipient_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_recipient_name();
}
inline const ::std::string& WalletPostalAddress::recipient_name() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.recipient_name)
    return recipient_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_recipient_name(const ::std::string& value)
{
    set_has_recipient_name();
    recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.recipient_name)
}
inline void WalletPostalAddress::set_recipient_name(const char* value)
{
    set_has_recipient_name();
    recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.recipient_name)
}
inline void WalletPostalAddress::set_recipient_name(const char* value, size_t size)
{
    set_has_recipient_name();
    recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.recipient_name)
}
inline ::std::string* WalletPostalAddress::mutable_recipient_name()
{
    set_has_recipient_name();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.recipient_name)
    return recipient_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletPostalAddress::release_recipient_name()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.recipient_name)
    clear_has_recipient_name();
    return recipient_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_allocated_recipient_name(::std::string* recipient_name)
{
    if (recipient_name != NULL) {
        set_has_recipient_name();
    } else {
        clear_has_recipient_name();
    }
    recipient_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recipient_name);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.recipient_name)
}

// optional string company_name = 2;
inline bool WalletPostalAddress::has_company_name() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WalletPostalAddress::set_has_company_name()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void WalletPostalAddress::clear_has_company_name()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void WalletPostalAddress::clear_company_name()
{
    company_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_company_name();
}
inline const ::std::string& WalletPostalAddress::company_name() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.company_name)
    return company_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_company_name(const ::std::string& value)
{
    set_has_company_name();
    company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.company_name)
}
inline void WalletPostalAddress::set_company_name(const char* value)
{
    set_has_company_name();
    company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.company_name)
}
inline void WalletPostalAddress::set_company_name(const char* value, size_t size)
{
    set_has_company_name();
    company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.company_name)
}
inline ::std::string* WalletPostalAddress::mutable_company_name()
{
    set_has_company_name();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.company_name)
    return company_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletPostalAddress::release_company_name()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.company_name)
    clear_has_company_name();
    return company_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_allocated_company_name(::std::string* company_name)
{
    if (company_name != NULL) {
        set_has_company_name();
    } else {
        clear_has_company_name();
    }
    company_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), company_name);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.company_name)
}

// repeated string street_address = 3;
inline int WalletPostalAddress::street_address_size() const
{
    return street_address_.size();
}
inline void WalletPostalAddress::clear_street_address()
{
    street_address_.Clear();
}
inline const ::std::string& WalletPostalAddress::street_address(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.street_address)
    return street_address_.Get(index);
}
inline ::std::string* WalletPostalAddress::mutable_street_address(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.street_address)
    return street_address_.Mutable(index);
}
inline void WalletPostalAddress::set_street_address(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.street_address)
    street_address_.Mutable(index)->assign(value);
}
inline void WalletPostalAddress::set_street_address(int index, const char* value)
{
    street_address_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.street_address)
}
inline void WalletPostalAddress::set_street_address(int index, const char* value, size_t size)
{
    street_address_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.street_address)
}
inline ::std::string* WalletPostalAddress::add_street_address()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.WalletPostalAddress.street_address)
    return street_address_.Add();
}
inline void WalletPostalAddress::add_street_address(const ::std::string& value)
{
    street_address_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.WalletPostalAddress.street_address)
}
inline void WalletPostalAddress::add_street_address(const char* value)
{
    street_address_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.WalletPostalAddress.street_address)
}
inline void WalletPostalAddress::add_street_address(const char* value, size_t size)
{
    street_address_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.WalletPostalAddress.street_address)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
WalletPostalAddress::street_address() const
{
    // @@protoc_insertion_point(field_list:sync_pb.WalletPostalAddress.street_address)
    return street_address_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
WalletPostalAddress::mutable_street_address()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.WalletPostalAddress.street_address)
    return &street_address_;
}

// optional string address_1 = 4;
inline bool WalletPostalAddress::has_address_1() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WalletPostalAddress::set_has_address_1()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void WalletPostalAddress::clear_has_address_1()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void WalletPostalAddress::clear_address_1()
{
    address_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_1();
}
inline const ::std::string& WalletPostalAddress::address_1() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.address_1)
    return address_1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_address_1(const ::std::string& value)
{
    set_has_address_1();
    address_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.address_1)
}
inline void WalletPostalAddress::set_address_1(const char* value)
{
    set_has_address_1();
    address_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.address_1)
}
inline void WalletPostalAddress::set_address_1(const char* value, size_t size)
{
    set_has_address_1();
    address_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.address_1)
}
inline ::std::string* WalletPostalAddress::mutable_address_1()
{
    set_has_address_1();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.address_1)
    return address_1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletPostalAddress::release_address_1()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.address_1)
    clear_has_address_1();
    return address_1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_allocated_address_1(::std::string* address_1)
{
    if (address_1 != NULL) {
        set_has_address_1();
    } else {
        clear_has_address_1();
    }
    address_1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_1);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.address_1)
}

// optional string address_2 = 5;
inline bool WalletPostalAddress::has_address_2() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WalletPostalAddress::set_has_address_2()
{
    _has_bits_[0] |= 0x00000020u;
}
inline void WalletPostalAddress::clear_has_address_2()
{
    _has_bits_[0] &= ~0x00000020u;
}
inline void WalletPostalAddress::clear_address_2()
{
    address_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_2();
}
inline const ::std::string& WalletPostalAddress::address_2() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.address_2)
    return address_2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_address_2(const ::std::string& value)
{
    set_has_address_2();
    address_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.address_2)
}
inline void WalletPostalAddress::set_address_2(const char* value)
{
    set_has_address_2();
    address_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.address_2)
}
inline void WalletPostalAddress::set_address_2(const char* value, size_t size)
{
    set_has_address_2();
    address_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.address_2)
}
inline ::std::string* WalletPostalAddress::mutable_address_2()
{
    set_has_address_2();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.address_2)
    return address_2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletPostalAddress::release_address_2()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.address_2)
    clear_has_address_2();
    return address_2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_allocated_address_2(::std::string* address_2)
{
    if (address_2 != NULL) {
        set_has_address_2();
    } else {
        clear_has_address_2();
    }
    address_2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_2);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.address_2)
}

// optional string address_3 = 6;
inline bool WalletPostalAddress::has_address_3() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WalletPostalAddress::set_has_address_3()
{
    _has_bits_[0] |= 0x00000040u;
}
inline void WalletPostalAddress::clear_has_address_3()
{
    _has_bits_[0] &= ~0x00000040u;
}
inline void WalletPostalAddress::clear_address_3()
{
    address_3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_3();
}
inline const ::std::string& WalletPostalAddress::address_3() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.address_3)
    return address_3_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_address_3(const ::std::string& value)
{
    set_has_address_3();
    address_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.address_3)
}
inline void WalletPostalAddress::set_address_3(const char* value)
{
    set_has_address_3();
    address_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.address_3)
}
inline void WalletPostalAddress::set_address_3(const char* value, size_t size)
{
    set_has_address_3();
    address_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.address_3)
}
inline ::std::string* WalletPostalAddress::mutable_address_3()
{
    set_has_address_3();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.address_3)
    return address_3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletPostalAddress::release_address_3()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.address_3)
    clear_has_address_3();
    return address_3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_allocated_address_3(::std::string* address_3)
{
    if (address_3 != NULL) {
        set_has_address_3();
    } else {
        clear_has_address_3();
    }
    address_3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_3);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.address_3)
}

// optional string address_4 = 7;
inline bool WalletPostalAddress::has_address_4() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WalletPostalAddress::set_has_address_4()
{
    _has_bits_[0] |= 0x00000080u;
}
inline void WalletPostalAddress::clear_has_address_4()
{
    _has_bits_[0] &= ~0x00000080u;
}
inline void WalletPostalAddress::clear_address_4()
{
    address_4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_4();
}
inline const ::std::string& WalletPostalAddress::address_4() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.address_4)
    return address_4_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_address_4(const ::std::string& value)
{
    set_has_address_4();
    address_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.address_4)
}
inline void WalletPostalAddress::set_address_4(const char* value)
{
    set_has_address_4();
    address_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.address_4)
}
inline void WalletPostalAddress::set_address_4(const char* value, size_t size)
{
    set_has_address_4();
    address_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.address_4)
}
inline ::std::string* WalletPostalAddress::mutable_address_4()
{
    set_has_address_4();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.address_4)
    return address_4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletPostalAddress::release_address_4()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.address_4)
    clear_has_address_4();
    return address_4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_allocated_address_4(::std::string* address_4)
{
    if (address_4 != NULL) {
        set_has_address_4();
    } else {
        clear_has_address_4();
    }
    address_4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_4);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.address_4)
}

// optional string postal_code = 8;
inline bool WalletPostalAddress::has_postal_code() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WalletPostalAddress::set_has_postal_code()
{
    _has_bits_[0] |= 0x00000100u;
}
inline void WalletPostalAddress::clear_has_postal_code()
{
    _has_bits_[0] &= ~0x00000100u;
}
inline void WalletPostalAddress::clear_postal_code()
{
    postal_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_postal_code();
}
inline const ::std::string& WalletPostalAddress::postal_code() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.postal_code)
    return postal_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_postal_code(const ::std::string& value)
{
    set_has_postal_code();
    postal_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.postal_code)
}
inline void WalletPostalAddress::set_postal_code(const char* value)
{
    set_has_postal_code();
    postal_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.postal_code)
}
inline void WalletPostalAddress::set_postal_code(const char* value, size_t size)
{
    set_has_postal_code();
    postal_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.postal_code)
}
inline ::std::string* WalletPostalAddress::mutable_postal_code()
{
    set_has_postal_code();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.postal_code)
    return postal_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletPostalAddress::release_postal_code()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.postal_code)
    clear_has_postal_code();
    return postal_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_allocated_postal_code(::std::string* postal_code)
{
    if (postal_code != NULL) {
        set_has_postal_code();
    } else {
        clear_has_postal_code();
    }
    postal_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), postal_code);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.postal_code)
}

// optional string sorting_code = 9;
inline bool WalletPostalAddress::has_sorting_code() const
{
    return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WalletPostalAddress::set_has_sorting_code()
{
    _has_bits_[0] |= 0x00000200u;
}
inline void WalletPostalAddress::clear_has_sorting_code()
{
    _has_bits_[0] &= ~0x00000200u;
}
inline void WalletPostalAddress::clear_sorting_code()
{
    sorting_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_sorting_code();
}
inline const ::std::string& WalletPostalAddress::sorting_code() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.sorting_code)
    return sorting_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_sorting_code(const ::std::string& value)
{
    set_has_sorting_code();
    sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.sorting_code)
}
inline void WalletPostalAddress::set_sorting_code(const char* value)
{
    set_has_sorting_code();
    sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.sorting_code)
}
inline void WalletPostalAddress::set_sorting_code(const char* value, size_t size)
{
    set_has_sorting_code();
    sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.sorting_code)
}
inline ::std::string* WalletPostalAddress::mutable_sorting_code()
{
    set_has_sorting_code();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.sorting_code)
    return sorting_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletPostalAddress::release_sorting_code()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.sorting_code)
    clear_has_sorting_code();
    return sorting_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_allocated_sorting_code(::std::string* sorting_code)
{
    if (sorting_code != NULL) {
        set_has_sorting_code();
    } else {
        clear_has_sorting_code();
    }
    sorting_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sorting_code);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.sorting_code)
}

// optional string country_code = 10;
inline bool WalletPostalAddress::has_country_code() const
{
    return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WalletPostalAddress::set_has_country_code()
{
    _has_bits_[0] |= 0x00000400u;
}
inline void WalletPostalAddress::clear_has_country_code()
{
    _has_bits_[0] &= ~0x00000400u;
}
inline void WalletPostalAddress::clear_country_code()
{
    country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_country_code();
}
inline const ::std::string& WalletPostalAddress::country_code() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.country_code)
    return country_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_country_code(const ::std::string& value)
{
    set_has_country_code();
    country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.country_code)
}
inline void WalletPostalAddress::set_country_code(const char* value)
{
    set_has_country_code();
    country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.country_code)
}
inline void WalletPostalAddress::set_country_code(const char* value, size_t size)
{
    set_has_country_code();
    country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.country_code)
}
inline ::std::string* WalletPostalAddress::mutable_country_code()
{
    set_has_country_code();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.country_code)
    return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletPostalAddress::release_country_code()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.country_code)
    clear_has_country_code();
    return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_allocated_country_code(::std::string* country_code)
{
    if (country_code != NULL) {
        set_has_country_code();
    } else {
        clear_has_country_code();
    }
    country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.country_code)
}

// optional string language_code = 11;
inline bool WalletPostalAddress::has_language_code() const
{
    return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void WalletPostalAddress::set_has_language_code()
{
    _has_bits_[0] |= 0x00000800u;
}
inline void WalletPostalAddress::clear_has_language_code()
{
    _has_bits_[0] &= ~0x00000800u;
}
inline void WalletPostalAddress::clear_language_code()
{
    language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_language_code();
}
inline const ::std::string& WalletPostalAddress::language_code() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.language_code)
    return language_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_language_code(const ::std::string& value)
{
    set_has_language_code();
    language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.language_code)
}
inline void WalletPostalAddress::set_language_code(const char* value)
{
    set_has_language_code();
    language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.language_code)
}
inline void WalletPostalAddress::set_language_code(const char* value, size_t size)
{
    set_has_language_code();
    language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.language_code)
}
inline ::std::string* WalletPostalAddress::mutable_language_code()
{
    set_has_language_code();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.language_code)
    return language_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletPostalAddress::release_language_code()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.language_code)
    clear_has_language_code();
    return language_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_allocated_language_code(::std::string* language_code)
{
    if (language_code != NULL) {
        set_has_language_code();
    } else {
        clear_has_language_code();
    }
    language_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.language_code)
}

// optional string phone_number = 13;
inline bool WalletPostalAddress::has_phone_number() const
{
    return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void WalletPostalAddress::set_has_phone_number()
{
    _has_bits_[0] |= 0x00001000u;
}
inline void WalletPostalAddress::clear_has_phone_number()
{
    _has_bits_[0] &= ~0x00001000u;
}
inline void WalletPostalAddress::clear_phone_number()
{
    phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_phone_number();
}
inline const ::std::string& WalletPostalAddress::phone_number() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.phone_number)
    return phone_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_phone_number(const ::std::string& value)
{
    set_has_phone_number();
    phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.phone_number)
}
inline void WalletPostalAddress::set_phone_number(const char* value)
{
    set_has_phone_number();
    phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.phone_number)
}
inline void WalletPostalAddress::set_phone_number(const char* value, size_t size)
{
    set_has_phone_number();
    phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.phone_number)
}
inline ::std::string* WalletPostalAddress::mutable_phone_number()
{
    set_has_phone_number();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.phone_number)
    return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletPostalAddress::release_phone_number()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.phone_number)
    clear_has_phone_number();
    return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletPostalAddress::set_allocated_phone_number(::std::string* phone_number)
{
    if (phone_number != NULL) {
        set_has_phone_number();
    } else {
        clear_has_phone_number();
    }
    phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.phone_number)
}

// -------------------------------------------------------------------

// AutofillWalletSpecifics

// optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;
inline bool AutofillWalletSpecifics::has_type() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillWalletSpecifics::set_has_type()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void AutofillWalletSpecifics::clear_has_type()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillWalletSpecifics::clear_type()
{
    type_ = 0;
    clear_has_type();
}
inline ::sync_pb::AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics::type() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillWalletSpecifics.type)
    return static_cast<::sync_pb::AutofillWalletSpecifics_WalletInfoType>(type_);
}
inline void AutofillWalletSpecifics::set_type(::sync_pb::AutofillWalletSpecifics_WalletInfoType value)
{
    assert(::sync_pb::AutofillWalletSpecifics_WalletInfoType_IsValid(value));
    set_has_type();
    type_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.AutofillWalletSpecifics.type)
}

// optional .sync_pb.WalletMaskedCreditCard masked_card = 2;
inline bool AutofillWalletSpecifics::has_masked_card() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutofillWalletSpecifics::set_has_masked_card()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void AutofillWalletSpecifics::clear_has_masked_card()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void AutofillWalletSpecifics::clear_masked_card()
{
    if (masked_card_ != NULL)
        masked_card_->::sync_pb::WalletMaskedCreditCard::Clear();
    clear_has_masked_card();
}
inline const ::sync_pb::WalletMaskedCreditCard& AutofillWalletSpecifics::masked_card() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillWalletSpecifics.masked_card)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return masked_card_ != NULL ? *masked_card_ : *default_instance().masked_card_;
#else
    return masked_card_ != NULL ? *masked_card_ : *default_instance_->masked_card_;
#endif
}
inline ::sync_pb::WalletMaskedCreditCard* AutofillWalletSpecifics::mutable_masked_card()
{
    set_has_masked_card();
    if (masked_card_ == NULL) {
        masked_card_ = new ::sync_pb::WalletMaskedCreditCard;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillWalletSpecifics.masked_card)
    return masked_card_;
}
inline ::sync_pb::WalletMaskedCreditCard* AutofillWalletSpecifics::release_masked_card()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillWalletSpecifics.masked_card)
    clear_has_masked_card();
    ::sync_pb::WalletMaskedCreditCard* temp = masked_card_;
    masked_card_ = NULL;
    return temp;
}
inline void AutofillWalletSpecifics::set_allocated_masked_card(::sync_pb::WalletMaskedCreditCard* masked_card)
{
    delete masked_card_;
    masked_card_ = masked_card;
    if (masked_card) {
        set_has_masked_card();
    } else {
        clear_has_masked_card();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillWalletSpecifics.masked_card)
}

// optional .sync_pb.WalletPostalAddress address = 3;
inline bool AutofillWalletSpecifics::has_address() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AutofillWalletSpecifics::set_has_address()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void AutofillWalletSpecifics::clear_has_address()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void AutofillWalletSpecifics::clear_address()
{
    if (address_ != NULL)
        address_->::sync_pb::WalletPostalAddress::Clear();
    clear_has_address();
}
inline const ::sync_pb::WalletPostalAddress& AutofillWalletSpecifics::address() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillWalletSpecifics.address)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return address_ != NULL ? *address_ : *default_instance().address_;
#else
    return address_ != NULL ? *address_ : *default_instance_->address_;
#endif
}
inline ::sync_pb::WalletPostalAddress* AutofillWalletSpecifics::mutable_address()
{
    set_has_address();
    if (address_ == NULL) {
        address_ = new ::sync_pb::WalletPostalAddress;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillWalletSpecifics.address)
    return address_;
}
inline ::sync_pb::WalletPostalAddress* AutofillWalletSpecifics::release_address()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillWalletSpecifics.address)
    clear_has_address();
    ::sync_pb::WalletPostalAddress* temp = address_;
    address_ = NULL;
    return temp;
}
inline void AutofillWalletSpecifics::set_allocated_address(::sync_pb::WalletPostalAddress* address)
{
    delete address_;
    address_ = address;
    if (address) {
        set_has_address();
    } else {
        clear_has_address();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillWalletSpecifics.address)
}

// -------------------------------------------------------------------

// WalletMetadataSpecifics

// optional .sync_pb.WalletMetadataSpecifics.Type type = 1;
inline bool WalletMetadataSpecifics::has_type() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WalletMetadataSpecifics::set_has_type()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void WalletMetadataSpecifics::clear_has_type()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void WalletMetadataSpecifics::clear_type()
{
    type_ = 0;
    clear_has_type();
}
inline ::sync_pb::WalletMetadataSpecifics_Type WalletMetadataSpecifics::type() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.type)
    return static_cast<::sync_pb::WalletMetadataSpecifics_Type>(type_);
}
inline void WalletMetadataSpecifics::set_type(::sync_pb::WalletMetadataSpecifics_Type value)
{
    assert(::sync_pb::WalletMetadataSpecifics_Type_IsValid(value));
    set_has_type();
    type_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.type)
}

// optional string id = 2;
inline bool WalletMetadataSpecifics::has_id() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WalletMetadataSpecifics::set_has_id()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void WalletMetadataSpecifics::clear_has_id()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void WalletMetadataSpecifics::clear_id()
{
    id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_id();
}
inline const ::std::string& WalletMetadataSpecifics::id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.id)
    return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletMetadataSpecifics::set_id(const ::std::string& value)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.id)
}
inline void WalletMetadataSpecifics::set_id(const char* value)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletMetadataSpecifics.id)
}
inline void WalletMetadataSpecifics::set_id(const char* value, size_t size)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMetadataSpecifics.id)
}
inline ::std::string* WalletMetadataSpecifics::mutable_id()
{
    set_has_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletMetadataSpecifics.id)
    return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletMetadataSpecifics::release_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletMetadataSpecifics.id)
    clear_has_id();
    return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletMetadataSpecifics::set_allocated_id(::std::string* id)
{
    if (id != NULL) {
        set_has_id();
    } else {
        clear_has_id();
    }
    id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMetadataSpecifics.id)
}

// optional int64 use_count = 3;
inline bool WalletMetadataSpecifics::has_use_count() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WalletMetadataSpecifics::set_has_use_count()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void WalletMetadataSpecifics::clear_has_use_count()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void WalletMetadataSpecifics::clear_use_count()
{
    use_count_ = GOOGLE_LONGLONG(0);
    clear_has_use_count();
}
inline ::google::protobuf::int64 WalletMetadataSpecifics::use_count() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.use_count)
    return use_count_;
}
inline void WalletMetadataSpecifics::set_use_count(::google::protobuf::int64 value)
{
    set_has_use_count();
    use_count_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.use_count)
}

// optional int64 use_date = 4;
inline bool WalletMetadataSpecifics::has_use_date() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WalletMetadataSpecifics::set_has_use_date()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void WalletMetadataSpecifics::clear_has_use_date()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void WalletMetadataSpecifics::clear_use_date()
{
    use_date_ = GOOGLE_LONGLONG(0);
    clear_has_use_date();
}
inline ::google::protobuf::int64 WalletMetadataSpecifics::use_date() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.use_date)
    return use_date_;
}
inline void WalletMetadataSpecifics::set_use_date(::google::protobuf::int64 value)
{
    set_has_use_date();
    use_date_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.use_date)
}

// optional string card_billing_address_id = 5;
inline bool WalletMetadataSpecifics::has_card_billing_address_id() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WalletMetadataSpecifics::set_has_card_billing_address_id()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void WalletMetadataSpecifics::clear_has_card_billing_address_id()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void WalletMetadataSpecifics::clear_card_billing_address_id()
{
    card_billing_address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_card_billing_address_id();
}
inline const ::std::string& WalletMetadataSpecifics::card_billing_address_id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
    return card_billing_address_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletMetadataSpecifics::set_card_billing_address_id(const ::std::string& value)
{
    set_has_card_billing_address_id();
    card_billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
}
inline void WalletMetadataSpecifics::set_card_billing_address_id(const char* value)
{
    set_has_card_billing_address_id();
    card_billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
}
inline void WalletMetadataSpecifics::set_card_billing_address_id(const char* value, size_t size)
{
    set_has_card_billing_address_id();
    card_billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
}
inline ::std::string* WalletMetadataSpecifics::mutable_card_billing_address_id()
{
    set_has_card_billing_address_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
    return card_billing_address_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletMetadataSpecifics::release_card_billing_address_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
    clear_has_card_billing_address_id();
    return card_billing_address_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletMetadataSpecifics::set_allocated_card_billing_address_id(::std::string* card_billing_address_id)
{
    if (card_billing_address_id != NULL) {
        set_has_card_billing_address_id();
    } else {
        clear_has_card_billing_address_id();
    }
    card_billing_address_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_billing_address_id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
}

// optional bool address_has_converted = 6;
inline bool WalletMetadataSpecifics::has_address_has_converted() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WalletMetadataSpecifics::set_has_address_has_converted()
{
    _has_bits_[0] |= 0x00000020u;
}
inline void WalletMetadataSpecifics::clear_has_address_has_converted()
{
    _has_bits_[0] &= ~0x00000020u;
}
inline void WalletMetadataSpecifics::clear_address_has_converted()
{
    address_has_converted_ = false;
    clear_has_address_has_converted();
}
inline bool WalletMetadataSpecifics::address_has_converted() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.address_has_converted)
    return address_has_converted_;
}
inline void WalletMetadataSpecifics::set_address_has_converted(bool value)
{
    set_has_address_has_converted();
    address_has_converted_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.address_has_converted)
}

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// @@protoc_insertion_point(namespace_scope)

} // namespace sync_pb

#ifndef SWIG
namespace google {
namespace protobuf {

    template <>
    struct is_proto_enum<::sync_pb::WalletMaskedCreditCard_WalletCardStatus> : ::google::protobuf::internal::true_type {
    };
    template <>
    struct is_proto_enum<::sync_pb::WalletMaskedCreditCard_WalletCardType> : ::google::protobuf::internal::true_type {
    };
    template <>
    struct is_proto_enum<::sync_pb::WalletMaskedCreditCard_WalletCardClass> : ::google::protobuf::internal::true_type {
    };
    template <>
    struct is_proto_enum<::sync_pb::AutofillWalletSpecifics_WalletInfoType> : ::google::protobuf::internal::true_type {
    };
    template <>
    struct is_proto_enum<::sync_pb::WalletMetadataSpecifics_Type> : ::google::protobuf::internal::true_type {
    };

} // namespace protobuf
} // namespace google
#endif // SWIG

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_autofill_5fspecifics_2eproto__INCLUDED
