// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: entity_metadata.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "entity_metadata.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {

void protobuf_ShutdownFile_entity_5fmetadata_2eproto()
{
    delete EntityMetadata::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_entity_5fmetadata_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_entity_5fmetadata_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    EntityMetadata::default_instance_ = new EntityMetadata();
    EntityMetadata::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_entity_5fmetadata_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_entity_5fmetadata_2eproto_once_);
void protobuf_AddDesc_entity_5fmetadata_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_entity_5fmetadata_2eproto_once_,
        &protobuf_AddDesc_entity_5fmetadata_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_entity_5fmetadata_2eproto {
    StaticDescriptorInitializer_entity_5fmetadata_2eproto()
    {
        protobuf_AddDesc_entity_5fmetadata_2eproto();
    }
} static_descriptor_initializer_entity_5fmetadata_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForEntityMetadata(
    EntityMetadata* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityMetadata::kClientTagHashFieldNumber;
const int EntityMetadata::kServerIdFieldNumber;
const int EntityMetadata::kIsDeletedFieldNumber;
const int EntityMetadata::kSequenceNumberFieldNumber;
const int EntityMetadata::kAckedSequenceNumberFieldNumber;
const int EntityMetadata::kServerVersionFieldNumber;
const int EntityMetadata::kCreationTimeFieldNumber;
const int EntityMetadata::kModificationTimeFieldNumber;
const int EntityMetadata::kSpecificsHashFieldNumber;
const int EntityMetadata::kBaseSpecificsHashFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityMetadata::EntityMetadata()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.EntityMetadata)
}

void EntityMetadata::InitAsDefaultInstance()
{
}

EntityMetadata::EntityMetadata(const EntityMetadata& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.EntityMetadata)
}

void EntityMetadata::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    client_tag_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    server_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    is_deleted_ = false;
    sequence_number_ = GOOGLE_LONGLONG(0);
    acked_sequence_number_ = GOOGLE_LONGLONG(0);
    server_version_ = GOOGLE_LONGLONG(-1);
    creation_time_ = GOOGLE_LONGLONG(0);
    modification_time_ = GOOGLE_LONGLONG(0);
    specifics_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    base_specifics_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EntityMetadata::~EntityMetadata()
{
    // @@protoc_insertion_point(destructor:sync_pb.EntityMetadata)
    SharedDtor();
}

void EntityMetadata::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    client_tag_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    server_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    specifics_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    base_specifics_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void EntityMetadata::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const EntityMetadata& EntityMetadata::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_entity_5fmetadata_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_entity_5fmetadata_2eproto();
#endif
    return *default_instance_;
}

EntityMetadata* EntityMetadata::default_instance_ = NULL;

EntityMetadata* EntityMetadata::New(::google::protobuf::Arena* arena) const
{
    EntityMetadata* n = new EntityMetadata;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void EntityMetadata::Clear()
{
// @@protoc_insertion_point(message_clear_start:sync_pb.EntityMetadata)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                    \
    _Pragma("clang diagnostic push")                                                                     \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(EntityMetadata, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<EntityMetadata*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    if (_has_bits_[0 / 32] & 255u) {
        ZR_(sequence_number_, acked_sequence_number_);
        ZR_(creation_time_, modification_time_);
        if (has_client_tag_hash()) {
            client_tag_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_server_id()) {
            server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        is_deleted_ = false;
        server_version_ = GOOGLE_LONGLONG(-1);
    }
    if (_has_bits_[8 / 32] & 768u) {
        if (has_specifics_hash()) {
            specifics_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_base_specifics_hash()) {
            base_specifics_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }

#undef ZR_HELPER_
#undef ZR_

    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EntityMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForEntityMetadata, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.EntityMetadata)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional string client_tag_hash = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_client_tag_hash()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_server_id;
            break;
        }

        // optional string server_id = 2;
        case 2: {
            if (tag == 18) {
            parse_server_id:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_server_id()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_is_deleted;
            break;
        }

        // optional bool is_deleted = 3;
        case 3: {
            if (tag == 24) {
            parse_is_deleted:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                    input, &is_deleted_)));
                set_has_is_deleted();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(32))
                goto parse_sequence_number;
            break;
        }

        // optional int64 sequence_number = 4;
        case 4: {
            if (tag == 32) {
            parse_sequence_number:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &sequence_number_)));
                set_has_sequence_number();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(40))
                goto parse_acked_sequence_number;
            break;
        }

        // optional int64 acked_sequence_number = 5;
        case 5: {
            if (tag == 40) {
            parse_acked_sequence_number:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &acked_sequence_number_)));
                set_has_acked_sequence_number();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(48))
                goto parse_server_version;
            break;
        }

        // optional int64 server_version = 6 [default = -1];
        case 6: {
            if (tag == 48) {
            parse_server_version:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &server_version_)));
                set_has_server_version();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(56))
                goto parse_creation_time;
            break;
        }

        // optional int64 creation_time = 7;
        case 7: {
            if (tag == 56) {
            parse_creation_time:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &creation_time_)));
                set_has_creation_time();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(64))
                goto parse_modification_time;
            break;
        }

        // optional int64 modification_time = 8;
        case 8: {
            if (tag == 64) {
            parse_modification_time:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &modification_time_)));
                set_has_modification_time();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(74))
                goto parse_specifics_hash;
            break;
        }

        // optional string specifics_hash = 9;
        case 9: {
            if (tag == 74) {
            parse_specifics_hash:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_specifics_hash()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(82))
                goto parse_base_specifics_hash;
            break;
        }

        // optional string base_specifics_hash = 10;
        case 10: {
            if (tag == 82) {
            parse_base_specifics_hash:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_base_specifics_hash()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.EntityMetadata)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.EntityMetadata)
    return false;
#undef DO_
}

void EntityMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.EntityMetadata)
    // optional string client_tag_hash = 1;
    if (has_client_tag_hash()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->client_tag_hash(), output);
    }

    // optional string server_id = 2;
    if (has_server_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            2, this->server_id(), output);
    }

    // optional bool is_deleted = 3;
    if (has_is_deleted()) {
        ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_deleted(), output);
    }

    // optional int64 sequence_number = 4;
    if (has_sequence_number()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->sequence_number(), output);
    }

    // optional int64 acked_sequence_number = 5;
    if (has_acked_sequence_number()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->acked_sequence_number(), output);
    }

    // optional int64 server_version = 6 [default = -1];
    if (has_server_version()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->server_version(), output);
    }

    // optional int64 creation_time = 7;
    if (has_creation_time()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->creation_time(), output);
    }

    // optional int64 modification_time = 8;
    if (has_modification_time()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->modification_time(), output);
    }

    // optional string specifics_hash = 9;
    if (has_specifics_hash()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            9, this->specifics_hash(), output);
    }

    // optional string base_specifics_hash = 10;
    if (has_base_specifics_hash()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            10, this->base_specifics_hash(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.EntityMetadata)
}

int EntityMetadata::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.EntityMetadata)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 255u) {
        // optional string client_tag_hash = 1;
        if (has_client_tag_hash()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->client_tag_hash());
        }

        // optional string server_id = 2;
        if (has_server_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->server_id());
        }

        // optional bool is_deleted = 3;
        if (has_is_deleted()) {
            total_size += 1 + 1;
        }

        // optional int64 sequence_number = 4;
        if (has_sequence_number()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->sequence_number());
        }

        // optional int64 acked_sequence_number = 5;
        if (has_acked_sequence_number()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->acked_sequence_number());
        }

        // optional int64 server_version = 6 [default = -1];
        if (has_server_version()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->server_version());
        }

        // optional int64 creation_time = 7;
        if (has_creation_time()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->creation_time());
        }

        // optional int64 modification_time = 8;
        if (has_modification_time()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->modification_time());
        }
    }
    if (_has_bits_[8 / 32] & 768u) {
        // optional string specifics_hash = 9;
        if (has_specifics_hash()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->specifics_hash());
        }

        // optional string base_specifics_hash = 10;
        if (has_base_specifics_hash()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->base_specifics_hash());
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void EntityMetadata::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const EntityMetadata*>(&from));
}

void EntityMetadata::MergeFrom(const EntityMetadata& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.EntityMetadata)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_client_tag_hash()) {
            set_has_client_tag_hash();
            client_tag_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_tag_hash_);
        }
        if (from.has_server_id()) {
            set_has_server_id();
            server_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_id_);
        }
        if (from.has_is_deleted()) {
            set_is_deleted(from.is_deleted());
        }
        if (from.has_sequence_number()) {
            set_sequence_number(from.sequence_number());
        }
        if (from.has_acked_sequence_number()) {
            set_acked_sequence_number(from.acked_sequence_number());
        }
        if (from.has_server_version()) {
            set_server_version(from.server_version());
        }
        if (from.has_creation_time()) {
            set_creation_time(from.creation_time());
        }
        if (from.has_modification_time()) {
            set_modification_time(from.modification_time());
        }
    }
    if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
        if (from.has_specifics_hash()) {
            set_has_specifics_hash();
            specifics_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.specifics_hash_);
        }
        if (from.has_base_specifics_hash()) {
            set_has_base_specifics_hash();
            base_specifics_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_specifics_hash_);
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void EntityMetadata::CopyFrom(const EntityMetadata& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.EntityMetadata)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool EntityMetadata::IsInitialized() const
{

    return true;
}

void EntityMetadata::Swap(EntityMetadata* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void EntityMetadata::InternalSwap(EntityMetadata* other)
{
    client_tag_hash_.Swap(&other->client_tag_hash_);
    server_id_.Swap(&other->server_id_);
    std::swap(is_deleted_, other->is_deleted_);
    std::swap(sequence_number_, other->sequence_number_);
    std::swap(acked_sequence_number_, other->acked_sequence_number_);
    std::swap(server_version_, other->server_version_);
    std::swap(creation_time_, other->creation_time_);
    std::swap(modification_time_, other->modification_time_);
    specifics_hash_.Swap(&other->specifics_hash_);
    base_specifics_hash_.Swap(&other->base_specifics_hash_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string EntityMetadata::GetTypeName() const
{
    return "sync_pb.EntityMetadata";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityMetadata

// optional string client_tag_hash = 1;
bool EntityMetadata::has_client_tag_hash() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void EntityMetadata::set_has_client_tag_hash()
{
    _has_bits_[0] |= 0x00000001u;
}
void EntityMetadata::clear_has_client_tag_hash()
{
    _has_bits_[0] &= ~0x00000001u;
}
void EntityMetadata::clear_client_tag_hash()
{
    client_tag_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_client_tag_hash();
}
const ::std::string& EntityMetadata::client_tag_hash() const
{
    // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.client_tag_hash)
    return client_tag_hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityMetadata::set_client_tag_hash(const ::std::string& value)
{
    set_has_client_tag_hash();
    client_tag_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.client_tag_hash)
}
void EntityMetadata::set_client_tag_hash(const char* value)
{
    set_has_client_tag_hash();
    client_tag_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.EntityMetadata.client_tag_hash)
}
void EntityMetadata::set_client_tag_hash(const char* value, size_t size)
{
    set_has_client_tag_hash();
    client_tag_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.EntityMetadata.client_tag_hash)
}
::std::string* EntityMetadata::mutable_client_tag_hash()
{
    set_has_client_tag_hash();
    // @@protoc_insertion_point(field_mutable:sync_pb.EntityMetadata.client_tag_hash)
    return client_tag_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityMetadata::release_client_tag_hash()
{
    // @@protoc_insertion_point(field_release:sync_pb.EntityMetadata.client_tag_hash)
    clear_has_client_tag_hash();
    return client_tag_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityMetadata::set_allocated_client_tag_hash(::std::string* client_tag_hash)
{
    if (client_tag_hash != NULL) {
        set_has_client_tag_hash();
    } else {
        clear_has_client_tag_hash();
    }
    client_tag_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_tag_hash);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.EntityMetadata.client_tag_hash)
}

// optional string server_id = 2;
bool EntityMetadata::has_server_id() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void EntityMetadata::set_has_server_id()
{
    _has_bits_[0] |= 0x00000002u;
}
void EntityMetadata::clear_has_server_id()
{
    _has_bits_[0] &= ~0x00000002u;
}
void EntityMetadata::clear_server_id()
{
    server_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_server_id();
}
const ::std::string& EntityMetadata::server_id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.server_id)
    return server_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityMetadata::set_server_id(const ::std::string& value)
{
    set_has_server_id();
    server_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.server_id)
}
void EntityMetadata::set_server_id(const char* value)
{
    set_has_server_id();
    server_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.EntityMetadata.server_id)
}
void EntityMetadata::set_server_id(const char* value, size_t size)
{
    set_has_server_id();
    server_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.EntityMetadata.server_id)
}
::std::string* EntityMetadata::mutable_server_id()
{
    set_has_server_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.EntityMetadata.server_id)
    return server_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityMetadata::release_server_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.EntityMetadata.server_id)
    clear_has_server_id();
    return server_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityMetadata::set_allocated_server_id(::std::string* server_id)
{
    if (server_id != NULL) {
        set_has_server_id();
    } else {
        clear_has_server_id();
    }
    server_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.EntityMetadata.server_id)
}

// optional bool is_deleted = 3;
bool EntityMetadata::has_is_deleted() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void EntityMetadata::set_has_is_deleted()
{
    _has_bits_[0] |= 0x00000004u;
}
void EntityMetadata::clear_has_is_deleted()
{
    _has_bits_[0] &= ~0x00000004u;
}
void EntityMetadata::clear_is_deleted()
{
    is_deleted_ = false;
    clear_has_is_deleted();
}
bool EntityMetadata::is_deleted() const
{
    // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.is_deleted)
    return is_deleted_;
}
void EntityMetadata::set_is_deleted(bool value)
{
    set_has_is_deleted();
    is_deleted_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.is_deleted)
}

// optional int64 sequence_number = 4;
bool EntityMetadata::has_sequence_number() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void EntityMetadata::set_has_sequence_number()
{
    _has_bits_[0] |= 0x00000008u;
}
void EntityMetadata::clear_has_sequence_number()
{
    _has_bits_[0] &= ~0x00000008u;
}
void EntityMetadata::clear_sequence_number()
{
    sequence_number_ = GOOGLE_LONGLONG(0);
    clear_has_sequence_number();
}
::google::protobuf::int64 EntityMetadata::sequence_number() const
{
    // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.sequence_number)
    return sequence_number_;
}
void EntityMetadata::set_sequence_number(::google::protobuf::int64 value)
{
    set_has_sequence_number();
    sequence_number_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.sequence_number)
}

// optional int64 acked_sequence_number = 5;
bool EntityMetadata::has_acked_sequence_number() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void EntityMetadata::set_has_acked_sequence_number()
{
    _has_bits_[0] |= 0x00000010u;
}
void EntityMetadata::clear_has_acked_sequence_number()
{
    _has_bits_[0] &= ~0x00000010u;
}
void EntityMetadata::clear_acked_sequence_number()
{
    acked_sequence_number_ = GOOGLE_LONGLONG(0);
    clear_has_acked_sequence_number();
}
::google::protobuf::int64 EntityMetadata::acked_sequence_number() const
{
    // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.acked_sequence_number)
    return acked_sequence_number_;
}
void EntityMetadata::set_acked_sequence_number(::google::protobuf::int64 value)
{
    set_has_acked_sequence_number();
    acked_sequence_number_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.acked_sequence_number)
}

// optional int64 server_version = 6 [default = -1];
bool EntityMetadata::has_server_version() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
void EntityMetadata::set_has_server_version()
{
    _has_bits_[0] |= 0x00000020u;
}
void EntityMetadata::clear_has_server_version()
{
    _has_bits_[0] &= ~0x00000020u;
}
void EntityMetadata::clear_server_version()
{
    server_version_ = GOOGLE_LONGLONG(-1);
    clear_has_server_version();
}
::google::protobuf::int64 EntityMetadata::server_version() const
{
    // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.server_version)
    return server_version_;
}
void EntityMetadata::set_server_version(::google::protobuf::int64 value)
{
    set_has_server_version();
    server_version_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.server_version)
}

// optional int64 creation_time = 7;
bool EntityMetadata::has_creation_time() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
void EntityMetadata::set_has_creation_time()
{
    _has_bits_[0] |= 0x00000040u;
}
void EntityMetadata::clear_has_creation_time()
{
    _has_bits_[0] &= ~0x00000040u;
}
void EntityMetadata::clear_creation_time()
{
    creation_time_ = GOOGLE_LONGLONG(0);
    clear_has_creation_time();
}
::google::protobuf::int64 EntityMetadata::creation_time() const
{
    // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.creation_time)
    return creation_time_;
}
void EntityMetadata::set_creation_time(::google::protobuf::int64 value)
{
    set_has_creation_time();
    creation_time_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.creation_time)
}

// optional int64 modification_time = 8;
bool EntityMetadata::has_modification_time() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
void EntityMetadata::set_has_modification_time()
{
    _has_bits_[0] |= 0x00000080u;
}
void EntityMetadata::clear_has_modification_time()
{
    _has_bits_[0] &= ~0x00000080u;
}
void EntityMetadata::clear_modification_time()
{
    modification_time_ = GOOGLE_LONGLONG(0);
    clear_has_modification_time();
}
::google::protobuf::int64 EntityMetadata::modification_time() const
{
    // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.modification_time)
    return modification_time_;
}
void EntityMetadata::set_modification_time(::google::protobuf::int64 value)
{
    set_has_modification_time();
    modification_time_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.modification_time)
}

// optional string specifics_hash = 9;
bool EntityMetadata::has_specifics_hash() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
void EntityMetadata::set_has_specifics_hash()
{
    _has_bits_[0] |= 0x00000100u;
}
void EntityMetadata::clear_has_specifics_hash()
{
    _has_bits_[0] &= ~0x00000100u;
}
void EntityMetadata::clear_specifics_hash()
{
    specifics_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_specifics_hash();
}
const ::std::string& EntityMetadata::specifics_hash() const
{
    // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.specifics_hash)
    return specifics_hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityMetadata::set_specifics_hash(const ::std::string& value)
{
    set_has_specifics_hash();
    specifics_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.specifics_hash)
}
void EntityMetadata::set_specifics_hash(const char* value)
{
    set_has_specifics_hash();
    specifics_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.EntityMetadata.specifics_hash)
}
void EntityMetadata::set_specifics_hash(const char* value, size_t size)
{
    set_has_specifics_hash();
    specifics_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.EntityMetadata.specifics_hash)
}
::std::string* EntityMetadata::mutable_specifics_hash()
{
    set_has_specifics_hash();
    // @@protoc_insertion_point(field_mutable:sync_pb.EntityMetadata.specifics_hash)
    return specifics_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityMetadata::release_specifics_hash()
{
    // @@protoc_insertion_point(field_release:sync_pb.EntityMetadata.specifics_hash)
    clear_has_specifics_hash();
    return specifics_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityMetadata::set_allocated_specifics_hash(::std::string* specifics_hash)
{
    if (specifics_hash != NULL) {
        set_has_specifics_hash();
    } else {
        clear_has_specifics_hash();
    }
    specifics_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), specifics_hash);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.EntityMetadata.specifics_hash)
}

// optional string base_specifics_hash = 10;
bool EntityMetadata::has_base_specifics_hash() const
{
    return (_has_bits_[0] & 0x00000200u) != 0;
}
void EntityMetadata::set_has_base_specifics_hash()
{
    _has_bits_[0] |= 0x00000200u;
}
void EntityMetadata::clear_has_base_specifics_hash()
{
    _has_bits_[0] &= ~0x00000200u;
}
void EntityMetadata::clear_base_specifics_hash()
{
    base_specifics_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_base_specifics_hash();
}
const ::std::string& EntityMetadata::base_specifics_hash() const
{
    // @@protoc_insertion_point(field_get:sync_pb.EntityMetadata.base_specifics_hash)
    return base_specifics_hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityMetadata::set_base_specifics_hash(const ::std::string& value)
{
    set_has_base_specifics_hash();
    base_specifics_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.EntityMetadata.base_specifics_hash)
}
void EntityMetadata::set_base_specifics_hash(const char* value)
{
    set_has_base_specifics_hash();
    base_specifics_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.EntityMetadata.base_specifics_hash)
}
void EntityMetadata::set_base_specifics_hash(const char* value, size_t size)
{
    set_has_base_specifics_hash();
    base_specifics_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.EntityMetadata.base_specifics_hash)
}
::std::string* EntityMetadata::mutable_base_specifics_hash()
{
    set_has_base_specifics_hash();
    // @@protoc_insertion_point(field_mutable:sync_pb.EntityMetadata.base_specifics_hash)
    return base_specifics_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityMetadata::release_base_specifics_hash()
{
    // @@protoc_insertion_point(field_release:sync_pb.EntityMetadata.base_specifics_hash)
    clear_has_base_specifics_hash();
    return base_specifics_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityMetadata::set_allocated_base_specifics_hash(::std::string* base_specifics_hash)
{
    if (base_specifics_hash != NULL) {
        set_has_base_specifics_hash();
    } else {
        clear_has_base_specifics_hash();
    }
    base_specifics_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), base_specifics_hash);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.EntityMetadata.base_specifics_hash)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace sync_pb

// @@protoc_insertion_point(global_scope)
