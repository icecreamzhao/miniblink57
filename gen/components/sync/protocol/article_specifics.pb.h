// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: article_specifics.proto

#ifndef PROTOBUF_article_5fspecifics_2eproto__INCLUDED
#define PROTOBUF_article_5fspecifics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include "attachments.pb.h"
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_article_5fspecifics_2eproto();
void protobuf_AssignDesc_article_5fspecifics_2eproto();
void protobuf_ShutdownFile_article_5fspecifics_2eproto();

class ArticleAttachments;
class ArticlePage;
class ArticleSpecifics;

// ===================================================================

class ArticleSpecifics : public ::google::protobuf::MessageLite {
public:
    ArticleSpecifics();
    virtual ~ArticleSpecifics();

    ArticleSpecifics(const ArticleSpecifics& from);

    inline ArticleSpecifics& operator=(const ArticleSpecifics& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const ArticleSpecifics& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const ArticleSpecifics* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(ArticleSpecifics* other);

    // implements Message ----------------------------------------------

    inline ArticleSpecifics* New() const { return New(NULL); }

    ArticleSpecifics* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const ArticleSpecifics& from);
    void MergeFrom(const ArticleSpecifics& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(ArticleSpecifics* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional string entry_id = 1;
    bool has_entry_id() const;
    void clear_entry_id();
    static const int kEntryIdFieldNumber = 1;
    const ::std::string& entry_id() const;
    void set_entry_id(const ::std::string& value);
    void set_entry_id(const char* value);
    void set_entry_id(const char* value, size_t size);
    ::std::string* mutable_entry_id();
    ::std::string* release_entry_id();
    void set_allocated_entry_id(::std::string* entry_id);

    // optional string title = 2;
    bool has_title() const;
    void clear_title();
    static const int kTitleFieldNumber = 2;
    const ::std::string& title() const;
    void set_title(const ::std::string& value);
    void set_title(const char* value);
    void set_title(const char* value, size_t size);
    ::std::string* mutable_title();
    ::std::string* release_title();
    void set_allocated_title(::std::string* title);

    // repeated .sync_pb.ArticlePage pages = 3;
    int pages_size() const;
    void clear_pages();
    static const int kPagesFieldNumber = 3;
    const ::sync_pb::ArticlePage& pages(int index) const;
    ::sync_pb::ArticlePage* mutable_pages(int index);
    ::sync_pb::ArticlePage* add_pages();
    ::google::protobuf::RepeatedPtrField<::sync_pb::ArticlePage>*
    mutable_pages();
    const ::google::protobuf::RepeatedPtrField<::sync_pb::ArticlePage>&
    pages() const;

    // optional .sync_pb.ArticleAttachments attachments = 4;
    bool has_attachments() const;
    void clear_attachments();
    static const int kAttachmentsFieldNumber = 4;
    const ::sync_pb::ArticleAttachments& attachments() const;
    ::sync_pb::ArticleAttachments* mutable_attachments();
    ::sync_pb::ArticleAttachments* release_attachments();
    void set_allocated_attachments(::sync_pb::ArticleAttachments* attachments);

    // @@protoc_insertion_point(class_scope:sync_pb.ArticleSpecifics)
private:
    inline void set_has_entry_id();
    inline void clear_has_entry_id();
    inline void set_has_title();
    inline void clear_has_title();
    inline void set_has_attachments();
    inline void clear_has_attachments();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr entry_id_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::RepeatedPtrField<::sync_pb::ArticlePage> pages_;
    ::sync_pb::ArticleAttachments* attachments_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_article_5fspecifics_2eproto_impl();
#else
    friend void protobuf_AddDesc_article_5fspecifics_2eproto();
#endif
    friend void protobuf_AssignDesc_article_5fspecifics_2eproto();
    friend void protobuf_ShutdownFile_article_5fspecifics_2eproto();

    void InitAsDefaultInstance();
    static ArticleSpecifics* default_instance_;
};
// -------------------------------------------------------------------

class ArticlePage : public ::google::protobuf::MessageLite {
public:
    ArticlePage();
    virtual ~ArticlePage();

    ArticlePage(const ArticlePage& from);

    inline ArticlePage& operator=(const ArticlePage& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const ArticlePage& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const ArticlePage* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(ArticlePage* other);

    // implements Message ----------------------------------------------

    inline ArticlePage* New() const { return New(NULL); }

    ArticlePage* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const ArticlePage& from);
    void MergeFrom(const ArticlePage& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(ArticlePage* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional string url = 1;
    bool has_url() const;
    void clear_url();
    static const int kUrlFieldNumber = 1;
    const ::std::string& url() const;
    void set_url(const ::std::string& value);
    void set_url(const char* value);
    void set_url(const char* value, size_t size);
    ::std::string* mutable_url();
    ::std::string* release_url();
    void set_allocated_url(::std::string* url);

    // @@protoc_insertion_point(class_scope:sync_pb.ArticlePage)
private:
    inline void set_has_url();
    inline void clear_has_url();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr url_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_article_5fspecifics_2eproto_impl();
#else
    friend void protobuf_AddDesc_article_5fspecifics_2eproto();
#endif
    friend void protobuf_AssignDesc_article_5fspecifics_2eproto();
    friend void protobuf_ShutdownFile_article_5fspecifics_2eproto();

    void InitAsDefaultInstance();
    static ArticlePage* default_instance_;
};
// -------------------------------------------------------------------

class ArticleAttachments : public ::google::protobuf::MessageLite {
public:
    ArticleAttachments();
    virtual ~ArticleAttachments();

    ArticleAttachments(const ArticleAttachments& from);

    inline ArticleAttachments& operator=(const ArticleAttachments& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const ArticleAttachments& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const ArticleAttachments* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(ArticleAttachments* other);

    // implements Message ----------------------------------------------

    inline ArticleAttachments* New() const { return New(NULL); }

    ArticleAttachments* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const ArticleAttachments& from);
    void MergeFrom(const ArticleAttachments& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(ArticleAttachments* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional .sync_pb.AttachmentIdProto distilled_article = 1;
    bool has_distilled_article() const;
    void clear_distilled_article();
    static const int kDistilledArticleFieldNumber = 1;
    const ::sync_pb::AttachmentIdProto& distilled_article() const;
    ::sync_pb::AttachmentIdProto* mutable_distilled_article();
    ::sync_pb::AttachmentIdProto* release_distilled_article();
    void set_allocated_distilled_article(::sync_pb::AttachmentIdProto* distilled_article);

    // @@protoc_insertion_point(class_scope:sync_pb.ArticleAttachments)
private:
    inline void set_has_distilled_article();
    inline void clear_has_distilled_article();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::sync_pb::AttachmentIdProto* distilled_article_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_article_5fspecifics_2eproto_impl();
#else
    friend void protobuf_AddDesc_article_5fspecifics_2eproto();
#endif
    friend void protobuf_AssignDesc_article_5fspecifics_2eproto();
    friend void protobuf_ShutdownFile_article_5fspecifics_2eproto();

    void InitAsDefaultInstance();
    static ArticleAttachments* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ArticleSpecifics

// optional string entry_id = 1;
inline bool ArticleSpecifics::has_entry_id() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArticleSpecifics::set_has_entry_id()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void ArticleSpecifics::clear_has_entry_id()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void ArticleSpecifics::clear_entry_id()
{
    entry_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_entry_id();
}
inline const ::std::string& ArticleSpecifics::entry_id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ArticleSpecifics.entry_id)
    return entry_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArticleSpecifics::set_entry_id(const ::std::string& value)
{
    set_has_entry_id();
    entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.ArticleSpecifics.entry_id)
}
inline void ArticleSpecifics::set_entry_id(const char* value)
{
    set_has_entry_id();
    entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.ArticleSpecifics.entry_id)
}
inline void ArticleSpecifics::set_entry_id(const char* value, size_t size)
{
    set_has_entry_id();
    entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.ArticleSpecifics.entry_id)
}
inline ::std::string* ArticleSpecifics::mutable_entry_id()
{
    set_has_entry_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.ArticleSpecifics.entry_id)
    return entry_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArticleSpecifics::release_entry_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.ArticleSpecifics.entry_id)
    clear_has_entry_id();
    return entry_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArticleSpecifics::set_allocated_entry_id(::std::string* entry_id)
{
    if (entry_id != NULL) {
        set_has_entry_id();
    } else {
        clear_has_entry_id();
    }
    entry_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entry_id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.ArticleSpecifics.entry_id)
}

// optional string title = 2;
inline bool ArticleSpecifics::has_title() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArticleSpecifics::set_has_title()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void ArticleSpecifics::clear_has_title()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void ArticleSpecifics::clear_title()
{
    title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_title();
}
inline const ::std::string& ArticleSpecifics::title() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ArticleSpecifics.title)
    return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArticleSpecifics::set_title(const ::std::string& value)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.ArticleSpecifics.title)
}
inline void ArticleSpecifics::set_title(const char* value)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.ArticleSpecifics.title)
}
inline void ArticleSpecifics::set_title(const char* value, size_t size)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.ArticleSpecifics.title)
}
inline ::std::string* ArticleSpecifics::mutable_title()
{
    set_has_title();
    // @@protoc_insertion_point(field_mutable:sync_pb.ArticleSpecifics.title)
    return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArticleSpecifics::release_title()
{
    // @@protoc_insertion_point(field_release:sync_pb.ArticleSpecifics.title)
    clear_has_title();
    return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArticleSpecifics::set_allocated_title(::std::string* title)
{
    if (title != NULL) {
        set_has_title();
    } else {
        clear_has_title();
    }
    title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.ArticleSpecifics.title)
}

// repeated .sync_pb.ArticlePage pages = 3;
inline int ArticleSpecifics::pages_size() const
{
    return pages_.size();
}
inline void ArticleSpecifics::clear_pages()
{
    pages_.Clear();
}
inline const ::sync_pb::ArticlePage& ArticleSpecifics::pages(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.ArticleSpecifics.pages)
    return pages_.Get(index);
}
inline ::sync_pb::ArticlePage* ArticleSpecifics::mutable_pages(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.ArticleSpecifics.pages)
    return pages_.Mutable(index);
}
inline ::sync_pb::ArticlePage* ArticleSpecifics::add_pages()
{
    // @@protoc_insertion_point(field_add:sync_pb.ArticleSpecifics.pages)
    return pages_.Add();
}
inline ::google::protobuf::RepeatedPtrField<::sync_pb::ArticlePage>*
ArticleSpecifics::mutable_pages()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.ArticleSpecifics.pages)
    return &pages_;
}
inline const ::google::protobuf::RepeatedPtrField<::sync_pb::ArticlePage>&
ArticleSpecifics::pages() const
{
    // @@protoc_insertion_point(field_list:sync_pb.ArticleSpecifics.pages)
    return pages_;
}

// optional .sync_pb.ArticleAttachments attachments = 4;
inline bool ArticleSpecifics::has_attachments() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ArticleSpecifics::set_has_attachments()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void ArticleSpecifics::clear_has_attachments()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void ArticleSpecifics::clear_attachments()
{
    if (attachments_ != NULL)
        attachments_->::sync_pb::ArticleAttachments::Clear();
    clear_has_attachments();
}
inline const ::sync_pb::ArticleAttachments& ArticleSpecifics::attachments() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ArticleSpecifics.attachments)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return attachments_ != NULL ? *attachments_ : *default_instance().attachments_;
#else
    return attachments_ != NULL ? *attachments_ : *default_instance_->attachments_;
#endif
}
inline ::sync_pb::ArticleAttachments* ArticleSpecifics::mutable_attachments()
{
    set_has_attachments();
    if (attachments_ == NULL) {
        attachments_ = new ::sync_pb::ArticleAttachments;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.ArticleSpecifics.attachments)
    return attachments_;
}
inline ::sync_pb::ArticleAttachments* ArticleSpecifics::release_attachments()
{
    // @@protoc_insertion_point(field_release:sync_pb.ArticleSpecifics.attachments)
    clear_has_attachments();
    ::sync_pb::ArticleAttachments* temp = attachments_;
    attachments_ = NULL;
    return temp;
}
inline void ArticleSpecifics::set_allocated_attachments(::sync_pb::ArticleAttachments* attachments)
{
    delete attachments_;
    attachments_ = attachments;
    if (attachments) {
        set_has_attachments();
    } else {
        clear_has_attachments();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.ArticleSpecifics.attachments)
}

// -------------------------------------------------------------------

// ArticlePage

// optional string url = 1;
inline bool ArticlePage::has_url() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArticlePage::set_has_url()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void ArticlePage::clear_has_url()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void ArticlePage::clear_url()
{
    url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_url();
}
inline const ::std::string& ArticlePage::url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ArticlePage.url)
    return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArticlePage::set_url(const ::std::string& value)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.ArticlePage.url)
}
inline void ArticlePage::set_url(const char* value)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.ArticlePage.url)
}
inline void ArticlePage::set_url(const char* value, size_t size)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.ArticlePage.url)
}
inline ::std::string* ArticlePage::mutable_url()
{
    set_has_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.ArticlePage.url)
    return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArticlePage::release_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.ArticlePage.url)
    clear_has_url();
    return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArticlePage::set_allocated_url(::std::string* url)
{
    if (url != NULL) {
        set_has_url();
    } else {
        clear_has_url();
    }
    url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.ArticlePage.url)
}

// -------------------------------------------------------------------

// ArticleAttachments

// optional .sync_pb.AttachmentIdProto distilled_article = 1;
inline bool ArticleAttachments::has_distilled_article() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArticleAttachments::set_has_distilled_article()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void ArticleAttachments::clear_has_distilled_article()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void ArticleAttachments::clear_distilled_article()
{
    if (distilled_article_ != NULL)
        distilled_article_->::sync_pb::AttachmentIdProto::Clear();
    clear_has_distilled_article();
}
inline const ::sync_pb::AttachmentIdProto& ArticleAttachments::distilled_article() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ArticleAttachments.distilled_article)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return distilled_article_ != NULL ? *distilled_article_ : *default_instance().distilled_article_;
#else
    return distilled_article_ != NULL ? *distilled_article_ : *default_instance_->distilled_article_;
#endif
}
inline ::sync_pb::AttachmentIdProto* ArticleAttachments::mutable_distilled_article()
{
    set_has_distilled_article();
    if (distilled_article_ == NULL) {
        distilled_article_ = new ::sync_pb::AttachmentIdProto;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.ArticleAttachments.distilled_article)
    return distilled_article_;
}
inline ::sync_pb::AttachmentIdProto* ArticleAttachments::release_distilled_article()
{
    // @@protoc_insertion_point(field_release:sync_pb.ArticleAttachments.distilled_article)
    clear_has_distilled_article();
    ::sync_pb::AttachmentIdProto* temp = distilled_article_;
    distilled_article_ = NULL;
    return temp;
}
inline void ArticleAttachments::set_allocated_distilled_article(::sync_pb::AttachmentIdProto* distilled_article)
{
    delete distilled_article_;
    distilled_article_ = distilled_article;
    if (distilled_article) {
        set_has_distilled_article();
    } else {
        clear_has_distilled_article();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.ArticleAttachments.distilled_article)
}

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// @@protoc_insertion_point(namespace_scope)

} // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_article_5fspecifics_2eproto__INCLUDED
