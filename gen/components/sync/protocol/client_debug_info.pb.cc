// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_debug_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client_debug_info.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {

void protobuf_ShutdownFile_client_5fdebug_5finfo_2eproto()
{
    delete TypeHint::default_instance_;
    delete SourceInfo::default_instance_;
    delete SyncCycleCompletedEventInfo::default_instance_;
    delete DatatypeAssociationStats::default_instance_;
    delete DebugEventInfo::default_instance_;
    delete DebugInfo::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_client_5fdebug_5finfo_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_client_5fdebug_5finfo_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    ::sync_pb::protobuf_AddDesc_get_5fupdates_5fcaller_5finfo_2eproto();
    ::sync_pb::protobuf_AddDesc_sync_5fenums_2eproto();
    TypeHint::default_instance_ = new TypeHint();
    SourceInfo::default_instance_ = new SourceInfo();
    SyncCycleCompletedEventInfo::default_instance_ = new SyncCycleCompletedEventInfo();
    DatatypeAssociationStats::default_instance_ = new DatatypeAssociationStats();
    DebugEventInfo::default_instance_ = new DebugEventInfo();
    DebugInfo::default_instance_ = new DebugInfo();
    TypeHint::default_instance_->InitAsDefaultInstance();
    SourceInfo::default_instance_->InitAsDefaultInstance();
    SyncCycleCompletedEventInfo::default_instance_->InitAsDefaultInstance();
    DatatypeAssociationStats::default_instance_->InitAsDefaultInstance();
    DebugEventInfo::default_instance_->InitAsDefaultInstance();
    DebugInfo::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_client_5fdebug_5finfo_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_client_5fdebug_5finfo_2eproto_once_);
void protobuf_AddDesc_client_5fdebug_5finfo_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_client_5fdebug_5finfo_2eproto_once_,
        &protobuf_AddDesc_client_5fdebug_5finfo_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_client_5fdebug_5finfo_2eproto {
    StaticDescriptorInitializer_client_5fdebug_5finfo_2eproto()
    {
        protobuf_AddDesc_client_5fdebug_5finfo_2eproto();
    }
} static_descriptor_initializer_client_5fdebug_5finfo_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForTypeHint(
    TypeHint* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeHint::kDataTypeIdFieldNumber;
const int TypeHint::kHasValidHintFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeHint::TypeHint()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.TypeHint)
}

void TypeHint::InitAsDefaultInstance()
{
}

TypeHint::TypeHint(const TypeHint& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.TypeHint)
}

void TypeHint::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    data_type_id_ = 0;
    has_valid_hint_ = false;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TypeHint::~TypeHint()
{
    // @@protoc_insertion_point(destructor:sync_pb.TypeHint)
    SharedDtor();
}

void TypeHint::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void TypeHint::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TypeHint& TypeHint::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_client_5fdebug_5finfo_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_client_5fdebug_5finfo_2eproto();
#endif
    return *default_instance_;
}

TypeHint* TypeHint::default_instance_ = NULL;

TypeHint* TypeHint::New(::google::protobuf::Arena* arena) const
{
    TypeHint* n = new TypeHint;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void TypeHint::Clear()
{
// @@protoc_insertion_point(message_clear_start:sync_pb.TypeHint)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                              \
    _Pragma("clang diagnostic push")                                                               \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(TypeHint, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<TypeHint*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    ZR_(data_type_id_, has_valid_hint_);

#undef ZR_HELPER_
#undef ZR_

    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TypeHint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForTypeHint, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.TypeHint)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional int32 data_type_id = 1;
        case 1: {
            if (tag == 8) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &data_type_id_)));
                set_has_data_type_id();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(16))
                goto parse_has_valid_hint;
            break;
        }

        // optional bool has_valid_hint = 2;
        case 2: {
            if (tag == 16) {
            parse_has_valid_hint:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                    input, &has_valid_hint_)));
                set_has_has_valid_hint();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.TypeHint)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.TypeHint)
    return false;
#undef DO_
}

void TypeHint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.TypeHint)
    // optional int32 data_type_id = 1;
    if (has_data_type_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->data_type_id(), output);
    }

    // optional bool has_valid_hint = 2;
    if (has_has_valid_hint()) {
        ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->has_valid_hint(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.TypeHint)
}

int TypeHint::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.TypeHint)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 3u) {
        // optional int32 data_type_id = 1;
        if (has_data_type_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->data_type_id());
        }

        // optional bool has_valid_hint = 2;
        if (has_has_valid_hint()) {
            total_size += 1 + 1;
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void TypeHint::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const TypeHint*>(&from));
}

void TypeHint::MergeFrom(const TypeHint& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.TypeHint)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_data_type_id()) {
            set_data_type_id(from.data_type_id());
        }
        if (from.has_has_valid_hint()) {
            set_has_valid_hint(from.has_valid_hint());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void TypeHint::CopyFrom(const TypeHint& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.TypeHint)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool TypeHint::IsInitialized() const
{

    return true;
}

void TypeHint::Swap(TypeHint* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void TypeHint::InternalSwap(TypeHint* other)
{
    std::swap(data_type_id_, other->data_type_id_);
    std::swap(has_valid_hint_, other->has_valid_hint_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string TypeHint::GetTypeName() const
{
    return "sync_pb.TypeHint";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TypeHint

// optional int32 data_type_id = 1;
bool TypeHint::has_data_type_id() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void TypeHint::set_has_data_type_id()
{
    _has_bits_[0] |= 0x00000001u;
}
void TypeHint::clear_has_data_type_id()
{
    _has_bits_[0] &= ~0x00000001u;
}
void TypeHint::clear_data_type_id()
{
    data_type_id_ = 0;
    clear_has_data_type_id();
}
::google::protobuf::int32 TypeHint::data_type_id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.TypeHint.data_type_id)
    return data_type_id_;
}
void TypeHint::set_data_type_id(::google::protobuf::int32 value)
{
    set_has_data_type_id();
    data_type_id_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.TypeHint.data_type_id)
}

// optional bool has_valid_hint = 2;
bool TypeHint::has_has_valid_hint() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void TypeHint::set_has_has_valid_hint()
{
    _has_bits_[0] |= 0x00000002u;
}
void TypeHint::clear_has_has_valid_hint()
{
    _has_bits_[0] &= ~0x00000002u;
}
void TypeHint::clear_has_valid_hint()
{
    has_valid_hint_ = false;
    clear_has_has_valid_hint();
}
bool TypeHint::has_valid_hint() const
{
    // @@protoc_insertion_point(field_get:sync_pb.TypeHint.has_valid_hint)
    return has_valid_hint_;
}
void TypeHint::set_has_valid_hint(bool value)
{
    set_has_has_valid_hint();
    has_valid_hint_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.TypeHint.has_valid_hint)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForSourceInfo(
    SourceInfo* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceInfo::kSourceFieldNumber;
const int SourceInfo::kTypeHintFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceInfo::SourceInfo()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.SourceInfo)
}

void SourceInfo::InitAsDefaultInstance()
{
}

SourceInfo::SourceInfo(const SourceInfo& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.SourceInfo)
}

void SourceInfo::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    source_ = 0;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SourceInfo::~SourceInfo()
{
    // @@protoc_insertion_point(destructor:sync_pb.SourceInfo)
    SharedDtor();
}

void SourceInfo::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void SourceInfo::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SourceInfo& SourceInfo::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_client_5fdebug_5finfo_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_client_5fdebug_5finfo_2eproto();
#endif
    return *default_instance_;
}

SourceInfo* SourceInfo::default_instance_ = NULL;

SourceInfo* SourceInfo::New(::google::protobuf::Arena* arena) const
{
    SourceInfo* n = new SourceInfo;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void SourceInfo::Clear()
{
    // @@protoc_insertion_point(message_clear_start:sync_pb.SourceInfo)
    source_ = 0;
    type_hint_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SourceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForSourceInfo, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.SourceInfo)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1;
        case 1: {
            if (tag == 8) {
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::sync_pb::GetUpdatesCallerInfo_GetUpdatesSource_IsValid(value)) {
                    set_source(static_cast<::sync_pb::GetUpdatesCallerInfo_GetUpdatesSource>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(8);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_type_hint;
            break;
        }

        // repeated .sync_pb.TypeHint type_hint = 2;
        case 2: {
            if (tag == 18) {
            parse_type_hint:
                DO_(input->IncrementRecursionDepth());
            parse_loop_type_hint:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                    input, add_type_hint()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_loop_type_hint;
            input->UnsafeDecrementRecursionDepth();
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.SourceInfo)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.SourceInfo)
    return false;
#undef DO_
}

void SourceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.SourceInfo)
    // optional .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1;
    if (has_source()) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            1, this->source(), output);
    }

    // repeated .sync_pb.TypeHint type_hint = 2;
    for (unsigned int i = 0, n = this->type_hint_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            2, this->type_hint(i), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.SourceInfo)
}

int SourceInfo::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.SourceInfo)
    int total_size = 0;

    // optional .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1;
    if (has_source()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->source());
    }

    // repeated .sync_pb.TypeHint type_hint = 2;
    total_size += 1 * this->type_hint_size();
    for (int i = 0; i < this->type_hint_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
            this->type_hint(i));
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void SourceInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const SourceInfo*>(&from));
}

void SourceInfo::MergeFrom(const SourceInfo& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.SourceInfo)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    type_hint_.MergeFrom(from.type_hint_);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_source()) {
            set_source(from.source());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void SourceInfo::CopyFrom(const SourceInfo& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.SourceInfo)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool SourceInfo::IsInitialized() const
{

    return true;
}

void SourceInfo::Swap(SourceInfo* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void SourceInfo::InternalSwap(SourceInfo* other)
{
    std::swap(source_, other->source_);
    type_hint_.UnsafeArenaSwap(&other->type_hint_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string SourceInfo::GetTypeName() const
{
    return "sync_pb.SourceInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SourceInfo

// optional .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1;
bool SourceInfo::has_source() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void SourceInfo::set_has_source()
{
    _has_bits_[0] |= 0x00000001u;
}
void SourceInfo::clear_has_source()
{
    _has_bits_[0] &= ~0x00000001u;
}
void SourceInfo::clear_source()
{
    source_ = 0;
    clear_has_source();
}
::sync_pb::GetUpdatesCallerInfo_GetUpdatesSource SourceInfo::source() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SourceInfo.source)
    return static_cast<::sync_pb::GetUpdatesCallerInfo_GetUpdatesSource>(source_);
}
void SourceInfo::set_source(::sync_pb::GetUpdatesCallerInfo_GetUpdatesSource value)
{
    assert(::sync_pb::GetUpdatesCallerInfo_GetUpdatesSource_IsValid(value));
    set_has_source();
    source_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SourceInfo.source)
}

// repeated .sync_pb.TypeHint type_hint = 2;
int SourceInfo::type_hint_size() const
{
    return type_hint_.size();
}
void SourceInfo::clear_type_hint()
{
    type_hint_.Clear();
}
const ::sync_pb::TypeHint& SourceInfo::type_hint(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.SourceInfo.type_hint)
    return type_hint_.Get(index);
}
::sync_pb::TypeHint* SourceInfo::mutable_type_hint(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.SourceInfo.type_hint)
    return type_hint_.Mutable(index);
}
::sync_pb::TypeHint* SourceInfo::add_type_hint()
{
    // @@protoc_insertion_point(field_add:sync_pb.SourceInfo.type_hint)
    return type_hint_.Add();
}
::google::protobuf::RepeatedPtrField<::sync_pb::TypeHint>*
SourceInfo::mutable_type_hint()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.SourceInfo.type_hint)
    return &type_hint_;
}
const ::google::protobuf::RepeatedPtrField<::sync_pb::TypeHint>&
SourceInfo::type_hint() const
{
    // @@protoc_insertion_point(field_list:sync_pb.SourceInfo.type_hint)
    return type_hint_;
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForSyncCycleCompletedEventInfo(
    SyncCycleCompletedEventInfo* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncCycleCompletedEventInfo::kNumBlockingConflictsFieldNumber;
const int SyncCycleCompletedEventInfo::kNumNonBlockingConflictsFieldNumber;
const int SyncCycleCompletedEventInfo::kNumEncryptionConflictsFieldNumber;
const int SyncCycleCompletedEventInfo::kNumHierarchyConflictsFieldNumber;
const int SyncCycleCompletedEventInfo::kNumSimpleConflictsFieldNumber;
const int SyncCycleCompletedEventInfo::kNumServerConflictsFieldNumber;
const int SyncCycleCompletedEventInfo::kNumUpdatesDownloadedFieldNumber;
const int SyncCycleCompletedEventInfo::kNumReflectedUpdatesDownloadedFieldNumber;
const int SyncCycleCompletedEventInfo::kCallerInfoFieldNumber;
const int SyncCycleCompletedEventInfo::kSourceInfoFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncCycleCompletedEventInfo::SyncCycleCompletedEventInfo()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.SyncCycleCompletedEventInfo)
}

void SyncCycleCompletedEventInfo::InitAsDefaultInstance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    caller_info_ = const_cast<::sync_pb::GetUpdatesCallerInfo*>(
        ::sync_pb::GetUpdatesCallerInfo::internal_default_instance());
#else
    caller_info_ = const_cast<::sync_pb::GetUpdatesCallerInfo*>(&::sync_pb::GetUpdatesCallerInfo::default_instance());
#endif
}

SyncCycleCompletedEventInfo::SyncCycleCompletedEventInfo(const SyncCycleCompletedEventInfo& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.SyncCycleCompletedEventInfo)
}

void SyncCycleCompletedEventInfo::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    num_blocking_conflicts_ = 0;
    num_non_blocking_conflicts_ = 0;
    num_encryption_conflicts_ = 0;
    num_hierarchy_conflicts_ = 0;
    num_simple_conflicts_ = 0;
    num_server_conflicts_ = 0;
    num_updates_downloaded_ = 0;
    num_reflected_updates_downloaded_ = 0;
    caller_info_ = NULL;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncCycleCompletedEventInfo::~SyncCycleCompletedEventInfo()
{
    // @@protoc_insertion_point(destructor:sync_pb.SyncCycleCompletedEventInfo)
    SharedDtor();
}

void SyncCycleCompletedEventInfo::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
        delete caller_info_;
    }
}

void SyncCycleCompletedEventInfo::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SyncCycleCompletedEventInfo& SyncCycleCompletedEventInfo::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_client_5fdebug_5finfo_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_client_5fdebug_5finfo_2eproto();
#endif
    return *default_instance_;
}

SyncCycleCompletedEventInfo* SyncCycleCompletedEventInfo::default_instance_ = NULL;

SyncCycleCompletedEventInfo* SyncCycleCompletedEventInfo::New(::google::protobuf::Arena* arena) const
{
    SyncCycleCompletedEventInfo* n = new SyncCycleCompletedEventInfo;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void SyncCycleCompletedEventInfo::Clear()
{
// @@protoc_insertion_point(message_clear_start:sync_pb.SyncCycleCompletedEventInfo)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                                 \
    _Pragma("clang diagnostic push")                                                                                  \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(SyncCycleCompletedEventInfo, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<SyncCycleCompletedEventInfo*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    if (_has_bits_[0 / 32] & 255u) {
        ZR_(num_blocking_conflicts_, num_reflected_updates_downloaded_);
    }
    if (has_caller_info()) {
        if (caller_info_ != NULL)
            caller_info_->::sync_pb::GetUpdatesCallerInfo::Clear();
    }

#undef ZR_HELPER_
#undef ZR_

    source_info_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SyncCycleCompletedEventInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForSyncCycleCompletedEventInfo, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.SyncCycleCompletedEventInfo)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional int32 num_blocking_conflicts = 2 [deprecated = true];
        case 2: {
            if (tag == 16) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_blocking_conflicts_)));
                set_has_num_blocking_conflicts();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_num_non_blocking_conflicts;
            break;
        }

        // optional int32 num_non_blocking_conflicts = 3 [deprecated = true];
        case 3: {
            if (tag == 24) {
            parse_num_non_blocking_conflicts:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_non_blocking_conflicts_)));
                set_has_num_non_blocking_conflicts();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(32))
                goto parse_num_encryption_conflicts;
            break;
        }

        // optional int32 num_encryption_conflicts = 4;
        case 4: {
            if (tag == 32) {
            parse_num_encryption_conflicts:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_encryption_conflicts_)));
                set_has_num_encryption_conflicts();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(40))
                goto parse_num_hierarchy_conflicts;
            break;
        }

        // optional int32 num_hierarchy_conflicts = 5;
        case 5: {
            if (tag == 40) {
            parse_num_hierarchy_conflicts:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_hierarchy_conflicts_)));
                set_has_num_hierarchy_conflicts();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(48))
                goto parse_num_simple_conflicts;
            break;
        }

        // optional int32 num_simple_conflicts = 6;
        case 6: {
            if (tag == 48) {
            parse_num_simple_conflicts:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_simple_conflicts_)));
                set_has_num_simple_conflicts();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(56))
                goto parse_num_server_conflicts;
            break;
        }

        // optional int32 num_server_conflicts = 7;
        case 7: {
            if (tag == 56) {
            parse_num_server_conflicts:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_server_conflicts_)));
                set_has_num_server_conflicts();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(64))
                goto parse_num_updates_downloaded;
            break;
        }

        // optional int32 num_updates_downloaded = 8;
        case 8: {
            if (tag == 64) {
            parse_num_updates_downloaded:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_updates_downloaded_)));
                set_has_num_updates_downloaded();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(72))
                goto parse_num_reflected_updates_downloaded;
            break;
        }

        // optional int32 num_reflected_updates_downloaded = 9;
        case 9: {
            if (tag == 72) {
            parse_num_reflected_updates_downloaded:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_reflected_updates_downloaded_)));
                set_has_num_reflected_updates_downloaded();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(82))
                goto parse_caller_info;
            break;
        }

        // optional .sync_pb.GetUpdatesCallerInfo caller_info = 10;
        case 10: {
            if (tag == 82) {
            parse_caller_info:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_caller_info()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(90))
                goto parse_source_info;
            break;
        }

        // repeated .sync_pb.SourceInfo source_info = 11;
        case 11: {
            if (tag == 90) {
            parse_source_info:
                DO_(input->IncrementRecursionDepth());
            parse_loop_source_info:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                    input, add_source_info()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(90))
                goto parse_loop_source_info;
            input->UnsafeDecrementRecursionDepth();
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.SyncCycleCompletedEventInfo)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.SyncCycleCompletedEventInfo)
    return false;
#undef DO_
}

void SyncCycleCompletedEventInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.SyncCycleCompletedEventInfo)
    // optional int32 num_blocking_conflicts = 2 [deprecated = true];
    if (has_num_blocking_conflicts()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_blocking_conflicts(), output);
    }

    // optional int32 num_non_blocking_conflicts = 3 [deprecated = true];
    if (has_num_non_blocking_conflicts()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_non_blocking_conflicts(), output);
    }

    // optional int32 num_encryption_conflicts = 4;
    if (has_num_encryption_conflicts()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->num_encryption_conflicts(), output);
    }

    // optional int32 num_hierarchy_conflicts = 5;
    if (has_num_hierarchy_conflicts()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->num_hierarchy_conflicts(), output);
    }

    // optional int32 num_simple_conflicts = 6;
    if (has_num_simple_conflicts()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->num_simple_conflicts(), output);
    }

    // optional int32 num_server_conflicts = 7;
    if (has_num_server_conflicts()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->num_server_conflicts(), output);
    }

    // optional int32 num_updates_downloaded = 8;
    if (has_num_updates_downloaded()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->num_updates_downloaded(), output);
    }

    // optional int32 num_reflected_updates_downloaded = 9;
    if (has_num_reflected_updates_downloaded()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->num_reflected_updates_downloaded(), output);
    }

    // optional .sync_pb.GetUpdatesCallerInfo caller_info = 10;
    if (has_caller_info()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            10, *this->caller_info_, output);
    }

    // repeated .sync_pb.SourceInfo source_info = 11;
    for (unsigned int i = 0, n = this->source_info_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            11, this->source_info(i), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.SyncCycleCompletedEventInfo)
}

int SyncCycleCompletedEventInfo::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.SyncCycleCompletedEventInfo)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 255u) {
        // optional int32 num_blocking_conflicts = 2 [deprecated = true];
        if (has_num_blocking_conflicts()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_blocking_conflicts());
        }

        // optional int32 num_non_blocking_conflicts = 3 [deprecated = true];
        if (has_num_non_blocking_conflicts()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_non_blocking_conflicts());
        }

        // optional int32 num_encryption_conflicts = 4;
        if (has_num_encryption_conflicts()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_encryption_conflicts());
        }

        // optional int32 num_hierarchy_conflicts = 5;
        if (has_num_hierarchy_conflicts()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_hierarchy_conflicts());
        }

        // optional int32 num_simple_conflicts = 6;
        if (has_num_simple_conflicts()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_simple_conflicts());
        }

        // optional int32 num_server_conflicts = 7;
        if (has_num_server_conflicts()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_server_conflicts());
        }

        // optional int32 num_updates_downloaded = 8;
        if (has_num_updates_downloaded()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_updates_downloaded());
        }

        // optional int32 num_reflected_updates_downloaded = 9;
        if (has_num_reflected_updates_downloaded()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_reflected_updates_downloaded());
        }
    }
    // optional .sync_pb.GetUpdatesCallerInfo caller_info = 10;
    if (has_caller_info()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->caller_info_);
    }

    // repeated .sync_pb.SourceInfo source_info = 11;
    total_size += 1 * this->source_info_size();
    for (int i = 0; i < this->source_info_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
            this->source_info(i));
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void SyncCycleCompletedEventInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const SyncCycleCompletedEventInfo*>(&from));
}

void SyncCycleCompletedEventInfo::MergeFrom(const SyncCycleCompletedEventInfo& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.SyncCycleCompletedEventInfo)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    source_info_.MergeFrom(from.source_info_);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_num_blocking_conflicts()) {
            set_num_blocking_conflicts(from.num_blocking_conflicts());
        }
        if (from.has_num_non_blocking_conflicts()) {
            set_num_non_blocking_conflicts(from.num_non_blocking_conflicts());
        }
        if (from.has_num_encryption_conflicts()) {
            set_num_encryption_conflicts(from.num_encryption_conflicts());
        }
        if (from.has_num_hierarchy_conflicts()) {
            set_num_hierarchy_conflicts(from.num_hierarchy_conflicts());
        }
        if (from.has_num_simple_conflicts()) {
            set_num_simple_conflicts(from.num_simple_conflicts());
        }
        if (from.has_num_server_conflicts()) {
            set_num_server_conflicts(from.num_server_conflicts());
        }
        if (from.has_num_updates_downloaded()) {
            set_num_updates_downloaded(from.num_updates_downloaded());
        }
        if (from.has_num_reflected_updates_downloaded()) {
            set_num_reflected_updates_downloaded(from.num_reflected_updates_downloaded());
        }
    }
    if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
        if (from.has_caller_info()) {
            mutable_caller_info()->::sync_pb::GetUpdatesCallerInfo::MergeFrom(from.caller_info());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void SyncCycleCompletedEventInfo::CopyFrom(const SyncCycleCompletedEventInfo& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.SyncCycleCompletedEventInfo)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool SyncCycleCompletedEventInfo::IsInitialized() const
{

    if (has_caller_info()) {
        if (!this->caller_info_->IsInitialized())
            return false;
    }
    return true;
}

void SyncCycleCompletedEventInfo::Swap(SyncCycleCompletedEventInfo* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void SyncCycleCompletedEventInfo::InternalSwap(SyncCycleCompletedEventInfo* other)
{
    std::swap(num_blocking_conflicts_, other->num_blocking_conflicts_);
    std::swap(num_non_blocking_conflicts_, other->num_non_blocking_conflicts_);
    std::swap(num_encryption_conflicts_, other->num_encryption_conflicts_);
    std::swap(num_hierarchy_conflicts_, other->num_hierarchy_conflicts_);
    std::swap(num_simple_conflicts_, other->num_simple_conflicts_);
    std::swap(num_server_conflicts_, other->num_server_conflicts_);
    std::swap(num_updates_downloaded_, other->num_updates_downloaded_);
    std::swap(num_reflected_updates_downloaded_, other->num_reflected_updates_downloaded_);
    std::swap(caller_info_, other->caller_info_);
    source_info_.UnsafeArenaSwap(&other->source_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string SyncCycleCompletedEventInfo::GetTypeName() const
{
    return "sync_pb.SyncCycleCompletedEventInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncCycleCompletedEventInfo

// optional int32 num_blocking_conflicts = 2 [deprecated = true];
bool SyncCycleCompletedEventInfo::has_num_blocking_conflicts() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_blocking_conflicts()
{
    _has_bits_[0] |= 0x00000001u;
}
void SyncCycleCompletedEventInfo::clear_has_num_blocking_conflicts()
{
    _has_bits_[0] &= ~0x00000001u;
}
void SyncCycleCompletedEventInfo::clear_num_blocking_conflicts()
{
    num_blocking_conflicts_ = 0;
    clear_has_num_blocking_conflicts();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_blocking_conflicts() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_blocking_conflicts)
    return num_blocking_conflicts_;
}
void SyncCycleCompletedEventInfo::set_num_blocking_conflicts(::google::protobuf::int32 value)
{
    set_has_num_blocking_conflicts();
    num_blocking_conflicts_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_blocking_conflicts)
}

// optional int32 num_non_blocking_conflicts = 3 [deprecated = true];
bool SyncCycleCompletedEventInfo::has_num_non_blocking_conflicts() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_non_blocking_conflicts()
{
    _has_bits_[0] |= 0x00000002u;
}
void SyncCycleCompletedEventInfo::clear_has_num_non_blocking_conflicts()
{
    _has_bits_[0] &= ~0x00000002u;
}
void SyncCycleCompletedEventInfo::clear_num_non_blocking_conflicts()
{
    num_non_blocking_conflicts_ = 0;
    clear_has_num_non_blocking_conflicts();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_non_blocking_conflicts() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_non_blocking_conflicts)
    return num_non_blocking_conflicts_;
}
void SyncCycleCompletedEventInfo::set_num_non_blocking_conflicts(::google::protobuf::int32 value)
{
    set_has_num_non_blocking_conflicts();
    num_non_blocking_conflicts_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_non_blocking_conflicts)
}

// optional int32 num_encryption_conflicts = 4;
bool SyncCycleCompletedEventInfo::has_num_encryption_conflicts() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_encryption_conflicts()
{
    _has_bits_[0] |= 0x00000004u;
}
void SyncCycleCompletedEventInfo::clear_has_num_encryption_conflicts()
{
    _has_bits_[0] &= ~0x00000004u;
}
void SyncCycleCompletedEventInfo::clear_num_encryption_conflicts()
{
    num_encryption_conflicts_ = 0;
    clear_has_num_encryption_conflicts();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_encryption_conflicts() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_encryption_conflicts)
    return num_encryption_conflicts_;
}
void SyncCycleCompletedEventInfo::set_num_encryption_conflicts(::google::protobuf::int32 value)
{
    set_has_num_encryption_conflicts();
    num_encryption_conflicts_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_encryption_conflicts)
}

// optional int32 num_hierarchy_conflicts = 5;
bool SyncCycleCompletedEventInfo::has_num_hierarchy_conflicts() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_hierarchy_conflicts()
{
    _has_bits_[0] |= 0x00000008u;
}
void SyncCycleCompletedEventInfo::clear_has_num_hierarchy_conflicts()
{
    _has_bits_[0] &= ~0x00000008u;
}
void SyncCycleCompletedEventInfo::clear_num_hierarchy_conflicts()
{
    num_hierarchy_conflicts_ = 0;
    clear_has_num_hierarchy_conflicts();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_hierarchy_conflicts() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_hierarchy_conflicts)
    return num_hierarchy_conflicts_;
}
void SyncCycleCompletedEventInfo::set_num_hierarchy_conflicts(::google::protobuf::int32 value)
{
    set_has_num_hierarchy_conflicts();
    num_hierarchy_conflicts_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_hierarchy_conflicts)
}

// optional int32 num_simple_conflicts = 6;
bool SyncCycleCompletedEventInfo::has_num_simple_conflicts() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_simple_conflicts()
{
    _has_bits_[0] |= 0x00000010u;
}
void SyncCycleCompletedEventInfo::clear_has_num_simple_conflicts()
{
    _has_bits_[0] &= ~0x00000010u;
}
void SyncCycleCompletedEventInfo::clear_num_simple_conflicts()
{
    num_simple_conflicts_ = 0;
    clear_has_num_simple_conflicts();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_simple_conflicts() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_simple_conflicts)
    return num_simple_conflicts_;
}
void SyncCycleCompletedEventInfo::set_num_simple_conflicts(::google::protobuf::int32 value)
{
    set_has_num_simple_conflicts();
    num_simple_conflicts_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_simple_conflicts)
}

// optional int32 num_server_conflicts = 7;
bool SyncCycleCompletedEventInfo::has_num_server_conflicts() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_server_conflicts()
{
    _has_bits_[0] |= 0x00000020u;
}
void SyncCycleCompletedEventInfo::clear_has_num_server_conflicts()
{
    _has_bits_[0] &= ~0x00000020u;
}
void SyncCycleCompletedEventInfo::clear_num_server_conflicts()
{
    num_server_conflicts_ = 0;
    clear_has_num_server_conflicts();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_server_conflicts() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_server_conflicts)
    return num_server_conflicts_;
}
void SyncCycleCompletedEventInfo::set_num_server_conflicts(::google::protobuf::int32 value)
{
    set_has_num_server_conflicts();
    num_server_conflicts_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_server_conflicts)
}

// optional int32 num_updates_downloaded = 8;
bool SyncCycleCompletedEventInfo::has_num_updates_downloaded() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_updates_downloaded()
{
    _has_bits_[0] |= 0x00000040u;
}
void SyncCycleCompletedEventInfo::clear_has_num_updates_downloaded()
{
    _has_bits_[0] &= ~0x00000040u;
}
void SyncCycleCompletedEventInfo::clear_num_updates_downloaded()
{
    num_updates_downloaded_ = 0;
    clear_has_num_updates_downloaded();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_updates_downloaded() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_updates_downloaded)
    return num_updates_downloaded_;
}
void SyncCycleCompletedEventInfo::set_num_updates_downloaded(::google::protobuf::int32 value)
{
    set_has_num_updates_downloaded();
    num_updates_downloaded_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_updates_downloaded)
}

// optional int32 num_reflected_updates_downloaded = 9;
bool SyncCycleCompletedEventInfo::has_num_reflected_updates_downloaded() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_num_reflected_updates_downloaded()
{
    _has_bits_[0] |= 0x00000080u;
}
void SyncCycleCompletedEventInfo::clear_has_num_reflected_updates_downloaded()
{
    _has_bits_[0] &= ~0x00000080u;
}
void SyncCycleCompletedEventInfo::clear_num_reflected_updates_downloaded()
{
    num_reflected_updates_downloaded_ = 0;
    clear_has_num_reflected_updates_downloaded();
}
::google::protobuf::int32 SyncCycleCompletedEventInfo::num_reflected_updates_downloaded() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.num_reflected_updates_downloaded)
    return num_reflected_updates_downloaded_;
}
void SyncCycleCompletedEventInfo::set_num_reflected_updates_downloaded(::google::protobuf::int32 value)
{
    set_has_num_reflected_updates_downloaded();
    num_reflected_updates_downloaded_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.SyncCycleCompletedEventInfo.num_reflected_updates_downloaded)
}

// optional .sync_pb.GetUpdatesCallerInfo caller_info = 10;
bool SyncCycleCompletedEventInfo::has_caller_info() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
void SyncCycleCompletedEventInfo::set_has_caller_info()
{
    _has_bits_[0] |= 0x00000100u;
}
void SyncCycleCompletedEventInfo::clear_has_caller_info()
{
    _has_bits_[0] &= ~0x00000100u;
}
void SyncCycleCompletedEventInfo::clear_caller_info()
{
    if (caller_info_ != NULL)
        caller_info_->::sync_pb::GetUpdatesCallerInfo::Clear();
    clear_has_caller_info();
}
const ::sync_pb::GetUpdatesCallerInfo& SyncCycleCompletedEventInfo::caller_info() const
{
    // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.caller_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return caller_info_ != NULL ? *caller_info_ : *default_instance().caller_info_;
#else
    return caller_info_ != NULL ? *caller_info_ : *default_instance_->caller_info_;
#endif
}
::sync_pb::GetUpdatesCallerInfo* SyncCycleCompletedEventInfo::mutable_caller_info()
{
    set_has_caller_info();
    if (caller_info_ == NULL) {
        caller_info_ = new ::sync_pb::GetUpdatesCallerInfo;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.SyncCycleCompletedEventInfo.caller_info)
    return caller_info_;
}
::sync_pb::GetUpdatesCallerInfo* SyncCycleCompletedEventInfo::release_caller_info()
{
    // @@protoc_insertion_point(field_release:sync_pb.SyncCycleCompletedEventInfo.caller_info)
    clear_has_caller_info();
    ::sync_pb::GetUpdatesCallerInfo* temp = caller_info_;
    caller_info_ = NULL;
    return temp;
}
void SyncCycleCompletedEventInfo::set_allocated_caller_info(::sync_pb::GetUpdatesCallerInfo* caller_info)
{
    delete caller_info_;
    caller_info_ = caller_info;
    if (caller_info) {
        set_has_caller_info();
    } else {
        clear_has_caller_info();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.SyncCycleCompletedEventInfo.caller_info)
}

// repeated .sync_pb.SourceInfo source_info = 11;
int SyncCycleCompletedEventInfo::source_info_size() const
{
    return source_info_.size();
}
void SyncCycleCompletedEventInfo::clear_source_info()
{
    source_info_.Clear();
}
const ::sync_pb::SourceInfo& SyncCycleCompletedEventInfo::source_info(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.SyncCycleCompletedEventInfo.source_info)
    return source_info_.Get(index);
}
::sync_pb::SourceInfo* SyncCycleCompletedEventInfo::mutable_source_info(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.SyncCycleCompletedEventInfo.source_info)
    return source_info_.Mutable(index);
}
::sync_pb::SourceInfo* SyncCycleCompletedEventInfo::add_source_info()
{
    // @@protoc_insertion_point(field_add:sync_pb.SyncCycleCompletedEventInfo.source_info)
    return source_info_.Add();
}
::google::protobuf::RepeatedPtrField<::sync_pb::SourceInfo>*
SyncCycleCompletedEventInfo::mutable_source_info()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.SyncCycleCompletedEventInfo.source_info)
    return &source_info_;
}
const ::google::protobuf::RepeatedPtrField<::sync_pb::SourceInfo>&
SyncCycleCompletedEventInfo::source_info() const
{
    // @@protoc_insertion_point(field_list:sync_pb.SyncCycleCompletedEventInfo.source_info)
    return source_info_;
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForDatatypeAssociationStats(
    DatatypeAssociationStats* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DatatypeAssociationStats::kDataTypeIdFieldNumber;
const int DatatypeAssociationStats::kNumLocalItemsBeforeAssociationFieldNumber;
const int DatatypeAssociationStats::kNumSyncItemsBeforeAssociationFieldNumber;
const int DatatypeAssociationStats::kNumLocalItemsAfterAssociationFieldNumber;
const int DatatypeAssociationStats::kNumSyncItemsAfterAssociationFieldNumber;
const int DatatypeAssociationStats::kNumLocalItemsAddedFieldNumber;
const int DatatypeAssociationStats::kNumLocalItemsDeletedFieldNumber;
const int DatatypeAssociationStats::kNumLocalItemsModifiedFieldNumber;
const int DatatypeAssociationStats::kNumSyncItemsAddedFieldNumber;
const int DatatypeAssociationStats::kNumSyncItemsDeletedFieldNumber;
const int DatatypeAssociationStats::kNumSyncItemsModifiedFieldNumber;
const int DatatypeAssociationStats::kLocalVersionPreAssociationFieldNumber;
const int DatatypeAssociationStats::kSyncVersionPreAssociationFieldNumber;
const int DatatypeAssociationStats::kHadErrorFieldNumber;
const int DatatypeAssociationStats::kDownloadWaitTimeUsFieldNumber;
const int DatatypeAssociationStats::kDownloadTimeUsFieldNumber;
const int DatatypeAssociationStats::kAssociationWaitTimeForHighPriorityUsFieldNumber;
const int DatatypeAssociationStats::kAssociationWaitTimeForSamePriorityUsFieldNumber;
const int DatatypeAssociationStats::kAssociationTimeUsFieldNumber;
const int DatatypeAssociationStats::kHighPriorityTypeConfiguredBeforeFieldNumber;
const int DatatypeAssociationStats::kSamePriorityTypeConfiguredBeforeFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

DatatypeAssociationStats::DatatypeAssociationStats()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.DatatypeAssociationStats)
}

void DatatypeAssociationStats::InitAsDefaultInstance()
{
}

DatatypeAssociationStats::DatatypeAssociationStats(const DatatypeAssociationStats& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.DatatypeAssociationStats)
}

void DatatypeAssociationStats::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    data_type_id_ = 0;
    num_local_items_before_association_ = 0;
    num_sync_items_before_association_ = 0;
    num_local_items_after_association_ = 0;
    num_sync_items_after_association_ = 0;
    num_local_items_added_ = 0;
    num_local_items_deleted_ = 0;
    num_local_items_modified_ = 0;
    num_sync_items_added_ = 0;
    num_sync_items_deleted_ = 0;
    num_sync_items_modified_ = 0;
    local_version_pre_association_ = GOOGLE_LONGLONG(0);
    sync_version_pre_association_ = GOOGLE_LONGLONG(0);
    had_error_ = false;
    download_wait_time_us_ = GOOGLE_LONGLONG(0);
    download_time_us_ = GOOGLE_LONGLONG(0);
    association_wait_time_for_high_priority_us_ = GOOGLE_LONGLONG(0);
    association_wait_time_for_same_priority_us_ = GOOGLE_LONGLONG(0);
    association_time_us_ = GOOGLE_LONGLONG(0);
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DatatypeAssociationStats::~DatatypeAssociationStats()
{
    // @@protoc_insertion_point(destructor:sync_pb.DatatypeAssociationStats)
    SharedDtor();
}

void DatatypeAssociationStats::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void DatatypeAssociationStats::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DatatypeAssociationStats& DatatypeAssociationStats::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_client_5fdebug_5finfo_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_client_5fdebug_5finfo_2eproto();
#endif
    return *default_instance_;
}

DatatypeAssociationStats* DatatypeAssociationStats::default_instance_ = NULL;

DatatypeAssociationStats* DatatypeAssociationStats::New(::google::protobuf::Arena* arena) const
{
    DatatypeAssociationStats* n = new DatatypeAssociationStats;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void DatatypeAssociationStats::Clear()
{
// @@protoc_insertion_point(message_clear_start:sync_pb.DatatypeAssociationStats)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                              \
    _Pragma("clang diagnostic push")                                                                               \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(DatatypeAssociationStats, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<DatatypeAssociationStats*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    if (_has_bits_[0 / 32] & 255u) {
        ZR_(data_type_id_, num_local_items_modified_);
    }
    if (_has_bits_[8 / 32] & 65280u) {
        ZR_(num_sync_items_added_, download_time_us_);
    }
    ZR_(association_wait_time_for_high_priority_us_, association_time_us_);

#undef ZR_HELPER_
#undef ZR_

    high_priority_type_configured_before_.Clear();
    same_priority_type_configured_before_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DatatypeAssociationStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForDatatypeAssociationStats, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.DatatypeAssociationStats)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional int32 data_type_id = 1;
        case 1: {
            if (tag == 8) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &data_type_id_)));
                set_has_data_type_id();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(16))
                goto parse_num_local_items_before_association;
            break;
        }

        // optional int32 num_local_items_before_association = 2;
        case 2: {
            if (tag == 16) {
            parse_num_local_items_before_association:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_local_items_before_association_)));
                set_has_num_local_items_before_association();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_num_sync_items_before_association;
            break;
        }

        // optional int32 num_sync_items_before_association = 3;
        case 3: {
            if (tag == 24) {
            parse_num_sync_items_before_association:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_sync_items_before_association_)));
                set_has_num_sync_items_before_association();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(32))
                goto parse_num_local_items_after_association;
            break;
        }

        // optional int32 num_local_items_after_association = 4;
        case 4: {
            if (tag == 32) {
            parse_num_local_items_after_association:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_local_items_after_association_)));
                set_has_num_local_items_after_association();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(40))
                goto parse_num_sync_items_after_association;
            break;
        }

        // optional int32 num_sync_items_after_association = 5;
        case 5: {
            if (tag == 40) {
            parse_num_sync_items_after_association:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_sync_items_after_association_)));
                set_has_num_sync_items_after_association();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(48))
                goto parse_num_local_items_added;
            break;
        }

        // optional int32 num_local_items_added = 6;
        case 6: {
            if (tag == 48) {
            parse_num_local_items_added:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_local_items_added_)));
                set_has_num_local_items_added();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(56))
                goto parse_num_local_items_deleted;
            break;
        }

        // optional int32 num_local_items_deleted = 7;
        case 7: {
            if (tag == 56) {
            parse_num_local_items_deleted:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_local_items_deleted_)));
                set_has_num_local_items_deleted();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(64))
                goto parse_num_local_items_modified;
            break;
        }

        // optional int32 num_local_items_modified = 8;
        case 8: {
            if (tag == 64) {
            parse_num_local_items_modified:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_local_items_modified_)));
                set_has_num_local_items_modified();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(72))
                goto parse_num_sync_items_added;
            break;
        }

        // optional int32 num_sync_items_added = 9;
        case 9: {
            if (tag == 72) {
            parse_num_sync_items_added:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_sync_items_added_)));
                set_has_num_sync_items_added();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(80))
                goto parse_num_sync_items_deleted;
            break;
        }

        // optional int32 num_sync_items_deleted = 10;
        case 10: {
            if (tag == 80) {
            parse_num_sync_items_deleted:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_sync_items_deleted_)));
                set_has_num_sync_items_deleted();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(88))
                goto parse_num_sync_items_modified;
            break;
        }

        // optional int32 num_sync_items_modified = 11;
        case 11: {
            if (tag == 88) {
            parse_num_sync_items_modified:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &num_sync_items_modified_)));
                set_has_num_sync_items_modified();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(96))
                goto parse_had_error;
            break;
        }

        // optional bool had_error = 12;
        case 12: {
            if (tag == 96) {
            parse_had_error:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                    input, &had_error_)));
                set_has_had_error();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(104))
                goto parse_download_time_us;
            break;
        }

        // optional int64 download_time_us = 13;
        case 13: {
            if (tag == 104) {
            parse_download_time_us:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &download_time_us_)));
                set_has_download_time_us();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(112))
                goto parse_association_wait_time_for_same_priority_us;
            break;
        }

        // optional int64 association_wait_time_for_same_priority_us = 14;
        case 14: {
            if (tag == 112) {
            parse_association_wait_time_for_same_priority_us:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &association_wait_time_for_same_priority_us_)));
                set_has_association_wait_time_for_same_priority_us();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(120))
                goto parse_download_wait_time_us;
            break;
        }

        // optional int64 download_wait_time_us = 15;
        case 15: {
            if (tag == 120) {
            parse_download_wait_time_us:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &download_wait_time_us_)));
                set_has_download_wait_time_us();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(128))
                goto parse_association_wait_time_for_high_priority_us;
            break;
        }

        // optional int64 association_wait_time_for_high_priority_us = 16;
        case 16: {
            if (tag == 128) {
            parse_association_wait_time_for_high_priority_us:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &association_wait_time_for_high_priority_us_)));
                set_has_association_wait_time_for_high_priority_us();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(136))
                goto parse_association_time_us;
            break;
        }

        // optional int64 association_time_us = 17;
        case 17: {
            if (tag == 136) {
            parse_association_time_us:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &association_time_us_)));
                set_has_association_time_us();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(144))
                goto parse_high_priority_type_configured_before;
            break;
        }

        // repeated int32 high_priority_type_configured_before = 18;
        case 18: {
            if (tag == 144) {
            parse_high_priority_type_configured_before:
                DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    2, 144, input, this->mutable_high_priority_type_configured_before())));
            } else if (tag == 146) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, this->mutable_high_priority_type_configured_before())));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(144))
                goto parse_high_priority_type_configured_before;
            if (input->ExpectTag(152))
                goto parse_same_priority_type_configured_before;
            break;
        }

        // repeated int32 same_priority_type_configured_before = 19;
        case 19: {
            if (tag == 152) {
            parse_same_priority_type_configured_before:
                DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    2, 152, input, this->mutable_same_priority_type_configured_before())));
            } else if (tag == 154) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, this->mutable_same_priority_type_configured_before())));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(152))
                goto parse_same_priority_type_configured_before;
            if (input->ExpectTag(160))
                goto parse_local_version_pre_association;
            break;
        }

        // optional int64 local_version_pre_association = 20;
        case 20: {
            if (tag == 160) {
            parse_local_version_pre_association:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &local_version_pre_association_)));
                set_has_local_version_pre_association();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(168))
                goto parse_sync_version_pre_association;
            break;
        }

        // optional int64 sync_version_pre_association = 21;
        case 21: {
            if (tag == 168) {
            parse_sync_version_pre_association:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &sync_version_pre_association_)));
                set_has_sync_version_pre_association();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.DatatypeAssociationStats)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.DatatypeAssociationStats)
    return false;
#undef DO_
}

void DatatypeAssociationStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.DatatypeAssociationStats)
    // optional int32 data_type_id = 1;
    if (has_data_type_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->data_type_id(), output);
    }

    // optional int32 num_local_items_before_association = 2;
    if (has_num_local_items_before_association()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_local_items_before_association(), output);
    }

    // optional int32 num_sync_items_before_association = 3;
    if (has_num_sync_items_before_association()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_sync_items_before_association(), output);
    }

    // optional int32 num_local_items_after_association = 4;
    if (has_num_local_items_after_association()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->num_local_items_after_association(), output);
    }

    // optional int32 num_sync_items_after_association = 5;
    if (has_num_sync_items_after_association()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->num_sync_items_after_association(), output);
    }

    // optional int32 num_local_items_added = 6;
    if (has_num_local_items_added()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->num_local_items_added(), output);
    }

    // optional int32 num_local_items_deleted = 7;
    if (has_num_local_items_deleted()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->num_local_items_deleted(), output);
    }

    // optional int32 num_local_items_modified = 8;
    if (has_num_local_items_modified()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->num_local_items_modified(), output);
    }

    // optional int32 num_sync_items_added = 9;
    if (has_num_sync_items_added()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->num_sync_items_added(), output);
    }

    // optional int32 num_sync_items_deleted = 10;
    if (has_num_sync_items_deleted()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->num_sync_items_deleted(), output);
    }

    // optional int32 num_sync_items_modified = 11;
    if (has_num_sync_items_modified()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->num_sync_items_modified(), output);
    }

    // optional bool had_error = 12;
    if (has_had_error()) {
        ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->had_error(), output);
    }

    // optional int64 download_time_us = 13;
    if (has_download_time_us()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->download_time_us(), output);
    }

    // optional int64 association_wait_time_for_same_priority_us = 14;
    if (has_association_wait_time_for_same_priority_us()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->association_wait_time_for_same_priority_us(), output);
    }

    // optional int64 download_wait_time_us = 15;
    if (has_download_wait_time_us()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->download_wait_time_us(), output);
    }

    // optional int64 association_wait_time_for_high_priority_us = 16;
    if (has_association_wait_time_for_high_priority_us()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->association_wait_time_for_high_priority_us(), output);
    }

    // optional int64 association_time_us = 17;
    if (has_association_time_us()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->association_time_us(), output);
    }

    // repeated int32 high_priority_type_configured_before = 18;
    for (int i = 0; i < this->high_priority_type_configured_before_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(
            18, this->high_priority_type_configured_before(i), output);
    }

    // repeated int32 same_priority_type_configured_before = 19;
    for (int i = 0; i < this->same_priority_type_configured_before_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(
            19, this->same_priority_type_configured_before(i), output);
    }

    // optional int64 local_version_pre_association = 20;
    if (has_local_version_pre_association()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->local_version_pre_association(), output);
    }

    // optional int64 sync_version_pre_association = 21;
    if (has_sync_version_pre_association()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->sync_version_pre_association(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.DatatypeAssociationStats)
}

int DatatypeAssociationStats::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.DatatypeAssociationStats)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 255u) {
        // optional int32 data_type_id = 1;
        if (has_data_type_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->data_type_id());
        }

        // optional int32 num_local_items_before_association = 2;
        if (has_num_local_items_before_association()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_local_items_before_association());
        }

        // optional int32 num_sync_items_before_association = 3;
        if (has_num_sync_items_before_association()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_sync_items_before_association());
        }

        // optional int32 num_local_items_after_association = 4;
        if (has_num_local_items_after_association()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_local_items_after_association());
        }

        // optional int32 num_sync_items_after_association = 5;
        if (has_num_sync_items_after_association()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_sync_items_after_association());
        }

        // optional int32 num_local_items_added = 6;
        if (has_num_local_items_added()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_local_items_added());
        }

        // optional int32 num_local_items_deleted = 7;
        if (has_num_local_items_deleted()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_local_items_deleted());
        }

        // optional int32 num_local_items_modified = 8;
        if (has_num_local_items_modified()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_local_items_modified());
        }
    }
    if (_has_bits_[8 / 32] & 65280u) {
        // optional int32 num_sync_items_added = 9;
        if (has_num_sync_items_added()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_sync_items_added());
        }

        // optional int32 num_sync_items_deleted = 10;
        if (has_num_sync_items_deleted()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_sync_items_deleted());
        }

        // optional int32 num_sync_items_modified = 11;
        if (has_num_sync_items_modified()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_sync_items_modified());
        }

        // optional int64 local_version_pre_association = 20;
        if (has_local_version_pre_association()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->local_version_pre_association());
        }

        // optional int64 sync_version_pre_association = 21;
        if (has_sync_version_pre_association()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->sync_version_pre_association());
        }

        // optional bool had_error = 12;
        if (has_had_error()) {
            total_size += 1 + 1;
        }

        // optional int64 download_wait_time_us = 15;
        if (has_download_wait_time_us()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->download_wait_time_us());
        }

        // optional int64 download_time_us = 13;
        if (has_download_time_us()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->download_time_us());
        }
    }
    if (_has_bits_[16 / 32] & 458752u) {
        // optional int64 association_wait_time_for_high_priority_us = 16;
        if (has_association_wait_time_for_high_priority_us()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->association_wait_time_for_high_priority_us());
        }

        // optional int64 association_wait_time_for_same_priority_us = 14;
        if (has_association_wait_time_for_same_priority_us()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->association_wait_time_for_same_priority_us());
        }

        // optional int64 association_time_us = 17;
        if (has_association_time_us()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->association_time_us());
        }
    }
    // repeated int32 high_priority_type_configured_before = 18;
    {
        int data_size = 0;
        for (int i = 0; i < this->high_priority_type_configured_before_size(); i++) {
            data_size += ::google::protobuf::internal::WireFormatLite::
                Int32Size(this->high_priority_type_configured_before(i));
        }
        total_size += 2 * this->high_priority_type_configured_before_size() + data_size;
    }

    // repeated int32 same_priority_type_configured_before = 19;
    {
        int data_size = 0;
        for (int i = 0; i < this->same_priority_type_configured_before_size(); i++) {
            data_size += ::google::protobuf::internal::WireFormatLite::
                Int32Size(this->same_priority_type_configured_before(i));
        }
        total_size += 2 * this->same_priority_type_configured_before_size() + data_size;
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void DatatypeAssociationStats::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const DatatypeAssociationStats*>(&from));
}

void DatatypeAssociationStats::MergeFrom(const DatatypeAssociationStats& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.DatatypeAssociationStats)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    high_priority_type_configured_before_.MergeFrom(from.high_priority_type_configured_before_);
    same_priority_type_configured_before_.MergeFrom(from.same_priority_type_configured_before_);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_data_type_id()) {
            set_data_type_id(from.data_type_id());
        }
        if (from.has_num_local_items_before_association()) {
            set_num_local_items_before_association(from.num_local_items_before_association());
        }
        if (from.has_num_sync_items_before_association()) {
            set_num_sync_items_before_association(from.num_sync_items_before_association());
        }
        if (from.has_num_local_items_after_association()) {
            set_num_local_items_after_association(from.num_local_items_after_association());
        }
        if (from.has_num_sync_items_after_association()) {
            set_num_sync_items_after_association(from.num_sync_items_after_association());
        }
        if (from.has_num_local_items_added()) {
            set_num_local_items_added(from.num_local_items_added());
        }
        if (from.has_num_local_items_deleted()) {
            set_num_local_items_deleted(from.num_local_items_deleted());
        }
        if (from.has_num_local_items_modified()) {
            set_num_local_items_modified(from.num_local_items_modified());
        }
    }
    if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
        if (from.has_num_sync_items_added()) {
            set_num_sync_items_added(from.num_sync_items_added());
        }
        if (from.has_num_sync_items_deleted()) {
            set_num_sync_items_deleted(from.num_sync_items_deleted());
        }
        if (from.has_num_sync_items_modified()) {
            set_num_sync_items_modified(from.num_sync_items_modified());
        }
        if (from.has_local_version_pre_association()) {
            set_local_version_pre_association(from.local_version_pre_association());
        }
        if (from.has_sync_version_pre_association()) {
            set_sync_version_pre_association(from.sync_version_pre_association());
        }
        if (from.has_had_error()) {
            set_had_error(from.had_error());
        }
        if (from.has_download_wait_time_us()) {
            set_download_wait_time_us(from.download_wait_time_us());
        }
        if (from.has_download_time_us()) {
            set_download_time_us(from.download_time_us());
        }
    }
    if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
        if (from.has_association_wait_time_for_high_priority_us()) {
            set_association_wait_time_for_high_priority_us(from.association_wait_time_for_high_priority_us());
        }
        if (from.has_association_wait_time_for_same_priority_us()) {
            set_association_wait_time_for_same_priority_us(from.association_wait_time_for_same_priority_us());
        }
        if (from.has_association_time_us()) {
            set_association_time_us(from.association_time_us());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void DatatypeAssociationStats::CopyFrom(const DatatypeAssociationStats& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.DatatypeAssociationStats)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool DatatypeAssociationStats::IsInitialized() const
{

    return true;
}

void DatatypeAssociationStats::Swap(DatatypeAssociationStats* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void DatatypeAssociationStats::InternalSwap(DatatypeAssociationStats* other)
{
    std::swap(data_type_id_, other->data_type_id_);
    std::swap(num_local_items_before_association_, other->num_local_items_before_association_);
    std::swap(num_sync_items_before_association_, other->num_sync_items_before_association_);
    std::swap(num_local_items_after_association_, other->num_local_items_after_association_);
    std::swap(num_sync_items_after_association_, other->num_sync_items_after_association_);
    std::swap(num_local_items_added_, other->num_local_items_added_);
    std::swap(num_local_items_deleted_, other->num_local_items_deleted_);
    std::swap(num_local_items_modified_, other->num_local_items_modified_);
    std::swap(num_sync_items_added_, other->num_sync_items_added_);
    std::swap(num_sync_items_deleted_, other->num_sync_items_deleted_);
    std::swap(num_sync_items_modified_, other->num_sync_items_modified_);
    std::swap(local_version_pre_association_, other->local_version_pre_association_);
    std::swap(sync_version_pre_association_, other->sync_version_pre_association_);
    std::swap(had_error_, other->had_error_);
    std::swap(download_wait_time_us_, other->download_wait_time_us_);
    std::swap(download_time_us_, other->download_time_us_);
    std::swap(association_wait_time_for_high_priority_us_, other->association_wait_time_for_high_priority_us_);
    std::swap(association_wait_time_for_same_priority_us_, other->association_wait_time_for_same_priority_us_);
    std::swap(association_time_us_, other->association_time_us_);
    high_priority_type_configured_before_.UnsafeArenaSwap(&other->high_priority_type_configured_before_);
    same_priority_type_configured_before_.UnsafeArenaSwap(&other->same_priority_type_configured_before_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string DatatypeAssociationStats::GetTypeName() const
{
    return "sync_pb.DatatypeAssociationStats";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DatatypeAssociationStats

// optional int32 data_type_id = 1;
bool DatatypeAssociationStats::has_data_type_id() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void DatatypeAssociationStats::set_has_data_type_id()
{
    _has_bits_[0] |= 0x00000001u;
}
void DatatypeAssociationStats::clear_has_data_type_id()
{
    _has_bits_[0] &= ~0x00000001u;
}
void DatatypeAssociationStats::clear_data_type_id()
{
    data_type_id_ = 0;
    clear_has_data_type_id();
}
::google::protobuf::int32 DatatypeAssociationStats::data_type_id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.data_type_id)
    return data_type_id_;
}
void DatatypeAssociationStats::set_data_type_id(::google::protobuf::int32 value)
{
    set_has_data_type_id();
    data_type_id_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.data_type_id)
}

// optional int32 num_local_items_before_association = 2;
bool DatatypeAssociationStats::has_num_local_items_before_association() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void DatatypeAssociationStats::set_has_num_local_items_before_association()
{
    _has_bits_[0] |= 0x00000002u;
}
void DatatypeAssociationStats::clear_has_num_local_items_before_association()
{
    _has_bits_[0] &= ~0x00000002u;
}
void DatatypeAssociationStats::clear_num_local_items_before_association()
{
    num_local_items_before_association_ = 0;
    clear_has_num_local_items_before_association();
}
::google::protobuf::int32 DatatypeAssociationStats::num_local_items_before_association() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_local_items_before_association)
    return num_local_items_before_association_;
}
void DatatypeAssociationStats::set_num_local_items_before_association(::google::protobuf::int32 value)
{
    set_has_num_local_items_before_association();
    num_local_items_before_association_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_local_items_before_association)
}

// optional int32 num_sync_items_before_association = 3;
bool DatatypeAssociationStats::has_num_sync_items_before_association() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void DatatypeAssociationStats::set_has_num_sync_items_before_association()
{
    _has_bits_[0] |= 0x00000004u;
}
void DatatypeAssociationStats::clear_has_num_sync_items_before_association()
{
    _has_bits_[0] &= ~0x00000004u;
}
void DatatypeAssociationStats::clear_num_sync_items_before_association()
{
    num_sync_items_before_association_ = 0;
    clear_has_num_sync_items_before_association();
}
::google::protobuf::int32 DatatypeAssociationStats::num_sync_items_before_association() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_sync_items_before_association)
    return num_sync_items_before_association_;
}
void DatatypeAssociationStats::set_num_sync_items_before_association(::google::protobuf::int32 value)
{
    set_has_num_sync_items_before_association();
    num_sync_items_before_association_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_sync_items_before_association)
}

// optional int32 num_local_items_after_association = 4;
bool DatatypeAssociationStats::has_num_local_items_after_association() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void DatatypeAssociationStats::set_has_num_local_items_after_association()
{
    _has_bits_[0] |= 0x00000008u;
}
void DatatypeAssociationStats::clear_has_num_local_items_after_association()
{
    _has_bits_[0] &= ~0x00000008u;
}
void DatatypeAssociationStats::clear_num_local_items_after_association()
{
    num_local_items_after_association_ = 0;
    clear_has_num_local_items_after_association();
}
::google::protobuf::int32 DatatypeAssociationStats::num_local_items_after_association() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_local_items_after_association)
    return num_local_items_after_association_;
}
void DatatypeAssociationStats::set_num_local_items_after_association(::google::protobuf::int32 value)
{
    set_has_num_local_items_after_association();
    num_local_items_after_association_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_local_items_after_association)
}

// optional int32 num_sync_items_after_association = 5;
bool DatatypeAssociationStats::has_num_sync_items_after_association() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void DatatypeAssociationStats::set_has_num_sync_items_after_association()
{
    _has_bits_[0] |= 0x00000010u;
}
void DatatypeAssociationStats::clear_has_num_sync_items_after_association()
{
    _has_bits_[0] &= ~0x00000010u;
}
void DatatypeAssociationStats::clear_num_sync_items_after_association()
{
    num_sync_items_after_association_ = 0;
    clear_has_num_sync_items_after_association();
}
::google::protobuf::int32 DatatypeAssociationStats::num_sync_items_after_association() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_sync_items_after_association)
    return num_sync_items_after_association_;
}
void DatatypeAssociationStats::set_num_sync_items_after_association(::google::protobuf::int32 value)
{
    set_has_num_sync_items_after_association();
    num_sync_items_after_association_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_sync_items_after_association)
}

// optional int32 num_local_items_added = 6;
bool DatatypeAssociationStats::has_num_local_items_added() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
void DatatypeAssociationStats::set_has_num_local_items_added()
{
    _has_bits_[0] |= 0x00000020u;
}
void DatatypeAssociationStats::clear_has_num_local_items_added()
{
    _has_bits_[0] &= ~0x00000020u;
}
void DatatypeAssociationStats::clear_num_local_items_added()
{
    num_local_items_added_ = 0;
    clear_has_num_local_items_added();
}
::google::protobuf::int32 DatatypeAssociationStats::num_local_items_added() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_local_items_added)
    return num_local_items_added_;
}
void DatatypeAssociationStats::set_num_local_items_added(::google::protobuf::int32 value)
{
    set_has_num_local_items_added();
    num_local_items_added_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_local_items_added)
}

// optional int32 num_local_items_deleted = 7;
bool DatatypeAssociationStats::has_num_local_items_deleted() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
void DatatypeAssociationStats::set_has_num_local_items_deleted()
{
    _has_bits_[0] |= 0x00000040u;
}
void DatatypeAssociationStats::clear_has_num_local_items_deleted()
{
    _has_bits_[0] &= ~0x00000040u;
}
void DatatypeAssociationStats::clear_num_local_items_deleted()
{
    num_local_items_deleted_ = 0;
    clear_has_num_local_items_deleted();
}
::google::protobuf::int32 DatatypeAssociationStats::num_local_items_deleted() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_local_items_deleted)
    return num_local_items_deleted_;
}
void DatatypeAssociationStats::set_num_local_items_deleted(::google::protobuf::int32 value)
{
    set_has_num_local_items_deleted();
    num_local_items_deleted_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_local_items_deleted)
}

// optional int32 num_local_items_modified = 8;
bool DatatypeAssociationStats::has_num_local_items_modified() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
void DatatypeAssociationStats::set_has_num_local_items_modified()
{
    _has_bits_[0] |= 0x00000080u;
}
void DatatypeAssociationStats::clear_has_num_local_items_modified()
{
    _has_bits_[0] &= ~0x00000080u;
}
void DatatypeAssociationStats::clear_num_local_items_modified()
{
    num_local_items_modified_ = 0;
    clear_has_num_local_items_modified();
}
::google::protobuf::int32 DatatypeAssociationStats::num_local_items_modified() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_local_items_modified)
    return num_local_items_modified_;
}
void DatatypeAssociationStats::set_num_local_items_modified(::google::protobuf::int32 value)
{
    set_has_num_local_items_modified();
    num_local_items_modified_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_local_items_modified)
}

// optional int32 num_sync_items_added = 9;
bool DatatypeAssociationStats::has_num_sync_items_added() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
void DatatypeAssociationStats::set_has_num_sync_items_added()
{
    _has_bits_[0] |= 0x00000100u;
}
void DatatypeAssociationStats::clear_has_num_sync_items_added()
{
    _has_bits_[0] &= ~0x00000100u;
}
void DatatypeAssociationStats::clear_num_sync_items_added()
{
    num_sync_items_added_ = 0;
    clear_has_num_sync_items_added();
}
::google::protobuf::int32 DatatypeAssociationStats::num_sync_items_added() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_sync_items_added)
    return num_sync_items_added_;
}
void DatatypeAssociationStats::set_num_sync_items_added(::google::protobuf::int32 value)
{
    set_has_num_sync_items_added();
    num_sync_items_added_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_sync_items_added)
}

// optional int32 num_sync_items_deleted = 10;
bool DatatypeAssociationStats::has_num_sync_items_deleted() const
{
    return (_has_bits_[0] & 0x00000200u) != 0;
}
void DatatypeAssociationStats::set_has_num_sync_items_deleted()
{
    _has_bits_[0] |= 0x00000200u;
}
void DatatypeAssociationStats::clear_has_num_sync_items_deleted()
{
    _has_bits_[0] &= ~0x00000200u;
}
void DatatypeAssociationStats::clear_num_sync_items_deleted()
{
    num_sync_items_deleted_ = 0;
    clear_has_num_sync_items_deleted();
}
::google::protobuf::int32 DatatypeAssociationStats::num_sync_items_deleted() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_sync_items_deleted)
    return num_sync_items_deleted_;
}
void DatatypeAssociationStats::set_num_sync_items_deleted(::google::protobuf::int32 value)
{
    set_has_num_sync_items_deleted();
    num_sync_items_deleted_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_sync_items_deleted)
}

// optional int32 num_sync_items_modified = 11;
bool DatatypeAssociationStats::has_num_sync_items_modified() const
{
    return (_has_bits_[0] & 0x00000400u) != 0;
}
void DatatypeAssociationStats::set_has_num_sync_items_modified()
{
    _has_bits_[0] |= 0x00000400u;
}
void DatatypeAssociationStats::clear_has_num_sync_items_modified()
{
    _has_bits_[0] &= ~0x00000400u;
}
void DatatypeAssociationStats::clear_num_sync_items_modified()
{
    num_sync_items_modified_ = 0;
    clear_has_num_sync_items_modified();
}
::google::protobuf::int32 DatatypeAssociationStats::num_sync_items_modified() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.num_sync_items_modified)
    return num_sync_items_modified_;
}
void DatatypeAssociationStats::set_num_sync_items_modified(::google::protobuf::int32 value)
{
    set_has_num_sync_items_modified();
    num_sync_items_modified_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.num_sync_items_modified)
}

// optional int64 local_version_pre_association = 20;
bool DatatypeAssociationStats::has_local_version_pre_association() const
{
    return (_has_bits_[0] & 0x00000800u) != 0;
}
void DatatypeAssociationStats::set_has_local_version_pre_association()
{
    _has_bits_[0] |= 0x00000800u;
}
void DatatypeAssociationStats::clear_has_local_version_pre_association()
{
    _has_bits_[0] &= ~0x00000800u;
}
void DatatypeAssociationStats::clear_local_version_pre_association()
{
    local_version_pre_association_ = GOOGLE_LONGLONG(0);
    clear_has_local_version_pre_association();
}
::google::protobuf::int64 DatatypeAssociationStats::local_version_pre_association() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.local_version_pre_association)
    return local_version_pre_association_;
}
void DatatypeAssociationStats::set_local_version_pre_association(::google::protobuf::int64 value)
{
    set_has_local_version_pre_association();
    local_version_pre_association_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.local_version_pre_association)
}

// optional int64 sync_version_pre_association = 21;
bool DatatypeAssociationStats::has_sync_version_pre_association() const
{
    return (_has_bits_[0] & 0x00001000u) != 0;
}
void DatatypeAssociationStats::set_has_sync_version_pre_association()
{
    _has_bits_[0] |= 0x00001000u;
}
void DatatypeAssociationStats::clear_has_sync_version_pre_association()
{
    _has_bits_[0] &= ~0x00001000u;
}
void DatatypeAssociationStats::clear_sync_version_pre_association()
{
    sync_version_pre_association_ = GOOGLE_LONGLONG(0);
    clear_has_sync_version_pre_association();
}
::google::protobuf::int64 DatatypeAssociationStats::sync_version_pre_association() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.sync_version_pre_association)
    return sync_version_pre_association_;
}
void DatatypeAssociationStats::set_sync_version_pre_association(::google::protobuf::int64 value)
{
    set_has_sync_version_pre_association();
    sync_version_pre_association_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.sync_version_pre_association)
}

// optional bool had_error = 12;
bool DatatypeAssociationStats::has_had_error() const
{
    return (_has_bits_[0] & 0x00002000u) != 0;
}
void DatatypeAssociationStats::set_has_had_error()
{
    _has_bits_[0] |= 0x00002000u;
}
void DatatypeAssociationStats::clear_has_had_error()
{
    _has_bits_[0] &= ~0x00002000u;
}
void DatatypeAssociationStats::clear_had_error()
{
    had_error_ = false;
    clear_has_had_error();
}
bool DatatypeAssociationStats::had_error() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.had_error)
    return had_error_;
}
void DatatypeAssociationStats::set_had_error(bool value)
{
    set_has_had_error();
    had_error_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.had_error)
}

// optional int64 download_wait_time_us = 15;
bool DatatypeAssociationStats::has_download_wait_time_us() const
{
    return (_has_bits_[0] & 0x00004000u) != 0;
}
void DatatypeAssociationStats::set_has_download_wait_time_us()
{
    _has_bits_[0] |= 0x00004000u;
}
void DatatypeAssociationStats::clear_has_download_wait_time_us()
{
    _has_bits_[0] &= ~0x00004000u;
}
void DatatypeAssociationStats::clear_download_wait_time_us()
{
    download_wait_time_us_ = GOOGLE_LONGLONG(0);
    clear_has_download_wait_time_us();
}
::google::protobuf::int64 DatatypeAssociationStats::download_wait_time_us() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.download_wait_time_us)
    return download_wait_time_us_;
}
void DatatypeAssociationStats::set_download_wait_time_us(::google::protobuf::int64 value)
{
    set_has_download_wait_time_us();
    download_wait_time_us_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.download_wait_time_us)
}

// optional int64 download_time_us = 13;
bool DatatypeAssociationStats::has_download_time_us() const
{
    return (_has_bits_[0] & 0x00008000u) != 0;
}
void DatatypeAssociationStats::set_has_download_time_us()
{
    _has_bits_[0] |= 0x00008000u;
}
void DatatypeAssociationStats::clear_has_download_time_us()
{
    _has_bits_[0] &= ~0x00008000u;
}
void DatatypeAssociationStats::clear_download_time_us()
{
    download_time_us_ = GOOGLE_LONGLONG(0);
    clear_has_download_time_us();
}
::google::protobuf::int64 DatatypeAssociationStats::download_time_us() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.download_time_us)
    return download_time_us_;
}
void DatatypeAssociationStats::set_download_time_us(::google::protobuf::int64 value)
{
    set_has_download_time_us();
    download_time_us_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.download_time_us)
}

// optional int64 association_wait_time_for_high_priority_us = 16;
bool DatatypeAssociationStats::has_association_wait_time_for_high_priority_us() const
{
    return (_has_bits_[0] & 0x00010000u) != 0;
}
void DatatypeAssociationStats::set_has_association_wait_time_for_high_priority_us()
{
    _has_bits_[0] |= 0x00010000u;
}
void DatatypeAssociationStats::clear_has_association_wait_time_for_high_priority_us()
{
    _has_bits_[0] &= ~0x00010000u;
}
void DatatypeAssociationStats::clear_association_wait_time_for_high_priority_us()
{
    association_wait_time_for_high_priority_us_ = GOOGLE_LONGLONG(0);
    clear_has_association_wait_time_for_high_priority_us();
}
::google::protobuf::int64 DatatypeAssociationStats::association_wait_time_for_high_priority_us() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.association_wait_time_for_high_priority_us)
    return association_wait_time_for_high_priority_us_;
}
void DatatypeAssociationStats::set_association_wait_time_for_high_priority_us(::google::protobuf::int64 value)
{
    set_has_association_wait_time_for_high_priority_us();
    association_wait_time_for_high_priority_us_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.association_wait_time_for_high_priority_us)
}

// optional int64 association_wait_time_for_same_priority_us = 14;
bool DatatypeAssociationStats::has_association_wait_time_for_same_priority_us() const
{
    return (_has_bits_[0] & 0x00020000u) != 0;
}
void DatatypeAssociationStats::set_has_association_wait_time_for_same_priority_us()
{
    _has_bits_[0] |= 0x00020000u;
}
void DatatypeAssociationStats::clear_has_association_wait_time_for_same_priority_us()
{
    _has_bits_[0] &= ~0x00020000u;
}
void DatatypeAssociationStats::clear_association_wait_time_for_same_priority_us()
{
    association_wait_time_for_same_priority_us_ = GOOGLE_LONGLONG(0);
    clear_has_association_wait_time_for_same_priority_us();
}
::google::protobuf::int64 DatatypeAssociationStats::association_wait_time_for_same_priority_us() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.association_wait_time_for_same_priority_us)
    return association_wait_time_for_same_priority_us_;
}
void DatatypeAssociationStats::set_association_wait_time_for_same_priority_us(::google::protobuf::int64 value)
{
    set_has_association_wait_time_for_same_priority_us();
    association_wait_time_for_same_priority_us_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.association_wait_time_for_same_priority_us)
}

// optional int64 association_time_us = 17;
bool DatatypeAssociationStats::has_association_time_us() const
{
    return (_has_bits_[0] & 0x00040000u) != 0;
}
void DatatypeAssociationStats::set_has_association_time_us()
{
    _has_bits_[0] |= 0x00040000u;
}
void DatatypeAssociationStats::clear_has_association_time_us()
{
    _has_bits_[0] &= ~0x00040000u;
}
void DatatypeAssociationStats::clear_association_time_us()
{
    association_time_us_ = GOOGLE_LONGLONG(0);
    clear_has_association_time_us();
}
::google::protobuf::int64 DatatypeAssociationStats::association_time_us() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.association_time_us)
    return association_time_us_;
}
void DatatypeAssociationStats::set_association_time_us(::google::protobuf::int64 value)
{
    set_has_association_time_us();
    association_time_us_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.association_time_us)
}

// repeated int32 high_priority_type_configured_before = 18;
int DatatypeAssociationStats::high_priority_type_configured_before_size() const
{
    return high_priority_type_configured_before_.size();
}
void DatatypeAssociationStats::clear_high_priority_type_configured_before()
{
    high_priority_type_configured_before_.Clear();
}
::google::protobuf::int32 DatatypeAssociationStats::high_priority_type_configured_before(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.high_priority_type_configured_before)
    return high_priority_type_configured_before_.Get(index);
}
void DatatypeAssociationStats::set_high_priority_type_configured_before(int index, ::google::protobuf::int32 value)
{
    high_priority_type_configured_before_.Set(index, value);
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.high_priority_type_configured_before)
}
void DatatypeAssociationStats::add_high_priority_type_configured_before(::google::protobuf::int32 value)
{
    high_priority_type_configured_before_.Add(value);
    // @@protoc_insertion_point(field_add:sync_pb.DatatypeAssociationStats.high_priority_type_configured_before)
}
const ::google::protobuf::RepeatedField<::google::protobuf::int32>&
DatatypeAssociationStats::high_priority_type_configured_before() const
{
    // @@protoc_insertion_point(field_list:sync_pb.DatatypeAssociationStats.high_priority_type_configured_before)
    return high_priority_type_configured_before_;
}
::google::protobuf::RepeatedField<::google::protobuf::int32>*
DatatypeAssociationStats::mutable_high_priority_type_configured_before()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.DatatypeAssociationStats.high_priority_type_configured_before)
    return &high_priority_type_configured_before_;
}

// repeated int32 same_priority_type_configured_before = 19;
int DatatypeAssociationStats::same_priority_type_configured_before_size() const
{
    return same_priority_type_configured_before_.size();
}
void DatatypeAssociationStats::clear_same_priority_type_configured_before()
{
    same_priority_type_configured_before_.Clear();
}
::google::protobuf::int32 DatatypeAssociationStats::same_priority_type_configured_before(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.DatatypeAssociationStats.same_priority_type_configured_before)
    return same_priority_type_configured_before_.Get(index);
}
void DatatypeAssociationStats::set_same_priority_type_configured_before(int index, ::google::protobuf::int32 value)
{
    same_priority_type_configured_before_.Set(index, value);
    // @@protoc_insertion_point(field_set:sync_pb.DatatypeAssociationStats.same_priority_type_configured_before)
}
void DatatypeAssociationStats::add_same_priority_type_configured_before(::google::protobuf::int32 value)
{
    same_priority_type_configured_before_.Add(value);
    // @@protoc_insertion_point(field_add:sync_pb.DatatypeAssociationStats.same_priority_type_configured_before)
}
const ::google::protobuf::RepeatedField<::google::protobuf::int32>&
DatatypeAssociationStats::same_priority_type_configured_before() const
{
    // @@protoc_insertion_point(field_list:sync_pb.DatatypeAssociationStats.same_priority_type_configured_before)
    return same_priority_type_configured_before_;
}
::google::protobuf::RepeatedField<::google::protobuf::int32>*
DatatypeAssociationStats::mutable_same_priority_type_configured_before()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.DatatypeAssociationStats.same_priority_type_configured_before)
    return &same_priority_type_configured_before_;
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForDebugEventInfo(
    DebugEventInfo* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugEventInfo::kSingletonEventFieldNumber;
const int DebugEventInfo::kSyncCycleCompletedEventInfoFieldNumber;
const int DebugEventInfo::kNudgingDatatypeFieldNumber;
const int DebugEventInfo::kDatatypesNotifiedFromServerFieldNumber;
const int DebugEventInfo::kDatatypeAssociationStatsFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugEventInfo::DebugEventInfo()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.DebugEventInfo)
}

void DebugEventInfo::InitAsDefaultInstance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    sync_cycle_completed_event_info_ = const_cast<::sync_pb::SyncCycleCompletedEventInfo*>(
        ::sync_pb::SyncCycleCompletedEventInfo::internal_default_instance());
#else
    sync_cycle_completed_event_info_ = const_cast<::sync_pb::SyncCycleCompletedEventInfo*>(&::sync_pb::SyncCycleCompletedEventInfo::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    datatype_association_stats_ = const_cast<::sync_pb::DatatypeAssociationStats*>(
        ::sync_pb::DatatypeAssociationStats::internal_default_instance());
#else
    datatype_association_stats_ = const_cast<::sync_pb::DatatypeAssociationStats*>(&::sync_pb::DatatypeAssociationStats::default_instance());
#endif
}

DebugEventInfo::DebugEventInfo(const DebugEventInfo& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.DebugEventInfo)
}

void DebugEventInfo::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    singleton_event_ = 1;
    sync_cycle_completed_event_info_ = NULL;
    nudging_datatype_ = 0;
    datatype_association_stats_ = NULL;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DebugEventInfo::~DebugEventInfo()
{
    // @@protoc_insertion_point(destructor:sync_pb.DebugEventInfo)
    SharedDtor();
}

void DebugEventInfo::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
        delete sync_cycle_completed_event_info_;
        delete datatype_association_stats_;
    }
}

void DebugEventInfo::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DebugEventInfo& DebugEventInfo::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_client_5fdebug_5finfo_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_client_5fdebug_5finfo_2eproto();
#endif
    return *default_instance_;
}

DebugEventInfo* DebugEventInfo::default_instance_ = NULL;

DebugEventInfo* DebugEventInfo::New(::google::protobuf::Arena* arena) const
{
    DebugEventInfo* n = new DebugEventInfo;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void DebugEventInfo::Clear()
{
    // @@protoc_insertion_point(message_clear_start:sync_pb.DebugEventInfo)
    if (_has_bits_[0 / 32] & 23u) {
        singleton_event_ = 1;
        if (has_sync_cycle_completed_event_info()) {
            if (sync_cycle_completed_event_info_ != NULL)
                sync_cycle_completed_event_info_->::sync_pb::SyncCycleCompletedEventInfo::Clear();
        }
        nudging_datatype_ = 0;
        if (has_datatype_association_stats()) {
            if (datatype_association_stats_ != NULL)
                datatype_association_stats_->::sync_pb::DatatypeAssociationStats::Clear();
        }
    }
    datatypes_notified_from_server_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DebugEventInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForDebugEventInfo, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.DebugEventInfo)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional .sync_pb.SyncEnums.SingletonDebugEventType singleton_event = 1;
        case 1: {
            if (tag == 8) {
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::sync_pb::SyncEnums_SingletonDebugEventType_IsValid(value)) {
                    set_singleton_event(static_cast<::sync_pb::SyncEnums_SingletonDebugEventType>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(8);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_sync_cycle_completed_event_info;
            break;
        }

        // optional .sync_pb.SyncCycleCompletedEventInfo sync_cycle_completed_event_info = 2;
        case 2: {
            if (tag == 18) {
            parse_sync_cycle_completed_event_info:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_sync_cycle_completed_event_info()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_nudging_datatype;
            break;
        }

        // optional int32 nudging_datatype = 3;
        case 3: {
            if (tag == 24) {
            parse_nudging_datatype:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &nudging_datatype_)));
                set_has_nudging_datatype();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(32))
                goto parse_datatypes_notified_from_server;
            break;
        }

        // repeated int32 datatypes_notified_from_server = 4;
        case 4: {
            if (tag == 32) {
            parse_datatypes_notified_from_server:
                DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    1, 32, input, this->mutable_datatypes_notified_from_server())));
            } else if (tag == 34) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, this->mutable_datatypes_notified_from_server())));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(32))
                goto parse_datatypes_notified_from_server;
            if (input->ExpectTag(42))
                goto parse_datatype_association_stats;
            break;
        }

        // optional .sync_pb.DatatypeAssociationStats datatype_association_stats = 5;
        case 5: {
            if (tag == 42) {
            parse_datatype_association_stats:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_datatype_association_stats()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.DebugEventInfo)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.DebugEventInfo)
    return false;
#undef DO_
}

void DebugEventInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.DebugEventInfo)
    // optional .sync_pb.SyncEnums.SingletonDebugEventType singleton_event = 1;
    if (has_singleton_event()) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            1, this->singleton_event(), output);
    }

    // optional .sync_pb.SyncCycleCompletedEventInfo sync_cycle_completed_event_info = 2;
    if (has_sync_cycle_completed_event_info()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            2, *this->sync_cycle_completed_event_info_, output);
    }

    // optional int32 nudging_datatype = 3;
    if (has_nudging_datatype()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nudging_datatype(), output);
    }

    // repeated int32 datatypes_notified_from_server = 4;
    for (int i = 0; i < this->datatypes_notified_from_server_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(
            4, this->datatypes_notified_from_server(i), output);
    }

    // optional .sync_pb.DatatypeAssociationStats datatype_association_stats = 5;
    if (has_datatype_association_stats()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            5, *this->datatype_association_stats_, output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.DebugEventInfo)
}

int DebugEventInfo::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.DebugEventInfo)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 23u) {
        // optional .sync_pb.SyncEnums.SingletonDebugEventType singleton_event = 1;
        if (has_singleton_event()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->singleton_event());
        }

        // optional .sync_pb.SyncCycleCompletedEventInfo sync_cycle_completed_event_info = 2;
        if (has_sync_cycle_completed_event_info()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->sync_cycle_completed_event_info_);
        }

        // optional int32 nudging_datatype = 3;
        if (has_nudging_datatype()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->nudging_datatype());
        }

        // optional .sync_pb.DatatypeAssociationStats datatype_association_stats = 5;
        if (has_datatype_association_stats()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->datatype_association_stats_);
        }
    }
    // repeated int32 datatypes_notified_from_server = 4;
    {
        int data_size = 0;
        for (int i = 0; i < this->datatypes_notified_from_server_size(); i++) {
            data_size += ::google::protobuf::internal::WireFormatLite::
                Int32Size(this->datatypes_notified_from_server(i));
        }
        total_size += 1 * this->datatypes_notified_from_server_size() + data_size;
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void DebugEventInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const DebugEventInfo*>(&from));
}

void DebugEventInfo::MergeFrom(const DebugEventInfo& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.DebugEventInfo)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    datatypes_notified_from_server_.MergeFrom(from.datatypes_notified_from_server_);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_singleton_event()) {
            set_singleton_event(from.singleton_event());
        }
        if (from.has_sync_cycle_completed_event_info()) {
            mutable_sync_cycle_completed_event_info()->::sync_pb::SyncCycleCompletedEventInfo::MergeFrom(from.sync_cycle_completed_event_info());
        }
        if (from.has_nudging_datatype()) {
            set_nudging_datatype(from.nudging_datatype());
        }
        if (from.has_datatype_association_stats()) {
            mutable_datatype_association_stats()->::sync_pb::DatatypeAssociationStats::MergeFrom(from.datatype_association_stats());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void DebugEventInfo::CopyFrom(const DebugEventInfo& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.DebugEventInfo)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool DebugEventInfo::IsInitialized() const
{

    if (has_sync_cycle_completed_event_info()) {
        if (!this->sync_cycle_completed_event_info_->IsInitialized())
            return false;
    }
    return true;
}

void DebugEventInfo::Swap(DebugEventInfo* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void DebugEventInfo::InternalSwap(DebugEventInfo* other)
{
    std::swap(singleton_event_, other->singleton_event_);
    std::swap(sync_cycle_completed_event_info_, other->sync_cycle_completed_event_info_);
    std::swap(nudging_datatype_, other->nudging_datatype_);
    datatypes_notified_from_server_.UnsafeArenaSwap(&other->datatypes_notified_from_server_);
    std::swap(datatype_association_stats_, other->datatype_association_stats_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string DebugEventInfo::GetTypeName() const
{
    return "sync_pb.DebugEventInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DebugEventInfo

// optional .sync_pb.SyncEnums.SingletonDebugEventType singleton_event = 1;
bool DebugEventInfo::has_singleton_event() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void DebugEventInfo::set_has_singleton_event()
{
    _has_bits_[0] |= 0x00000001u;
}
void DebugEventInfo::clear_has_singleton_event()
{
    _has_bits_[0] &= ~0x00000001u;
}
void DebugEventInfo::clear_singleton_event()
{
    singleton_event_ = 1;
    clear_has_singleton_event();
}
::sync_pb::SyncEnums_SingletonDebugEventType DebugEventInfo::singleton_event() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DebugEventInfo.singleton_event)
    return static_cast<::sync_pb::SyncEnums_SingletonDebugEventType>(singleton_event_);
}
void DebugEventInfo::set_singleton_event(::sync_pb::SyncEnums_SingletonDebugEventType value)
{
    assert(::sync_pb::SyncEnums_SingletonDebugEventType_IsValid(value));
    set_has_singleton_event();
    singleton_event_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DebugEventInfo.singleton_event)
}

// optional .sync_pb.SyncCycleCompletedEventInfo sync_cycle_completed_event_info = 2;
bool DebugEventInfo::has_sync_cycle_completed_event_info() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void DebugEventInfo::set_has_sync_cycle_completed_event_info()
{
    _has_bits_[0] |= 0x00000002u;
}
void DebugEventInfo::clear_has_sync_cycle_completed_event_info()
{
    _has_bits_[0] &= ~0x00000002u;
}
void DebugEventInfo::clear_sync_cycle_completed_event_info()
{
    if (sync_cycle_completed_event_info_ != NULL)
        sync_cycle_completed_event_info_->::sync_pb::SyncCycleCompletedEventInfo::Clear();
    clear_has_sync_cycle_completed_event_info();
}
const ::sync_pb::SyncCycleCompletedEventInfo& DebugEventInfo::sync_cycle_completed_event_info() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DebugEventInfo.sync_cycle_completed_event_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return sync_cycle_completed_event_info_ != NULL ? *sync_cycle_completed_event_info_ : *default_instance().sync_cycle_completed_event_info_;
#else
    return sync_cycle_completed_event_info_ != NULL ? *sync_cycle_completed_event_info_ : *default_instance_->sync_cycle_completed_event_info_;
#endif
}
::sync_pb::SyncCycleCompletedEventInfo* DebugEventInfo::mutable_sync_cycle_completed_event_info()
{
    set_has_sync_cycle_completed_event_info();
    if (sync_cycle_completed_event_info_ == NULL) {
        sync_cycle_completed_event_info_ = new ::sync_pb::SyncCycleCompletedEventInfo;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.DebugEventInfo.sync_cycle_completed_event_info)
    return sync_cycle_completed_event_info_;
}
::sync_pb::SyncCycleCompletedEventInfo* DebugEventInfo::release_sync_cycle_completed_event_info()
{
    // @@protoc_insertion_point(field_release:sync_pb.DebugEventInfo.sync_cycle_completed_event_info)
    clear_has_sync_cycle_completed_event_info();
    ::sync_pb::SyncCycleCompletedEventInfo* temp = sync_cycle_completed_event_info_;
    sync_cycle_completed_event_info_ = NULL;
    return temp;
}
void DebugEventInfo::set_allocated_sync_cycle_completed_event_info(::sync_pb::SyncCycleCompletedEventInfo* sync_cycle_completed_event_info)
{
    delete sync_cycle_completed_event_info_;
    sync_cycle_completed_event_info_ = sync_cycle_completed_event_info;
    if (sync_cycle_completed_event_info) {
        set_has_sync_cycle_completed_event_info();
    } else {
        clear_has_sync_cycle_completed_event_info();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.DebugEventInfo.sync_cycle_completed_event_info)
}

// optional int32 nudging_datatype = 3;
bool DebugEventInfo::has_nudging_datatype() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void DebugEventInfo::set_has_nudging_datatype()
{
    _has_bits_[0] |= 0x00000004u;
}
void DebugEventInfo::clear_has_nudging_datatype()
{
    _has_bits_[0] &= ~0x00000004u;
}
void DebugEventInfo::clear_nudging_datatype()
{
    nudging_datatype_ = 0;
    clear_has_nudging_datatype();
}
::google::protobuf::int32 DebugEventInfo::nudging_datatype() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DebugEventInfo.nudging_datatype)
    return nudging_datatype_;
}
void DebugEventInfo::set_nudging_datatype(::google::protobuf::int32 value)
{
    set_has_nudging_datatype();
    nudging_datatype_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DebugEventInfo.nudging_datatype)
}

// repeated int32 datatypes_notified_from_server = 4;
int DebugEventInfo::datatypes_notified_from_server_size() const
{
    return datatypes_notified_from_server_.size();
}
void DebugEventInfo::clear_datatypes_notified_from_server()
{
    datatypes_notified_from_server_.Clear();
}
::google::protobuf::int32 DebugEventInfo::datatypes_notified_from_server(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.DebugEventInfo.datatypes_notified_from_server)
    return datatypes_notified_from_server_.Get(index);
}
void DebugEventInfo::set_datatypes_notified_from_server(int index, ::google::protobuf::int32 value)
{
    datatypes_notified_from_server_.Set(index, value);
    // @@protoc_insertion_point(field_set:sync_pb.DebugEventInfo.datatypes_notified_from_server)
}
void DebugEventInfo::add_datatypes_notified_from_server(::google::protobuf::int32 value)
{
    datatypes_notified_from_server_.Add(value);
    // @@protoc_insertion_point(field_add:sync_pb.DebugEventInfo.datatypes_notified_from_server)
}
const ::google::protobuf::RepeatedField<::google::protobuf::int32>&
DebugEventInfo::datatypes_notified_from_server() const
{
    // @@protoc_insertion_point(field_list:sync_pb.DebugEventInfo.datatypes_notified_from_server)
    return datatypes_notified_from_server_;
}
::google::protobuf::RepeatedField<::google::protobuf::int32>*
DebugEventInfo::mutable_datatypes_notified_from_server()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.DebugEventInfo.datatypes_notified_from_server)
    return &datatypes_notified_from_server_;
}

// optional .sync_pb.DatatypeAssociationStats datatype_association_stats = 5;
bool DebugEventInfo::has_datatype_association_stats() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void DebugEventInfo::set_has_datatype_association_stats()
{
    _has_bits_[0] |= 0x00000010u;
}
void DebugEventInfo::clear_has_datatype_association_stats()
{
    _has_bits_[0] &= ~0x00000010u;
}
void DebugEventInfo::clear_datatype_association_stats()
{
    if (datatype_association_stats_ != NULL)
        datatype_association_stats_->::sync_pb::DatatypeAssociationStats::Clear();
    clear_has_datatype_association_stats();
}
const ::sync_pb::DatatypeAssociationStats& DebugEventInfo::datatype_association_stats() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DebugEventInfo.datatype_association_stats)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return datatype_association_stats_ != NULL ? *datatype_association_stats_ : *default_instance().datatype_association_stats_;
#else
    return datatype_association_stats_ != NULL ? *datatype_association_stats_ : *default_instance_->datatype_association_stats_;
#endif
}
::sync_pb::DatatypeAssociationStats* DebugEventInfo::mutable_datatype_association_stats()
{
    set_has_datatype_association_stats();
    if (datatype_association_stats_ == NULL) {
        datatype_association_stats_ = new ::sync_pb::DatatypeAssociationStats;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.DebugEventInfo.datatype_association_stats)
    return datatype_association_stats_;
}
::sync_pb::DatatypeAssociationStats* DebugEventInfo::release_datatype_association_stats()
{
    // @@protoc_insertion_point(field_release:sync_pb.DebugEventInfo.datatype_association_stats)
    clear_has_datatype_association_stats();
    ::sync_pb::DatatypeAssociationStats* temp = datatype_association_stats_;
    datatype_association_stats_ = NULL;
    return temp;
}
void DebugEventInfo::set_allocated_datatype_association_stats(::sync_pb::DatatypeAssociationStats* datatype_association_stats)
{
    delete datatype_association_stats_;
    datatype_association_stats_ = datatype_association_stats;
    if (datatype_association_stats) {
        set_has_datatype_association_stats();
    } else {
        clear_has_datatype_association_stats();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.DebugEventInfo.datatype_association_stats)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForDebugInfo(
    DebugInfo* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugInfo::kEventsFieldNumber;
const int DebugInfo::kCryptographerReadyFieldNumber;
const int DebugInfo::kCryptographerHasPendingKeysFieldNumber;
const int DebugInfo::kEventsDroppedFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugInfo::DebugInfo()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.DebugInfo)
}

void DebugInfo::InitAsDefaultInstance()
{
}

DebugInfo::DebugInfo(const DebugInfo& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.DebugInfo)
}

void DebugInfo::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    cryptographer_ready_ = false;
    cryptographer_has_pending_keys_ = false;
    events_dropped_ = false;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DebugInfo::~DebugInfo()
{
    // @@protoc_insertion_point(destructor:sync_pb.DebugInfo)
    SharedDtor();
}

void DebugInfo::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void DebugInfo::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DebugInfo& DebugInfo::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_client_5fdebug_5finfo_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_client_5fdebug_5finfo_2eproto();
#endif
    return *default_instance_;
}

DebugInfo* DebugInfo::default_instance_ = NULL;

DebugInfo* DebugInfo::New(::google::protobuf::Arena* arena) const
{
    DebugInfo* n = new DebugInfo;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void DebugInfo::Clear()
{
// @@protoc_insertion_point(message_clear_start:sync_pb.DebugInfo)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                               \
    _Pragma("clang diagnostic push")                                                                \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(DebugInfo, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<DebugInfo*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    ZR_(cryptographer_ready_, events_dropped_);

#undef ZR_HELPER_
#undef ZR_

    events_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DebugInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForDebugInfo, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.DebugInfo)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // repeated .sync_pb.DebugEventInfo events = 1;
        case 1: {
            if (tag == 10) {
                DO_(input->IncrementRecursionDepth());
            parse_loop_events:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                    input, add_events()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(10))
                goto parse_loop_events;
            input->UnsafeDecrementRecursionDepth();
            if (input->ExpectTag(16))
                goto parse_cryptographer_ready;
            break;
        }

        // optional bool cryptographer_ready = 2;
        case 2: {
            if (tag == 16) {
            parse_cryptographer_ready:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                    input, &cryptographer_ready_)));
                set_has_cryptographer_ready();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_cryptographer_has_pending_keys;
            break;
        }

        // optional bool cryptographer_has_pending_keys = 3;
        case 3: {
            if (tag == 24) {
            parse_cryptographer_has_pending_keys:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                    input, &cryptographer_has_pending_keys_)));
                set_has_cryptographer_has_pending_keys();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(32))
                goto parse_events_dropped;
            break;
        }

        // optional bool events_dropped = 4;
        case 4: {
            if (tag == 32) {
            parse_events_dropped:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                    input, &events_dropped_)));
                set_has_events_dropped();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.DebugInfo)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.DebugInfo)
    return false;
#undef DO_
}

void DebugInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.DebugInfo)
    // repeated .sync_pb.DebugEventInfo events = 1;
    for (unsigned int i = 0, n = this->events_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            1, this->events(i), output);
    }

    // optional bool cryptographer_ready = 2;
    if (has_cryptographer_ready()) {
        ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->cryptographer_ready(), output);
    }

    // optional bool cryptographer_has_pending_keys = 3;
    if (has_cryptographer_has_pending_keys()) {
        ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->cryptographer_has_pending_keys(), output);
    }

    // optional bool events_dropped = 4;
    if (has_events_dropped()) {
        ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->events_dropped(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.DebugInfo)
}

int DebugInfo::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.DebugInfo)
    int total_size = 0;

    if (_has_bits_[1 / 32] & 14u) {
        // optional bool cryptographer_ready = 2;
        if (has_cryptographer_ready()) {
            total_size += 1 + 1;
        }

        // optional bool cryptographer_has_pending_keys = 3;
        if (has_cryptographer_has_pending_keys()) {
            total_size += 1 + 1;
        }

        // optional bool events_dropped = 4;
        if (has_events_dropped()) {
            total_size += 1 + 1;
        }
    }
    // repeated .sync_pb.DebugEventInfo events = 1;
    total_size += 1 * this->events_size();
    for (int i = 0; i < this->events_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
            this->events(i));
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void DebugInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const DebugInfo*>(&from));
}

void DebugInfo::MergeFrom(const DebugInfo& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.DebugInfo)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    events_.MergeFrom(from.events_);
    if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
        if (from.has_cryptographer_ready()) {
            set_cryptographer_ready(from.cryptographer_ready());
        }
        if (from.has_cryptographer_has_pending_keys()) {
            set_cryptographer_has_pending_keys(from.cryptographer_has_pending_keys());
        }
        if (from.has_events_dropped()) {
            set_events_dropped(from.events_dropped());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void DebugInfo::CopyFrom(const DebugInfo& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.DebugInfo)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool DebugInfo::IsInitialized() const
{

    if (!::google::protobuf::internal::AllAreInitialized(this->events()))
        return false;
    return true;
}

void DebugInfo::Swap(DebugInfo* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void DebugInfo::InternalSwap(DebugInfo* other)
{
    events_.UnsafeArenaSwap(&other->events_);
    std::swap(cryptographer_ready_, other->cryptographer_ready_);
    std::swap(cryptographer_has_pending_keys_, other->cryptographer_has_pending_keys_);
    std::swap(events_dropped_, other->events_dropped_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string DebugInfo::GetTypeName() const
{
    return "sync_pb.DebugInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DebugInfo

// repeated .sync_pb.DebugEventInfo events = 1;
int DebugInfo::events_size() const
{
    return events_.size();
}
void DebugInfo::clear_events()
{
    events_.Clear();
}
const ::sync_pb::DebugEventInfo& DebugInfo::events(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.DebugInfo.events)
    return events_.Get(index);
}
::sync_pb::DebugEventInfo* DebugInfo::mutable_events(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.DebugInfo.events)
    return events_.Mutable(index);
}
::sync_pb::DebugEventInfo* DebugInfo::add_events()
{
    // @@protoc_insertion_point(field_add:sync_pb.DebugInfo.events)
    return events_.Add();
}
::google::protobuf::RepeatedPtrField<::sync_pb::DebugEventInfo>*
DebugInfo::mutable_events()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.DebugInfo.events)
    return &events_;
}
const ::google::protobuf::RepeatedPtrField<::sync_pb::DebugEventInfo>&
DebugInfo::events() const
{
    // @@protoc_insertion_point(field_list:sync_pb.DebugInfo.events)
    return events_;
}

// optional bool cryptographer_ready = 2;
bool DebugInfo::has_cryptographer_ready() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void DebugInfo::set_has_cryptographer_ready()
{
    _has_bits_[0] |= 0x00000002u;
}
void DebugInfo::clear_has_cryptographer_ready()
{
    _has_bits_[0] &= ~0x00000002u;
}
void DebugInfo::clear_cryptographer_ready()
{
    cryptographer_ready_ = false;
    clear_has_cryptographer_ready();
}
bool DebugInfo::cryptographer_ready() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DebugInfo.cryptographer_ready)
    return cryptographer_ready_;
}
void DebugInfo::set_cryptographer_ready(bool value)
{
    set_has_cryptographer_ready();
    cryptographer_ready_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DebugInfo.cryptographer_ready)
}

// optional bool cryptographer_has_pending_keys = 3;
bool DebugInfo::has_cryptographer_has_pending_keys() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void DebugInfo::set_has_cryptographer_has_pending_keys()
{
    _has_bits_[0] |= 0x00000004u;
}
void DebugInfo::clear_has_cryptographer_has_pending_keys()
{
    _has_bits_[0] &= ~0x00000004u;
}
void DebugInfo::clear_cryptographer_has_pending_keys()
{
    cryptographer_has_pending_keys_ = false;
    clear_has_cryptographer_has_pending_keys();
}
bool DebugInfo::cryptographer_has_pending_keys() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DebugInfo.cryptographer_has_pending_keys)
    return cryptographer_has_pending_keys_;
}
void DebugInfo::set_cryptographer_has_pending_keys(bool value)
{
    set_has_cryptographer_has_pending_keys();
    cryptographer_has_pending_keys_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DebugInfo.cryptographer_has_pending_keys)
}

// optional bool events_dropped = 4;
bool DebugInfo::has_events_dropped() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void DebugInfo::set_has_events_dropped()
{
    _has_bits_[0] |= 0x00000008u;
}
void DebugInfo::clear_has_events_dropped()
{
    _has_bits_[0] &= ~0x00000008u;
}
void DebugInfo::clear_events_dropped()
{
    events_dropped_ = false;
    clear_has_events_dropped();
}
bool DebugInfo::events_dropped() const
{
    // @@protoc_insertion_point(field_get:sync_pb.DebugInfo.events_dropped)
    return events_dropped_;
}
void DebugInfo::set_events_dropped(bool value)
{
    set_has_events_dropped();
    events_dropped_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.DebugInfo.events_dropped)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace sync_pb

// @@protoc_insertion_point(global_scope)
