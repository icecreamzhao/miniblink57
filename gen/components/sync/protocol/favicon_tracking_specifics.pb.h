// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: favicon_tracking_specifics.proto

#ifndef PROTOBUF_favicon_5ftracking_5fspecifics_2eproto__INCLUDED
#define PROTOBUF_favicon_5ftracking_5fspecifics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_favicon_5ftracking_5fspecifics_2eproto();
void protobuf_AssignDesc_favicon_5ftracking_5fspecifics_2eproto();
void protobuf_ShutdownFile_favicon_5ftracking_5fspecifics_2eproto();

class FaviconTrackingSpecifics;

// ===================================================================

class FaviconTrackingSpecifics : public ::google::protobuf::MessageLite {
public:
    FaviconTrackingSpecifics();
    virtual ~FaviconTrackingSpecifics();

    FaviconTrackingSpecifics(const FaviconTrackingSpecifics& from);

    inline FaviconTrackingSpecifics& operator=(const FaviconTrackingSpecifics& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const FaviconTrackingSpecifics& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const FaviconTrackingSpecifics* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(FaviconTrackingSpecifics* other);

    // implements Message ----------------------------------------------

    inline FaviconTrackingSpecifics* New() const { return New(NULL); }

    FaviconTrackingSpecifics* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const FaviconTrackingSpecifics& from);
    void MergeFrom(const FaviconTrackingSpecifics& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(FaviconTrackingSpecifics* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional string favicon_url = 1;
    bool has_favicon_url() const;
    void clear_favicon_url();
    static const int kFaviconUrlFieldNumber = 1;
    const ::std::string& favicon_url() const;
    void set_favicon_url(const ::std::string& value);
    void set_favicon_url(const char* value);
    void set_favicon_url(const char* value, size_t size);
    ::std::string* mutable_favicon_url();
    ::std::string* release_favicon_url();
    void set_allocated_favicon_url(::std::string* favicon_url);

    // optional int64 last_visit_time_ms = 3;
    bool has_last_visit_time_ms() const;
    void clear_last_visit_time_ms();
    static const int kLastVisitTimeMsFieldNumber = 3;
    ::google::protobuf::int64 last_visit_time_ms() const;
    void set_last_visit_time_ms(::google::protobuf::int64 value);

    // optional bool is_bookmarked = 4;
    bool has_is_bookmarked() const;
    void clear_is_bookmarked();
    static const int kIsBookmarkedFieldNumber = 4;
    bool is_bookmarked() const;
    void set_is_bookmarked(bool value);

    // @@protoc_insertion_point(class_scope:sync_pb.FaviconTrackingSpecifics)
private:
    inline void set_has_favicon_url();
    inline void clear_has_favicon_url();
    inline void set_has_last_visit_time_ms();
    inline void clear_has_last_visit_time_ms();
    inline void set_has_is_bookmarked();
    inline void clear_has_is_bookmarked();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr favicon_url_;
    ::google::protobuf::int64 last_visit_time_ms_;
    bool is_bookmarked_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_favicon_5ftracking_5fspecifics_2eproto_impl();
#else
    friend void protobuf_AddDesc_favicon_5ftracking_5fspecifics_2eproto();
#endif
    friend void protobuf_AssignDesc_favicon_5ftracking_5fspecifics_2eproto();
    friend void protobuf_ShutdownFile_favicon_5ftracking_5fspecifics_2eproto();

    void InitAsDefaultInstance();
    static FaviconTrackingSpecifics* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// FaviconTrackingSpecifics

// optional string favicon_url = 1;
inline bool FaviconTrackingSpecifics::has_favicon_url() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FaviconTrackingSpecifics::set_has_favicon_url()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void FaviconTrackingSpecifics::clear_has_favicon_url()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void FaviconTrackingSpecifics::clear_favicon_url()
{
    favicon_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_favicon_url();
}
inline const ::std::string& FaviconTrackingSpecifics::favicon_url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.FaviconTrackingSpecifics.favicon_url)
    return favicon_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FaviconTrackingSpecifics::set_favicon_url(const ::std::string& value)
{
    set_has_favicon_url();
    favicon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.FaviconTrackingSpecifics.favicon_url)
}
inline void FaviconTrackingSpecifics::set_favicon_url(const char* value)
{
    set_has_favicon_url();
    favicon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.FaviconTrackingSpecifics.favicon_url)
}
inline void FaviconTrackingSpecifics::set_favicon_url(const char* value, size_t size)
{
    set_has_favicon_url();
    favicon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.FaviconTrackingSpecifics.favicon_url)
}
inline ::std::string* FaviconTrackingSpecifics::mutable_favicon_url()
{
    set_has_favicon_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.FaviconTrackingSpecifics.favicon_url)
    return favicon_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FaviconTrackingSpecifics::release_favicon_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.FaviconTrackingSpecifics.favicon_url)
    clear_has_favicon_url();
    return favicon_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FaviconTrackingSpecifics::set_allocated_favicon_url(::std::string* favicon_url)
{
    if (favicon_url != NULL) {
        set_has_favicon_url();
    } else {
        clear_has_favicon_url();
    }
    favicon_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), favicon_url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.FaviconTrackingSpecifics.favicon_url)
}

// optional int64 last_visit_time_ms = 3;
inline bool FaviconTrackingSpecifics::has_last_visit_time_ms() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FaviconTrackingSpecifics::set_has_last_visit_time_ms()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void FaviconTrackingSpecifics::clear_has_last_visit_time_ms()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void FaviconTrackingSpecifics::clear_last_visit_time_ms()
{
    last_visit_time_ms_ = GOOGLE_LONGLONG(0);
    clear_has_last_visit_time_ms();
}
inline ::google::protobuf::int64 FaviconTrackingSpecifics::last_visit_time_ms() const
{
    // @@protoc_insertion_point(field_get:sync_pb.FaviconTrackingSpecifics.last_visit_time_ms)
    return last_visit_time_ms_;
}
inline void FaviconTrackingSpecifics::set_last_visit_time_ms(::google::protobuf::int64 value)
{
    set_has_last_visit_time_ms();
    last_visit_time_ms_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.FaviconTrackingSpecifics.last_visit_time_ms)
}

// optional bool is_bookmarked = 4;
inline bool FaviconTrackingSpecifics::has_is_bookmarked() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FaviconTrackingSpecifics::set_has_is_bookmarked()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void FaviconTrackingSpecifics::clear_has_is_bookmarked()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void FaviconTrackingSpecifics::clear_is_bookmarked()
{
    is_bookmarked_ = false;
    clear_has_is_bookmarked();
}
inline bool FaviconTrackingSpecifics::is_bookmarked() const
{
    // @@protoc_insertion_point(field_get:sync_pb.FaviconTrackingSpecifics.is_bookmarked)
    return is_bookmarked_;
}
inline void FaviconTrackingSpecifics::set_is_bookmarked(bool value)
{
    set_has_is_bookmarked();
    is_bookmarked_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.FaviconTrackingSpecifics.is_bookmarked)
}

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_favicon_5ftracking_5fspecifics_2eproto__INCLUDED
