// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reading_list_specifics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "reading_list_specifics.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {

void protobuf_ShutdownFile_reading_5flist_5fspecifics_2eproto()
{
    delete ReadingListSpecifics::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_reading_5flist_5fspecifics_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_reading_5flist_5fspecifics_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    ReadingListSpecifics::default_instance_ = new ReadingListSpecifics();
    ReadingListSpecifics::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_reading_5flist_5fspecifics_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_reading_5flist_5fspecifics_2eproto_once_);
void protobuf_AddDesc_reading_5flist_5fspecifics_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_reading_5flist_5fspecifics_2eproto_once_,
        &protobuf_AddDesc_reading_5flist_5fspecifics_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_reading_5flist_5fspecifics_2eproto {
    StaticDescriptorInitializer_reading_5flist_5fspecifics_2eproto()
    {
        protobuf_AddDesc_reading_5flist_5fspecifics_2eproto();
    }
} static_descriptor_initializer_reading_5flist_5fspecifics_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForReadingListSpecifics(
    ReadingListSpecifics* ptr)
{
    return ptr->mutable_unknown_fields();
}

bool ReadingListSpecifics_ReadingListEntryStatus_IsValid(int value)
{
    switch (value) {
    case 0:
    case 1:
    case 2:
        return true;
    default:
        return false;
    }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ReadingListSpecifics_ReadingListEntryStatus ReadingListSpecifics::UNREAD;
const ReadingListSpecifics_ReadingListEntryStatus ReadingListSpecifics::READ;
const ReadingListSpecifics_ReadingListEntryStatus ReadingListSpecifics::UNSEEN;
const ReadingListSpecifics_ReadingListEntryStatus ReadingListSpecifics::ReadingListEntryStatus_MIN;
const ReadingListSpecifics_ReadingListEntryStatus ReadingListSpecifics::ReadingListEntryStatus_MAX;
const int ReadingListSpecifics::ReadingListEntryStatus_ARRAYSIZE;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadingListSpecifics::kEntryIdFieldNumber;
const int ReadingListSpecifics::kTitleFieldNumber;
const int ReadingListSpecifics::kUrlFieldNumber;
const int ReadingListSpecifics::kCreationTimeUsFieldNumber;
const int ReadingListSpecifics::kUpdateTimeUsFieldNumber;
const int ReadingListSpecifics::kFirstReadTimeUsFieldNumber;
const int ReadingListSpecifics::kUpdateTitleTimeUsFieldNumber;
const int ReadingListSpecifics::kStatusFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadingListSpecifics::ReadingListSpecifics()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.ReadingListSpecifics)
}

void ReadingListSpecifics::InitAsDefaultInstance()
{
}

ReadingListSpecifics::ReadingListSpecifics(const ReadingListSpecifics& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.ReadingListSpecifics)
}

void ReadingListSpecifics::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    entry_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    creation_time_us_ = GOOGLE_LONGLONG(0);
    update_time_us_ = GOOGLE_LONGLONG(0);
    first_read_time_us_ = GOOGLE_LONGLONG(0);
    update_title_time_us_ = GOOGLE_LONGLONG(0);
    status_ = 0;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReadingListSpecifics::~ReadingListSpecifics()
{
    // @@protoc_insertion_point(destructor:sync_pb.ReadingListSpecifics)
    SharedDtor();
}

void ReadingListSpecifics::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    entry_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void ReadingListSpecifics::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ReadingListSpecifics& ReadingListSpecifics::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_reading_5flist_5fspecifics_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_reading_5flist_5fspecifics_2eproto();
#endif
    return *default_instance_;
}

ReadingListSpecifics* ReadingListSpecifics::default_instance_ = NULL;

ReadingListSpecifics* ReadingListSpecifics::New(::google::protobuf::Arena* arena) const
{
    ReadingListSpecifics* n = new ReadingListSpecifics;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void ReadingListSpecifics::Clear()
{
// @@protoc_insertion_point(message_clear_start:sync_pb.ReadingListSpecifics)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                          \
    _Pragma("clang diagnostic push")                                                                           \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(ReadingListSpecifics, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<ReadingListSpecifics*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    if (_has_bits_[0 / 32] & 255u) {
        ZR_(creation_time_us_, status_);
        if (has_entry_id()) {
            entry_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_title()) {
            title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_url()) {
            url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }

#undef ZR_HELPER_
#undef ZR_

    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReadingListSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForReadingListSpecifics, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.ReadingListSpecifics)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional string entry_id = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_entry_id()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_title;
            break;
        }

        // optional string title = 2;
        case 2: {
            if (tag == 18) {
            parse_title:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_title()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(26))
                goto parse_url;
            break;
        }

        // optional string url = 3;
        case 3: {
            if (tag == 26) {
            parse_url:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_url()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(32))
                goto parse_creation_time_us;
            break;
        }

        // optional int64 creation_time_us = 4;
        case 4: {
            if (tag == 32) {
            parse_creation_time_us:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &creation_time_us_)));
                set_has_creation_time_us();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(40))
                goto parse_update_time_us;
            break;
        }

        // optional int64 update_time_us = 5;
        case 5: {
            if (tag == 40) {
            parse_update_time_us:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &update_time_us_)));
                set_has_update_time_us();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(48))
                goto parse_status;
            break;
        }

        // optional .sync_pb.ReadingListSpecifics.ReadingListEntryStatus status = 6;
        case 6: {
            if (tag == 48) {
            parse_status:
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::sync_pb::ReadingListSpecifics_ReadingListEntryStatus_IsValid(value)) {
                    set_status(static_cast<::sync_pb::ReadingListSpecifics_ReadingListEntryStatus>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(48);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(56))
                goto parse_first_read_time_us;
            break;
        }

        // optional int64 first_read_time_us = 7;
        case 7: {
            if (tag == 56) {
            parse_first_read_time_us:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &first_read_time_us_)));
                set_has_first_read_time_us();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(64))
                goto parse_update_title_time_us;
            break;
        }

        // optional int64 update_title_time_us = 8;
        case 8: {
            if (tag == 64) {
            parse_update_title_time_us:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &update_title_time_us_)));
                set_has_update_title_time_us();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.ReadingListSpecifics)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.ReadingListSpecifics)
    return false;
#undef DO_
}

void ReadingListSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.ReadingListSpecifics)
    // optional string entry_id = 1;
    if (has_entry_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->entry_id(), output);
    }

    // optional string title = 2;
    if (has_title()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            2, this->title(), output);
    }

    // optional string url = 3;
    if (has_url()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            3, this->url(), output);
    }

    // optional int64 creation_time_us = 4;
    if (has_creation_time_us()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->creation_time_us(), output);
    }

    // optional int64 update_time_us = 5;
    if (has_update_time_us()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->update_time_us(), output);
    }

    // optional .sync_pb.ReadingListSpecifics.ReadingListEntryStatus status = 6;
    if (has_status()) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            6, this->status(), output);
    }

    // optional int64 first_read_time_us = 7;
    if (has_first_read_time_us()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->first_read_time_us(), output);
    }

    // optional int64 update_title_time_us = 8;
    if (has_update_title_time_us()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->update_title_time_us(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.ReadingListSpecifics)
}

int ReadingListSpecifics::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.ReadingListSpecifics)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 255u) {
        // optional string entry_id = 1;
        if (has_entry_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->entry_id());
        }

        // optional string title = 2;
        if (has_title()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->title());
        }

        // optional string url = 3;
        if (has_url()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->url());
        }

        // optional int64 creation_time_us = 4;
        if (has_creation_time_us()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->creation_time_us());
        }

        // optional int64 update_time_us = 5;
        if (has_update_time_us()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->update_time_us());
        }

        // optional int64 first_read_time_us = 7;
        if (has_first_read_time_us()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->first_read_time_us());
        }

        // optional int64 update_title_time_us = 8;
        if (has_update_title_time_us()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->update_title_time_us());
        }

        // optional .sync_pb.ReadingListSpecifics.ReadingListEntryStatus status = 6;
        if (has_status()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void ReadingListSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const ReadingListSpecifics*>(&from));
}

void ReadingListSpecifics::MergeFrom(const ReadingListSpecifics& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.ReadingListSpecifics)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_entry_id()) {
            set_has_entry_id();
            entry_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entry_id_);
        }
        if (from.has_title()) {
            set_has_title();
            title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
        }
        if (from.has_url()) {
            set_has_url();
            url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
        }
        if (from.has_creation_time_us()) {
            set_creation_time_us(from.creation_time_us());
        }
        if (from.has_update_time_us()) {
            set_update_time_us(from.update_time_us());
        }
        if (from.has_first_read_time_us()) {
            set_first_read_time_us(from.first_read_time_us());
        }
        if (from.has_update_title_time_us()) {
            set_update_title_time_us(from.update_title_time_us());
        }
        if (from.has_status()) {
            set_status(from.status());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void ReadingListSpecifics::CopyFrom(const ReadingListSpecifics& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.ReadingListSpecifics)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool ReadingListSpecifics::IsInitialized() const
{

    return true;
}

void ReadingListSpecifics::Swap(ReadingListSpecifics* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void ReadingListSpecifics::InternalSwap(ReadingListSpecifics* other)
{
    entry_id_.Swap(&other->entry_id_);
    title_.Swap(&other->title_);
    url_.Swap(&other->url_);
    std::swap(creation_time_us_, other->creation_time_us_);
    std::swap(update_time_us_, other->update_time_us_);
    std::swap(first_read_time_us_, other->first_read_time_us_);
    std::swap(update_title_time_us_, other->update_title_time_us_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string ReadingListSpecifics::GetTypeName() const
{
    return "sync_pb.ReadingListSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadingListSpecifics

// optional string entry_id = 1;
bool ReadingListSpecifics::has_entry_id() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReadingListSpecifics::set_has_entry_id()
{
    _has_bits_[0] |= 0x00000001u;
}
void ReadingListSpecifics::clear_has_entry_id()
{
    _has_bits_[0] &= ~0x00000001u;
}
void ReadingListSpecifics::clear_entry_id()
{
    entry_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_entry_id();
}
const ::std::string& ReadingListSpecifics::entry_id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ReadingListSpecifics.entry_id)
    return entry_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadingListSpecifics::set_entry_id(const ::std::string& value)
{
    set_has_entry_id();
    entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.ReadingListSpecifics.entry_id)
}
void ReadingListSpecifics::set_entry_id(const char* value)
{
    set_has_entry_id();
    entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.ReadingListSpecifics.entry_id)
}
void ReadingListSpecifics::set_entry_id(const char* value, size_t size)
{
    set_has_entry_id();
    entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.ReadingListSpecifics.entry_id)
}
::std::string* ReadingListSpecifics::mutable_entry_id()
{
    set_has_entry_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.ReadingListSpecifics.entry_id)
    return entry_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadingListSpecifics::release_entry_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.ReadingListSpecifics.entry_id)
    clear_has_entry_id();
    return entry_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadingListSpecifics::set_allocated_entry_id(::std::string* entry_id)
{
    if (entry_id != NULL) {
        set_has_entry_id();
    } else {
        clear_has_entry_id();
    }
    entry_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entry_id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.ReadingListSpecifics.entry_id)
}

// optional string title = 2;
bool ReadingListSpecifics::has_title() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReadingListSpecifics::set_has_title()
{
    _has_bits_[0] |= 0x00000002u;
}
void ReadingListSpecifics::clear_has_title()
{
    _has_bits_[0] &= ~0x00000002u;
}
void ReadingListSpecifics::clear_title()
{
    title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_title();
}
const ::std::string& ReadingListSpecifics::title() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ReadingListSpecifics.title)
    return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadingListSpecifics::set_title(const ::std::string& value)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.ReadingListSpecifics.title)
}
void ReadingListSpecifics::set_title(const char* value)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.ReadingListSpecifics.title)
}
void ReadingListSpecifics::set_title(const char* value, size_t size)
{
    set_has_title();
    title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.ReadingListSpecifics.title)
}
::std::string* ReadingListSpecifics::mutable_title()
{
    set_has_title();
    // @@protoc_insertion_point(field_mutable:sync_pb.ReadingListSpecifics.title)
    return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadingListSpecifics::release_title()
{
    // @@protoc_insertion_point(field_release:sync_pb.ReadingListSpecifics.title)
    clear_has_title();
    return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadingListSpecifics::set_allocated_title(::std::string* title)
{
    if (title != NULL) {
        set_has_title();
    } else {
        clear_has_title();
    }
    title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.ReadingListSpecifics.title)
}

// optional string url = 3;
bool ReadingListSpecifics::has_url() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void ReadingListSpecifics::set_has_url()
{
    _has_bits_[0] |= 0x00000004u;
}
void ReadingListSpecifics::clear_has_url()
{
    _has_bits_[0] &= ~0x00000004u;
}
void ReadingListSpecifics::clear_url()
{
    url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_url();
}
const ::std::string& ReadingListSpecifics::url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ReadingListSpecifics.url)
    return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadingListSpecifics::set_url(const ::std::string& value)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.ReadingListSpecifics.url)
}
void ReadingListSpecifics::set_url(const char* value)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.ReadingListSpecifics.url)
}
void ReadingListSpecifics::set_url(const char* value, size_t size)
{
    set_has_url();
    url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.ReadingListSpecifics.url)
}
::std::string* ReadingListSpecifics::mutable_url()
{
    set_has_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.ReadingListSpecifics.url)
    return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadingListSpecifics::release_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.ReadingListSpecifics.url)
    clear_has_url();
    return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadingListSpecifics::set_allocated_url(::std::string* url)
{
    if (url != NULL) {
        set_has_url();
    } else {
        clear_has_url();
    }
    url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.ReadingListSpecifics.url)
}

// optional int64 creation_time_us = 4;
bool ReadingListSpecifics::has_creation_time_us() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void ReadingListSpecifics::set_has_creation_time_us()
{
    _has_bits_[0] |= 0x00000008u;
}
void ReadingListSpecifics::clear_has_creation_time_us()
{
    _has_bits_[0] &= ~0x00000008u;
}
void ReadingListSpecifics::clear_creation_time_us()
{
    creation_time_us_ = GOOGLE_LONGLONG(0);
    clear_has_creation_time_us();
}
::google::protobuf::int64 ReadingListSpecifics::creation_time_us() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ReadingListSpecifics.creation_time_us)
    return creation_time_us_;
}
void ReadingListSpecifics::set_creation_time_us(::google::protobuf::int64 value)
{
    set_has_creation_time_us();
    creation_time_us_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.ReadingListSpecifics.creation_time_us)
}

// optional int64 update_time_us = 5;
bool ReadingListSpecifics::has_update_time_us() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void ReadingListSpecifics::set_has_update_time_us()
{
    _has_bits_[0] |= 0x00000010u;
}
void ReadingListSpecifics::clear_has_update_time_us()
{
    _has_bits_[0] &= ~0x00000010u;
}
void ReadingListSpecifics::clear_update_time_us()
{
    update_time_us_ = GOOGLE_LONGLONG(0);
    clear_has_update_time_us();
}
::google::protobuf::int64 ReadingListSpecifics::update_time_us() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ReadingListSpecifics.update_time_us)
    return update_time_us_;
}
void ReadingListSpecifics::set_update_time_us(::google::protobuf::int64 value)
{
    set_has_update_time_us();
    update_time_us_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.ReadingListSpecifics.update_time_us)
}

// optional int64 first_read_time_us = 7;
bool ReadingListSpecifics::has_first_read_time_us() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
void ReadingListSpecifics::set_has_first_read_time_us()
{
    _has_bits_[0] |= 0x00000020u;
}
void ReadingListSpecifics::clear_has_first_read_time_us()
{
    _has_bits_[0] &= ~0x00000020u;
}
void ReadingListSpecifics::clear_first_read_time_us()
{
    first_read_time_us_ = GOOGLE_LONGLONG(0);
    clear_has_first_read_time_us();
}
::google::protobuf::int64 ReadingListSpecifics::first_read_time_us() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ReadingListSpecifics.first_read_time_us)
    return first_read_time_us_;
}
void ReadingListSpecifics::set_first_read_time_us(::google::protobuf::int64 value)
{
    set_has_first_read_time_us();
    first_read_time_us_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.ReadingListSpecifics.first_read_time_us)
}

// optional int64 update_title_time_us = 8;
bool ReadingListSpecifics::has_update_title_time_us() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
void ReadingListSpecifics::set_has_update_title_time_us()
{
    _has_bits_[0] |= 0x00000040u;
}
void ReadingListSpecifics::clear_has_update_title_time_us()
{
    _has_bits_[0] &= ~0x00000040u;
}
void ReadingListSpecifics::clear_update_title_time_us()
{
    update_title_time_us_ = GOOGLE_LONGLONG(0);
    clear_has_update_title_time_us();
}
::google::protobuf::int64 ReadingListSpecifics::update_title_time_us() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ReadingListSpecifics.update_title_time_us)
    return update_title_time_us_;
}
void ReadingListSpecifics::set_update_title_time_us(::google::protobuf::int64 value)
{
    set_has_update_title_time_us();
    update_title_time_us_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.ReadingListSpecifics.update_title_time_us)
}

// optional .sync_pb.ReadingListSpecifics.ReadingListEntryStatus status = 6;
bool ReadingListSpecifics::has_status() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
void ReadingListSpecifics::set_has_status()
{
    _has_bits_[0] |= 0x00000080u;
}
void ReadingListSpecifics::clear_has_status()
{
    _has_bits_[0] &= ~0x00000080u;
}
void ReadingListSpecifics::clear_status()
{
    status_ = 0;
    clear_has_status();
}
::sync_pb::ReadingListSpecifics_ReadingListEntryStatus ReadingListSpecifics::status() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ReadingListSpecifics.status)
    return static_cast<::sync_pb::ReadingListSpecifics_ReadingListEntryStatus>(status_);
}
void ReadingListSpecifics::set_status(::sync_pb::ReadingListSpecifics_ReadingListEntryStatus value)
{
    assert(::sync_pb::ReadingListSpecifics_ReadingListEntryStatus_IsValid(value));
    set_has_status();
    status_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.ReadingListSpecifics.status)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace sync_pb

// @@protoc_insertion_point(global_scope)
