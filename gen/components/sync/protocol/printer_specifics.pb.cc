// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: printer_specifics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "printer_specifics.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {

void protobuf_ShutdownFile_printer_5fspecifics_2eproto()
{
    delete PrinterPPDReference::default_instance_;
    delete PrinterSpecifics::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_printer_5fspecifics_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_printer_5fspecifics_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    PrinterPPDReference::default_instance_ = new PrinterPPDReference();
    PrinterSpecifics::default_instance_ = new PrinterSpecifics();
    PrinterPPDReference::default_instance_->InitAsDefaultInstance();
    PrinterSpecifics::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_printer_5fspecifics_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_printer_5fspecifics_2eproto_once_);
void protobuf_AddDesc_printer_5fspecifics_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_printer_5fspecifics_2eproto_once_,
        &protobuf_AddDesc_printer_5fspecifics_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_printer_5fspecifics_2eproto {
    StaticDescriptorInitializer_printer_5fspecifics_2eproto()
    {
        protobuf_AddDesc_printer_5fspecifics_2eproto();
    }
} static_descriptor_initializer_printer_5fspecifics_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForPrinterPPDReference(
    PrinterPPDReference* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrinterPPDReference::kUserSuppliedPpdUrlFieldNumber;
const int PrinterPPDReference::kEffectiveManufacturerFieldNumber;
const int PrinterPPDReference::kEffectiveModelFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

PrinterPPDReference::PrinterPPDReference()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.PrinterPPDReference)
}

void PrinterPPDReference::InitAsDefaultInstance()
{
}

PrinterPPDReference::PrinterPPDReference(const PrinterPPDReference& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.PrinterPPDReference)
}

void PrinterPPDReference::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    user_supplied_ppd_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    effective_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    effective_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PrinterPPDReference::~PrinterPPDReference()
{
    // @@protoc_insertion_point(destructor:sync_pb.PrinterPPDReference)
    SharedDtor();
}

void PrinterPPDReference::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    user_supplied_ppd_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    effective_manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    effective_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void PrinterPPDReference::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PrinterPPDReference& PrinterPPDReference::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_printer_5fspecifics_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_printer_5fspecifics_2eproto();
#endif
    return *default_instance_;
}

PrinterPPDReference* PrinterPPDReference::default_instance_ = NULL;

PrinterPPDReference* PrinterPPDReference::New(::google::protobuf::Arena* arena) const
{
    PrinterPPDReference* n = new PrinterPPDReference;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void PrinterPPDReference::Clear()
{
    // @@protoc_insertion_point(message_clear_start:sync_pb.PrinterPPDReference)
    if (_has_bits_[0 / 32] & 7u) {
        if (has_user_supplied_ppd_url()) {
            user_supplied_ppd_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_effective_manufacturer()) {
            effective_manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_effective_model()) {
            effective_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PrinterPPDReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForPrinterPPDReference, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.PrinterPPDReference)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional string user_supplied_ppd_url = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_user_supplied_ppd_url()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_effective_manufacturer;
            break;
        }

        // optional string effective_manufacturer = 2;
        case 2: {
            if (tag == 18) {
            parse_effective_manufacturer:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_effective_manufacturer()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(26))
                goto parse_effective_model;
            break;
        }

        // optional string effective_model = 3;
        case 3: {
            if (tag == 26) {
            parse_effective_model:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_effective_model()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.PrinterPPDReference)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.PrinterPPDReference)
    return false;
#undef DO_
}

void PrinterPPDReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.PrinterPPDReference)
    // optional string user_supplied_ppd_url = 1;
    if (has_user_supplied_ppd_url()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->user_supplied_ppd_url(), output);
    }

    // optional string effective_manufacturer = 2;
    if (has_effective_manufacturer()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            2, this->effective_manufacturer(), output);
    }

    // optional string effective_model = 3;
    if (has_effective_model()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            3, this->effective_model(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.PrinterPPDReference)
}

int PrinterPPDReference::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.PrinterPPDReference)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 7u) {
        // optional string user_supplied_ppd_url = 1;
        if (has_user_supplied_ppd_url()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->user_supplied_ppd_url());
        }

        // optional string effective_manufacturer = 2;
        if (has_effective_manufacturer()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->effective_manufacturer());
        }

        // optional string effective_model = 3;
        if (has_effective_model()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->effective_model());
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void PrinterPPDReference::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const PrinterPPDReference*>(&from));
}

void PrinterPPDReference::MergeFrom(const PrinterPPDReference& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.PrinterPPDReference)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_user_supplied_ppd_url()) {
            set_has_user_supplied_ppd_url();
            user_supplied_ppd_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_supplied_ppd_url_);
        }
        if (from.has_effective_manufacturer()) {
            set_has_effective_manufacturer();
            effective_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.effective_manufacturer_);
        }
        if (from.has_effective_model()) {
            set_has_effective_model();
            effective_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.effective_model_);
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void PrinterPPDReference::CopyFrom(const PrinterPPDReference& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.PrinterPPDReference)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool PrinterPPDReference::IsInitialized() const
{

    return true;
}

void PrinterPPDReference::Swap(PrinterPPDReference* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void PrinterPPDReference::InternalSwap(PrinterPPDReference* other)
{
    user_supplied_ppd_url_.Swap(&other->user_supplied_ppd_url_);
    effective_manufacturer_.Swap(&other->effective_manufacturer_);
    effective_model_.Swap(&other->effective_model_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string PrinterPPDReference::GetTypeName() const
{
    return "sync_pb.PrinterPPDReference";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrinterPPDReference

// optional string user_supplied_ppd_url = 1;
bool PrinterPPDReference::has_user_supplied_ppd_url() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void PrinterPPDReference::set_has_user_supplied_ppd_url()
{
    _has_bits_[0] |= 0x00000001u;
}
void PrinterPPDReference::clear_has_user_supplied_ppd_url()
{
    _has_bits_[0] &= ~0x00000001u;
}
void PrinterPPDReference::clear_user_supplied_ppd_url()
{
    user_supplied_ppd_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_user_supplied_ppd_url();
}
const ::std::string& PrinterPPDReference::user_supplied_ppd_url() const
{
    // @@protoc_insertion_point(field_get:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
    return user_supplied_ppd_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterPPDReference::set_user_supplied_ppd_url(const ::std::string& value)
{
    set_has_user_supplied_ppd_url();
    user_supplied_ppd_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
}
void PrinterPPDReference::set_user_supplied_ppd_url(const char* value)
{
    set_has_user_supplied_ppd_url();
    user_supplied_ppd_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
}
void PrinterPPDReference::set_user_supplied_ppd_url(const char* value, size_t size)
{
    set_has_user_supplied_ppd_url();
    user_supplied_ppd_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
}
::std::string* PrinterPPDReference::mutable_user_supplied_ppd_url()
{
    set_has_user_supplied_ppd_url();
    // @@protoc_insertion_point(field_mutable:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
    return user_supplied_ppd_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterPPDReference::release_user_supplied_ppd_url()
{
    // @@protoc_insertion_point(field_release:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
    clear_has_user_supplied_ppd_url();
    return user_supplied_ppd_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterPPDReference::set_allocated_user_supplied_ppd_url(::std::string* user_supplied_ppd_url)
{
    if (user_supplied_ppd_url != NULL) {
        set_has_user_supplied_ppd_url();
    } else {
        clear_has_user_supplied_ppd_url();
    }
    user_supplied_ppd_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_supplied_ppd_url);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterPPDReference.user_supplied_ppd_url)
}

// optional string effective_manufacturer = 2;
bool PrinterPPDReference::has_effective_manufacturer() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void PrinterPPDReference::set_has_effective_manufacturer()
{
    _has_bits_[0] |= 0x00000002u;
}
void PrinterPPDReference::clear_has_effective_manufacturer()
{
    _has_bits_[0] &= ~0x00000002u;
}
void PrinterPPDReference::clear_effective_manufacturer()
{
    effective_manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_effective_manufacturer();
}
const ::std::string& PrinterPPDReference::effective_manufacturer() const
{
    // @@protoc_insertion_point(field_get:sync_pb.PrinterPPDReference.effective_manufacturer)
    return effective_manufacturer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterPPDReference::set_effective_manufacturer(const ::std::string& value)
{
    set_has_effective_manufacturer();
    effective_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.PrinterPPDReference.effective_manufacturer)
}
void PrinterPPDReference::set_effective_manufacturer(const char* value)
{
    set_has_effective_manufacturer();
    effective_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.PrinterPPDReference.effective_manufacturer)
}
void PrinterPPDReference::set_effective_manufacturer(const char* value, size_t size)
{
    set_has_effective_manufacturer();
    effective_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterPPDReference.effective_manufacturer)
}
::std::string* PrinterPPDReference::mutable_effective_manufacturer()
{
    set_has_effective_manufacturer();
    // @@protoc_insertion_point(field_mutable:sync_pb.PrinterPPDReference.effective_manufacturer)
    return effective_manufacturer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterPPDReference::release_effective_manufacturer()
{
    // @@protoc_insertion_point(field_release:sync_pb.PrinterPPDReference.effective_manufacturer)
    clear_has_effective_manufacturer();
    return effective_manufacturer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterPPDReference::set_allocated_effective_manufacturer(::std::string* effective_manufacturer)
{
    if (effective_manufacturer != NULL) {
        set_has_effective_manufacturer();
    } else {
        clear_has_effective_manufacturer();
    }
    effective_manufacturer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effective_manufacturer);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterPPDReference.effective_manufacturer)
}

// optional string effective_model = 3;
bool PrinterPPDReference::has_effective_model() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void PrinterPPDReference::set_has_effective_model()
{
    _has_bits_[0] |= 0x00000004u;
}
void PrinterPPDReference::clear_has_effective_model()
{
    _has_bits_[0] &= ~0x00000004u;
}
void PrinterPPDReference::clear_effective_model()
{
    effective_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_effective_model();
}
const ::std::string& PrinterPPDReference::effective_model() const
{
    // @@protoc_insertion_point(field_get:sync_pb.PrinterPPDReference.effective_model)
    return effective_model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterPPDReference::set_effective_model(const ::std::string& value)
{
    set_has_effective_model();
    effective_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.PrinterPPDReference.effective_model)
}
void PrinterPPDReference::set_effective_model(const char* value)
{
    set_has_effective_model();
    effective_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.PrinterPPDReference.effective_model)
}
void PrinterPPDReference::set_effective_model(const char* value, size_t size)
{
    set_has_effective_model();
    effective_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterPPDReference.effective_model)
}
::std::string* PrinterPPDReference::mutable_effective_model()
{
    set_has_effective_model();
    // @@protoc_insertion_point(field_mutable:sync_pb.PrinterPPDReference.effective_model)
    return effective_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterPPDReference::release_effective_model()
{
    // @@protoc_insertion_point(field_release:sync_pb.PrinterPPDReference.effective_model)
    clear_has_effective_model();
    return effective_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterPPDReference::set_allocated_effective_model(::std::string* effective_model)
{
    if (effective_model != NULL) {
        set_has_effective_model();
    } else {
        clear_has_effective_model();
    }
    effective_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effective_model);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterPPDReference.effective_model)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForPrinterSpecifics(
    PrinterSpecifics* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrinterSpecifics::kIdFieldNumber;
const int PrinterSpecifics::kDisplayNameFieldNumber;
const int PrinterSpecifics::kDescriptionFieldNumber;
const int PrinterSpecifics::kManufacturerFieldNumber;
const int PrinterSpecifics::kModelFieldNumber;
const int PrinterSpecifics::kUriFieldNumber;
const int PrinterSpecifics::kUuidFieldNumber;
const int PrinterSpecifics::kPpdFieldNumber;
const int PrinterSpecifics::kPpdReferenceFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

PrinterSpecifics::PrinterSpecifics()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.PrinterSpecifics)
}

void PrinterSpecifics::InitAsDefaultInstance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    ppd_reference_ = const_cast<::sync_pb::PrinterPPDReference*>(
        ::sync_pb::PrinterPPDReference::internal_default_instance());
#else
    ppd_reference_ = const_cast<::sync_pb::PrinterPPDReference*>(&::sync_pb::PrinterPPDReference::default_instance());
#endif
}

PrinterSpecifics::PrinterSpecifics(const PrinterSpecifics& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.PrinterSpecifics)
}

void PrinterSpecifics::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ppd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ppd_reference_ = NULL;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PrinterSpecifics::~PrinterSpecifics()
{
    // @@protoc_insertion_point(destructor:sync_pb.PrinterSpecifics)
    SharedDtor();
}

void PrinterSpecifics::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ppd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
        delete ppd_reference_;
    }
}

void PrinterSpecifics::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PrinterSpecifics& PrinterSpecifics::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_printer_5fspecifics_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_printer_5fspecifics_2eproto();
#endif
    return *default_instance_;
}

PrinterSpecifics* PrinterSpecifics::default_instance_ = NULL;

PrinterSpecifics* PrinterSpecifics::New(::google::protobuf::Arena* arena) const
{
    PrinterSpecifics* n = new PrinterSpecifics;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void PrinterSpecifics::Clear()
{
    // @@protoc_insertion_point(message_clear_start:sync_pb.PrinterSpecifics)
    if (_has_bits_[0 / 32] & 255u) {
        if (has_id()) {
            id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_display_name()) {
            display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_description()) {
            description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_manufacturer()) {
            manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_model()) {
            model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_uri()) {
            uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_uuid()) {
            uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_ppd()) {
            ppd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }
    if (has_ppd_reference()) {
        if (ppd_reference_ != NULL)
            ppd_reference_->::sync_pb::PrinterPPDReference::Clear();
    }
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PrinterSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForPrinterSpecifics, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.PrinterSpecifics)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional string id = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_id()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_display_name;
            break;
        }

        // optional string display_name = 2;
        case 2: {
            if (tag == 18) {
            parse_display_name:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_display_name()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(26))
                goto parse_description;
            break;
        }

        // optional string description = 3;
        case 3: {
            if (tag == 26) {
            parse_description:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_description()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(34))
                goto parse_manufacturer;
            break;
        }

        // optional string manufacturer = 4;
        case 4: {
            if (tag == 34) {
            parse_manufacturer:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_manufacturer()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(42))
                goto parse_model;
            break;
        }

        // optional string model = 5;
        case 5: {
            if (tag == 42) {
            parse_model:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_model()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(50))
                goto parse_uri;
            break;
        }

        // optional string uri = 6;
        case 6: {
            if (tag == 50) {
            parse_uri:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_uri()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(58))
                goto parse_uuid;
            break;
        }

        // optional string uuid = 7;
        case 7: {
            if (tag == 58) {
            parse_uuid:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_uuid()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(66))
                goto parse_ppd;
            break;
        }

        // optional bytes ppd = 8 [deprecated = true];
        case 8: {
            if (tag == 66) {
            parse_ppd:
                DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                    input, this->mutable_ppd()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(74))
                goto parse_ppd_reference;
            break;
        }

        // optional .sync_pb.PrinterPPDReference ppd_reference = 9;
        case 9: {
            if (tag == 74) {
            parse_ppd_reference:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_ppd_reference()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.PrinterSpecifics)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.PrinterSpecifics)
    return false;
#undef DO_
}

void PrinterSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.PrinterSpecifics)
    // optional string id = 1;
    if (has_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->id(), output);
    }

    // optional string display_name = 2;
    if (has_display_name()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            2, this->display_name(), output);
    }

    // optional string description = 3;
    if (has_description()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            3, this->description(), output);
    }

    // optional string manufacturer = 4;
    if (has_manufacturer()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            4, this->manufacturer(), output);
    }

    // optional string model = 5;
    if (has_model()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            5, this->model(), output);
    }

    // optional string uri = 6;
    if (has_uri()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            6, this->uri(), output);
    }

    // optional string uuid = 7;
    if (has_uuid()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            7, this->uuid(), output);
    }

    // optional bytes ppd = 8 [deprecated = true];
    if (has_ppd()) {
        ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
            8, this->ppd(), output);
    }

    // optional .sync_pb.PrinterPPDReference ppd_reference = 9;
    if (has_ppd_reference()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            9, *this->ppd_reference_, output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.PrinterSpecifics)
}

int PrinterSpecifics::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.PrinterSpecifics)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 255u) {
        // optional string id = 1;
        if (has_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->id());
        }

        // optional string display_name = 2;
        if (has_display_name()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->display_name());
        }

        // optional string description = 3;
        if (has_description()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->description());
        }

        // optional string manufacturer = 4;
        if (has_manufacturer()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->manufacturer());
        }

        // optional string model = 5;
        if (has_model()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->model());
        }

        // optional string uri = 6;
        if (has_uri()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->uri());
        }

        // optional string uuid = 7;
        if (has_uuid()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->uuid());
        }

        // optional bytes ppd = 8 [deprecated = true];
        if (has_ppd()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(this->ppd());
        }
    }
    // optional .sync_pb.PrinterPPDReference ppd_reference = 9;
    if (has_ppd_reference()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->ppd_reference_);
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void PrinterSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const PrinterSpecifics*>(&from));
}

void PrinterSpecifics::MergeFrom(const PrinterSpecifics& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.PrinterSpecifics)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_id()) {
            set_has_id();
            id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
        }
        if (from.has_display_name()) {
            set_has_display_name();
            display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
        }
        if (from.has_description()) {
            set_has_description();
            description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
        }
        if (from.has_manufacturer()) {
            set_has_manufacturer();
            manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturer_);
        }
        if (from.has_model()) {
            set_has_model();
            model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
        }
        if (from.has_uri()) {
            set_has_uri();
            uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
        }
        if (from.has_uuid()) {
            set_has_uuid();
            uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
        }
        if (from.has_ppd()) {
            set_has_ppd();
            ppd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppd_);
        }
    }
    if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
        if (from.has_ppd_reference()) {
            mutable_ppd_reference()->::sync_pb::PrinterPPDReference::MergeFrom(from.ppd_reference());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void PrinterSpecifics::CopyFrom(const PrinterSpecifics& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.PrinterSpecifics)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool PrinterSpecifics::IsInitialized() const
{

    return true;
}

void PrinterSpecifics::Swap(PrinterSpecifics* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void PrinterSpecifics::InternalSwap(PrinterSpecifics* other)
{
    id_.Swap(&other->id_);
    display_name_.Swap(&other->display_name_);
    description_.Swap(&other->description_);
    manufacturer_.Swap(&other->manufacturer_);
    model_.Swap(&other->model_);
    uri_.Swap(&other->uri_);
    uuid_.Swap(&other->uuid_);
    ppd_.Swap(&other->ppd_);
    std::swap(ppd_reference_, other->ppd_reference_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string PrinterSpecifics::GetTypeName() const
{
    return "sync_pb.PrinterSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrinterSpecifics

// optional string id = 1;
bool PrinterSpecifics::has_id() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void PrinterSpecifics::set_has_id()
{
    _has_bits_[0] |= 0x00000001u;
}
void PrinterSpecifics::clear_has_id()
{
    _has_bits_[0] &= ~0x00000001u;
}
void PrinterSpecifics::clear_id()
{
    id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_id();
}
const ::std::string& PrinterSpecifics::id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.id)
    return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_id(const ::std::string& value)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.id)
}
void PrinterSpecifics::set_id(const char* value)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.id)
}
void PrinterSpecifics::set_id(const char* value, size_t size)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.id)
}
::std::string* PrinterSpecifics::mutable_id()
{
    set_has_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.id)
    return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.id)
    clear_has_id();
    return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_id(::std::string* id)
{
    if (id != NULL) {
        set_has_id();
    } else {
        clear_has_id();
    }
    id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.id)
}

// optional string display_name = 2;
bool PrinterSpecifics::has_display_name() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void PrinterSpecifics::set_has_display_name()
{
    _has_bits_[0] |= 0x00000002u;
}
void PrinterSpecifics::clear_has_display_name()
{
    _has_bits_[0] &= ~0x00000002u;
}
void PrinterSpecifics::clear_display_name()
{
    display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_display_name();
}
const ::std::string& PrinterSpecifics::display_name() const
{
    // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.display_name)
    return display_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_display_name(const ::std::string& value)
{
    set_has_display_name();
    display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.display_name)
}
void PrinterSpecifics::set_display_name(const char* value)
{
    set_has_display_name();
    display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.display_name)
}
void PrinterSpecifics::set_display_name(const char* value, size_t size)
{
    set_has_display_name();
    display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.display_name)
}
::std::string* PrinterSpecifics::mutable_display_name()
{
    set_has_display_name();
    // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.display_name)
    return display_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_display_name()
{
    // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.display_name)
    clear_has_display_name();
    return display_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_display_name(::std::string* display_name)
{
    if (display_name != NULL) {
        set_has_display_name();
    } else {
        clear_has_display_name();
    }
    display_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.display_name)
}

// optional string description = 3;
bool PrinterSpecifics::has_description() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void PrinterSpecifics::set_has_description()
{
    _has_bits_[0] |= 0x00000004u;
}
void PrinterSpecifics::clear_has_description()
{
    _has_bits_[0] &= ~0x00000004u;
}
void PrinterSpecifics::clear_description()
{
    description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_description();
}
const ::std::string& PrinterSpecifics::description() const
{
    // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.description)
    return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_description(const ::std::string& value)
{
    set_has_description();
    description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.description)
}
void PrinterSpecifics::set_description(const char* value)
{
    set_has_description();
    description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.description)
}
void PrinterSpecifics::set_description(const char* value, size_t size)
{
    set_has_description();
    description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.description)
}
::std::string* PrinterSpecifics::mutable_description()
{
    set_has_description();
    // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.description)
    return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_description()
{
    // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.description)
    clear_has_description();
    return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_description(::std::string* description)
{
    if (description != NULL) {
        set_has_description();
    } else {
        clear_has_description();
    }
    description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.description)
}

// optional string manufacturer = 4;
bool PrinterSpecifics::has_manufacturer() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void PrinterSpecifics::set_has_manufacturer()
{
    _has_bits_[0] |= 0x00000008u;
}
void PrinterSpecifics::clear_has_manufacturer()
{
    _has_bits_[0] &= ~0x00000008u;
}
void PrinterSpecifics::clear_manufacturer()
{
    manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_manufacturer();
}
const ::std::string& PrinterSpecifics::manufacturer() const
{
    // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.manufacturer)
    return manufacturer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_manufacturer(const ::std::string& value)
{
    set_has_manufacturer();
    manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.manufacturer)
}
void PrinterSpecifics::set_manufacturer(const char* value)
{
    set_has_manufacturer();
    manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.manufacturer)
}
void PrinterSpecifics::set_manufacturer(const char* value, size_t size)
{
    set_has_manufacturer();
    manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.manufacturer)
}
::std::string* PrinterSpecifics::mutable_manufacturer()
{
    set_has_manufacturer();
    // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.manufacturer)
    return manufacturer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_manufacturer()
{
    // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.manufacturer)
    clear_has_manufacturer();
    return manufacturer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_manufacturer(::std::string* manufacturer)
{
    if (manufacturer != NULL) {
        set_has_manufacturer();
    } else {
        clear_has_manufacturer();
    }
    manufacturer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), manufacturer);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.manufacturer)
}

// optional string model = 5;
bool PrinterSpecifics::has_model() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void PrinterSpecifics::set_has_model()
{
    _has_bits_[0] |= 0x00000010u;
}
void PrinterSpecifics::clear_has_model()
{
    _has_bits_[0] &= ~0x00000010u;
}
void PrinterSpecifics::clear_model()
{
    model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_model();
}
const ::std::string& PrinterSpecifics::model() const
{
    // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.model)
    return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_model(const ::std::string& value)
{
    set_has_model();
    model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.model)
}
void PrinterSpecifics::set_model(const char* value)
{
    set_has_model();
    model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.model)
}
void PrinterSpecifics::set_model(const char* value, size_t size)
{
    set_has_model();
    model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.model)
}
::std::string* PrinterSpecifics::mutable_model()
{
    set_has_model();
    // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.model)
    return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_model()
{
    // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.model)
    clear_has_model();
    return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_model(::std::string* model)
{
    if (model != NULL) {
        set_has_model();
    } else {
        clear_has_model();
    }
    model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.model)
}

// optional string uri = 6;
bool PrinterSpecifics::has_uri() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
void PrinterSpecifics::set_has_uri()
{
    _has_bits_[0] |= 0x00000020u;
}
void PrinterSpecifics::clear_has_uri()
{
    _has_bits_[0] &= ~0x00000020u;
}
void PrinterSpecifics::clear_uri()
{
    uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_uri();
}
const ::std::string& PrinterSpecifics::uri() const
{
    // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.uri)
    return uri_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_uri(const ::std::string& value)
{
    set_has_uri();
    uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.uri)
}
void PrinterSpecifics::set_uri(const char* value)
{
    set_has_uri();
    uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.uri)
}
void PrinterSpecifics::set_uri(const char* value, size_t size)
{
    set_has_uri();
    uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.uri)
}
::std::string* PrinterSpecifics::mutable_uri()
{
    set_has_uri();
    // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.uri)
    return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_uri()
{
    // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.uri)
    clear_has_uri();
    return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_uri(::std::string* uri)
{
    if (uri != NULL) {
        set_has_uri();
    } else {
        clear_has_uri();
    }
    uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.uri)
}

// optional string uuid = 7;
bool PrinterSpecifics::has_uuid() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
void PrinterSpecifics::set_has_uuid()
{
    _has_bits_[0] |= 0x00000040u;
}
void PrinterSpecifics::clear_has_uuid()
{
    _has_bits_[0] &= ~0x00000040u;
}
void PrinterSpecifics::clear_uuid()
{
    uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_uuid();
}
const ::std::string& PrinterSpecifics::uuid() const
{
    // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.uuid)
    return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_uuid(const ::std::string& value)
{
    set_has_uuid();
    uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.uuid)
}
void PrinterSpecifics::set_uuid(const char* value)
{
    set_has_uuid();
    uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.uuid)
}
void PrinterSpecifics::set_uuid(const char* value, size_t size)
{
    set_has_uuid();
    uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.uuid)
}
::std::string* PrinterSpecifics::mutable_uuid()
{
    set_has_uuid();
    // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.uuid)
    return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_uuid()
{
    // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.uuid)
    clear_has_uuid();
    return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_uuid(::std::string* uuid)
{
    if (uuid != NULL) {
        set_has_uuid();
    } else {
        clear_has_uuid();
    }
    uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.uuid)
}

// optional bytes ppd = 8 [deprecated = true];
bool PrinterSpecifics::has_ppd() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
void PrinterSpecifics::set_has_ppd()
{
    _has_bits_[0] |= 0x00000080u;
}
void PrinterSpecifics::clear_has_ppd()
{
    _has_bits_[0] &= ~0x00000080u;
}
void PrinterSpecifics::clear_ppd()
{
    ppd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_ppd();
}
const ::std::string& PrinterSpecifics::ppd() const
{
    // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.ppd)
    return ppd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_ppd(const ::std::string& value)
{
    set_has_ppd();
    ppd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.PrinterSpecifics.ppd)
}
void PrinterSpecifics::set_ppd(const char* value)
{
    set_has_ppd();
    ppd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.PrinterSpecifics.ppd)
}
void PrinterSpecifics::set_ppd(const void* value, size_t size)
{
    set_has_ppd();
    ppd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.PrinterSpecifics.ppd)
}
::std::string* PrinterSpecifics::mutable_ppd()
{
    set_has_ppd();
    // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.ppd)
    return ppd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrinterSpecifics::release_ppd()
{
    // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.ppd)
    clear_has_ppd();
    return ppd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrinterSpecifics::set_allocated_ppd(::std::string* ppd)
{
    if (ppd != NULL) {
        set_has_ppd();
    } else {
        clear_has_ppd();
    }
    ppd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ppd);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.ppd)
}

// optional .sync_pb.PrinterPPDReference ppd_reference = 9;
bool PrinterSpecifics::has_ppd_reference() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
void PrinterSpecifics::set_has_ppd_reference()
{
    _has_bits_[0] |= 0x00000100u;
}
void PrinterSpecifics::clear_has_ppd_reference()
{
    _has_bits_[0] &= ~0x00000100u;
}
void PrinterSpecifics::clear_ppd_reference()
{
    if (ppd_reference_ != NULL)
        ppd_reference_->::sync_pb::PrinterPPDReference::Clear();
    clear_has_ppd_reference();
}
const ::sync_pb::PrinterPPDReference& PrinterSpecifics::ppd_reference() const
{
    // @@protoc_insertion_point(field_get:sync_pb.PrinterSpecifics.ppd_reference)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return ppd_reference_ != NULL ? *ppd_reference_ : *default_instance().ppd_reference_;
#else
    return ppd_reference_ != NULL ? *ppd_reference_ : *default_instance_->ppd_reference_;
#endif
}
::sync_pb::PrinterPPDReference* PrinterSpecifics::mutable_ppd_reference()
{
    set_has_ppd_reference();
    if (ppd_reference_ == NULL) {
        ppd_reference_ = new ::sync_pb::PrinterPPDReference;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.PrinterSpecifics.ppd_reference)
    return ppd_reference_;
}
::sync_pb::PrinterPPDReference* PrinterSpecifics::release_ppd_reference()
{
    // @@protoc_insertion_point(field_release:sync_pb.PrinterSpecifics.ppd_reference)
    clear_has_ppd_reference();
    ::sync_pb::PrinterPPDReference* temp = ppd_reference_;
    ppd_reference_ = NULL;
    return temp;
}
void PrinterSpecifics::set_allocated_ppd_reference(::sync_pb::PrinterPPDReference* ppd_reference)
{
    delete ppd_reference_;
    ppd_reference_ = ppd_reference;
    if (ppd_reference) {
        set_has_ppd_reference();
    } else {
        clear_has_ppd_reference();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.PrinterSpecifics.ppd_reference)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace sync_pb

// @@protoc_insertion_point(global_scope)
