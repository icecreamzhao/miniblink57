// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: unique_position.proto

#ifndef PROTOBUF_unique_5fposition_2eproto__INCLUDED
#define PROTOBUF_unique_5fposition_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_unique_5fposition_2eproto();
void protobuf_AssignDesc_unique_5fposition_2eproto();
void protobuf_ShutdownFile_unique_5fposition_2eproto();

class UniquePosition;

// ===================================================================

class UniquePosition : public ::google::protobuf::MessageLite {
public:
    UniquePosition();
    virtual ~UniquePosition();

    UniquePosition(const UniquePosition& from);

    inline UniquePosition& operator=(const UniquePosition& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const UniquePosition& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const UniquePosition* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(UniquePosition* other);

    // implements Message ----------------------------------------------

    inline UniquePosition* New() const { return New(NULL); }

    UniquePosition* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const UniquePosition& from);
    void MergeFrom(const UniquePosition& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(UniquePosition* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional bytes value = 1;
    bool has_value() const;
    void clear_value();
    static const int kValueFieldNumber = 1;
    const ::std::string& value() const;
    void set_value(const ::std::string& value);
    void set_value(const char* value);
    void set_value(const void* value, size_t size);
    ::std::string* mutable_value();
    ::std::string* release_value();
    void set_allocated_value(::std::string* value);

    // optional bytes compressed_value = 2;
    bool has_compressed_value() const;
    void clear_compressed_value();
    static const int kCompressedValueFieldNumber = 2;
    const ::std::string& compressed_value() const;
    void set_compressed_value(const ::std::string& value);
    void set_compressed_value(const char* value);
    void set_compressed_value(const void* value, size_t size);
    ::std::string* mutable_compressed_value();
    ::std::string* release_compressed_value();
    void set_allocated_compressed_value(::std::string* compressed_value);

    // optional uint64 uncompressed_length = 3;
    bool has_uncompressed_length() const;
    void clear_uncompressed_length();
    static const int kUncompressedLengthFieldNumber = 3;
    ::google::protobuf::uint64 uncompressed_length() const;
    void set_uncompressed_length(::google::protobuf::uint64 value);

    // optional bytes custom_compressed_v1 = 4;
    bool has_custom_compressed_v1() const;
    void clear_custom_compressed_v1();
    static const int kCustomCompressedV1FieldNumber = 4;
    const ::std::string& custom_compressed_v1() const;
    void set_custom_compressed_v1(const ::std::string& value);
    void set_custom_compressed_v1(const char* value);
    void set_custom_compressed_v1(const void* value, size_t size);
    ::std::string* mutable_custom_compressed_v1();
    ::std::string* release_custom_compressed_v1();
    void set_allocated_custom_compressed_v1(::std::string* custom_compressed_v1);

    // @@protoc_insertion_point(class_scope:sync_pb.UniquePosition)
private:
    inline void set_has_value();
    inline void clear_has_value();
    inline void set_has_compressed_value();
    inline void clear_has_compressed_value();
    inline void set_has_uncompressed_length();
    inline void clear_has_uncompressed_length();
    inline void set_has_custom_compressed_v1();
    inline void clear_has_custom_compressed_v1();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::google::protobuf::internal::ArenaStringPtr compressed_value_;
    ::google::protobuf::uint64 uncompressed_length_;
    ::google::protobuf::internal::ArenaStringPtr custom_compressed_v1_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_unique_5fposition_2eproto_impl();
#else
    friend void protobuf_AddDesc_unique_5fposition_2eproto();
#endif
    friend void protobuf_AssignDesc_unique_5fposition_2eproto();
    friend void protobuf_ShutdownFile_unique_5fposition_2eproto();

    void InitAsDefaultInstance();
    static UniquePosition* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UniquePosition

// optional bytes value = 1;
inline bool UniquePosition::has_value() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UniquePosition::set_has_value()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void UniquePosition::clear_has_value()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void UniquePosition::clear_value()
{
    value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
}
inline const ::std::string& UniquePosition::value() const
{
    // @@protoc_insertion_point(field_get:sync_pb.UniquePosition.value)
    return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UniquePosition::set_value(const ::std::string& value)
{
    set_has_value();
    value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.UniquePosition.value)
}
inline void UniquePosition::set_value(const char* value)
{
    set_has_value();
    value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.UniquePosition.value)
}
inline void UniquePosition::set_value(const void* value, size_t size)
{
    set_has_value();
    value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.UniquePosition.value)
}
inline ::std::string* UniquePosition::mutable_value()
{
    set_has_value();
    // @@protoc_insertion_point(field_mutable:sync_pb.UniquePosition.value)
    return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UniquePosition::release_value()
{
    // @@protoc_insertion_point(field_release:sync_pb.UniquePosition.value)
    clear_has_value();
    return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UniquePosition::set_allocated_value(::std::string* value)
{
    if (value != NULL) {
        set_has_value();
    } else {
        clear_has_value();
    }
    value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.UniquePosition.value)
}

// optional bytes compressed_value = 2;
inline bool UniquePosition::has_compressed_value() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UniquePosition::set_has_compressed_value()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void UniquePosition::clear_has_compressed_value()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void UniquePosition::clear_compressed_value()
{
    compressed_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_compressed_value();
}
inline const ::std::string& UniquePosition::compressed_value() const
{
    // @@protoc_insertion_point(field_get:sync_pb.UniquePosition.compressed_value)
    return compressed_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UniquePosition::set_compressed_value(const ::std::string& value)
{
    set_has_compressed_value();
    compressed_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.UniquePosition.compressed_value)
}
inline void UniquePosition::set_compressed_value(const char* value)
{
    set_has_compressed_value();
    compressed_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.UniquePosition.compressed_value)
}
inline void UniquePosition::set_compressed_value(const void* value, size_t size)
{
    set_has_compressed_value();
    compressed_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.UniquePosition.compressed_value)
}
inline ::std::string* UniquePosition::mutable_compressed_value()
{
    set_has_compressed_value();
    // @@protoc_insertion_point(field_mutable:sync_pb.UniquePosition.compressed_value)
    return compressed_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UniquePosition::release_compressed_value()
{
    // @@protoc_insertion_point(field_release:sync_pb.UniquePosition.compressed_value)
    clear_has_compressed_value();
    return compressed_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UniquePosition::set_allocated_compressed_value(::std::string* compressed_value)
{
    if (compressed_value != NULL) {
        set_has_compressed_value();
    } else {
        clear_has_compressed_value();
    }
    compressed_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), compressed_value);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.UniquePosition.compressed_value)
}

// optional uint64 uncompressed_length = 3;
inline bool UniquePosition::has_uncompressed_length() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UniquePosition::set_has_uncompressed_length()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void UniquePosition::clear_has_uncompressed_length()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void UniquePosition::clear_uncompressed_length()
{
    uncompressed_length_ = GOOGLE_ULONGLONG(0);
    clear_has_uncompressed_length();
}
inline ::google::protobuf::uint64 UniquePosition::uncompressed_length() const
{
    // @@protoc_insertion_point(field_get:sync_pb.UniquePosition.uncompressed_length)
    return uncompressed_length_;
}
inline void UniquePosition::set_uncompressed_length(::google::protobuf::uint64 value)
{
    set_has_uncompressed_length();
    uncompressed_length_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.UniquePosition.uncompressed_length)
}

// optional bytes custom_compressed_v1 = 4;
inline bool UniquePosition::has_custom_compressed_v1() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UniquePosition::set_has_custom_compressed_v1()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void UniquePosition::clear_has_custom_compressed_v1()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void UniquePosition::clear_custom_compressed_v1()
{
    custom_compressed_v1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_custom_compressed_v1();
}
inline const ::std::string& UniquePosition::custom_compressed_v1() const
{
    // @@protoc_insertion_point(field_get:sync_pb.UniquePosition.custom_compressed_v1)
    return custom_compressed_v1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UniquePosition::set_custom_compressed_v1(const ::std::string& value)
{
    set_has_custom_compressed_v1();
    custom_compressed_v1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.UniquePosition.custom_compressed_v1)
}
inline void UniquePosition::set_custom_compressed_v1(const char* value)
{
    set_has_custom_compressed_v1();
    custom_compressed_v1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.UniquePosition.custom_compressed_v1)
}
inline void UniquePosition::set_custom_compressed_v1(const void* value, size_t size)
{
    set_has_custom_compressed_v1();
    custom_compressed_v1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.UniquePosition.custom_compressed_v1)
}
inline ::std::string* UniquePosition::mutable_custom_compressed_v1()
{
    set_has_custom_compressed_v1();
    // @@protoc_insertion_point(field_mutable:sync_pb.UniquePosition.custom_compressed_v1)
    return custom_compressed_v1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UniquePosition::release_custom_compressed_v1()
{
    // @@protoc_insertion_point(field_release:sync_pb.UniquePosition.custom_compressed_v1)
    clear_has_custom_compressed_v1();
    return custom_compressed_v1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UniquePosition::set_allocated_custom_compressed_v1(::std::string* custom_compressed_v1)
{
    if (custom_compressed_v1 != NULL) {
        set_has_custom_compressed_v1();
    } else {
        clear_has_custom_compressed_v1();
    }
    custom_compressed_v1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), custom_compressed_v1);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.UniquePosition.custom_compressed_v1)
}

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_unique_5fposition_2eproto__INCLUDED
