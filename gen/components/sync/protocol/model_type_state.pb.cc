// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model_type_state.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "model_type_state.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {

void protobuf_ShutdownFile_model_5ftype_5fstate_2eproto()
{
    delete ModelTypeState::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_model_5ftype_5fstate_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_model_5ftype_5fstate_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    ::sync_pb::protobuf_AddDesc_sync_2eproto();
    ModelTypeState::default_instance_ = new ModelTypeState();
    ModelTypeState::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_model_5ftype_5fstate_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_model_5ftype_5fstate_2eproto_once_);
void protobuf_AddDesc_model_5ftype_5fstate_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_model_5ftype_5fstate_2eproto_once_,
        &protobuf_AddDesc_model_5ftype_5fstate_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_model_5ftype_5fstate_2eproto {
    StaticDescriptorInitializer_model_5ftype_5fstate_2eproto()
    {
        protobuf_AddDesc_model_5ftype_5fstate_2eproto();
    }
} static_descriptor_initializer_model_5ftype_5fstate_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForModelTypeState(
    ModelTypeState* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelTypeState::kProgressMarkerFieldNumber;
const int ModelTypeState::kTypeContextFieldNumber;
const int ModelTypeState::kEncryptionKeyNameFieldNumber;
const int ModelTypeState::kInitialSyncDoneFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelTypeState::ModelTypeState()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.ModelTypeState)
}

void ModelTypeState::InitAsDefaultInstance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    progress_marker_ = const_cast<::sync_pb::DataTypeProgressMarker*>(
        ::sync_pb::DataTypeProgressMarker::internal_default_instance());
#else
    progress_marker_ = const_cast<::sync_pb::DataTypeProgressMarker*>(&::sync_pb::DataTypeProgressMarker::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    type_context_ = const_cast<::sync_pb::DataTypeContext*>(
        ::sync_pb::DataTypeContext::internal_default_instance());
#else
    type_context_ = const_cast<::sync_pb::DataTypeContext*>(&::sync_pb::DataTypeContext::default_instance());
#endif
}

ModelTypeState::ModelTypeState(const ModelTypeState& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.ModelTypeState)
}

void ModelTypeState::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    progress_marker_ = NULL;
    type_context_ = NULL;
    encryption_key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    initial_sync_done_ = false;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ModelTypeState::~ModelTypeState()
{
    // @@protoc_insertion_point(destructor:sync_pb.ModelTypeState)
    SharedDtor();
}

void ModelTypeState::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    encryption_key_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
        delete progress_marker_;
        delete type_context_;
    }
}

void ModelTypeState::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ModelTypeState& ModelTypeState::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_model_5ftype_5fstate_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_model_5ftype_5fstate_2eproto();
#endif
    return *default_instance_;
}

ModelTypeState* ModelTypeState::default_instance_ = NULL;

ModelTypeState* ModelTypeState::New(::google::protobuf::Arena* arena) const
{
    ModelTypeState* n = new ModelTypeState;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void ModelTypeState::Clear()
{
    // @@protoc_insertion_point(message_clear_start:sync_pb.ModelTypeState)
    if (_has_bits_[0 / 32] & 15u) {
        if (has_progress_marker()) {
            if (progress_marker_ != NULL)
                progress_marker_->::sync_pb::DataTypeProgressMarker::Clear();
        }
        if (has_type_context()) {
            if (type_context_ != NULL)
                type_context_->::sync_pb::DataTypeContext::Clear();
        }
        if (has_encryption_key_name()) {
            encryption_key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        initial_sync_done_ = false;
    }
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ModelTypeState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForModelTypeState, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.ModelTypeState)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional .sync_pb.DataTypeProgressMarker progress_marker = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_progress_marker()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_type_context;
            break;
        }

        // optional .sync_pb.DataTypeContext type_context = 2;
        case 2: {
            if (tag == 18) {
            parse_type_context:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_type_context()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(26))
                goto parse_encryption_key_name;
            break;
        }

        // optional string encryption_key_name = 3;
        case 3: {
            if (tag == 26) {
            parse_encryption_key_name:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_encryption_key_name()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(32))
                goto parse_initial_sync_done;
            break;
        }

        // optional bool initial_sync_done = 4;
        case 4: {
            if (tag == 32) {
            parse_initial_sync_done:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                    input, &initial_sync_done_)));
                set_has_initial_sync_done();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.ModelTypeState)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.ModelTypeState)
    return false;
#undef DO_
}

void ModelTypeState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.ModelTypeState)
    // optional .sync_pb.DataTypeProgressMarker progress_marker = 1;
    if (has_progress_marker()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            1, *this->progress_marker_, output);
    }

    // optional .sync_pb.DataTypeContext type_context = 2;
    if (has_type_context()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            2, *this->type_context_, output);
    }

    // optional string encryption_key_name = 3;
    if (has_encryption_key_name()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            3, this->encryption_key_name(), output);
    }

    // optional bool initial_sync_done = 4;
    if (has_initial_sync_done()) {
        ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->initial_sync_done(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.ModelTypeState)
}

int ModelTypeState::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.ModelTypeState)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 15u) {
        // optional .sync_pb.DataTypeProgressMarker progress_marker = 1;
        if (has_progress_marker()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->progress_marker_);
        }

        // optional .sync_pb.DataTypeContext type_context = 2;
        if (has_type_context()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->type_context_);
        }

        // optional string encryption_key_name = 3;
        if (has_encryption_key_name()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->encryption_key_name());
        }

        // optional bool initial_sync_done = 4;
        if (has_initial_sync_done()) {
            total_size += 1 + 1;
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void ModelTypeState::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const ModelTypeState*>(&from));
}

void ModelTypeState::MergeFrom(const ModelTypeState& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.ModelTypeState)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_progress_marker()) {
            mutable_progress_marker()->::sync_pb::DataTypeProgressMarker::MergeFrom(from.progress_marker());
        }
        if (from.has_type_context()) {
            mutable_type_context()->::sync_pb::DataTypeContext::MergeFrom(from.type_context());
        }
        if (from.has_encryption_key_name()) {
            set_has_encryption_key_name();
            encryption_key_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encryption_key_name_);
        }
        if (from.has_initial_sync_done()) {
            set_initial_sync_done(from.initial_sync_done());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void ModelTypeState::CopyFrom(const ModelTypeState& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.ModelTypeState)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool ModelTypeState::IsInitialized() const
{

    return true;
}

void ModelTypeState::Swap(ModelTypeState* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void ModelTypeState::InternalSwap(ModelTypeState* other)
{
    std::swap(progress_marker_, other->progress_marker_);
    std::swap(type_context_, other->type_context_);
    encryption_key_name_.Swap(&other->encryption_key_name_);
    std::swap(initial_sync_done_, other->initial_sync_done_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string ModelTypeState::GetTypeName() const
{
    return "sync_pb.ModelTypeState";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModelTypeState

// optional .sync_pb.DataTypeProgressMarker progress_marker = 1;
bool ModelTypeState::has_progress_marker() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void ModelTypeState::set_has_progress_marker()
{
    _has_bits_[0] |= 0x00000001u;
}
void ModelTypeState::clear_has_progress_marker()
{
    _has_bits_[0] &= ~0x00000001u;
}
void ModelTypeState::clear_progress_marker()
{
    if (progress_marker_ != NULL)
        progress_marker_->::sync_pb::DataTypeProgressMarker::Clear();
    clear_has_progress_marker();
}
const ::sync_pb::DataTypeProgressMarker& ModelTypeState::progress_marker() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ModelTypeState.progress_marker)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return progress_marker_ != NULL ? *progress_marker_ : *default_instance().progress_marker_;
#else
    return progress_marker_ != NULL ? *progress_marker_ : *default_instance_->progress_marker_;
#endif
}
::sync_pb::DataTypeProgressMarker* ModelTypeState::mutable_progress_marker()
{
    set_has_progress_marker();
    if (progress_marker_ == NULL) {
        progress_marker_ = new ::sync_pb::DataTypeProgressMarker;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.ModelTypeState.progress_marker)
    return progress_marker_;
}
::sync_pb::DataTypeProgressMarker* ModelTypeState::release_progress_marker()
{
    // @@protoc_insertion_point(field_release:sync_pb.ModelTypeState.progress_marker)
    clear_has_progress_marker();
    ::sync_pb::DataTypeProgressMarker* temp = progress_marker_;
    progress_marker_ = NULL;
    return temp;
}
void ModelTypeState::set_allocated_progress_marker(::sync_pb::DataTypeProgressMarker* progress_marker)
{
    delete progress_marker_;
    progress_marker_ = progress_marker;
    if (progress_marker) {
        set_has_progress_marker();
    } else {
        clear_has_progress_marker();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.ModelTypeState.progress_marker)
}

// optional .sync_pb.DataTypeContext type_context = 2;
bool ModelTypeState::has_type_context() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void ModelTypeState::set_has_type_context()
{
    _has_bits_[0] |= 0x00000002u;
}
void ModelTypeState::clear_has_type_context()
{
    _has_bits_[0] &= ~0x00000002u;
}
void ModelTypeState::clear_type_context()
{
    if (type_context_ != NULL)
        type_context_->::sync_pb::DataTypeContext::Clear();
    clear_has_type_context();
}
const ::sync_pb::DataTypeContext& ModelTypeState::type_context() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ModelTypeState.type_context)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return type_context_ != NULL ? *type_context_ : *default_instance().type_context_;
#else
    return type_context_ != NULL ? *type_context_ : *default_instance_->type_context_;
#endif
}
::sync_pb::DataTypeContext* ModelTypeState::mutable_type_context()
{
    set_has_type_context();
    if (type_context_ == NULL) {
        type_context_ = new ::sync_pb::DataTypeContext;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.ModelTypeState.type_context)
    return type_context_;
}
::sync_pb::DataTypeContext* ModelTypeState::release_type_context()
{
    // @@protoc_insertion_point(field_release:sync_pb.ModelTypeState.type_context)
    clear_has_type_context();
    ::sync_pb::DataTypeContext* temp = type_context_;
    type_context_ = NULL;
    return temp;
}
void ModelTypeState::set_allocated_type_context(::sync_pb::DataTypeContext* type_context)
{
    delete type_context_;
    type_context_ = type_context;
    if (type_context) {
        set_has_type_context();
    } else {
        clear_has_type_context();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.ModelTypeState.type_context)
}

// optional string encryption_key_name = 3;
bool ModelTypeState::has_encryption_key_name() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void ModelTypeState::set_has_encryption_key_name()
{
    _has_bits_[0] |= 0x00000004u;
}
void ModelTypeState::clear_has_encryption_key_name()
{
    _has_bits_[0] &= ~0x00000004u;
}
void ModelTypeState::clear_encryption_key_name()
{
    encryption_key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_encryption_key_name();
}
const ::std::string& ModelTypeState::encryption_key_name() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ModelTypeState.encryption_key_name)
    return encryption_key_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelTypeState::set_encryption_key_name(const ::std::string& value)
{
    set_has_encryption_key_name();
    encryption_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.ModelTypeState.encryption_key_name)
}
void ModelTypeState::set_encryption_key_name(const char* value)
{
    set_has_encryption_key_name();
    encryption_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.ModelTypeState.encryption_key_name)
}
void ModelTypeState::set_encryption_key_name(const char* value, size_t size)
{
    set_has_encryption_key_name();
    encryption_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.ModelTypeState.encryption_key_name)
}
::std::string* ModelTypeState::mutable_encryption_key_name()
{
    set_has_encryption_key_name();
    // @@protoc_insertion_point(field_mutable:sync_pb.ModelTypeState.encryption_key_name)
    return encryption_key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModelTypeState::release_encryption_key_name()
{
    // @@protoc_insertion_point(field_release:sync_pb.ModelTypeState.encryption_key_name)
    clear_has_encryption_key_name();
    return encryption_key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelTypeState::set_allocated_encryption_key_name(::std::string* encryption_key_name)
{
    if (encryption_key_name != NULL) {
        set_has_encryption_key_name();
    } else {
        clear_has_encryption_key_name();
    }
    encryption_key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encryption_key_name);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.ModelTypeState.encryption_key_name)
}

// optional bool initial_sync_done = 4;
bool ModelTypeState::has_initial_sync_done() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void ModelTypeState::set_has_initial_sync_done()
{
    _has_bits_[0] |= 0x00000008u;
}
void ModelTypeState::clear_has_initial_sync_done()
{
    _has_bits_[0] &= ~0x00000008u;
}
void ModelTypeState::clear_initial_sync_done()
{
    initial_sync_done_ = false;
    clear_has_initial_sync_done();
}
bool ModelTypeState::initial_sync_done() const
{
    // @@protoc_insertion_point(field_get:sync_pb.ModelTypeState.initial_sync_done)
    return initial_sync_done_;
}
void ModelTypeState::set_initial_sync_done(bool value)
{
    set_has_initial_sync_done();
    initial_sync_done_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.ModelTypeState.initial_sync_done)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace sync_pb

// @@protoc_insertion_point(global_scope)
