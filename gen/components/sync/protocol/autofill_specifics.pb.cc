// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: autofill_specifics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "autofill_specifics.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace sync_pb {

void protobuf_ShutdownFile_autofill_5fspecifics_2eproto()
{
    delete AutofillProfileSpecifics::default_instance_;
    delete AutofillSpecifics::default_instance_;
    delete WalletMaskedCreditCard::default_instance_;
    delete WalletPostalAddress::default_instance_;
    delete AutofillWalletSpecifics::default_instance_;
    delete WalletMetadataSpecifics::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_autofill_5fspecifics_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_autofill_5fspecifics_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    AutofillProfileSpecifics::default_instance_ = new AutofillProfileSpecifics();
    AutofillSpecifics::default_instance_ = new AutofillSpecifics();
    WalletMaskedCreditCard::default_instance_ = new WalletMaskedCreditCard();
    WalletPostalAddress::default_instance_ = new WalletPostalAddress();
    AutofillWalletSpecifics::default_instance_ = new AutofillWalletSpecifics();
    WalletMetadataSpecifics::default_instance_ = new WalletMetadataSpecifics();
    AutofillProfileSpecifics::default_instance_->InitAsDefaultInstance();
    AutofillSpecifics::default_instance_->InitAsDefaultInstance();
    WalletMaskedCreditCard::default_instance_->InitAsDefaultInstance();
    WalletPostalAddress::default_instance_->InitAsDefaultInstance();
    AutofillWalletSpecifics::default_instance_->InitAsDefaultInstance();
    WalletMetadataSpecifics::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_autofill_5fspecifics_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_autofill_5fspecifics_2eproto_once_);
void protobuf_AddDesc_autofill_5fspecifics_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_autofill_5fspecifics_2eproto_once_,
        &protobuf_AddDesc_autofill_5fspecifics_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_autofill_5fspecifics_2eproto {
    StaticDescriptorInitializer_autofill_5fspecifics_2eproto()
    {
        protobuf_AddDesc_autofill_5fspecifics_2eproto();
    }
} static_descriptor_initializer_autofill_5fspecifics_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForAutofillProfileSpecifics(
    AutofillProfileSpecifics* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutofillProfileSpecifics::kGuidFieldNumber;
const int AutofillProfileSpecifics::kOriginFieldNumber;
const int AutofillProfileSpecifics::kUseCountFieldNumber;
const int AutofillProfileSpecifics::kUseDateFieldNumber;
const int AutofillProfileSpecifics::kNameFirstFieldNumber;
const int AutofillProfileSpecifics::kNameMiddleFieldNumber;
const int AutofillProfileSpecifics::kNameLastFieldNumber;
const int AutofillProfileSpecifics::kNameFullFieldNumber;
const int AutofillProfileSpecifics::kEmailAddressFieldNumber;
const int AutofillProfileSpecifics::kCompanyNameFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeLine1FieldNumber;
const int AutofillProfileSpecifics::kAddressHomeLine2FieldNumber;
const int AutofillProfileSpecifics::kAddressHomeCityFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeStateFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeZipFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeCountryFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeStreetAddressFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeSortingCodeFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeDependentLocalityFieldNumber;
const int AutofillProfileSpecifics::kAddressHomeLanguageCodeFieldNumber;
const int AutofillProfileSpecifics::kPhoneHomeWholeNumberFieldNumber;
const int AutofillProfileSpecifics::kLabelFieldNumber;
const int AutofillProfileSpecifics::kPhoneFaxWholeNumberFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

AutofillProfileSpecifics::AutofillProfileSpecifics()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.AutofillProfileSpecifics)
}

void AutofillProfileSpecifics::InitAsDefaultInstance()
{
}

AutofillProfileSpecifics::AutofillProfileSpecifics(const AutofillProfileSpecifics& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.AutofillProfileSpecifics)
}

void AutofillProfileSpecifics::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    origin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    use_count_ = GOOGLE_LONGLONG(0);
    use_date_ = GOOGLE_LONGLONG(0);
    company_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_line1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_line2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_zip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_street_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_sorting_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_dependent_locality_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    phone_fax_whole_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AutofillProfileSpecifics::~AutofillProfileSpecifics()
{
    // @@protoc_insertion_point(destructor:sync_pb.AutofillProfileSpecifics)
    SharedDtor();
}

void AutofillProfileSpecifics::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    origin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    company_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_line1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_line2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_zip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_street_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_sorting_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_dependent_locality_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_home_language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    phone_fax_whole_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void AutofillProfileSpecifics::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AutofillProfileSpecifics& AutofillProfileSpecifics::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_autofill_5fspecifics_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_autofill_5fspecifics_2eproto();
#endif
    return *default_instance_;
}

AutofillProfileSpecifics* AutofillProfileSpecifics::default_instance_ = NULL;

AutofillProfileSpecifics* AutofillProfileSpecifics::New(::google::protobuf::Arena* arena) const
{
    AutofillProfileSpecifics* n = new AutofillProfileSpecifics;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void AutofillProfileSpecifics::Clear()
{
// @@protoc_insertion_point(message_clear_start:sync_pb.AutofillProfileSpecifics)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                              \
    _Pragma("clang diagnostic push")                                                                               \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(AutofillProfileSpecifics, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<AutofillProfileSpecifics*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    if (_has_bits_[0 / 32] & 15u) {
        ZR_(use_count_, use_date_);
        if (has_guid()) {
            guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_origin()) {
            origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }
    if (_has_bits_[8 / 32] & 65024u) {
        if (has_company_name()) {
            company_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_address_home_line1()) {
            address_home_line1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_address_home_line2()) {
            address_home_line2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_address_home_city()) {
            address_home_city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_address_home_state()) {
            address_home_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_address_home_zip()) {
            address_home_zip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_address_home_country()) {
            address_home_country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }
    if (_has_bits_[16 / 32] & 7274496u) {
        if (has_address_home_street_address()) {
            address_home_street_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_address_home_sorting_code()) {
            address_home_sorting_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_address_home_dependent_locality()) {
            address_home_dependent_locality_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_address_home_language_code()) {
            address_home_language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_label()) {
            label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_phone_fax_whole_number()) {
            phone_fax_whole_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }

#undef ZR_HELPER_
#undef ZR_

    name_first_.Clear();
    name_middle_.Clear();
    name_last_.Clear();
    name_full_.Clear();
    email_address_.Clear();
    phone_home_whole_number_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AutofillProfileSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForAutofillProfileSpecifics, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.AutofillProfileSpecifics)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional string label = 1 [deprecated = true];
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_label()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_name_first;
            break;
        }

        // repeated string name_first = 2;
        case 2: {
            if (tag == 18) {
            parse_name_first:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->add_name_first()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_name_first;
            if (input->ExpectTag(26))
                goto parse_name_middle;
            break;
        }

        // repeated string name_middle = 3;
        case 3: {
            if (tag == 26) {
            parse_name_middle:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->add_name_middle()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(26))
                goto parse_name_middle;
            if (input->ExpectTag(34))
                goto parse_name_last;
            break;
        }

        // repeated string name_last = 4;
        case 4: {
            if (tag == 34) {
            parse_name_last:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->add_name_last()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(34))
                goto parse_name_last;
            if (input->ExpectTag(42))
                goto parse_email_address;
            break;
        }

        // repeated string email_address = 5;
        case 5: {
            if (tag == 42) {
            parse_email_address:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->add_email_address()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(42))
                goto parse_email_address;
            if (input->ExpectTag(50))
                goto parse_company_name;
            break;
        }

        // optional string company_name = 6;
        case 6: {
            if (tag == 50) {
            parse_company_name:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_company_name()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(58))
                goto parse_address_home_line1;
            break;
        }

        // optional string address_home_line1 = 7;
        case 7: {
            if (tag == 58) {
            parse_address_home_line1:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_address_home_line1()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(66))
                goto parse_address_home_line2;
            break;
        }

        // optional string address_home_line2 = 8;
        case 8: {
            if (tag == 66) {
            parse_address_home_line2:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_address_home_line2()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(74))
                goto parse_address_home_city;
            break;
        }

        // optional string address_home_city = 9;
        case 9: {
            if (tag == 74) {
            parse_address_home_city:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_address_home_city()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(82))
                goto parse_address_home_state;
            break;
        }

        // optional string address_home_state = 10;
        case 10: {
            if (tag == 82) {
            parse_address_home_state:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_address_home_state()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(90))
                goto parse_address_home_zip;
            break;
        }

        // optional string address_home_zip = 11;
        case 11: {
            if (tag == 90) {
            parse_address_home_zip:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_address_home_zip()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(98))
                goto parse_address_home_country;
            break;
        }

        // optional string address_home_country = 12;
        case 12: {
            if (tag == 98) {
            parse_address_home_country:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_address_home_country()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(106))
                goto parse_phone_home_whole_number;
            break;
        }

        // repeated string phone_home_whole_number = 13;
        case 13: {
            if (tag == 106) {
            parse_phone_home_whole_number:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->add_phone_home_whole_number()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(106))
                goto parse_phone_home_whole_number;
            if (input->ExpectTag(114))
                goto parse_phone_fax_whole_number;
            break;
        }

        // optional string phone_fax_whole_number = 14 [deprecated = true];
        case 14: {
            if (tag == 114) {
            parse_phone_fax_whole_number:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_phone_fax_whole_number()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(122))
                goto parse_guid;
            break;
        }

        // optional string guid = 15;
        case 15: {
            if (tag == 122) {
            parse_guid:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_guid()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(130))
                goto parse_origin;
            break;
        }

        // optional string origin = 16;
        case 16: {
            if (tag == 130) {
            parse_origin:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_origin()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(138))
                goto parse_address_home_street_address;
            break;
        }

        // optional string address_home_street_address = 17;
        case 17: {
            if (tag == 138) {
            parse_address_home_street_address:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_address_home_street_address()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(146))
                goto parse_address_home_sorting_code;
            break;
        }

        // optional string address_home_sorting_code = 18;
        case 18: {
            if (tag == 146) {
            parse_address_home_sorting_code:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_address_home_sorting_code()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(154))
                goto parse_address_home_dependent_locality;
            break;
        }

        // optional string address_home_dependent_locality = 19;
        case 19: {
            if (tag == 154) {
            parse_address_home_dependent_locality:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_address_home_dependent_locality()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(162))
                goto parse_address_home_language_code;
            break;
        }

        // optional string address_home_language_code = 20;
        case 20: {
            if (tag == 162) {
            parse_address_home_language_code:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_address_home_language_code()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(170))
                goto parse_name_full;
            break;
        }

        // repeated string name_full = 21;
        case 21: {
            if (tag == 170) {
            parse_name_full:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->add_name_full()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(170))
                goto parse_name_full;
            if (input->ExpectTag(176))
                goto parse_use_count;
            break;
        }

        // optional int64 use_count = 22;
        case 22: {
            if (tag == 176) {
            parse_use_count:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &use_count_)));
                set_has_use_count();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(184))
                goto parse_use_date;
            break;
        }

        // optional int64 use_date = 23;
        case 23: {
            if (tag == 184) {
            parse_use_date:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &use_date_)));
                set_has_use_date();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.AutofillProfileSpecifics)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.AutofillProfileSpecifics)
    return false;
#undef DO_
}

void AutofillProfileSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.AutofillProfileSpecifics)
    // optional string label = 1 [deprecated = true];
    if (has_label()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->label(), output);
    }

    // repeated string name_first = 2;
    for (int i = 0; i < this->name_first_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteString(
            2, this->name_first(i), output);
    }

    // repeated string name_middle = 3;
    for (int i = 0; i < this->name_middle_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteString(
            3, this->name_middle(i), output);
    }

    // repeated string name_last = 4;
    for (int i = 0; i < this->name_last_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteString(
            4, this->name_last(i), output);
    }

    // repeated string email_address = 5;
    for (int i = 0; i < this->email_address_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteString(
            5, this->email_address(i), output);
    }

    // optional string company_name = 6;
    if (has_company_name()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            6, this->company_name(), output);
    }

    // optional string address_home_line1 = 7;
    if (has_address_home_line1()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            7, this->address_home_line1(), output);
    }

    // optional string address_home_line2 = 8;
    if (has_address_home_line2()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            8, this->address_home_line2(), output);
    }

    // optional string address_home_city = 9;
    if (has_address_home_city()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            9, this->address_home_city(), output);
    }

    // optional string address_home_state = 10;
    if (has_address_home_state()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            10, this->address_home_state(), output);
    }

    // optional string address_home_zip = 11;
    if (has_address_home_zip()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            11, this->address_home_zip(), output);
    }

    // optional string address_home_country = 12;
    if (has_address_home_country()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            12, this->address_home_country(), output);
    }

    // repeated string phone_home_whole_number = 13;
    for (int i = 0; i < this->phone_home_whole_number_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteString(
            13, this->phone_home_whole_number(i), output);
    }

    // optional string phone_fax_whole_number = 14 [deprecated = true];
    if (has_phone_fax_whole_number()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            14, this->phone_fax_whole_number(), output);
    }

    // optional string guid = 15;
    if (has_guid()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            15, this->guid(), output);
    }

    // optional string origin = 16;
    if (has_origin()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            16, this->origin(), output);
    }

    // optional string address_home_street_address = 17;
    if (has_address_home_street_address()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            17, this->address_home_street_address(), output);
    }

    // optional string address_home_sorting_code = 18;
    if (has_address_home_sorting_code()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            18, this->address_home_sorting_code(), output);
    }

    // optional string address_home_dependent_locality = 19;
    if (has_address_home_dependent_locality()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            19, this->address_home_dependent_locality(), output);
    }

    // optional string address_home_language_code = 20;
    if (has_address_home_language_code()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            20, this->address_home_language_code(), output);
    }

    // repeated string name_full = 21;
    for (int i = 0; i < this->name_full_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteString(
            21, this->name_full(i), output);
    }

    // optional int64 use_count = 22;
    if (has_use_count()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->use_count(), output);
    }

    // optional int64 use_date = 23;
    if (has_use_date()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(23, this->use_date(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.AutofillProfileSpecifics)
}

int AutofillProfileSpecifics::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.AutofillProfileSpecifics)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 15u) {
        // optional string guid = 15;
        if (has_guid()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->guid());
        }

        // optional string origin = 16;
        if (has_origin()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(this->origin());
        }

        // optional int64 use_count = 22;
        if (has_use_count()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->use_count());
        }

        // optional int64 use_date = 23;
        if (has_use_date()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->use_date());
        }
    }
    if (_has_bits_[9 / 32] & 65024u) {
        // optional string company_name = 6;
        if (has_company_name()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->company_name());
        }

        // optional string address_home_line1 = 7;
        if (has_address_home_line1()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->address_home_line1());
        }

        // optional string address_home_line2 = 8;
        if (has_address_home_line2()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->address_home_line2());
        }

        // optional string address_home_city = 9;
        if (has_address_home_city()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->address_home_city());
        }

        // optional string address_home_state = 10;
        if (has_address_home_state()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->address_home_state());
        }

        // optional string address_home_zip = 11;
        if (has_address_home_zip()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->address_home_zip());
        }

        // optional string address_home_country = 12;
        if (has_address_home_country()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->address_home_country());
        }
    }
    if (_has_bits_[16 / 32] & 7274496u) {
        // optional string address_home_street_address = 17;
        if (has_address_home_street_address()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(this->address_home_street_address());
        }

        // optional string address_home_sorting_code = 18;
        if (has_address_home_sorting_code()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(this->address_home_sorting_code());
        }

        // optional string address_home_dependent_locality = 19;
        if (has_address_home_dependent_locality()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(this->address_home_dependent_locality());
        }

        // optional string address_home_language_code = 20;
        if (has_address_home_language_code()) {
            total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(this->address_home_language_code());
        }

        // optional string label = 1 [deprecated = true];
        if (has_label()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->label());
        }

        // optional string phone_fax_whole_number = 14 [deprecated = true];
        if (has_phone_fax_whole_number()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->phone_fax_whole_number());
        }
    }
    // repeated string name_first = 2;
    total_size += 1 * this->name_first_size();
    for (int i = 0; i < this->name_first_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this->name_first(i));
    }

    // repeated string name_middle = 3;
    total_size += 1 * this->name_middle_size();
    for (int i = 0; i < this->name_middle_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this->name_middle(i));
    }

    // repeated string name_last = 4;
    total_size += 1 * this->name_last_size();
    for (int i = 0; i < this->name_last_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this->name_last(i));
    }

    // repeated string name_full = 21;
    total_size += 2 * this->name_full_size();
    for (int i = 0; i < this->name_full_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this->name_full(i));
    }

    // repeated string email_address = 5;
    total_size += 1 * this->email_address_size();
    for (int i = 0; i < this->email_address_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this->email_address(i));
    }

    // repeated string phone_home_whole_number = 13;
    total_size += 1 * this->phone_home_whole_number_size();
    for (int i = 0; i < this->phone_home_whole_number_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this->phone_home_whole_number(i));
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void AutofillProfileSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const AutofillProfileSpecifics*>(&from));
}

void AutofillProfileSpecifics::MergeFrom(const AutofillProfileSpecifics& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.AutofillProfileSpecifics)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    name_first_.MergeFrom(from.name_first_);
    name_middle_.MergeFrom(from.name_middle_);
    name_last_.MergeFrom(from.name_last_);
    name_full_.MergeFrom(from.name_full_);
    email_address_.MergeFrom(from.email_address_);
    phone_home_whole_number_.MergeFrom(from.phone_home_whole_number_);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_guid()) {
            set_has_guid();
            guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
        }
        if (from.has_origin()) {
            set_has_origin();
            origin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_);
        }
        if (from.has_use_count()) {
            set_use_count(from.use_count());
        }
        if (from.has_use_date()) {
            set_use_date(from.use_date());
        }
    }
    if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
        if (from.has_company_name()) {
            set_has_company_name();
            company_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.company_name_);
        }
        if (from.has_address_home_line1()) {
            set_has_address_home_line1();
            address_home_line1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_line1_);
        }
        if (from.has_address_home_line2()) {
            set_has_address_home_line2();
            address_home_line2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_line2_);
        }
        if (from.has_address_home_city()) {
            set_has_address_home_city();
            address_home_city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_city_);
        }
        if (from.has_address_home_state()) {
            set_has_address_home_state();
            address_home_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_state_);
        }
        if (from.has_address_home_zip()) {
            set_has_address_home_zip();
            address_home_zip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_zip_);
        }
        if (from.has_address_home_country()) {
            set_has_address_home_country();
            address_home_country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_country_);
        }
    }
    if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
        if (from.has_address_home_street_address()) {
            set_has_address_home_street_address();
            address_home_street_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_street_address_);
        }
        if (from.has_address_home_sorting_code()) {
            set_has_address_home_sorting_code();
            address_home_sorting_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_sorting_code_);
        }
        if (from.has_address_home_dependent_locality()) {
            set_has_address_home_dependent_locality();
            address_home_dependent_locality_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_dependent_locality_);
        }
        if (from.has_address_home_language_code()) {
            set_has_address_home_language_code();
            address_home_language_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_home_language_code_);
        }
        if (from.has_label()) {
            set_has_label();
            label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
        }
        if (from.has_phone_fax_whole_number()) {
            set_has_phone_fax_whole_number();
            phone_fax_whole_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_fax_whole_number_);
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void AutofillProfileSpecifics::CopyFrom(const AutofillProfileSpecifics& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.AutofillProfileSpecifics)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool AutofillProfileSpecifics::IsInitialized() const
{

    return true;
}

void AutofillProfileSpecifics::Swap(AutofillProfileSpecifics* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void AutofillProfileSpecifics::InternalSwap(AutofillProfileSpecifics* other)
{
    guid_.Swap(&other->guid_);
    origin_.Swap(&other->origin_);
    std::swap(use_count_, other->use_count_);
    std::swap(use_date_, other->use_date_);
    name_first_.UnsafeArenaSwap(&other->name_first_);
    name_middle_.UnsafeArenaSwap(&other->name_middle_);
    name_last_.UnsafeArenaSwap(&other->name_last_);
    name_full_.UnsafeArenaSwap(&other->name_full_);
    email_address_.UnsafeArenaSwap(&other->email_address_);
    company_name_.Swap(&other->company_name_);
    address_home_line1_.Swap(&other->address_home_line1_);
    address_home_line2_.Swap(&other->address_home_line2_);
    address_home_city_.Swap(&other->address_home_city_);
    address_home_state_.Swap(&other->address_home_state_);
    address_home_zip_.Swap(&other->address_home_zip_);
    address_home_country_.Swap(&other->address_home_country_);
    address_home_street_address_.Swap(&other->address_home_street_address_);
    address_home_sorting_code_.Swap(&other->address_home_sorting_code_);
    address_home_dependent_locality_.Swap(&other->address_home_dependent_locality_);
    address_home_language_code_.Swap(&other->address_home_language_code_);
    phone_home_whole_number_.UnsafeArenaSwap(&other->phone_home_whole_number_);
    label_.Swap(&other->label_);
    phone_fax_whole_number_.Swap(&other->phone_fax_whole_number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string AutofillProfileSpecifics::GetTypeName() const
{
    return "sync_pb.AutofillProfileSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AutofillProfileSpecifics

// optional string guid = 15;
bool AutofillProfileSpecifics::has_guid() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void AutofillProfileSpecifics::set_has_guid()
{
    _has_bits_[0] |= 0x00000001u;
}
void AutofillProfileSpecifics::clear_has_guid()
{
    _has_bits_[0] &= ~0x00000001u;
}
void AutofillProfileSpecifics::clear_guid()
{
    guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_guid();
}
const ::std::string& AutofillProfileSpecifics::guid() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.guid)
    return guid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_guid(const ::std::string& value)
{
    set_has_guid();
    guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.guid)
}
void AutofillProfileSpecifics::set_guid(const char* value)
{
    set_has_guid();
    guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.guid)
}
void AutofillProfileSpecifics::set_guid(const char* value, size_t size)
{
    set_has_guid();
    guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.guid)
}
::std::string* AutofillProfileSpecifics::mutable_guid()
{
    set_has_guid();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.guid)
    return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_guid()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.guid)
    clear_has_guid();
    return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_guid(::std::string* guid)
{
    if (guid != NULL) {
        set_has_guid();
    } else {
        clear_has_guid();
    }
    guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.guid)
}

// optional string origin = 16;
bool AutofillProfileSpecifics::has_origin() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void AutofillProfileSpecifics::set_has_origin()
{
    _has_bits_[0] |= 0x00000002u;
}
void AutofillProfileSpecifics::clear_has_origin()
{
    _has_bits_[0] &= ~0x00000002u;
}
void AutofillProfileSpecifics::clear_origin()
{
    origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_origin();
}
const ::std::string& AutofillProfileSpecifics::origin() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.origin)
    return origin_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_origin(const ::std::string& value)
{
    set_has_origin();
    origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.origin)
}
void AutofillProfileSpecifics::set_origin(const char* value)
{
    set_has_origin();
    origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.origin)
}
void AutofillProfileSpecifics::set_origin(const char* value, size_t size)
{
    set_has_origin();
    origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.origin)
}
::std::string* AutofillProfileSpecifics::mutable_origin()
{
    set_has_origin();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.origin)
    return origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_origin()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.origin)
    clear_has_origin();
    return origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_origin(::std::string* origin)
{
    if (origin != NULL) {
        set_has_origin();
    } else {
        clear_has_origin();
    }
    origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.origin)
}

// optional int64 use_count = 22;
bool AutofillProfileSpecifics::has_use_count() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void AutofillProfileSpecifics::set_has_use_count()
{
    _has_bits_[0] |= 0x00000004u;
}
void AutofillProfileSpecifics::clear_has_use_count()
{
    _has_bits_[0] &= ~0x00000004u;
}
void AutofillProfileSpecifics::clear_use_count()
{
    use_count_ = GOOGLE_LONGLONG(0);
    clear_has_use_count();
}
::google::protobuf::int64 AutofillProfileSpecifics::use_count() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.use_count)
    return use_count_;
}
void AutofillProfileSpecifics::set_use_count(::google::protobuf::int64 value)
{
    set_has_use_count();
    use_count_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.use_count)
}

// optional int64 use_date = 23;
bool AutofillProfileSpecifics::has_use_date() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void AutofillProfileSpecifics::set_has_use_date()
{
    _has_bits_[0] |= 0x00000008u;
}
void AutofillProfileSpecifics::clear_has_use_date()
{
    _has_bits_[0] &= ~0x00000008u;
}
void AutofillProfileSpecifics::clear_use_date()
{
    use_date_ = GOOGLE_LONGLONG(0);
    clear_has_use_date();
}
::google::protobuf::int64 AutofillProfileSpecifics::use_date() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.use_date)
    return use_date_;
}
void AutofillProfileSpecifics::set_use_date(::google::protobuf::int64 value)
{
    set_has_use_date();
    use_date_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.use_date)
}

// repeated string name_first = 2;
int AutofillProfileSpecifics::name_first_size() const
{
    return name_first_.size();
}
void AutofillProfileSpecifics::clear_name_first()
{
    name_first_.Clear();
}
const ::std::string& AutofillProfileSpecifics::name_first(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.name_first)
    return name_first_.Get(index);
}
::std::string* AutofillProfileSpecifics::mutable_name_first(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.name_first)
    return name_first_.Mutable(index);
}
void AutofillProfileSpecifics::set_name_first(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_first)
    name_first_.Mutable(index)->assign(value);
}
void AutofillProfileSpecifics::set_name_first(int index, const char* value)
{
    name_first_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.name_first)
}
void AutofillProfileSpecifics::set_name_first(int index, const char* value, size_t size)
{
    name_first_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.name_first)
}
::std::string* AutofillProfileSpecifics::add_name_first()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.name_first)
    return name_first_.Add();
}
void AutofillProfileSpecifics::add_name_first(const ::std::string& value)
{
    name_first_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_first)
}
void AutofillProfileSpecifics::add_name_first(const char* value)
{
    name_first_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.name_first)
}
void AutofillProfileSpecifics::add_name_first(const char* value, size_t size)
{
    name_first_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.name_first)
}
const ::google::protobuf::RepeatedPtrField<::std::string>&
AutofillProfileSpecifics::name_first() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.name_first)
    return name_first_;
}
::google::protobuf::RepeatedPtrField<::std::string>*
AutofillProfileSpecifics::mutable_name_first()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.name_first)
    return &name_first_;
}

// repeated string name_middle = 3;
int AutofillProfileSpecifics::name_middle_size() const
{
    return name_middle_.size();
}
void AutofillProfileSpecifics::clear_name_middle()
{
    name_middle_.Clear();
}
const ::std::string& AutofillProfileSpecifics::name_middle(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.name_middle)
    return name_middle_.Get(index);
}
::std::string* AutofillProfileSpecifics::mutable_name_middle(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.name_middle)
    return name_middle_.Mutable(index);
}
void AutofillProfileSpecifics::set_name_middle(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_middle)
    name_middle_.Mutable(index)->assign(value);
}
void AutofillProfileSpecifics::set_name_middle(int index, const char* value)
{
    name_middle_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.name_middle)
}
void AutofillProfileSpecifics::set_name_middle(int index, const char* value, size_t size)
{
    name_middle_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.name_middle)
}
::std::string* AutofillProfileSpecifics::add_name_middle()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.name_middle)
    return name_middle_.Add();
}
void AutofillProfileSpecifics::add_name_middle(const ::std::string& value)
{
    name_middle_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_middle)
}
void AutofillProfileSpecifics::add_name_middle(const char* value)
{
    name_middle_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.name_middle)
}
void AutofillProfileSpecifics::add_name_middle(const char* value, size_t size)
{
    name_middle_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.name_middle)
}
const ::google::protobuf::RepeatedPtrField<::std::string>&
AutofillProfileSpecifics::name_middle() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.name_middle)
    return name_middle_;
}
::google::protobuf::RepeatedPtrField<::std::string>*
AutofillProfileSpecifics::mutable_name_middle()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.name_middle)
    return &name_middle_;
}

// repeated string name_last = 4;
int AutofillProfileSpecifics::name_last_size() const
{
    return name_last_.size();
}
void AutofillProfileSpecifics::clear_name_last()
{
    name_last_.Clear();
}
const ::std::string& AutofillProfileSpecifics::name_last(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.name_last)
    return name_last_.Get(index);
}
::std::string* AutofillProfileSpecifics::mutable_name_last(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.name_last)
    return name_last_.Mutable(index);
}
void AutofillProfileSpecifics::set_name_last(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_last)
    name_last_.Mutable(index)->assign(value);
}
void AutofillProfileSpecifics::set_name_last(int index, const char* value)
{
    name_last_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.name_last)
}
void AutofillProfileSpecifics::set_name_last(int index, const char* value, size_t size)
{
    name_last_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.name_last)
}
::std::string* AutofillProfileSpecifics::add_name_last()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.name_last)
    return name_last_.Add();
}
void AutofillProfileSpecifics::add_name_last(const ::std::string& value)
{
    name_last_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_last)
}
void AutofillProfileSpecifics::add_name_last(const char* value)
{
    name_last_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.name_last)
}
void AutofillProfileSpecifics::add_name_last(const char* value, size_t size)
{
    name_last_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.name_last)
}
const ::google::protobuf::RepeatedPtrField<::std::string>&
AutofillProfileSpecifics::name_last() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.name_last)
    return name_last_;
}
::google::protobuf::RepeatedPtrField<::std::string>*
AutofillProfileSpecifics::mutable_name_last()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.name_last)
    return &name_last_;
}

// repeated string name_full = 21;
int AutofillProfileSpecifics::name_full_size() const
{
    return name_full_.size();
}
void AutofillProfileSpecifics::clear_name_full()
{
    name_full_.Clear();
}
const ::std::string& AutofillProfileSpecifics::name_full(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.name_full)
    return name_full_.Get(index);
}
::std::string* AutofillProfileSpecifics::mutable_name_full(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.name_full)
    return name_full_.Mutable(index);
}
void AutofillProfileSpecifics::set_name_full(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.name_full)
    name_full_.Mutable(index)->assign(value);
}
void AutofillProfileSpecifics::set_name_full(int index, const char* value)
{
    name_full_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.name_full)
}
void AutofillProfileSpecifics::set_name_full(int index, const char* value, size_t size)
{
    name_full_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.name_full)
}
::std::string* AutofillProfileSpecifics::add_name_full()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.name_full)
    return name_full_.Add();
}
void AutofillProfileSpecifics::add_name_full(const ::std::string& value)
{
    name_full_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.name_full)
}
void AutofillProfileSpecifics::add_name_full(const char* value)
{
    name_full_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.name_full)
}
void AutofillProfileSpecifics::add_name_full(const char* value, size_t size)
{
    name_full_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.name_full)
}
const ::google::protobuf::RepeatedPtrField<::std::string>&
AutofillProfileSpecifics::name_full() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.name_full)
    return name_full_;
}
::google::protobuf::RepeatedPtrField<::std::string>*
AutofillProfileSpecifics::mutable_name_full()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.name_full)
    return &name_full_;
}

// repeated string email_address = 5;
int AutofillProfileSpecifics::email_address_size() const
{
    return email_address_.size();
}
void AutofillProfileSpecifics::clear_email_address()
{
    email_address_.Clear();
}
const ::std::string& AutofillProfileSpecifics::email_address(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.email_address)
    return email_address_.Get(index);
}
::std::string* AutofillProfileSpecifics::mutable_email_address(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.email_address)
    return email_address_.Mutable(index);
}
void AutofillProfileSpecifics::set_email_address(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.email_address)
    email_address_.Mutable(index)->assign(value);
}
void AutofillProfileSpecifics::set_email_address(int index, const char* value)
{
    email_address_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.email_address)
}
void AutofillProfileSpecifics::set_email_address(int index, const char* value, size_t size)
{
    email_address_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.email_address)
}
::std::string* AutofillProfileSpecifics::add_email_address()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.email_address)
    return email_address_.Add();
}
void AutofillProfileSpecifics::add_email_address(const ::std::string& value)
{
    email_address_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.email_address)
}
void AutofillProfileSpecifics::add_email_address(const char* value)
{
    email_address_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.email_address)
}
void AutofillProfileSpecifics::add_email_address(const char* value, size_t size)
{
    email_address_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.email_address)
}
const ::google::protobuf::RepeatedPtrField<::std::string>&
AutofillProfileSpecifics::email_address() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.email_address)
    return email_address_;
}
::google::protobuf::RepeatedPtrField<::std::string>*
AutofillProfileSpecifics::mutable_email_address()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.email_address)
    return &email_address_;
}

// optional string company_name = 6;
bool AutofillProfileSpecifics::has_company_name() const
{
    return (_has_bits_[0] & 0x00000200u) != 0;
}
void AutofillProfileSpecifics::set_has_company_name()
{
    _has_bits_[0] |= 0x00000200u;
}
void AutofillProfileSpecifics::clear_has_company_name()
{
    _has_bits_[0] &= ~0x00000200u;
}
void AutofillProfileSpecifics::clear_company_name()
{
    company_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_company_name();
}
const ::std::string& AutofillProfileSpecifics::company_name() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.company_name)
    return company_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_company_name(const ::std::string& value)
{
    set_has_company_name();
    company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.company_name)
}
void AutofillProfileSpecifics::set_company_name(const char* value)
{
    set_has_company_name();
    company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.company_name)
}
void AutofillProfileSpecifics::set_company_name(const char* value, size_t size)
{
    set_has_company_name();
    company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.company_name)
}
::std::string* AutofillProfileSpecifics::mutable_company_name()
{
    set_has_company_name();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.company_name)
    return company_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_company_name()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.company_name)
    clear_has_company_name();
    return company_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_company_name(::std::string* company_name)
{
    if (company_name != NULL) {
        set_has_company_name();
    } else {
        clear_has_company_name();
    }
    company_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), company_name);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.company_name)
}

// optional string address_home_line1 = 7;
bool AutofillProfileSpecifics::has_address_home_line1() const
{
    return (_has_bits_[0] & 0x00000400u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_line1()
{
    _has_bits_[0] |= 0x00000400u;
}
void AutofillProfileSpecifics::clear_has_address_home_line1()
{
    _has_bits_[0] &= ~0x00000400u;
}
void AutofillProfileSpecifics::clear_address_home_line1()
{
    address_home_line1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_line1();
}
const ::std::string& AutofillProfileSpecifics::address_home_line1() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_line1)
    return address_home_line1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_address_home_line1(const ::std::string& value)
{
    set_has_address_home_line1();
    address_home_line1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_line1)
}
void AutofillProfileSpecifics::set_address_home_line1(const char* value)
{
    set_has_address_home_line1();
    address_home_line1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_line1)
}
void AutofillProfileSpecifics::set_address_home_line1(const char* value, size_t size)
{
    set_has_address_home_line1();
    address_home_line1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_line1)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_line1()
{
    set_has_address_home_line1();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_line1)
    return address_home_line1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_line1()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_line1)
    clear_has_address_home_line1();
    return address_home_line1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_line1(::std::string* address_home_line1)
{
    if (address_home_line1 != NULL) {
        set_has_address_home_line1();
    } else {
        clear_has_address_home_line1();
    }
    address_home_line1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_line1);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_line1)
}

// optional string address_home_line2 = 8;
bool AutofillProfileSpecifics::has_address_home_line2() const
{
    return (_has_bits_[0] & 0x00000800u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_line2()
{
    _has_bits_[0] |= 0x00000800u;
}
void AutofillProfileSpecifics::clear_has_address_home_line2()
{
    _has_bits_[0] &= ~0x00000800u;
}
void AutofillProfileSpecifics::clear_address_home_line2()
{
    address_home_line2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_line2();
}
const ::std::string& AutofillProfileSpecifics::address_home_line2() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_line2)
    return address_home_line2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_address_home_line2(const ::std::string& value)
{
    set_has_address_home_line2();
    address_home_line2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_line2)
}
void AutofillProfileSpecifics::set_address_home_line2(const char* value)
{
    set_has_address_home_line2();
    address_home_line2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_line2)
}
void AutofillProfileSpecifics::set_address_home_line2(const char* value, size_t size)
{
    set_has_address_home_line2();
    address_home_line2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_line2)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_line2()
{
    set_has_address_home_line2();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_line2)
    return address_home_line2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_line2()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_line2)
    clear_has_address_home_line2();
    return address_home_line2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_line2(::std::string* address_home_line2)
{
    if (address_home_line2 != NULL) {
        set_has_address_home_line2();
    } else {
        clear_has_address_home_line2();
    }
    address_home_line2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_line2);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_line2)
}

// optional string address_home_city = 9;
bool AutofillProfileSpecifics::has_address_home_city() const
{
    return (_has_bits_[0] & 0x00001000u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_city()
{
    _has_bits_[0] |= 0x00001000u;
}
void AutofillProfileSpecifics::clear_has_address_home_city()
{
    _has_bits_[0] &= ~0x00001000u;
}
void AutofillProfileSpecifics::clear_address_home_city()
{
    address_home_city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_city();
}
const ::std::string& AutofillProfileSpecifics::address_home_city() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_city)
    return address_home_city_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_address_home_city(const ::std::string& value)
{
    set_has_address_home_city();
    address_home_city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_city)
}
void AutofillProfileSpecifics::set_address_home_city(const char* value)
{
    set_has_address_home_city();
    address_home_city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_city)
}
void AutofillProfileSpecifics::set_address_home_city(const char* value, size_t size)
{
    set_has_address_home_city();
    address_home_city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_city)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_city()
{
    set_has_address_home_city();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_city)
    return address_home_city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_city()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_city)
    clear_has_address_home_city();
    return address_home_city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_city(::std::string* address_home_city)
{
    if (address_home_city != NULL) {
        set_has_address_home_city();
    } else {
        clear_has_address_home_city();
    }
    address_home_city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_city);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_city)
}

// optional string address_home_state = 10;
bool AutofillProfileSpecifics::has_address_home_state() const
{
    return (_has_bits_[0] & 0x00002000u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_state()
{
    _has_bits_[0] |= 0x00002000u;
}
void AutofillProfileSpecifics::clear_has_address_home_state()
{
    _has_bits_[0] &= ~0x00002000u;
}
void AutofillProfileSpecifics::clear_address_home_state()
{
    address_home_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_state();
}
const ::std::string& AutofillProfileSpecifics::address_home_state() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_state)
    return address_home_state_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_address_home_state(const ::std::string& value)
{
    set_has_address_home_state();
    address_home_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_state)
}
void AutofillProfileSpecifics::set_address_home_state(const char* value)
{
    set_has_address_home_state();
    address_home_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_state)
}
void AutofillProfileSpecifics::set_address_home_state(const char* value, size_t size)
{
    set_has_address_home_state();
    address_home_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_state)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_state()
{
    set_has_address_home_state();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_state)
    return address_home_state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_state()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_state)
    clear_has_address_home_state();
    return address_home_state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_state(::std::string* address_home_state)
{
    if (address_home_state != NULL) {
        set_has_address_home_state();
    } else {
        clear_has_address_home_state();
    }
    address_home_state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_state);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_state)
}

// optional string address_home_zip = 11;
bool AutofillProfileSpecifics::has_address_home_zip() const
{
    return (_has_bits_[0] & 0x00004000u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_zip()
{
    _has_bits_[0] |= 0x00004000u;
}
void AutofillProfileSpecifics::clear_has_address_home_zip()
{
    _has_bits_[0] &= ~0x00004000u;
}
void AutofillProfileSpecifics::clear_address_home_zip()
{
    address_home_zip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_zip();
}
const ::std::string& AutofillProfileSpecifics::address_home_zip() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_zip)
    return address_home_zip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_address_home_zip(const ::std::string& value)
{
    set_has_address_home_zip();
    address_home_zip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_zip)
}
void AutofillProfileSpecifics::set_address_home_zip(const char* value)
{
    set_has_address_home_zip();
    address_home_zip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_zip)
}
void AutofillProfileSpecifics::set_address_home_zip(const char* value, size_t size)
{
    set_has_address_home_zip();
    address_home_zip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_zip)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_zip()
{
    set_has_address_home_zip();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_zip)
    return address_home_zip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_zip()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_zip)
    clear_has_address_home_zip();
    return address_home_zip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_zip(::std::string* address_home_zip)
{
    if (address_home_zip != NULL) {
        set_has_address_home_zip();
    } else {
        clear_has_address_home_zip();
    }
    address_home_zip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_zip);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_zip)
}

// optional string address_home_country = 12;
bool AutofillProfileSpecifics::has_address_home_country() const
{
    return (_has_bits_[0] & 0x00008000u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_country()
{
    _has_bits_[0] |= 0x00008000u;
}
void AutofillProfileSpecifics::clear_has_address_home_country()
{
    _has_bits_[0] &= ~0x00008000u;
}
void AutofillProfileSpecifics::clear_address_home_country()
{
    address_home_country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_country();
}
const ::std::string& AutofillProfileSpecifics::address_home_country() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_country)
    return address_home_country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_address_home_country(const ::std::string& value)
{
    set_has_address_home_country();
    address_home_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_country)
}
void AutofillProfileSpecifics::set_address_home_country(const char* value)
{
    set_has_address_home_country();
    address_home_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_country)
}
void AutofillProfileSpecifics::set_address_home_country(const char* value, size_t size)
{
    set_has_address_home_country();
    address_home_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_country)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_country()
{
    set_has_address_home_country();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_country)
    return address_home_country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_country()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_country)
    clear_has_address_home_country();
    return address_home_country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_country(::std::string* address_home_country)
{
    if (address_home_country != NULL) {
        set_has_address_home_country();
    } else {
        clear_has_address_home_country();
    }
    address_home_country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_country);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_country)
}

// optional string address_home_street_address = 17;
bool AutofillProfileSpecifics::has_address_home_street_address() const
{
    return (_has_bits_[0] & 0x00010000u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_street_address()
{
    _has_bits_[0] |= 0x00010000u;
}
void AutofillProfileSpecifics::clear_has_address_home_street_address()
{
    _has_bits_[0] &= ~0x00010000u;
}
void AutofillProfileSpecifics::clear_address_home_street_address()
{
    address_home_street_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_street_address();
}
const ::std::string& AutofillProfileSpecifics::address_home_street_address() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_street_address)
    return address_home_street_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_address_home_street_address(const ::std::string& value)
{
    set_has_address_home_street_address();
    address_home_street_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_street_address)
}
void AutofillProfileSpecifics::set_address_home_street_address(const char* value)
{
    set_has_address_home_street_address();
    address_home_street_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_street_address)
}
void AutofillProfileSpecifics::set_address_home_street_address(const char* value, size_t size)
{
    set_has_address_home_street_address();
    address_home_street_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_street_address)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_street_address()
{
    set_has_address_home_street_address();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_street_address)
    return address_home_street_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_street_address()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_street_address)
    clear_has_address_home_street_address();
    return address_home_street_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_street_address(::std::string* address_home_street_address)
{
    if (address_home_street_address != NULL) {
        set_has_address_home_street_address();
    } else {
        clear_has_address_home_street_address();
    }
    address_home_street_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_street_address);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_street_address)
}

// optional string address_home_sorting_code = 18;
bool AutofillProfileSpecifics::has_address_home_sorting_code() const
{
    return (_has_bits_[0] & 0x00020000u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_sorting_code()
{
    _has_bits_[0] |= 0x00020000u;
}
void AutofillProfileSpecifics::clear_has_address_home_sorting_code()
{
    _has_bits_[0] &= ~0x00020000u;
}
void AutofillProfileSpecifics::clear_address_home_sorting_code()
{
    address_home_sorting_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_sorting_code();
}
const ::std::string& AutofillProfileSpecifics::address_home_sorting_code() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
    return address_home_sorting_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_address_home_sorting_code(const ::std::string& value)
{
    set_has_address_home_sorting_code();
    address_home_sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
}
void AutofillProfileSpecifics::set_address_home_sorting_code(const char* value)
{
    set_has_address_home_sorting_code();
    address_home_sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
}
void AutofillProfileSpecifics::set_address_home_sorting_code(const char* value, size_t size)
{
    set_has_address_home_sorting_code();
    address_home_sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_sorting_code()
{
    set_has_address_home_sorting_code();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
    return address_home_sorting_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_sorting_code()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
    clear_has_address_home_sorting_code();
    return address_home_sorting_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_sorting_code(::std::string* address_home_sorting_code)
{
    if (address_home_sorting_code != NULL) {
        set_has_address_home_sorting_code();
    } else {
        clear_has_address_home_sorting_code();
    }
    address_home_sorting_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_sorting_code);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_sorting_code)
}

// optional string address_home_dependent_locality = 19;
bool AutofillProfileSpecifics::has_address_home_dependent_locality() const
{
    return (_has_bits_[0] & 0x00040000u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_dependent_locality()
{
    _has_bits_[0] |= 0x00040000u;
}
void AutofillProfileSpecifics::clear_has_address_home_dependent_locality()
{
    _has_bits_[0] &= ~0x00040000u;
}
void AutofillProfileSpecifics::clear_address_home_dependent_locality()
{
    address_home_dependent_locality_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_dependent_locality();
}
const ::std::string& AutofillProfileSpecifics::address_home_dependent_locality() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
    return address_home_dependent_locality_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_address_home_dependent_locality(const ::std::string& value)
{
    set_has_address_home_dependent_locality();
    address_home_dependent_locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
}
void AutofillProfileSpecifics::set_address_home_dependent_locality(const char* value)
{
    set_has_address_home_dependent_locality();
    address_home_dependent_locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
}
void AutofillProfileSpecifics::set_address_home_dependent_locality(const char* value, size_t size)
{
    set_has_address_home_dependent_locality();
    address_home_dependent_locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_dependent_locality()
{
    set_has_address_home_dependent_locality();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
    return address_home_dependent_locality_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_dependent_locality()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
    clear_has_address_home_dependent_locality();
    return address_home_dependent_locality_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_dependent_locality(::std::string* address_home_dependent_locality)
{
    if (address_home_dependent_locality != NULL) {
        set_has_address_home_dependent_locality();
    } else {
        clear_has_address_home_dependent_locality();
    }
    address_home_dependent_locality_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_dependent_locality);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_dependent_locality)
}

// optional string address_home_language_code = 20;
bool AutofillProfileSpecifics::has_address_home_language_code() const
{
    return (_has_bits_[0] & 0x00080000u) != 0;
}
void AutofillProfileSpecifics::set_has_address_home_language_code()
{
    _has_bits_[0] |= 0x00080000u;
}
void AutofillProfileSpecifics::clear_has_address_home_language_code()
{
    _has_bits_[0] &= ~0x00080000u;
}
void AutofillProfileSpecifics::clear_address_home_language_code()
{
    address_home_language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_home_language_code();
}
const ::std::string& AutofillProfileSpecifics::address_home_language_code() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.address_home_language_code)
    return address_home_language_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_address_home_language_code(const ::std::string& value)
{
    set_has_address_home_language_code();
    address_home_language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.address_home_language_code)
}
void AutofillProfileSpecifics::set_address_home_language_code(const char* value)
{
    set_has_address_home_language_code();
    address_home_language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.address_home_language_code)
}
void AutofillProfileSpecifics::set_address_home_language_code(const char* value, size_t size)
{
    set_has_address_home_language_code();
    address_home_language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.address_home_language_code)
}
::std::string* AutofillProfileSpecifics::mutable_address_home_language_code()
{
    set_has_address_home_language_code();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.address_home_language_code)
    return address_home_language_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_address_home_language_code()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.address_home_language_code)
    clear_has_address_home_language_code();
    return address_home_language_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_address_home_language_code(::std::string* address_home_language_code)
{
    if (address_home_language_code != NULL) {
        set_has_address_home_language_code();
    } else {
        clear_has_address_home_language_code();
    }
    address_home_language_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_home_language_code);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.address_home_language_code)
}

// repeated string phone_home_whole_number = 13;
int AutofillProfileSpecifics::phone_home_whole_number_size() const
{
    return phone_home_whole_number_.size();
}
void AutofillProfileSpecifics::clear_phone_home_whole_number()
{
    phone_home_whole_number_.Clear();
}
const ::std::string& AutofillProfileSpecifics::phone_home_whole_number(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
    return phone_home_whole_number_.Get(index);
}
::std::string* AutofillProfileSpecifics::mutable_phone_home_whole_number(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
    return phone_home_whole_number_.Mutable(index);
}
void AutofillProfileSpecifics::set_phone_home_whole_number(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
    phone_home_whole_number_.Mutable(index)->assign(value);
}
void AutofillProfileSpecifics::set_phone_home_whole_number(int index, const char* value)
{
    phone_home_whole_number_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
void AutofillProfileSpecifics::set_phone_home_whole_number(int index, const char* value, size_t size)
{
    phone_home_whole_number_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
::std::string* AutofillProfileSpecifics::add_phone_home_whole_number()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
    return phone_home_whole_number_.Add();
}
void AutofillProfileSpecifics::add_phone_home_whole_number(const ::std::string& value)
{
    phone_home_whole_number_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
void AutofillProfileSpecifics::add_phone_home_whole_number(const char* value)
{
    phone_home_whole_number_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
void AutofillProfileSpecifics::add_phone_home_whole_number(const char* value, size_t size)
{
    phone_home_whole_number_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
}
const ::google::protobuf::RepeatedPtrField<::std::string>&
AutofillProfileSpecifics::phone_home_whole_number() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
    return phone_home_whole_number_;
}
::google::protobuf::RepeatedPtrField<::std::string>*
AutofillProfileSpecifics::mutable_phone_home_whole_number()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillProfileSpecifics.phone_home_whole_number)
    return &phone_home_whole_number_;
}

// optional string label = 1 [deprecated = true];
bool AutofillProfileSpecifics::has_label() const
{
    return (_has_bits_[0] & 0x00200000u) != 0;
}
void AutofillProfileSpecifics::set_has_label()
{
    _has_bits_[0] |= 0x00200000u;
}
void AutofillProfileSpecifics::clear_has_label()
{
    _has_bits_[0] &= ~0x00200000u;
}
void AutofillProfileSpecifics::clear_label()
{
    label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_label();
}
const ::std::string& AutofillProfileSpecifics::label() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.label)
    return label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_label(const ::std::string& value)
{
    set_has_label();
    label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.label)
}
void AutofillProfileSpecifics::set_label(const char* value)
{
    set_has_label();
    label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.label)
}
void AutofillProfileSpecifics::set_label(const char* value, size_t size)
{
    set_has_label();
    label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.label)
}
::std::string* AutofillProfileSpecifics::mutable_label()
{
    set_has_label();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.label)
    return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_label()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.label)
    clear_has_label();
    return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_label(::std::string* label)
{
    if (label != NULL) {
        set_has_label();
    } else {
        clear_has_label();
    }
    label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.label)
}

// optional string phone_fax_whole_number = 14 [deprecated = true];
bool AutofillProfileSpecifics::has_phone_fax_whole_number() const
{
    return (_has_bits_[0] & 0x00400000u) != 0;
}
void AutofillProfileSpecifics::set_has_phone_fax_whole_number()
{
    _has_bits_[0] |= 0x00400000u;
}
void AutofillProfileSpecifics::clear_has_phone_fax_whole_number()
{
    _has_bits_[0] &= ~0x00400000u;
}
void AutofillProfileSpecifics::clear_phone_fax_whole_number()
{
    phone_fax_whole_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_phone_fax_whole_number();
}
const ::std::string& AutofillProfileSpecifics::phone_fax_whole_number() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
    return phone_fax_whole_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_phone_fax_whole_number(const ::std::string& value)
{
    set_has_phone_fax_whole_number();
    phone_fax_whole_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
}
void AutofillProfileSpecifics::set_phone_fax_whole_number(const char* value)
{
    set_has_phone_fax_whole_number();
    phone_fax_whole_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
}
void AutofillProfileSpecifics::set_phone_fax_whole_number(const char* value, size_t size)
{
    set_has_phone_fax_whole_number();
    phone_fax_whole_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
}
::std::string* AutofillProfileSpecifics::mutable_phone_fax_whole_number()
{
    set_has_phone_fax_whole_number();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
    return phone_fax_whole_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillProfileSpecifics::release_phone_fax_whole_number()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
    clear_has_phone_fax_whole_number();
    return phone_fax_whole_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillProfileSpecifics::set_allocated_phone_fax_whole_number(::std::string* phone_fax_whole_number)
{
    if (phone_fax_whole_number != NULL) {
        set_has_phone_fax_whole_number();
    } else {
        clear_has_phone_fax_whole_number();
    }
    phone_fax_whole_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_fax_whole_number);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillProfileSpecifics.phone_fax_whole_number)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForAutofillSpecifics(
    AutofillSpecifics* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutofillSpecifics::kNameFieldNumber;
const int AutofillSpecifics::kValueFieldNumber;
const int AutofillSpecifics::kUsageTimestampFieldNumber;
const int AutofillSpecifics::kProfileFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

AutofillSpecifics::AutofillSpecifics()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.AutofillSpecifics)
}

void AutofillSpecifics::InitAsDefaultInstance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    profile_ = const_cast<::sync_pb::AutofillProfileSpecifics*>(
        ::sync_pb::AutofillProfileSpecifics::internal_default_instance());
#else
    profile_ = const_cast<::sync_pb::AutofillProfileSpecifics*>(&::sync_pb::AutofillProfileSpecifics::default_instance());
#endif
}

AutofillSpecifics::AutofillSpecifics(const AutofillSpecifics& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.AutofillSpecifics)
}

void AutofillSpecifics::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    profile_ = NULL;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AutofillSpecifics::~AutofillSpecifics()
{
    // @@protoc_insertion_point(destructor:sync_pb.AutofillSpecifics)
    SharedDtor();
}

void AutofillSpecifics::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
        delete profile_;
    }
}

void AutofillSpecifics::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AutofillSpecifics& AutofillSpecifics::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_autofill_5fspecifics_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_autofill_5fspecifics_2eproto();
#endif
    return *default_instance_;
}

AutofillSpecifics* AutofillSpecifics::default_instance_ = NULL;

AutofillSpecifics* AutofillSpecifics::New(::google::protobuf::Arena* arena) const
{
    AutofillSpecifics* n = new AutofillSpecifics;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void AutofillSpecifics::Clear()
{
    // @@protoc_insertion_point(message_clear_start:sync_pb.AutofillSpecifics)
    if (_has_bits_[0 / 32] & 11u) {
        if (has_name()) {
            name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_value()) {
            value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_profile()) {
            if (profile_ != NULL)
                profile_->::sync_pb::AutofillProfileSpecifics::Clear();
        }
    }
    usage_timestamp_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AutofillSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForAutofillSpecifics, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.AutofillSpecifics)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional string name = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_name()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_value;
            break;
        }

        // optional string value = 2;
        case 2: {
            if (tag == 18) {
            parse_value:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_value()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_usage_timestamp;
            break;
        }

        // repeated int64 usage_timestamp = 3;
        case 3: {
            if (tag == 24) {
            parse_usage_timestamp:
                DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    1, 24, input, this->mutable_usage_timestamp())));
            } else if (tag == 26) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, this->mutable_usage_timestamp())));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_usage_timestamp;
            if (input->ExpectTag(34))
                goto parse_profile;
            break;
        }

        // optional .sync_pb.AutofillProfileSpecifics profile = 4;
        case 4: {
            if (tag == 34) {
            parse_profile:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_profile()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.AutofillSpecifics)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.AutofillSpecifics)
    return false;
#undef DO_
}

void AutofillSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.AutofillSpecifics)
    // optional string name = 1;
    if (has_name()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->name(), output);
    }

    // optional string value = 2;
    if (has_value()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            2, this->value(), output);
    }

    // repeated int64 usage_timestamp = 3;
    for (int i = 0; i < this->usage_timestamp_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(
            3, this->usage_timestamp(i), output);
    }

    // optional .sync_pb.AutofillProfileSpecifics profile = 4;
    if (has_profile()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            4, *this->profile_, output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.AutofillSpecifics)
}

int AutofillSpecifics::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.AutofillSpecifics)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 11u) {
        // optional string name = 1;
        if (has_name()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->name());
        }

        // optional string value = 2;
        if (has_value()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->value());
        }

        // optional .sync_pb.AutofillProfileSpecifics profile = 4;
        if (has_profile()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->profile_);
        }
    }
    // repeated int64 usage_timestamp = 3;
    {
        int data_size = 0;
        for (int i = 0; i < this->usage_timestamp_size(); i++) {
            data_size += ::google::protobuf::internal::WireFormatLite::
                Int64Size(this->usage_timestamp(i));
        }
        total_size += 1 * this->usage_timestamp_size() + data_size;
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void AutofillSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const AutofillSpecifics*>(&from));
}

void AutofillSpecifics::MergeFrom(const AutofillSpecifics& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.AutofillSpecifics)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    usage_timestamp_.MergeFrom(from.usage_timestamp_);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_name()) {
            set_has_name();
            name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
        }
        if (from.has_value()) {
            set_has_value();
            value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
        }
        if (from.has_profile()) {
            mutable_profile()->::sync_pb::AutofillProfileSpecifics::MergeFrom(from.profile());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void AutofillSpecifics::CopyFrom(const AutofillSpecifics& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.AutofillSpecifics)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool AutofillSpecifics::IsInitialized() const
{

    return true;
}

void AutofillSpecifics::Swap(AutofillSpecifics* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void AutofillSpecifics::InternalSwap(AutofillSpecifics* other)
{
    name_.Swap(&other->name_);
    value_.Swap(&other->value_);
    usage_timestamp_.UnsafeArenaSwap(&other->usage_timestamp_);
    std::swap(profile_, other->profile_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string AutofillSpecifics::GetTypeName() const
{
    return "sync_pb.AutofillSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AutofillSpecifics

// optional string name = 1;
bool AutofillSpecifics::has_name() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void AutofillSpecifics::set_has_name()
{
    _has_bits_[0] |= 0x00000001u;
}
void AutofillSpecifics::clear_has_name()
{
    _has_bits_[0] &= ~0x00000001u;
}
void AutofillSpecifics::clear_name()
{
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_name();
}
const ::std::string& AutofillSpecifics::name() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillSpecifics.name)
    return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillSpecifics::set_name(const ::std::string& value)
{
    set_has_name();
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillSpecifics.name)
}
void AutofillSpecifics::set_name(const char* value)
{
    set_has_name();
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillSpecifics.name)
}
void AutofillSpecifics::set_name(const char* value, size_t size)
{
    set_has_name();
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillSpecifics.name)
}
::std::string* AutofillSpecifics::mutable_name()
{
    set_has_name();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillSpecifics.name)
    return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillSpecifics::release_name()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillSpecifics.name)
    clear_has_name();
    return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillSpecifics::set_allocated_name(::std::string* name)
{
    if (name != NULL) {
        set_has_name();
    } else {
        clear_has_name();
    }
    name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillSpecifics.name)
}

// optional string value = 2;
bool AutofillSpecifics::has_value() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void AutofillSpecifics::set_has_value()
{
    _has_bits_[0] |= 0x00000002u;
}
void AutofillSpecifics::clear_has_value()
{
    _has_bits_[0] &= ~0x00000002u;
}
void AutofillSpecifics::clear_value()
{
    value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
}
const ::std::string& AutofillSpecifics::value() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillSpecifics.value)
    return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillSpecifics::set_value(const ::std::string& value)
{
    set_has_value();
    value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillSpecifics.value)
}
void AutofillSpecifics::set_value(const char* value)
{
    set_has_value();
    value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.AutofillSpecifics.value)
}
void AutofillSpecifics::set_value(const char* value, size_t size)
{
    set_has_value();
    value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.AutofillSpecifics.value)
}
::std::string* AutofillSpecifics::mutable_value()
{
    set_has_value();
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillSpecifics.value)
    return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AutofillSpecifics::release_value()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillSpecifics.value)
    clear_has_value();
    return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AutofillSpecifics::set_allocated_value(::std::string* value)
{
    if (value != NULL) {
        set_has_value();
    } else {
        clear_has_value();
    }
    value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillSpecifics.value)
}

// repeated int64 usage_timestamp = 3;
int AutofillSpecifics::usage_timestamp_size() const
{
    return usage_timestamp_.size();
}
void AutofillSpecifics::clear_usage_timestamp()
{
    usage_timestamp_.Clear();
}
::google::protobuf::int64 AutofillSpecifics::usage_timestamp(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillSpecifics.usage_timestamp)
    return usage_timestamp_.Get(index);
}
void AutofillSpecifics::set_usage_timestamp(int index, ::google::protobuf::int64 value)
{
    usage_timestamp_.Set(index, value);
    // @@protoc_insertion_point(field_set:sync_pb.AutofillSpecifics.usage_timestamp)
}
void AutofillSpecifics::add_usage_timestamp(::google::protobuf::int64 value)
{
    usage_timestamp_.Add(value);
    // @@protoc_insertion_point(field_add:sync_pb.AutofillSpecifics.usage_timestamp)
}
const ::google::protobuf::RepeatedField<::google::protobuf::int64>&
AutofillSpecifics::usage_timestamp() const
{
    // @@protoc_insertion_point(field_list:sync_pb.AutofillSpecifics.usage_timestamp)
    return usage_timestamp_;
}
::google::protobuf::RepeatedField<::google::protobuf::int64>*
AutofillSpecifics::mutable_usage_timestamp()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.AutofillSpecifics.usage_timestamp)
    return &usage_timestamp_;
}

// optional .sync_pb.AutofillProfileSpecifics profile = 4;
bool AutofillSpecifics::has_profile() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void AutofillSpecifics::set_has_profile()
{
    _has_bits_[0] |= 0x00000008u;
}
void AutofillSpecifics::clear_has_profile()
{
    _has_bits_[0] &= ~0x00000008u;
}
void AutofillSpecifics::clear_profile()
{
    if (profile_ != NULL)
        profile_->::sync_pb::AutofillProfileSpecifics::Clear();
    clear_has_profile();
}
const ::sync_pb::AutofillProfileSpecifics& AutofillSpecifics::profile() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillSpecifics.profile)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return profile_ != NULL ? *profile_ : *default_instance().profile_;
#else
    return profile_ != NULL ? *profile_ : *default_instance_->profile_;
#endif
}
::sync_pb::AutofillProfileSpecifics* AutofillSpecifics::mutable_profile()
{
    set_has_profile();
    if (profile_ == NULL) {
        profile_ = new ::sync_pb::AutofillProfileSpecifics;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillSpecifics.profile)
    return profile_;
}
::sync_pb::AutofillProfileSpecifics* AutofillSpecifics::release_profile()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillSpecifics.profile)
    clear_has_profile();
    ::sync_pb::AutofillProfileSpecifics* temp = profile_;
    profile_ = NULL;
    return temp;
}
void AutofillSpecifics::set_allocated_profile(::sync_pb::AutofillProfileSpecifics* profile)
{
    delete profile_;
    profile_ = profile;
    if (profile) {
        set_has_profile();
    } else {
        clear_has_profile();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillSpecifics.profile)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForWalletMaskedCreditCard(
    WalletMaskedCreditCard* ptr)
{
    return ptr->mutable_unknown_fields();
}

bool WalletMaskedCreditCard_WalletCardStatus_IsValid(int value)
{
    switch (value) {
    case 0:
    case 1:
        return true;
    default:
        return false;
    }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WalletMaskedCreditCard_WalletCardStatus WalletMaskedCreditCard::VALID;
const WalletMaskedCreditCard_WalletCardStatus WalletMaskedCreditCard::EXPIRED;
const WalletMaskedCreditCard_WalletCardStatus WalletMaskedCreditCard::WalletCardStatus_MIN;
const WalletMaskedCreditCard_WalletCardStatus WalletMaskedCreditCard::WalletCardStatus_MAX;
const int WalletMaskedCreditCard::WalletCardStatus_ARRAYSIZE;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
bool WalletMaskedCreditCard_WalletCardType_IsValid(int value)
{
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
        return true;
    default:
        return false;
    }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::UNKNOWN;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::AMEX;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::DISCOVER;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::JCB;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::MAESTRO;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::MASTER_CARD;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::SOLO;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::SWITCH;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::VISA;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::WalletCardType_MIN;
const WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::WalletCardType_MAX;
const int WalletMaskedCreditCard::WalletCardType_ARRAYSIZE;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
bool WalletMaskedCreditCard_WalletCardClass_IsValid(int value)
{
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
        return true;
    default:
        return false;
    }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::UNKNOWN_CARD_CLASS;
const WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::CREDIT;
const WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::DEBIT;
const WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::PREPAID;
const WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::WalletCardClass_MIN;
const WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::WalletCardClass_MAX;
const int WalletMaskedCreditCard::WalletCardClass_ARRAYSIZE;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WalletMaskedCreditCard::kIdFieldNumber;
const int WalletMaskedCreditCard::kStatusFieldNumber;
const int WalletMaskedCreditCard::kNameOnCardFieldNumber;
const int WalletMaskedCreditCard::kTypeFieldNumber;
const int WalletMaskedCreditCard::kLastFourFieldNumber;
const int WalletMaskedCreditCard::kExpMonthFieldNumber;
const int WalletMaskedCreditCard::kExpYearFieldNumber;
const int WalletMaskedCreditCard::kBillingAddressIdFieldNumber;
const int WalletMaskedCreditCard::kCardClassFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

WalletMaskedCreditCard::WalletMaskedCreditCard()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.WalletMaskedCreditCard)
}

void WalletMaskedCreditCard::InitAsDefaultInstance()
{
}

WalletMaskedCreditCard::WalletMaskedCreditCard(const WalletMaskedCreditCard& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.WalletMaskedCreditCard)
}

void WalletMaskedCreditCard::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    status_ = 0;
    name_on_card_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    type_ = 0;
    last_four_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    exp_month_ = 0;
    exp_year_ = 0;
    billing_address_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    card_class_ = 0;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WalletMaskedCreditCard::~WalletMaskedCreditCard()
{
    // @@protoc_insertion_point(destructor:sync_pb.WalletMaskedCreditCard)
    SharedDtor();
}

void WalletMaskedCreditCard::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    name_on_card_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    last_four_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    billing_address_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void WalletMaskedCreditCard::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const WalletMaskedCreditCard& WalletMaskedCreditCard::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_autofill_5fspecifics_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_autofill_5fspecifics_2eproto();
#endif
    return *default_instance_;
}

WalletMaskedCreditCard* WalletMaskedCreditCard::default_instance_ = NULL;

WalletMaskedCreditCard* WalletMaskedCreditCard::New(::google::protobuf::Arena* arena) const
{
    WalletMaskedCreditCard* n = new WalletMaskedCreditCard;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void WalletMaskedCreditCard::Clear()
{
// @@protoc_insertion_point(message_clear_start:sync_pb.WalletMaskedCreditCard)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                            \
    _Pragma("clang diagnostic push")                                                                             \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(WalletMaskedCreditCard, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<WalletMaskedCreditCard*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    if (_has_bits_[0 / 32] & 255u) {
        ZR_(status_, type_);
        ZR_(exp_month_, exp_year_);
        if (has_id()) {
            id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_name_on_card()) {
            name_on_card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_last_four()) {
            last_four_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_billing_address_id()) {
            billing_address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }
    card_class_ = 0;

#undef ZR_HELPER_
#undef ZR_

    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool WalletMaskedCreditCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForWalletMaskedCreditCard, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.WalletMaskedCreditCard)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional string id = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_id()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(16))
                goto parse_status;
            break;
        }

        // optional .sync_pb.WalletMaskedCreditCard.WalletCardStatus status = 2;
        case 2: {
            if (tag == 16) {
            parse_status:
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::sync_pb::WalletMaskedCreditCard_WalletCardStatus_IsValid(value)) {
                    set_status(static_cast<::sync_pb::WalletMaskedCreditCard_WalletCardStatus>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(16);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(26))
                goto parse_name_on_card;
            break;
        }

        // optional string name_on_card = 3;
        case 3: {
            if (tag == 26) {
            parse_name_on_card:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_name_on_card()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(32))
                goto parse_type;
            break;
        }

        // optional .sync_pb.WalletMaskedCreditCard.WalletCardType type = 4;
        case 4: {
            if (tag == 32) {
            parse_type:
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::sync_pb::WalletMaskedCreditCard_WalletCardType_IsValid(value)) {
                    set_type(static_cast<::sync_pb::WalletMaskedCreditCard_WalletCardType>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(32);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(42))
                goto parse_last_four;
            break;
        }

        // optional string last_four = 5;
        case 5: {
            if (tag == 42) {
            parse_last_four:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_last_four()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(48))
                goto parse_exp_month;
            break;
        }

        // optional int32 exp_month = 6;
        case 6: {
            if (tag == 48) {
            parse_exp_month:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &exp_month_)));
                set_has_exp_month();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(56))
                goto parse_exp_year;
            break;
        }

        // optional int32 exp_year = 7;
        case 7: {
            if (tag == 56) {
            parse_exp_year:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &exp_year_)));
                set_has_exp_year();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(66))
                goto parse_billing_address_id;
            break;
        }

        // optional string billing_address_id = 8;
        case 8: {
            if (tag == 66) {
            parse_billing_address_id:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_billing_address_id()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(72))
                goto parse_card_class;
            break;
        }

        // optional .sync_pb.WalletMaskedCreditCard.WalletCardClass card_class = 9;
        case 9: {
            if (tag == 72) {
            parse_card_class:
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::sync_pb::WalletMaskedCreditCard_WalletCardClass_IsValid(value)) {
                    set_card_class(static_cast<::sync_pb::WalletMaskedCreditCard_WalletCardClass>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(72);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.WalletMaskedCreditCard)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.WalletMaskedCreditCard)
    return false;
#undef DO_
}

void WalletMaskedCreditCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.WalletMaskedCreditCard)
    // optional string id = 1;
    if (has_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->id(), output);
    }

    // optional .sync_pb.WalletMaskedCreditCard.WalletCardStatus status = 2;
    if (has_status()) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            2, this->status(), output);
    }

    // optional string name_on_card = 3;
    if (has_name_on_card()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            3, this->name_on_card(), output);
    }

    // optional .sync_pb.WalletMaskedCreditCard.WalletCardType type = 4;
    if (has_type()) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            4, this->type(), output);
    }

    // optional string last_four = 5;
    if (has_last_four()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            5, this->last_four(), output);
    }

    // optional int32 exp_month = 6;
    if (has_exp_month()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->exp_month(), output);
    }

    // optional int32 exp_year = 7;
    if (has_exp_year()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->exp_year(), output);
    }

    // optional string billing_address_id = 8;
    if (has_billing_address_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            8, this->billing_address_id(), output);
    }

    // optional .sync_pb.WalletMaskedCreditCard.WalletCardClass card_class = 9;
    if (has_card_class()) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            9, this->card_class(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.WalletMaskedCreditCard)
}

int WalletMaskedCreditCard::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.WalletMaskedCreditCard)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 255u) {
        // optional string id = 1;
        if (has_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->id());
        }

        // optional .sync_pb.WalletMaskedCreditCard.WalletCardStatus status = 2;
        if (has_status()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
        }

        // optional string name_on_card = 3;
        if (has_name_on_card()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->name_on_card());
        }

        // optional .sync_pb.WalletMaskedCreditCard.WalletCardType type = 4;
        if (has_type()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
        }

        // optional string last_four = 5;
        if (has_last_four()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->last_four());
        }

        // optional int32 exp_month = 6;
        if (has_exp_month()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->exp_month());
        }

        // optional int32 exp_year = 7;
        if (has_exp_year()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->exp_year());
        }

        // optional string billing_address_id = 8;
        if (has_billing_address_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->billing_address_id());
        }
    }
    // optional .sync_pb.WalletMaskedCreditCard.WalletCardClass card_class = 9;
    if (has_card_class()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->card_class());
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void WalletMaskedCreditCard::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const WalletMaskedCreditCard*>(&from));
}

void WalletMaskedCreditCard::MergeFrom(const WalletMaskedCreditCard& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.WalletMaskedCreditCard)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_id()) {
            set_has_id();
            id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
        }
        if (from.has_status()) {
            set_status(from.status());
        }
        if (from.has_name_on_card()) {
            set_has_name_on_card();
            name_on_card_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_on_card_);
        }
        if (from.has_type()) {
            set_type(from.type());
        }
        if (from.has_last_four()) {
            set_has_last_four();
            last_four_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_four_);
        }
        if (from.has_exp_month()) {
            set_exp_month(from.exp_month());
        }
        if (from.has_exp_year()) {
            set_exp_year(from.exp_year());
        }
        if (from.has_billing_address_id()) {
            set_has_billing_address_id();
            billing_address_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.billing_address_id_);
        }
    }
    if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
        if (from.has_card_class()) {
            set_card_class(from.card_class());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void WalletMaskedCreditCard::CopyFrom(const WalletMaskedCreditCard& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.WalletMaskedCreditCard)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool WalletMaskedCreditCard::IsInitialized() const
{

    return true;
}

void WalletMaskedCreditCard::Swap(WalletMaskedCreditCard* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void WalletMaskedCreditCard::InternalSwap(WalletMaskedCreditCard* other)
{
    id_.Swap(&other->id_);
    std::swap(status_, other->status_);
    name_on_card_.Swap(&other->name_on_card_);
    std::swap(type_, other->type_);
    last_four_.Swap(&other->last_four_);
    std::swap(exp_month_, other->exp_month_);
    std::swap(exp_year_, other->exp_year_);
    billing_address_id_.Swap(&other->billing_address_id_);
    std::swap(card_class_, other->card_class_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string WalletMaskedCreditCard::GetTypeName() const
{
    return "sync_pb.WalletMaskedCreditCard";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WalletMaskedCreditCard

// optional string id = 1;
bool WalletMaskedCreditCard::has_id() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void WalletMaskedCreditCard::set_has_id()
{
    _has_bits_[0] |= 0x00000001u;
}
void WalletMaskedCreditCard::clear_has_id()
{
    _has_bits_[0] &= ~0x00000001u;
}
void WalletMaskedCreditCard::clear_id()
{
    id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_id();
}
const ::std::string& WalletMaskedCreditCard::id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.id)
    return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMaskedCreditCard::set_id(const ::std::string& value)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.id)
}
void WalletMaskedCreditCard::set_id(const char* value)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletMaskedCreditCard.id)
}
void WalletMaskedCreditCard::set_id(const char* value, size_t size)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMaskedCreditCard.id)
}
::std::string* WalletMaskedCreditCard::mutable_id()
{
    set_has_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletMaskedCreditCard.id)
    return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletMaskedCreditCard::release_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletMaskedCreditCard.id)
    clear_has_id();
    return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMaskedCreditCard::set_allocated_id(::std::string* id)
{
    if (id != NULL) {
        set_has_id();
    } else {
        clear_has_id();
    }
    id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMaskedCreditCard.id)
}

// optional .sync_pb.WalletMaskedCreditCard.WalletCardStatus status = 2;
bool WalletMaskedCreditCard::has_status() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void WalletMaskedCreditCard::set_has_status()
{
    _has_bits_[0] |= 0x00000002u;
}
void WalletMaskedCreditCard::clear_has_status()
{
    _has_bits_[0] &= ~0x00000002u;
}
void WalletMaskedCreditCard::clear_status()
{
    status_ = 0;
    clear_has_status();
}
::sync_pb::WalletMaskedCreditCard_WalletCardStatus WalletMaskedCreditCard::status() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.status)
    return static_cast<::sync_pb::WalletMaskedCreditCard_WalletCardStatus>(status_);
}
void WalletMaskedCreditCard::set_status(::sync_pb::WalletMaskedCreditCard_WalletCardStatus value)
{
    assert(::sync_pb::WalletMaskedCreditCard_WalletCardStatus_IsValid(value));
    set_has_status();
    status_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.status)
}

// optional string name_on_card = 3;
bool WalletMaskedCreditCard::has_name_on_card() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void WalletMaskedCreditCard::set_has_name_on_card()
{
    _has_bits_[0] |= 0x00000004u;
}
void WalletMaskedCreditCard::clear_has_name_on_card()
{
    _has_bits_[0] &= ~0x00000004u;
}
void WalletMaskedCreditCard::clear_name_on_card()
{
    name_on_card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_name_on_card();
}
const ::std::string& WalletMaskedCreditCard::name_on_card() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.name_on_card)
    return name_on_card_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMaskedCreditCard::set_name_on_card(const ::std::string& value)
{
    set_has_name_on_card();
    name_on_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.name_on_card)
}
void WalletMaskedCreditCard::set_name_on_card(const char* value)
{
    set_has_name_on_card();
    name_on_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletMaskedCreditCard.name_on_card)
}
void WalletMaskedCreditCard::set_name_on_card(const char* value, size_t size)
{
    set_has_name_on_card();
    name_on_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMaskedCreditCard.name_on_card)
}
::std::string* WalletMaskedCreditCard::mutable_name_on_card()
{
    set_has_name_on_card();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletMaskedCreditCard.name_on_card)
    return name_on_card_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletMaskedCreditCard::release_name_on_card()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletMaskedCreditCard.name_on_card)
    clear_has_name_on_card();
    return name_on_card_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMaskedCreditCard::set_allocated_name_on_card(::std::string* name_on_card)
{
    if (name_on_card != NULL) {
        set_has_name_on_card();
    } else {
        clear_has_name_on_card();
    }
    name_on_card_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name_on_card);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMaskedCreditCard.name_on_card)
}

// optional .sync_pb.WalletMaskedCreditCard.WalletCardType type = 4;
bool WalletMaskedCreditCard::has_type() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void WalletMaskedCreditCard::set_has_type()
{
    _has_bits_[0] |= 0x00000008u;
}
void WalletMaskedCreditCard::clear_has_type()
{
    _has_bits_[0] &= ~0x00000008u;
}
void WalletMaskedCreditCard::clear_type()
{
    type_ = 0;
    clear_has_type();
}
::sync_pb::WalletMaskedCreditCard_WalletCardType WalletMaskedCreditCard::type() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.type)
    return static_cast<::sync_pb::WalletMaskedCreditCard_WalletCardType>(type_);
}
void WalletMaskedCreditCard::set_type(::sync_pb::WalletMaskedCreditCard_WalletCardType value)
{
    assert(::sync_pb::WalletMaskedCreditCard_WalletCardType_IsValid(value));
    set_has_type();
    type_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.type)
}

// optional string last_four = 5;
bool WalletMaskedCreditCard::has_last_four() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void WalletMaskedCreditCard::set_has_last_four()
{
    _has_bits_[0] |= 0x00000010u;
}
void WalletMaskedCreditCard::clear_has_last_four()
{
    _has_bits_[0] &= ~0x00000010u;
}
void WalletMaskedCreditCard::clear_last_four()
{
    last_four_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_last_four();
}
const ::std::string& WalletMaskedCreditCard::last_four() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.last_four)
    return last_four_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMaskedCreditCard::set_last_four(const ::std::string& value)
{
    set_has_last_four();
    last_four_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.last_four)
}
void WalletMaskedCreditCard::set_last_four(const char* value)
{
    set_has_last_four();
    last_four_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletMaskedCreditCard.last_four)
}
void WalletMaskedCreditCard::set_last_four(const char* value, size_t size)
{
    set_has_last_four();
    last_four_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMaskedCreditCard.last_four)
}
::std::string* WalletMaskedCreditCard::mutable_last_four()
{
    set_has_last_four();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletMaskedCreditCard.last_four)
    return last_four_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletMaskedCreditCard::release_last_four()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletMaskedCreditCard.last_four)
    clear_has_last_four();
    return last_four_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMaskedCreditCard::set_allocated_last_four(::std::string* last_four)
{
    if (last_four != NULL) {
        set_has_last_four();
    } else {
        clear_has_last_four();
    }
    last_four_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_four);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMaskedCreditCard.last_four)
}

// optional int32 exp_month = 6;
bool WalletMaskedCreditCard::has_exp_month() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
void WalletMaskedCreditCard::set_has_exp_month()
{
    _has_bits_[0] |= 0x00000020u;
}
void WalletMaskedCreditCard::clear_has_exp_month()
{
    _has_bits_[0] &= ~0x00000020u;
}
void WalletMaskedCreditCard::clear_exp_month()
{
    exp_month_ = 0;
    clear_has_exp_month();
}
::google::protobuf::int32 WalletMaskedCreditCard::exp_month() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.exp_month)
    return exp_month_;
}
void WalletMaskedCreditCard::set_exp_month(::google::protobuf::int32 value)
{
    set_has_exp_month();
    exp_month_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.exp_month)
}

// optional int32 exp_year = 7;
bool WalletMaskedCreditCard::has_exp_year() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
void WalletMaskedCreditCard::set_has_exp_year()
{
    _has_bits_[0] |= 0x00000040u;
}
void WalletMaskedCreditCard::clear_has_exp_year()
{
    _has_bits_[0] &= ~0x00000040u;
}
void WalletMaskedCreditCard::clear_exp_year()
{
    exp_year_ = 0;
    clear_has_exp_year();
}
::google::protobuf::int32 WalletMaskedCreditCard::exp_year() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.exp_year)
    return exp_year_;
}
void WalletMaskedCreditCard::set_exp_year(::google::protobuf::int32 value)
{
    set_has_exp_year();
    exp_year_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.exp_year)
}

// optional string billing_address_id = 8;
bool WalletMaskedCreditCard::has_billing_address_id() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
void WalletMaskedCreditCard::set_has_billing_address_id()
{
    _has_bits_[0] |= 0x00000080u;
}
void WalletMaskedCreditCard::clear_has_billing_address_id()
{
    _has_bits_[0] &= ~0x00000080u;
}
void WalletMaskedCreditCard::clear_billing_address_id()
{
    billing_address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_billing_address_id();
}
const ::std::string& WalletMaskedCreditCard::billing_address_id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.billing_address_id)
    return billing_address_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMaskedCreditCard::set_billing_address_id(const ::std::string& value)
{
    set_has_billing_address_id();
    billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.billing_address_id)
}
void WalletMaskedCreditCard::set_billing_address_id(const char* value)
{
    set_has_billing_address_id();
    billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletMaskedCreditCard.billing_address_id)
}
void WalletMaskedCreditCard::set_billing_address_id(const char* value, size_t size)
{
    set_has_billing_address_id();
    billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMaskedCreditCard.billing_address_id)
}
::std::string* WalletMaskedCreditCard::mutable_billing_address_id()
{
    set_has_billing_address_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletMaskedCreditCard.billing_address_id)
    return billing_address_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletMaskedCreditCard::release_billing_address_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletMaskedCreditCard.billing_address_id)
    clear_has_billing_address_id();
    return billing_address_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMaskedCreditCard::set_allocated_billing_address_id(::std::string* billing_address_id)
{
    if (billing_address_id != NULL) {
        set_has_billing_address_id();
    } else {
        clear_has_billing_address_id();
    }
    billing_address_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), billing_address_id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMaskedCreditCard.billing_address_id)
}

// optional .sync_pb.WalletMaskedCreditCard.WalletCardClass card_class = 9;
bool WalletMaskedCreditCard::has_card_class() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
void WalletMaskedCreditCard::set_has_card_class()
{
    _has_bits_[0] |= 0x00000100u;
}
void WalletMaskedCreditCard::clear_has_card_class()
{
    _has_bits_[0] &= ~0x00000100u;
}
void WalletMaskedCreditCard::clear_card_class()
{
    card_class_ = 0;
    clear_has_card_class();
}
::sync_pb::WalletMaskedCreditCard_WalletCardClass WalletMaskedCreditCard::card_class() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMaskedCreditCard.card_class)
    return static_cast<::sync_pb::WalletMaskedCreditCard_WalletCardClass>(card_class_);
}
void WalletMaskedCreditCard::set_card_class(::sync_pb::WalletMaskedCreditCard_WalletCardClass value)
{
    assert(::sync_pb::WalletMaskedCreditCard_WalletCardClass_IsValid(value));
    set_has_card_class();
    card_class_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMaskedCreditCard.card_class)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForWalletPostalAddress(
    WalletPostalAddress* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WalletPostalAddress::kIdFieldNumber;
const int WalletPostalAddress::kRecipientNameFieldNumber;
const int WalletPostalAddress::kCompanyNameFieldNumber;
const int WalletPostalAddress::kStreetAddressFieldNumber;
const int WalletPostalAddress::kAddress1FieldNumber;
const int WalletPostalAddress::kAddress2FieldNumber;
const int WalletPostalAddress::kAddress3FieldNumber;
const int WalletPostalAddress::kAddress4FieldNumber;
const int WalletPostalAddress::kPostalCodeFieldNumber;
const int WalletPostalAddress::kSortingCodeFieldNumber;
const int WalletPostalAddress::kCountryCodeFieldNumber;
const int WalletPostalAddress::kLanguageCodeFieldNumber;
const int WalletPostalAddress::kPhoneNumberFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

WalletPostalAddress::WalletPostalAddress()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.WalletPostalAddress)
}

void WalletPostalAddress::InitAsDefaultInstance()
{
}

WalletPostalAddress::WalletPostalAddress(const WalletPostalAddress& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.WalletPostalAddress)
}

void WalletPostalAddress::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    recipient_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    company_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    postal_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    sorting_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WalletPostalAddress::~WalletPostalAddress()
{
    // @@protoc_insertion_point(destructor:sync_pb.WalletPostalAddress)
    SharedDtor();
}

void WalletPostalAddress::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    recipient_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    company_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    postal_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    sorting_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void WalletPostalAddress::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const WalletPostalAddress& WalletPostalAddress::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_autofill_5fspecifics_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_autofill_5fspecifics_2eproto();
#endif
    return *default_instance_;
}

WalletPostalAddress* WalletPostalAddress::default_instance_ = NULL;

WalletPostalAddress* WalletPostalAddress::New(::google::protobuf::Arena* arena) const
{
    WalletPostalAddress* n = new WalletPostalAddress;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void WalletPostalAddress::Clear()
{
    // @@protoc_insertion_point(message_clear_start:sync_pb.WalletPostalAddress)
    if (_has_bits_[0 / 32] & 247u) {
        if (has_id()) {
            id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_recipient_name()) {
            recipient_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_company_name()) {
            company_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_address_1()) {
            address_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_address_2()) {
            address_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_address_3()) {
            address_3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_address_4()) {
            address_4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }
    if (_has_bits_[8 / 32] & 7936u) {
        if (has_postal_code()) {
            postal_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_sorting_code()) {
            sorting_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_country_code()) {
            country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_language_code()) {
            language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_phone_number()) {
            phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }
    street_address_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool WalletPostalAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForWalletPostalAddress, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.WalletPostalAddress)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional string id = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_id()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_company_name;
            break;
        }

        // optional string company_name = 2;
        case 2: {
            if (tag == 18) {
            parse_company_name:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_company_name()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(26))
                goto parse_street_address;
            break;
        }

        // repeated string street_address = 3;
        case 3: {
            if (tag == 26) {
            parse_street_address:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->add_street_address()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(26))
                goto parse_street_address;
            if (input->ExpectTag(34))
                goto parse_address_1;
            break;
        }

        // optional string address_1 = 4;
        case 4: {
            if (tag == 34) {
            parse_address_1:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_address_1()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(42))
                goto parse_address_2;
            break;
        }

        // optional string address_2 = 5;
        case 5: {
            if (tag == 42) {
            parse_address_2:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_address_2()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(50))
                goto parse_address_3;
            break;
        }

        // optional string address_3 = 6;
        case 6: {
            if (tag == 50) {
            parse_address_3:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_address_3()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(58))
                goto parse_address_4;
            break;
        }

        // optional string address_4 = 7;
        case 7: {
            if (tag == 58) {
            parse_address_4:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_address_4()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(66))
                goto parse_postal_code;
            break;
        }

        // optional string postal_code = 8;
        case 8: {
            if (tag == 66) {
            parse_postal_code:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_postal_code()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(74))
                goto parse_sorting_code;
            break;
        }

        // optional string sorting_code = 9;
        case 9: {
            if (tag == 74) {
            parse_sorting_code:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_sorting_code()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(82))
                goto parse_country_code;
            break;
        }

        // optional string country_code = 10;
        case 10: {
            if (tag == 82) {
            parse_country_code:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_country_code()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(90))
                goto parse_language_code;
            break;
        }

        // optional string language_code = 11;
        case 11: {
            if (tag == 90) {
            parse_language_code:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_language_code()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(98))
                goto parse_recipient_name;
            break;
        }

        // optional string recipient_name = 12;
        case 12: {
            if (tag == 98) {
            parse_recipient_name:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_recipient_name()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(106))
                goto parse_phone_number;
            break;
        }

        // optional string phone_number = 13;
        case 13: {
            if (tag == 106) {
            parse_phone_number:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_phone_number()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.WalletPostalAddress)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.WalletPostalAddress)
    return false;
#undef DO_
}

void WalletPostalAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.WalletPostalAddress)
    // optional string id = 1;
    if (has_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->id(), output);
    }

    // optional string company_name = 2;
    if (has_company_name()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            2, this->company_name(), output);
    }

    // repeated string street_address = 3;
    for (int i = 0; i < this->street_address_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteString(
            3, this->street_address(i), output);
    }

    // optional string address_1 = 4;
    if (has_address_1()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            4, this->address_1(), output);
    }

    // optional string address_2 = 5;
    if (has_address_2()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            5, this->address_2(), output);
    }

    // optional string address_3 = 6;
    if (has_address_3()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            6, this->address_3(), output);
    }

    // optional string address_4 = 7;
    if (has_address_4()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            7, this->address_4(), output);
    }

    // optional string postal_code = 8;
    if (has_postal_code()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            8, this->postal_code(), output);
    }

    // optional string sorting_code = 9;
    if (has_sorting_code()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            9, this->sorting_code(), output);
    }

    // optional string country_code = 10;
    if (has_country_code()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            10, this->country_code(), output);
    }

    // optional string language_code = 11;
    if (has_language_code()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            11, this->language_code(), output);
    }

    // optional string recipient_name = 12;
    if (has_recipient_name()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            12, this->recipient_name(), output);
    }

    // optional string phone_number = 13;
    if (has_phone_number()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            13, this->phone_number(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.WalletPostalAddress)
}

int WalletPostalAddress::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.WalletPostalAddress)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 247u) {
        // optional string id = 1;
        if (has_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->id());
        }

        // optional string recipient_name = 12;
        if (has_recipient_name()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->recipient_name());
        }

        // optional string company_name = 2;
        if (has_company_name()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->company_name());
        }

        // optional string address_1 = 4;
        if (has_address_1()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->address_1());
        }

        // optional string address_2 = 5;
        if (has_address_2()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->address_2());
        }

        // optional string address_3 = 6;
        if (has_address_3()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->address_3());
        }

        // optional string address_4 = 7;
        if (has_address_4()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->address_4());
        }
    }
    if (_has_bits_[8 / 32] & 7936u) {
        // optional string postal_code = 8;
        if (has_postal_code()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->postal_code());
        }

        // optional string sorting_code = 9;
        if (has_sorting_code()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->sorting_code());
        }

        // optional string country_code = 10;
        if (has_country_code()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->country_code());
        }

        // optional string language_code = 11;
        if (has_language_code()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->language_code());
        }

        // optional string phone_number = 13;
        if (has_phone_number()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->phone_number());
        }
    }
    // repeated string street_address = 3;
    total_size += 1 * this->street_address_size();
    for (int i = 0; i < this->street_address_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this->street_address(i));
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void WalletPostalAddress::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const WalletPostalAddress*>(&from));
}

void WalletPostalAddress::MergeFrom(const WalletPostalAddress& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.WalletPostalAddress)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    street_address_.MergeFrom(from.street_address_);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_id()) {
            set_has_id();
            id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
        }
        if (from.has_recipient_name()) {
            set_has_recipient_name();
            recipient_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recipient_name_);
        }
        if (from.has_company_name()) {
            set_has_company_name();
            company_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.company_name_);
        }
        if (from.has_address_1()) {
            set_has_address_1();
            address_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_1_);
        }
        if (from.has_address_2()) {
            set_has_address_2();
            address_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_2_);
        }
        if (from.has_address_3()) {
            set_has_address_3();
            address_3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_3_);
        }
        if (from.has_address_4()) {
            set_has_address_4();
            address_4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_4_);
        }
    }
    if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
        if (from.has_postal_code()) {
            set_has_postal_code();
            postal_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.postal_code_);
        }
        if (from.has_sorting_code()) {
            set_has_sorting_code();
            sorting_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sorting_code_);
        }
        if (from.has_country_code()) {
            set_has_country_code();
            country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
        }
        if (from.has_language_code()) {
            set_has_language_code();
            language_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code_);
        }
        if (from.has_phone_number()) {
            set_has_phone_number();
            phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void WalletPostalAddress::CopyFrom(const WalletPostalAddress& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.WalletPostalAddress)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool WalletPostalAddress::IsInitialized() const
{

    return true;
}

void WalletPostalAddress::Swap(WalletPostalAddress* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void WalletPostalAddress::InternalSwap(WalletPostalAddress* other)
{
    id_.Swap(&other->id_);
    recipient_name_.Swap(&other->recipient_name_);
    company_name_.Swap(&other->company_name_);
    street_address_.UnsafeArenaSwap(&other->street_address_);
    address_1_.Swap(&other->address_1_);
    address_2_.Swap(&other->address_2_);
    address_3_.Swap(&other->address_3_);
    address_4_.Swap(&other->address_4_);
    postal_code_.Swap(&other->postal_code_);
    sorting_code_.Swap(&other->sorting_code_);
    country_code_.Swap(&other->country_code_);
    language_code_.Swap(&other->language_code_);
    phone_number_.Swap(&other->phone_number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string WalletPostalAddress::GetTypeName() const
{
    return "sync_pb.WalletPostalAddress";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WalletPostalAddress

// optional string id = 1;
bool WalletPostalAddress::has_id() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void WalletPostalAddress::set_has_id()
{
    _has_bits_[0] |= 0x00000001u;
}
void WalletPostalAddress::clear_has_id()
{
    _has_bits_[0] &= ~0x00000001u;
}
void WalletPostalAddress::clear_id()
{
    id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_id();
}
const ::std::string& WalletPostalAddress::id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.id)
    return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_id(const ::std::string& value)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.id)
}
void WalletPostalAddress::set_id(const char* value)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.id)
}
void WalletPostalAddress::set_id(const char* value, size_t size)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.id)
}
::std::string* WalletPostalAddress::mutable_id()
{
    set_has_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.id)
    return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.id)
    clear_has_id();
    return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_id(::std::string* id)
{
    if (id != NULL) {
        set_has_id();
    } else {
        clear_has_id();
    }
    id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.id)
}

// optional string recipient_name = 12;
bool WalletPostalAddress::has_recipient_name() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void WalletPostalAddress::set_has_recipient_name()
{
    _has_bits_[0] |= 0x00000002u;
}
void WalletPostalAddress::clear_has_recipient_name()
{
    _has_bits_[0] &= ~0x00000002u;
}
void WalletPostalAddress::clear_recipient_name()
{
    recipient_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_recipient_name();
}
const ::std::string& WalletPostalAddress::recipient_name() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.recipient_name)
    return recipient_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_recipient_name(const ::std::string& value)
{
    set_has_recipient_name();
    recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.recipient_name)
}
void WalletPostalAddress::set_recipient_name(const char* value)
{
    set_has_recipient_name();
    recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.recipient_name)
}
void WalletPostalAddress::set_recipient_name(const char* value, size_t size)
{
    set_has_recipient_name();
    recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.recipient_name)
}
::std::string* WalletPostalAddress::mutable_recipient_name()
{
    set_has_recipient_name();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.recipient_name)
    return recipient_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_recipient_name()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.recipient_name)
    clear_has_recipient_name();
    return recipient_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_recipient_name(::std::string* recipient_name)
{
    if (recipient_name != NULL) {
        set_has_recipient_name();
    } else {
        clear_has_recipient_name();
    }
    recipient_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recipient_name);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.recipient_name)
}

// optional string company_name = 2;
bool WalletPostalAddress::has_company_name() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void WalletPostalAddress::set_has_company_name()
{
    _has_bits_[0] |= 0x00000004u;
}
void WalletPostalAddress::clear_has_company_name()
{
    _has_bits_[0] &= ~0x00000004u;
}
void WalletPostalAddress::clear_company_name()
{
    company_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_company_name();
}
const ::std::string& WalletPostalAddress::company_name() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.company_name)
    return company_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_company_name(const ::std::string& value)
{
    set_has_company_name();
    company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.company_name)
}
void WalletPostalAddress::set_company_name(const char* value)
{
    set_has_company_name();
    company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.company_name)
}
void WalletPostalAddress::set_company_name(const char* value, size_t size)
{
    set_has_company_name();
    company_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.company_name)
}
::std::string* WalletPostalAddress::mutable_company_name()
{
    set_has_company_name();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.company_name)
    return company_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_company_name()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.company_name)
    clear_has_company_name();
    return company_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_company_name(::std::string* company_name)
{
    if (company_name != NULL) {
        set_has_company_name();
    } else {
        clear_has_company_name();
    }
    company_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), company_name);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.company_name)
}

// repeated string street_address = 3;
int WalletPostalAddress::street_address_size() const
{
    return street_address_.size();
}
void WalletPostalAddress::clear_street_address()
{
    street_address_.Clear();
}
const ::std::string& WalletPostalAddress::street_address(int index) const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.street_address)
    return street_address_.Get(index);
}
::std::string* WalletPostalAddress::mutable_street_address(int index)
{
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.street_address)
    return street_address_.Mutable(index);
}
void WalletPostalAddress::set_street_address(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.street_address)
    street_address_.Mutable(index)->assign(value);
}
void WalletPostalAddress::set_street_address(int index, const char* value)
{
    street_address_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.street_address)
}
void WalletPostalAddress::set_street_address(int index, const char* value, size_t size)
{
    street_address_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.street_address)
}
::std::string* WalletPostalAddress::add_street_address()
{
    // @@protoc_insertion_point(field_add_mutable:sync_pb.WalletPostalAddress.street_address)
    return street_address_.Add();
}
void WalletPostalAddress::add_street_address(const ::std::string& value)
{
    street_address_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:sync_pb.WalletPostalAddress.street_address)
}
void WalletPostalAddress::add_street_address(const char* value)
{
    street_address_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:sync_pb.WalletPostalAddress.street_address)
}
void WalletPostalAddress::add_street_address(const char* value, size_t size)
{
    street_address_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:sync_pb.WalletPostalAddress.street_address)
}
const ::google::protobuf::RepeatedPtrField<::std::string>&
WalletPostalAddress::street_address() const
{
    // @@protoc_insertion_point(field_list:sync_pb.WalletPostalAddress.street_address)
    return street_address_;
}
::google::protobuf::RepeatedPtrField<::std::string>*
WalletPostalAddress::mutable_street_address()
{
    // @@protoc_insertion_point(field_mutable_list:sync_pb.WalletPostalAddress.street_address)
    return &street_address_;
}

// optional string address_1 = 4;
bool WalletPostalAddress::has_address_1() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void WalletPostalAddress::set_has_address_1()
{
    _has_bits_[0] |= 0x00000010u;
}
void WalletPostalAddress::clear_has_address_1()
{
    _has_bits_[0] &= ~0x00000010u;
}
void WalletPostalAddress::clear_address_1()
{
    address_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_1();
}
const ::std::string& WalletPostalAddress::address_1() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.address_1)
    return address_1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_address_1(const ::std::string& value)
{
    set_has_address_1();
    address_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.address_1)
}
void WalletPostalAddress::set_address_1(const char* value)
{
    set_has_address_1();
    address_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.address_1)
}
void WalletPostalAddress::set_address_1(const char* value, size_t size)
{
    set_has_address_1();
    address_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.address_1)
}
::std::string* WalletPostalAddress::mutable_address_1()
{
    set_has_address_1();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.address_1)
    return address_1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_address_1()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.address_1)
    clear_has_address_1();
    return address_1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_address_1(::std::string* address_1)
{
    if (address_1 != NULL) {
        set_has_address_1();
    } else {
        clear_has_address_1();
    }
    address_1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_1);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.address_1)
}

// optional string address_2 = 5;
bool WalletPostalAddress::has_address_2() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
void WalletPostalAddress::set_has_address_2()
{
    _has_bits_[0] |= 0x00000020u;
}
void WalletPostalAddress::clear_has_address_2()
{
    _has_bits_[0] &= ~0x00000020u;
}
void WalletPostalAddress::clear_address_2()
{
    address_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_2();
}
const ::std::string& WalletPostalAddress::address_2() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.address_2)
    return address_2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_address_2(const ::std::string& value)
{
    set_has_address_2();
    address_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.address_2)
}
void WalletPostalAddress::set_address_2(const char* value)
{
    set_has_address_2();
    address_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.address_2)
}
void WalletPostalAddress::set_address_2(const char* value, size_t size)
{
    set_has_address_2();
    address_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.address_2)
}
::std::string* WalletPostalAddress::mutable_address_2()
{
    set_has_address_2();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.address_2)
    return address_2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_address_2()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.address_2)
    clear_has_address_2();
    return address_2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_address_2(::std::string* address_2)
{
    if (address_2 != NULL) {
        set_has_address_2();
    } else {
        clear_has_address_2();
    }
    address_2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_2);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.address_2)
}

// optional string address_3 = 6;
bool WalletPostalAddress::has_address_3() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
void WalletPostalAddress::set_has_address_3()
{
    _has_bits_[0] |= 0x00000040u;
}
void WalletPostalAddress::clear_has_address_3()
{
    _has_bits_[0] &= ~0x00000040u;
}
void WalletPostalAddress::clear_address_3()
{
    address_3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_3();
}
const ::std::string& WalletPostalAddress::address_3() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.address_3)
    return address_3_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_address_3(const ::std::string& value)
{
    set_has_address_3();
    address_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.address_3)
}
void WalletPostalAddress::set_address_3(const char* value)
{
    set_has_address_3();
    address_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.address_3)
}
void WalletPostalAddress::set_address_3(const char* value, size_t size)
{
    set_has_address_3();
    address_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.address_3)
}
::std::string* WalletPostalAddress::mutable_address_3()
{
    set_has_address_3();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.address_3)
    return address_3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_address_3()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.address_3)
    clear_has_address_3();
    return address_3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_address_3(::std::string* address_3)
{
    if (address_3 != NULL) {
        set_has_address_3();
    } else {
        clear_has_address_3();
    }
    address_3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_3);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.address_3)
}

// optional string address_4 = 7;
bool WalletPostalAddress::has_address_4() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
void WalletPostalAddress::set_has_address_4()
{
    _has_bits_[0] |= 0x00000080u;
}
void WalletPostalAddress::clear_has_address_4()
{
    _has_bits_[0] &= ~0x00000080u;
}
void WalletPostalAddress::clear_address_4()
{
    address_4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_address_4();
}
const ::std::string& WalletPostalAddress::address_4() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.address_4)
    return address_4_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_address_4(const ::std::string& value)
{
    set_has_address_4();
    address_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.address_4)
}
void WalletPostalAddress::set_address_4(const char* value)
{
    set_has_address_4();
    address_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.address_4)
}
void WalletPostalAddress::set_address_4(const char* value, size_t size)
{
    set_has_address_4();
    address_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.address_4)
}
::std::string* WalletPostalAddress::mutable_address_4()
{
    set_has_address_4();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.address_4)
    return address_4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_address_4()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.address_4)
    clear_has_address_4();
    return address_4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_address_4(::std::string* address_4)
{
    if (address_4 != NULL) {
        set_has_address_4();
    } else {
        clear_has_address_4();
    }
    address_4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_4);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.address_4)
}

// optional string postal_code = 8;
bool WalletPostalAddress::has_postal_code() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
void WalletPostalAddress::set_has_postal_code()
{
    _has_bits_[0] |= 0x00000100u;
}
void WalletPostalAddress::clear_has_postal_code()
{
    _has_bits_[0] &= ~0x00000100u;
}
void WalletPostalAddress::clear_postal_code()
{
    postal_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_postal_code();
}
const ::std::string& WalletPostalAddress::postal_code() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.postal_code)
    return postal_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_postal_code(const ::std::string& value)
{
    set_has_postal_code();
    postal_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.postal_code)
}
void WalletPostalAddress::set_postal_code(const char* value)
{
    set_has_postal_code();
    postal_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.postal_code)
}
void WalletPostalAddress::set_postal_code(const char* value, size_t size)
{
    set_has_postal_code();
    postal_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.postal_code)
}
::std::string* WalletPostalAddress::mutable_postal_code()
{
    set_has_postal_code();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.postal_code)
    return postal_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_postal_code()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.postal_code)
    clear_has_postal_code();
    return postal_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_postal_code(::std::string* postal_code)
{
    if (postal_code != NULL) {
        set_has_postal_code();
    } else {
        clear_has_postal_code();
    }
    postal_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), postal_code);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.postal_code)
}

// optional string sorting_code = 9;
bool WalletPostalAddress::has_sorting_code() const
{
    return (_has_bits_[0] & 0x00000200u) != 0;
}
void WalletPostalAddress::set_has_sorting_code()
{
    _has_bits_[0] |= 0x00000200u;
}
void WalletPostalAddress::clear_has_sorting_code()
{
    _has_bits_[0] &= ~0x00000200u;
}
void WalletPostalAddress::clear_sorting_code()
{
    sorting_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_sorting_code();
}
const ::std::string& WalletPostalAddress::sorting_code() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.sorting_code)
    return sorting_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_sorting_code(const ::std::string& value)
{
    set_has_sorting_code();
    sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.sorting_code)
}
void WalletPostalAddress::set_sorting_code(const char* value)
{
    set_has_sorting_code();
    sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.sorting_code)
}
void WalletPostalAddress::set_sorting_code(const char* value, size_t size)
{
    set_has_sorting_code();
    sorting_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.sorting_code)
}
::std::string* WalletPostalAddress::mutable_sorting_code()
{
    set_has_sorting_code();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.sorting_code)
    return sorting_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_sorting_code()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.sorting_code)
    clear_has_sorting_code();
    return sorting_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_sorting_code(::std::string* sorting_code)
{
    if (sorting_code != NULL) {
        set_has_sorting_code();
    } else {
        clear_has_sorting_code();
    }
    sorting_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sorting_code);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.sorting_code)
}

// optional string country_code = 10;
bool WalletPostalAddress::has_country_code() const
{
    return (_has_bits_[0] & 0x00000400u) != 0;
}
void WalletPostalAddress::set_has_country_code()
{
    _has_bits_[0] |= 0x00000400u;
}
void WalletPostalAddress::clear_has_country_code()
{
    _has_bits_[0] &= ~0x00000400u;
}
void WalletPostalAddress::clear_country_code()
{
    country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_country_code();
}
const ::std::string& WalletPostalAddress::country_code() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.country_code)
    return country_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_country_code(const ::std::string& value)
{
    set_has_country_code();
    country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.country_code)
}
void WalletPostalAddress::set_country_code(const char* value)
{
    set_has_country_code();
    country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.country_code)
}
void WalletPostalAddress::set_country_code(const char* value, size_t size)
{
    set_has_country_code();
    country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.country_code)
}
::std::string* WalletPostalAddress::mutable_country_code()
{
    set_has_country_code();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.country_code)
    return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_country_code()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.country_code)
    clear_has_country_code();
    return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_country_code(::std::string* country_code)
{
    if (country_code != NULL) {
        set_has_country_code();
    } else {
        clear_has_country_code();
    }
    country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.country_code)
}

// optional string language_code = 11;
bool WalletPostalAddress::has_language_code() const
{
    return (_has_bits_[0] & 0x00000800u) != 0;
}
void WalletPostalAddress::set_has_language_code()
{
    _has_bits_[0] |= 0x00000800u;
}
void WalletPostalAddress::clear_has_language_code()
{
    _has_bits_[0] &= ~0x00000800u;
}
void WalletPostalAddress::clear_language_code()
{
    language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_language_code();
}
const ::std::string& WalletPostalAddress::language_code() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.language_code)
    return language_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_language_code(const ::std::string& value)
{
    set_has_language_code();
    language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.language_code)
}
void WalletPostalAddress::set_language_code(const char* value)
{
    set_has_language_code();
    language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.language_code)
}
void WalletPostalAddress::set_language_code(const char* value, size_t size)
{
    set_has_language_code();
    language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.language_code)
}
::std::string* WalletPostalAddress::mutable_language_code()
{
    set_has_language_code();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.language_code)
    return language_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_language_code()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.language_code)
    clear_has_language_code();
    return language_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_language_code(::std::string* language_code)
{
    if (language_code != NULL) {
        set_has_language_code();
    } else {
        clear_has_language_code();
    }
    language_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.language_code)
}

// optional string phone_number = 13;
bool WalletPostalAddress::has_phone_number() const
{
    return (_has_bits_[0] & 0x00001000u) != 0;
}
void WalletPostalAddress::set_has_phone_number()
{
    _has_bits_[0] |= 0x00001000u;
}
void WalletPostalAddress::clear_has_phone_number()
{
    _has_bits_[0] &= ~0x00001000u;
}
void WalletPostalAddress::clear_phone_number()
{
    phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_phone_number();
}
const ::std::string& WalletPostalAddress::phone_number() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletPostalAddress.phone_number)
    return phone_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_phone_number(const ::std::string& value)
{
    set_has_phone_number();
    phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletPostalAddress.phone_number)
}
void WalletPostalAddress::set_phone_number(const char* value)
{
    set_has_phone_number();
    phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletPostalAddress.phone_number)
}
void WalletPostalAddress::set_phone_number(const char* value, size_t size)
{
    set_has_phone_number();
    phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletPostalAddress.phone_number)
}
::std::string* WalletPostalAddress::mutable_phone_number()
{
    set_has_phone_number();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletPostalAddress.phone_number)
    return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletPostalAddress::release_phone_number()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletPostalAddress.phone_number)
    clear_has_phone_number();
    return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletPostalAddress::set_allocated_phone_number(::std::string* phone_number)
{
    if (phone_number != NULL) {
        set_has_phone_number();
    } else {
        clear_has_phone_number();
    }
    phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletPostalAddress.phone_number)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForAutofillWalletSpecifics(
    AutofillWalletSpecifics* ptr)
{
    return ptr->mutable_unknown_fields();
}

bool AutofillWalletSpecifics_WalletInfoType_IsValid(int value)
{
    switch (value) {
    case 0:
    case 1:
    case 2:
        return true;
    default:
        return false;
    }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics::UNKNOWN;
const AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics::MASKED_CREDIT_CARD;
const AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics::POSTAL_ADDRESS;
const AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics::WalletInfoType_MIN;
const AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics::WalletInfoType_MAX;
const int AutofillWalletSpecifics::WalletInfoType_ARRAYSIZE;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutofillWalletSpecifics::kTypeFieldNumber;
const int AutofillWalletSpecifics::kMaskedCardFieldNumber;
const int AutofillWalletSpecifics::kAddressFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

AutofillWalletSpecifics::AutofillWalletSpecifics()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.AutofillWalletSpecifics)
}

void AutofillWalletSpecifics::InitAsDefaultInstance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    masked_card_ = const_cast<::sync_pb::WalletMaskedCreditCard*>(
        ::sync_pb::WalletMaskedCreditCard::internal_default_instance());
#else
    masked_card_ = const_cast<::sync_pb::WalletMaskedCreditCard*>(&::sync_pb::WalletMaskedCreditCard::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    address_ = const_cast<::sync_pb::WalletPostalAddress*>(
        ::sync_pb::WalletPostalAddress::internal_default_instance());
#else
    address_ = const_cast<::sync_pb::WalletPostalAddress*>(&::sync_pb::WalletPostalAddress::default_instance());
#endif
}

AutofillWalletSpecifics::AutofillWalletSpecifics(const AutofillWalletSpecifics& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.AutofillWalletSpecifics)
}

void AutofillWalletSpecifics::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    type_ = 0;
    masked_card_ = NULL;
    address_ = NULL;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AutofillWalletSpecifics::~AutofillWalletSpecifics()
{
    // @@protoc_insertion_point(destructor:sync_pb.AutofillWalletSpecifics)
    SharedDtor();
}

void AutofillWalletSpecifics::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
        delete masked_card_;
        delete address_;
    }
}

void AutofillWalletSpecifics::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AutofillWalletSpecifics& AutofillWalletSpecifics::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_autofill_5fspecifics_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_autofill_5fspecifics_2eproto();
#endif
    return *default_instance_;
}

AutofillWalletSpecifics* AutofillWalletSpecifics::default_instance_ = NULL;

AutofillWalletSpecifics* AutofillWalletSpecifics::New(::google::protobuf::Arena* arena) const
{
    AutofillWalletSpecifics* n = new AutofillWalletSpecifics;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void AutofillWalletSpecifics::Clear()
{
    // @@protoc_insertion_point(message_clear_start:sync_pb.AutofillWalletSpecifics)
    if (_has_bits_[0 / 32] & 7u) {
        type_ = 0;
        if (has_masked_card()) {
            if (masked_card_ != NULL)
                masked_card_->::sync_pb::WalletMaskedCreditCard::Clear();
        }
        if (has_address()) {
            if (address_ != NULL)
                address_->::sync_pb::WalletPostalAddress::Clear();
        }
    }
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AutofillWalletSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForAutofillWalletSpecifics, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.AutofillWalletSpecifics)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;
        case 1: {
            if (tag == 8) {
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::sync_pb::AutofillWalletSpecifics_WalletInfoType_IsValid(value)) {
                    set_type(static_cast<::sync_pb::AutofillWalletSpecifics_WalletInfoType>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(8);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_masked_card;
            break;
        }

        // optional .sync_pb.WalletMaskedCreditCard masked_card = 2;
        case 2: {
            if (tag == 18) {
            parse_masked_card:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_masked_card()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(26))
                goto parse_address;
            break;
        }

        // optional .sync_pb.WalletPostalAddress address = 3;
        case 3: {
            if (tag == 26) {
            parse_address:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                    input, mutable_address()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.AutofillWalletSpecifics)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.AutofillWalletSpecifics)
    return false;
#undef DO_
}

void AutofillWalletSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.AutofillWalletSpecifics)
    // optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;
    if (has_type()) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            1, this->type(), output);
    }

    // optional .sync_pb.WalletMaskedCreditCard masked_card = 2;
    if (has_masked_card()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            2, *this->masked_card_, output);
    }

    // optional .sync_pb.WalletPostalAddress address = 3;
    if (has_address()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            3, *this->address_, output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.AutofillWalletSpecifics)
}

int AutofillWalletSpecifics::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.AutofillWalletSpecifics)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 7u) {
        // optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;
        if (has_type()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
        }

        // optional .sync_pb.WalletMaskedCreditCard masked_card = 2;
        if (has_masked_card()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->masked_card_);
        }

        // optional .sync_pb.WalletPostalAddress address = 3;
        if (has_address()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->address_);
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void AutofillWalletSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const AutofillWalletSpecifics*>(&from));
}

void AutofillWalletSpecifics::MergeFrom(const AutofillWalletSpecifics& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.AutofillWalletSpecifics)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_type()) {
            set_type(from.type());
        }
        if (from.has_masked_card()) {
            mutable_masked_card()->::sync_pb::WalletMaskedCreditCard::MergeFrom(from.masked_card());
        }
        if (from.has_address()) {
            mutable_address()->::sync_pb::WalletPostalAddress::MergeFrom(from.address());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void AutofillWalletSpecifics::CopyFrom(const AutofillWalletSpecifics& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.AutofillWalletSpecifics)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool AutofillWalletSpecifics::IsInitialized() const
{

    return true;
}

void AutofillWalletSpecifics::Swap(AutofillWalletSpecifics* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void AutofillWalletSpecifics::InternalSwap(AutofillWalletSpecifics* other)
{
    std::swap(type_, other->type_);
    std::swap(masked_card_, other->masked_card_);
    std::swap(address_, other->address_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string AutofillWalletSpecifics::GetTypeName() const
{
    return "sync_pb.AutofillWalletSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AutofillWalletSpecifics

// optional .sync_pb.AutofillWalletSpecifics.WalletInfoType type = 1;
bool AutofillWalletSpecifics::has_type() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void AutofillWalletSpecifics::set_has_type()
{
    _has_bits_[0] |= 0x00000001u;
}
void AutofillWalletSpecifics::clear_has_type()
{
    _has_bits_[0] &= ~0x00000001u;
}
void AutofillWalletSpecifics::clear_type()
{
    type_ = 0;
    clear_has_type();
}
::sync_pb::AutofillWalletSpecifics_WalletInfoType AutofillWalletSpecifics::type() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillWalletSpecifics.type)
    return static_cast<::sync_pb::AutofillWalletSpecifics_WalletInfoType>(type_);
}
void AutofillWalletSpecifics::set_type(::sync_pb::AutofillWalletSpecifics_WalletInfoType value)
{
    assert(::sync_pb::AutofillWalletSpecifics_WalletInfoType_IsValid(value));
    set_has_type();
    type_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.AutofillWalletSpecifics.type)
}

// optional .sync_pb.WalletMaskedCreditCard masked_card = 2;
bool AutofillWalletSpecifics::has_masked_card() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void AutofillWalletSpecifics::set_has_masked_card()
{
    _has_bits_[0] |= 0x00000002u;
}
void AutofillWalletSpecifics::clear_has_masked_card()
{
    _has_bits_[0] &= ~0x00000002u;
}
void AutofillWalletSpecifics::clear_masked_card()
{
    if (masked_card_ != NULL)
        masked_card_->::sync_pb::WalletMaskedCreditCard::Clear();
    clear_has_masked_card();
}
const ::sync_pb::WalletMaskedCreditCard& AutofillWalletSpecifics::masked_card() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillWalletSpecifics.masked_card)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return masked_card_ != NULL ? *masked_card_ : *default_instance().masked_card_;
#else
    return masked_card_ != NULL ? *masked_card_ : *default_instance_->masked_card_;
#endif
}
::sync_pb::WalletMaskedCreditCard* AutofillWalletSpecifics::mutable_masked_card()
{
    set_has_masked_card();
    if (masked_card_ == NULL) {
        masked_card_ = new ::sync_pb::WalletMaskedCreditCard;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillWalletSpecifics.masked_card)
    return masked_card_;
}
::sync_pb::WalletMaskedCreditCard* AutofillWalletSpecifics::release_masked_card()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillWalletSpecifics.masked_card)
    clear_has_masked_card();
    ::sync_pb::WalletMaskedCreditCard* temp = masked_card_;
    masked_card_ = NULL;
    return temp;
}
void AutofillWalletSpecifics::set_allocated_masked_card(::sync_pb::WalletMaskedCreditCard* masked_card)
{
    delete masked_card_;
    masked_card_ = masked_card;
    if (masked_card) {
        set_has_masked_card();
    } else {
        clear_has_masked_card();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillWalletSpecifics.masked_card)
}

// optional .sync_pb.WalletPostalAddress address = 3;
bool AutofillWalletSpecifics::has_address() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void AutofillWalletSpecifics::set_has_address()
{
    _has_bits_[0] |= 0x00000004u;
}
void AutofillWalletSpecifics::clear_has_address()
{
    _has_bits_[0] &= ~0x00000004u;
}
void AutofillWalletSpecifics::clear_address()
{
    if (address_ != NULL)
        address_->::sync_pb::WalletPostalAddress::Clear();
    clear_has_address();
}
const ::sync_pb::WalletPostalAddress& AutofillWalletSpecifics::address() const
{
    // @@protoc_insertion_point(field_get:sync_pb.AutofillWalletSpecifics.address)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    return address_ != NULL ? *address_ : *default_instance().address_;
#else
    return address_ != NULL ? *address_ : *default_instance_->address_;
#endif
}
::sync_pb::WalletPostalAddress* AutofillWalletSpecifics::mutable_address()
{
    set_has_address();
    if (address_ == NULL) {
        address_ = new ::sync_pb::WalletPostalAddress;
    }
    // @@protoc_insertion_point(field_mutable:sync_pb.AutofillWalletSpecifics.address)
    return address_;
}
::sync_pb::WalletPostalAddress* AutofillWalletSpecifics::release_address()
{
    // @@protoc_insertion_point(field_release:sync_pb.AutofillWalletSpecifics.address)
    clear_has_address();
    ::sync_pb::WalletPostalAddress* temp = address_;
    address_ = NULL;
    return temp;
}
void AutofillWalletSpecifics::set_allocated_address(::sync_pb::WalletPostalAddress* address)
{
    delete address_;
    address_ = address;
    if (address) {
        set_has_address();
    } else {
        clear_has_address();
    }
    // @@protoc_insertion_point(field_set_allocated:sync_pb.AutofillWalletSpecifics.address)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForWalletMetadataSpecifics(
    WalletMetadataSpecifics* ptr)
{
    return ptr->mutable_unknown_fields();
}

bool WalletMetadataSpecifics_Type_IsValid(int value)
{
    switch (value) {
    case 0:
    case 1:
    case 2:
        return true;
    default:
        return false;
    }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WalletMetadataSpecifics_Type WalletMetadataSpecifics::UNKNOWN;
const WalletMetadataSpecifics_Type WalletMetadataSpecifics::CARD;
const WalletMetadataSpecifics_Type WalletMetadataSpecifics::ADDRESS;
const WalletMetadataSpecifics_Type WalletMetadataSpecifics::Type_MIN;
const WalletMetadataSpecifics_Type WalletMetadataSpecifics::Type_MAX;
const int WalletMetadataSpecifics::Type_ARRAYSIZE;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WalletMetadataSpecifics::kTypeFieldNumber;
const int WalletMetadataSpecifics::kIdFieldNumber;
const int WalletMetadataSpecifics::kUseCountFieldNumber;
const int WalletMetadataSpecifics::kUseDateFieldNumber;
const int WalletMetadataSpecifics::kCardBillingAddressIdFieldNumber;
const int WalletMetadataSpecifics::kAddressHasConvertedFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

WalletMetadataSpecifics::WalletMetadataSpecifics()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:sync_pb.WalletMetadataSpecifics)
}

void WalletMetadataSpecifics::InitAsDefaultInstance()
{
}

WalletMetadataSpecifics::WalletMetadataSpecifics(const WalletMetadataSpecifics& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:sync_pb.WalletMetadataSpecifics)
}

void WalletMetadataSpecifics::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    type_ = 0;
    id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    use_count_ = GOOGLE_LONGLONG(0);
    use_date_ = GOOGLE_LONGLONG(0);
    card_billing_address_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_has_converted_ = false;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WalletMetadataSpecifics::~WalletMetadataSpecifics()
{
    // @@protoc_insertion_point(destructor:sync_pb.WalletMetadataSpecifics)
    SharedDtor();
}

void WalletMetadataSpecifics::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    card_billing_address_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void WalletMetadataSpecifics::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const WalletMetadataSpecifics& WalletMetadataSpecifics::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_autofill_5fspecifics_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_autofill_5fspecifics_2eproto();
#endif
    return *default_instance_;
}

WalletMetadataSpecifics* WalletMetadataSpecifics::default_instance_ = NULL;

WalletMetadataSpecifics* WalletMetadataSpecifics::New(::google::protobuf::Arena* arena) const
{
    WalletMetadataSpecifics* n = new WalletMetadataSpecifics;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void WalletMetadataSpecifics::Clear()
{
// @@protoc_insertion_point(message_clear_start:sync_pb.WalletMetadataSpecifics)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                             \
    _Pragma("clang diagnostic push")                                                                              \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(WalletMetadataSpecifics, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<WalletMetadataSpecifics*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    if (_has_bits_[0 / 32] & 63u) {
        ZR_(use_count_, use_date_);
        if (has_id()) {
            id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_card_billing_address_id()) {
            card_billing_address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }

#undef ZR_HELPER_
#undef ZR_

    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool WalletMetadataSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForWalletMetadataSpecifics, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:sync_pb.WalletMetadataSpecifics)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional .sync_pb.WalletMetadataSpecifics.Type type = 1;
        case 1: {
            if (tag == 8) {
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::sync_pb::WalletMetadataSpecifics_Type_IsValid(value)) {
                    set_type(static_cast<::sync_pb::WalletMetadataSpecifics_Type>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(8);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_id;
            break;
        }

        // optional string id = 2;
        case 2: {
            if (tag == 18) {
            parse_id:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_id()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_use_count;
            break;
        }

        // optional int64 use_count = 3;
        case 3: {
            if (tag == 24) {
            parse_use_count:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &use_count_)));
                set_has_use_count();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(32))
                goto parse_use_date;
            break;
        }

        // optional int64 use_date = 4;
        case 4: {
            if (tag == 32) {
            parse_use_date:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &use_date_)));
                set_has_use_date();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(42))
                goto parse_card_billing_address_id;
            break;
        }

        // optional string card_billing_address_id = 5;
        case 5: {
            if (tag == 42) {
            parse_card_billing_address_id:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_card_billing_address_id()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(48))
                goto parse_address_has_converted;
            break;
        }

        // optional bool address_has_converted = 6;
        case 6: {
            if (tag == 48) {
            parse_address_has_converted:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                    input, &address_has_converted_)));
                set_has_address_has_converted();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:sync_pb.WalletMetadataSpecifics)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:sync_pb.WalletMetadataSpecifics)
    return false;
#undef DO_
}

void WalletMetadataSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:sync_pb.WalletMetadataSpecifics)
    // optional .sync_pb.WalletMetadataSpecifics.Type type = 1;
    if (has_type()) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            1, this->type(), output);
    }

    // optional string id = 2;
    if (has_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            2, this->id(), output);
    }

    // optional int64 use_count = 3;
    if (has_use_count()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->use_count(), output);
    }

    // optional int64 use_date = 4;
    if (has_use_date()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->use_date(), output);
    }

    // optional string card_billing_address_id = 5;
    if (has_card_billing_address_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            5, this->card_billing_address_id(), output);
    }

    // optional bool address_has_converted = 6;
    if (has_address_has_converted()) {
        ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->address_has_converted(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:sync_pb.WalletMetadataSpecifics)
}

int WalletMetadataSpecifics::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:sync_pb.WalletMetadataSpecifics)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 63u) {
        // optional .sync_pb.WalletMetadataSpecifics.Type type = 1;
        if (has_type()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
        }

        // optional string id = 2;
        if (has_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->id());
        }

        // optional int64 use_count = 3;
        if (has_use_count()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->use_count());
        }

        // optional int64 use_date = 4;
        if (has_use_date()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->use_date());
        }

        // optional string card_billing_address_id = 5;
        if (has_card_billing_address_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->card_billing_address_id());
        }

        // optional bool address_has_converted = 6;
        if (has_address_has_converted()) {
            total_size += 1 + 1;
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void WalletMetadataSpecifics::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const WalletMetadataSpecifics*>(&from));
}

void WalletMetadataSpecifics::MergeFrom(const WalletMetadataSpecifics& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.WalletMetadataSpecifics)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_type()) {
            set_type(from.type());
        }
        if (from.has_id()) {
            set_has_id();
            id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
        }
        if (from.has_use_count()) {
            set_use_count(from.use_count());
        }
        if (from.has_use_date()) {
            set_use_date(from.use_date());
        }
        if (from.has_card_billing_address_id()) {
            set_has_card_billing_address_id();
            card_billing_address_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_billing_address_id_);
        }
        if (from.has_address_has_converted()) {
            set_address_has_converted(from.address_has_converted());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void WalletMetadataSpecifics::CopyFrom(const WalletMetadataSpecifics& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.WalletMetadataSpecifics)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool WalletMetadataSpecifics::IsInitialized() const
{

    return true;
}

void WalletMetadataSpecifics::Swap(WalletMetadataSpecifics* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void WalletMetadataSpecifics::InternalSwap(WalletMetadataSpecifics* other)
{
    std::swap(type_, other->type_);
    id_.Swap(&other->id_);
    std::swap(use_count_, other->use_count_);
    std::swap(use_date_, other->use_date_);
    card_billing_address_id_.Swap(&other->card_billing_address_id_);
    std::swap(address_has_converted_, other->address_has_converted_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string WalletMetadataSpecifics::GetTypeName() const
{
    return "sync_pb.WalletMetadataSpecifics";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WalletMetadataSpecifics

// optional .sync_pb.WalletMetadataSpecifics.Type type = 1;
bool WalletMetadataSpecifics::has_type() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void WalletMetadataSpecifics::set_has_type()
{
    _has_bits_[0] |= 0x00000001u;
}
void WalletMetadataSpecifics::clear_has_type()
{
    _has_bits_[0] &= ~0x00000001u;
}
void WalletMetadataSpecifics::clear_type()
{
    type_ = 0;
    clear_has_type();
}
::sync_pb::WalletMetadataSpecifics_Type WalletMetadataSpecifics::type() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.type)
    return static_cast<::sync_pb::WalletMetadataSpecifics_Type>(type_);
}
void WalletMetadataSpecifics::set_type(::sync_pb::WalletMetadataSpecifics_Type value)
{
    assert(::sync_pb::WalletMetadataSpecifics_Type_IsValid(value));
    set_has_type();
    type_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.type)
}

// optional string id = 2;
bool WalletMetadataSpecifics::has_id() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void WalletMetadataSpecifics::set_has_id()
{
    _has_bits_[0] |= 0x00000002u;
}
void WalletMetadataSpecifics::clear_has_id()
{
    _has_bits_[0] &= ~0x00000002u;
}
void WalletMetadataSpecifics::clear_id()
{
    id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_id();
}
const ::std::string& WalletMetadataSpecifics::id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.id)
    return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMetadataSpecifics::set_id(const ::std::string& value)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.id)
}
void WalletMetadataSpecifics::set_id(const char* value)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletMetadataSpecifics.id)
}
void WalletMetadataSpecifics::set_id(const char* value, size_t size)
{
    set_has_id();
    id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMetadataSpecifics.id)
}
::std::string* WalletMetadataSpecifics::mutable_id()
{
    set_has_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletMetadataSpecifics.id)
    return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletMetadataSpecifics::release_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletMetadataSpecifics.id)
    clear_has_id();
    return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMetadataSpecifics::set_allocated_id(::std::string* id)
{
    if (id != NULL) {
        set_has_id();
    } else {
        clear_has_id();
    }
    id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMetadataSpecifics.id)
}

// optional int64 use_count = 3;
bool WalletMetadataSpecifics::has_use_count() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void WalletMetadataSpecifics::set_has_use_count()
{
    _has_bits_[0] |= 0x00000004u;
}
void WalletMetadataSpecifics::clear_has_use_count()
{
    _has_bits_[0] &= ~0x00000004u;
}
void WalletMetadataSpecifics::clear_use_count()
{
    use_count_ = GOOGLE_LONGLONG(0);
    clear_has_use_count();
}
::google::protobuf::int64 WalletMetadataSpecifics::use_count() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.use_count)
    return use_count_;
}
void WalletMetadataSpecifics::set_use_count(::google::protobuf::int64 value)
{
    set_has_use_count();
    use_count_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.use_count)
}

// optional int64 use_date = 4;
bool WalletMetadataSpecifics::has_use_date() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void WalletMetadataSpecifics::set_has_use_date()
{
    _has_bits_[0] |= 0x00000008u;
}
void WalletMetadataSpecifics::clear_has_use_date()
{
    _has_bits_[0] &= ~0x00000008u;
}
void WalletMetadataSpecifics::clear_use_date()
{
    use_date_ = GOOGLE_LONGLONG(0);
    clear_has_use_date();
}
::google::protobuf::int64 WalletMetadataSpecifics::use_date() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.use_date)
    return use_date_;
}
void WalletMetadataSpecifics::set_use_date(::google::protobuf::int64 value)
{
    set_has_use_date();
    use_date_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.use_date)
}

// optional string card_billing_address_id = 5;
bool WalletMetadataSpecifics::has_card_billing_address_id() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void WalletMetadataSpecifics::set_has_card_billing_address_id()
{
    _has_bits_[0] |= 0x00000010u;
}
void WalletMetadataSpecifics::clear_has_card_billing_address_id()
{
    _has_bits_[0] &= ~0x00000010u;
}
void WalletMetadataSpecifics::clear_card_billing_address_id()
{
    card_billing_address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_card_billing_address_id();
}
const ::std::string& WalletMetadataSpecifics::card_billing_address_id() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
    return card_billing_address_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMetadataSpecifics::set_card_billing_address_id(const ::std::string& value)
{
    set_has_card_billing_address_id();
    card_billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
}
void WalletMetadataSpecifics::set_card_billing_address_id(const char* value)
{
    set_has_card_billing_address_id();
    card_billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
}
void WalletMetadataSpecifics::set_card_billing_address_id(const char* value, size_t size)
{
    set_has_card_billing_address_id();
    card_billing_address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
}
::std::string* WalletMetadataSpecifics::mutable_card_billing_address_id()
{
    set_has_card_billing_address_id();
    // @@protoc_insertion_point(field_mutable:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
    return card_billing_address_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletMetadataSpecifics::release_card_billing_address_id()
{
    // @@protoc_insertion_point(field_release:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
    clear_has_card_billing_address_id();
    return card_billing_address_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletMetadataSpecifics::set_allocated_card_billing_address_id(::std::string* card_billing_address_id)
{
    if (card_billing_address_id != NULL) {
        set_has_card_billing_address_id();
    } else {
        clear_has_card_billing_address_id();
    }
    card_billing_address_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_billing_address_id);
    // @@protoc_insertion_point(field_set_allocated:sync_pb.WalletMetadataSpecifics.card_billing_address_id)
}

// optional bool address_has_converted = 6;
bool WalletMetadataSpecifics::has_address_has_converted() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
void WalletMetadataSpecifics::set_has_address_has_converted()
{
    _has_bits_[0] |= 0x00000020u;
}
void WalletMetadataSpecifics::clear_has_address_has_converted()
{
    _has_bits_[0] &= ~0x00000020u;
}
void WalletMetadataSpecifics::clear_address_has_converted()
{
    address_has_converted_ = false;
    clear_has_address_has_converted();
}
bool WalletMetadataSpecifics::address_has_converted() const
{
    // @@protoc_insertion_point(field_get:sync_pb.WalletMetadataSpecifics.address_has_converted)
    return address_has_converted_;
}
void WalletMetadataSpecifics::set_address_has_converted(bool value)
{
    set_has_address_has_converted();
    address_has_converted_ = value;
    // @@protoc_insertion_point(field_set:sync_pb.WalletMetadataSpecifics.address_has_converted)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace sync_pb

// @@protoc_insertion_point(global_scope)
