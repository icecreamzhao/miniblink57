// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: attachment_store.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "attachment_store.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace attachment_store_pb {

void protobuf_ShutdownFile_attachment_5fstore_2eproto()
{
    delete StoreMetadata::default_instance_;
    delete RecordMetadata::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_attachment_5fstore_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_attachment_5fstore_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    StoreMetadata::default_instance_ = new StoreMetadata();
    RecordMetadata::default_instance_ = new RecordMetadata();
    StoreMetadata::default_instance_->InitAsDefaultInstance();
    RecordMetadata::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_attachment_5fstore_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_attachment_5fstore_2eproto_once_);
void protobuf_AddDesc_attachment_5fstore_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_attachment_5fstore_2eproto_once_,
        &protobuf_AddDesc_attachment_5fstore_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_attachment_5fstore_2eproto {
    StaticDescriptorInitializer_attachment_5fstore_2eproto()
    {
        protobuf_AddDesc_attachment_5fstore_2eproto();
    }
} static_descriptor_initializer_attachment_5fstore_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForStoreMetadata(
    StoreMetadata* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreMetadata::kSchemaVersionFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreMetadata::StoreMetadata()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:attachment_store_pb.StoreMetadata)
}

void StoreMetadata::InitAsDefaultInstance()
{
}

StoreMetadata::StoreMetadata(const StoreMetadata& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:attachment_store_pb.StoreMetadata)
}

void StoreMetadata::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    schema_version_ = 0;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StoreMetadata::~StoreMetadata()
{
    // @@protoc_insertion_point(destructor:attachment_store_pb.StoreMetadata)
    SharedDtor();
}

void StoreMetadata::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void StoreMetadata::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StoreMetadata& StoreMetadata::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_attachment_5fstore_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_attachment_5fstore_2eproto();
#endif
    return *default_instance_;
}

StoreMetadata* StoreMetadata::default_instance_ = NULL;

StoreMetadata* StoreMetadata::New(::google::protobuf::Arena* arena) const
{
    StoreMetadata* n = new StoreMetadata;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void StoreMetadata::Clear()
{
    // @@protoc_insertion_point(message_clear_start:attachment_store_pb.StoreMetadata)
    schema_version_ = 0;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StoreMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForStoreMetadata, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:attachment_store_pb.StoreMetadata)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional int32 schema_version = 1;
        case 1: {
            if (tag == 8) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &schema_version_)));
                set_has_schema_version();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:attachment_store_pb.StoreMetadata)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:attachment_store_pb.StoreMetadata)
    return false;
#undef DO_
}

void StoreMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:attachment_store_pb.StoreMetadata)
    // optional int32 schema_version = 1;
    if (has_schema_version()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->schema_version(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:attachment_store_pb.StoreMetadata)
}

int StoreMetadata::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:attachment_store_pb.StoreMetadata)
    int total_size = 0;

    // optional int32 schema_version = 1;
    if (has_schema_version()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->schema_version());
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void StoreMetadata::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const StoreMetadata*>(&from));
}

void StoreMetadata::MergeFrom(const StoreMetadata& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:attachment_store_pb.StoreMetadata)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_schema_version()) {
            set_schema_version(from.schema_version());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void StoreMetadata::CopyFrom(const StoreMetadata& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:attachment_store_pb.StoreMetadata)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool StoreMetadata::IsInitialized() const
{

    return true;
}

void StoreMetadata::Swap(StoreMetadata* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void StoreMetadata::InternalSwap(StoreMetadata* other)
{
    std::swap(schema_version_, other->schema_version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string StoreMetadata::GetTypeName() const
{
    return "attachment_store_pb.StoreMetadata";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoreMetadata

// optional int32 schema_version = 1;
bool StoreMetadata::has_schema_version() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoreMetadata::set_has_schema_version()
{
    _has_bits_[0] |= 0x00000001u;
}
void StoreMetadata::clear_has_schema_version()
{
    _has_bits_[0] &= ~0x00000001u;
}
void StoreMetadata::clear_schema_version()
{
    schema_version_ = 0;
    clear_has_schema_version();
}
::google::protobuf::int32 StoreMetadata::schema_version() const
{
    // @@protoc_insertion_point(field_get:attachment_store_pb.StoreMetadata.schema_version)
    return schema_version_;
}
void StoreMetadata::set_schema_version(::google::protobuf::int32 value)
{
    set_has_schema_version();
    schema_version_ = value;
    // @@protoc_insertion_point(field_set:attachment_store_pb.StoreMetadata.schema_version)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForRecordMetadata(
    RecordMetadata* ptr)
{
    return ptr->mutable_unknown_fields();
}

bool RecordMetadata_Component_IsValid(int value)
{
    switch (value) {
    case 0:
    case 1:
    case 2:
        return true;
    default:
        return false;
    }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RecordMetadata_Component RecordMetadata::UNKNOWN;
const RecordMetadata_Component RecordMetadata::MODEL_TYPE;
const RecordMetadata_Component RecordMetadata::SYNC;
const RecordMetadata_Component RecordMetadata::Component_MIN;
const RecordMetadata_Component RecordMetadata::Component_MAX;
const int RecordMetadata::Component_ARRAYSIZE;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecordMetadata::kAttachmentSizeFieldNumber;
const int RecordMetadata::kCrc32CFieldNumber;
const int RecordMetadata::kComponentFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordMetadata::RecordMetadata()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:attachment_store_pb.RecordMetadata)
}

void RecordMetadata::InitAsDefaultInstance()
{
}

RecordMetadata::RecordMetadata(const RecordMetadata& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:attachment_store_pb.RecordMetadata)
}

void RecordMetadata::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    attachment_size_ = GOOGLE_LONGLONG(0);
    crc32c_ = 0u;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecordMetadata::~RecordMetadata()
{
    // @@protoc_insertion_point(destructor:attachment_store_pb.RecordMetadata)
    SharedDtor();
}

void RecordMetadata::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void RecordMetadata::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RecordMetadata& RecordMetadata::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_attachment_5fstore_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_attachment_5fstore_2eproto();
#endif
    return *default_instance_;
}

RecordMetadata* RecordMetadata::default_instance_ = NULL;

RecordMetadata* RecordMetadata::New(::google::protobuf::Arena* arena) const
{
    RecordMetadata* n = new RecordMetadata;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void RecordMetadata::Clear()
{
    // @@protoc_insertion_point(message_clear_start:attachment_store_pb.RecordMetadata)
    if (_has_bits_[0 / 32] & 3u) {
        attachment_size_ = GOOGLE_LONGLONG(0);
        crc32c_ = 0u;
    }
    component_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RecordMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForRecordMetadata, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:attachment_store_pb.RecordMetadata)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional int64 attachment_size = 1;
        case 1: {
            if (tag == 8) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &attachment_size_)));
                set_has_attachment_size();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(21))
                goto parse_crc32c;
            break;
        }

        // optional fixed32 crc32c = 2;
        case 2: {
            if (tag == 21) {
            parse_crc32c:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                    input, &crc32c_)));
                set_has_crc32c();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_component;
            break;
        }

        // repeated .attachment_store_pb.RecordMetadata.Component component = 3;
        case 3: {
            if (tag == 24) {
            parse_component:
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::attachment_store_pb::RecordMetadata_Component_IsValid(value)) {
                    add_component(static_cast<::attachment_store_pb::RecordMetadata_Component>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(tag);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else if (tag == 26) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumPreserveUnknowns(
                    input,
                    3,
                    ::attachment_store_pb::RecordMetadata_Component_IsValid,
                    &unknown_fields_stream,
                    this->mutable_component())));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_component;
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:attachment_store_pb.RecordMetadata)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:attachment_store_pb.RecordMetadata)
    return false;
#undef DO_
}

void RecordMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:attachment_store_pb.RecordMetadata)
    // optional int64 attachment_size = 1;
    if (has_attachment_size()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->attachment_size(), output);
    }

    // optional fixed32 crc32c = 2;
    if (has_crc32c()) {
        ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->crc32c(), output);
    }

    // repeated .attachment_store_pb.RecordMetadata.Component component = 3;
    for (int i = 0; i < this->component_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            3, this->component(i), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:attachment_store_pb.RecordMetadata)
}

int RecordMetadata::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:attachment_store_pb.RecordMetadata)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 3u) {
        // optional int64 attachment_size = 1;
        if (has_attachment_size()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->attachment_size());
        }

        // optional fixed32 crc32c = 2;
        if (has_crc32c()) {
            total_size += 1 + 4;
        }
    }
    // repeated .attachment_store_pb.RecordMetadata.Component component = 3;
    {
        int data_size = 0;
        for (int i = 0; i < this->component_size(); i++) {
            data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
                this->component(i));
        }
        total_size += 1 * this->component_size() + data_size;
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void RecordMetadata::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const RecordMetadata*>(&from));
}

void RecordMetadata::MergeFrom(const RecordMetadata& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:attachment_store_pb.RecordMetadata)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    component_.MergeFrom(from.component_);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_attachment_size()) {
            set_attachment_size(from.attachment_size());
        }
        if (from.has_crc32c()) {
            set_crc32c(from.crc32c());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void RecordMetadata::CopyFrom(const RecordMetadata& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:attachment_store_pb.RecordMetadata)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool RecordMetadata::IsInitialized() const
{

    return true;
}

void RecordMetadata::Swap(RecordMetadata* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void RecordMetadata::InternalSwap(RecordMetadata* other)
{
    std::swap(attachment_size_, other->attachment_size_);
    std::swap(crc32c_, other->crc32c_);
    component_.UnsafeArenaSwap(&other->component_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string RecordMetadata::GetTypeName() const
{
    return "attachment_store_pb.RecordMetadata";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecordMetadata

// optional int64 attachment_size = 1;
bool RecordMetadata::has_attachment_size() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void RecordMetadata::set_has_attachment_size()
{
    _has_bits_[0] |= 0x00000001u;
}
void RecordMetadata::clear_has_attachment_size()
{
    _has_bits_[0] &= ~0x00000001u;
}
void RecordMetadata::clear_attachment_size()
{
    attachment_size_ = GOOGLE_LONGLONG(0);
    clear_has_attachment_size();
}
::google::protobuf::int64 RecordMetadata::attachment_size() const
{
    // @@protoc_insertion_point(field_get:attachment_store_pb.RecordMetadata.attachment_size)
    return attachment_size_;
}
void RecordMetadata::set_attachment_size(::google::protobuf::int64 value)
{
    set_has_attachment_size();
    attachment_size_ = value;
    // @@protoc_insertion_point(field_set:attachment_store_pb.RecordMetadata.attachment_size)
}

// optional fixed32 crc32c = 2;
bool RecordMetadata::has_crc32c() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void RecordMetadata::set_has_crc32c()
{
    _has_bits_[0] |= 0x00000002u;
}
void RecordMetadata::clear_has_crc32c()
{
    _has_bits_[0] &= ~0x00000002u;
}
void RecordMetadata::clear_crc32c()
{
    crc32c_ = 0u;
    clear_has_crc32c();
}
::google::protobuf::uint32 RecordMetadata::crc32c() const
{
    // @@protoc_insertion_point(field_get:attachment_store_pb.RecordMetadata.crc32c)
    return crc32c_;
}
void RecordMetadata::set_crc32c(::google::protobuf::uint32 value)
{
    set_has_crc32c();
    crc32c_ = value;
    // @@protoc_insertion_point(field_set:attachment_store_pb.RecordMetadata.crc32c)
}

// repeated .attachment_store_pb.RecordMetadata.Component component = 3;
int RecordMetadata::component_size() const
{
    return component_.size();
}
void RecordMetadata::clear_component()
{
    component_.Clear();
}
::attachment_store_pb::RecordMetadata_Component RecordMetadata::component(int index) const
{
    // @@protoc_insertion_point(field_get:attachment_store_pb.RecordMetadata.component)
    return static_cast<::attachment_store_pb::RecordMetadata_Component>(component_.Get(index));
}
void RecordMetadata::set_component(int index, ::attachment_store_pb::RecordMetadata_Component value)
{
    assert(::attachment_store_pb::RecordMetadata_Component_IsValid(value));
    component_.Set(index, value);
    // @@protoc_insertion_point(field_set:attachment_store_pb.RecordMetadata.component)
}
void RecordMetadata::add_component(::attachment_store_pb::RecordMetadata_Component value)
{
    assert(::attachment_store_pb::RecordMetadata_Component_IsValid(value));
    component_.Add(value);
    // @@protoc_insertion_point(field_add:attachment_store_pb.RecordMetadata.component)
}
const ::google::protobuf::RepeatedField<int>&
RecordMetadata::component() const
{
    // @@protoc_insertion_point(field_list:attachment_store_pb.RecordMetadata.component)
    return component_;
}
::google::protobuf::RepeatedField<int>*
RecordMetadata::mutable_component()
{
    // @@protoc_insertion_point(field_mutable_list:attachment_store_pb.RecordMetadata.component)
    return &component_;
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace attachment_store_pb

// @@protoc_insertion_point(global_scope)
