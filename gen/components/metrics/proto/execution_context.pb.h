// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: execution_context.proto

#ifndef PROTOBUF_execution_5fcontext_2eproto__INCLUDED
#define PROTOBUF_execution_5fcontext_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace metrics {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_execution_5fcontext_2eproto();
void protobuf_AssignDesc_execution_5fcontext_2eproto();
void protobuf_ShutdownFile_execution_5fcontext_2eproto();

enum Process {
    UNKNOWN_PROCESS = 0,
    BROWSER_PROCESS = 1,
    RENDERER_PROCESS = 2,
    GPU_PROCESS = 3,
    UTILITY_PROCESS = 4,
    ZYGOTE_PROCESS = 5,
    SANDBOX_HELPER_PROCESS = 6,
    PPAPI_PLUGIN_PROCESS = 7,
    PPAPI_BROKER_PROCESS = 8
};
bool Process_IsValid(int value);
const Process Process_MIN = UNKNOWN_PROCESS;
const Process Process_MAX = PPAPI_BROKER_PROCESS;
const int Process_ARRAYSIZE = Process_MAX + 1;

enum Thread {
    UNKNOWN_THREAD = 0,
    UI_THREAD = 1,
    FILE_THREAD = 2,
    FILE_USER_BLOCKING_THREAD = 3,
    PROCESS_LAUNCHER_THREAD = 4,
    CACHE_THREAD = 5,
    IO_THREAD = 6,
    DB_THREAD = 7,
    GPU_MAIN_THREAD = 8,
    RENDER_THREAD = 9,
    UTILITY_THREAD = 10
};
bool Thread_IsValid(int value);
const Thread Thread_MIN = UNKNOWN_THREAD;
const Thread Thread_MAX = UTILITY_THREAD;
const int Thread_ARRAYSIZE = Thread_MAX + 1;

enum ProcessPhase {
    MAIN_LOOP_START = 0,
    MAIN_NAVIGATION_START = 1,
    MAIN_NAVIGATION_FINISHED = 2,
    FIRST_NONEMPTY_PAINT = 3,
    SHUTDOWN_START = 4
};
bool ProcessPhase_IsValid(int value);
const ProcessPhase ProcessPhase_MIN = MAIN_LOOP_START;
const ProcessPhase ProcessPhase_MAX = SHUTDOWN_START;
const int ProcessPhase_ARRAYSIZE = ProcessPhase_MAX + 1;

// ===================================================================

// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace metrics

#ifndef SWIG
namespace google {
namespace protobuf {

    template <>
    struct is_proto_enum<::metrics::Process> : ::google::protobuf::internal::true_type {
    };
    template <>
    struct is_proto_enum<::metrics::Thread> : ::google::protobuf::internal::true_type {
    };
    template <>
    struct is_proto_enum<::metrics::ProcessPhase> : ::google::protobuf::internal::true_type {
    };

} // namespace protobuf
} // namespace google
#endif // SWIG

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_execution_5fcontext_2eproto__INCLUDED
