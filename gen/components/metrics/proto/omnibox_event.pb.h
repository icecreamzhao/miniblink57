// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: omnibox_event.proto

#ifndef PROTOBUF_omnibox_5fevent_2eproto__INCLUDED
#define PROTOBUF_omnibox_5fevent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include "omnibox_input_type.pb.h"
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace metrics {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_omnibox_5fevent_2eproto();
void protobuf_AssignDesc_omnibox_5fevent_2eproto();
void protobuf_ShutdownFile_omnibox_5fevent_2eproto();

class OmniboxEventProto;
class OmniboxEventProto_ProviderInfo;
class OmniboxEventProto_Suggestion;

enum OmniboxEventProto_Suggestion_ResultType {
    OmniboxEventProto_Suggestion_ResultType_UNKNOWN_RESULT_TYPE = 0,
    OmniboxEventProto_Suggestion_ResultType_URL_WHAT_YOU_TYPED = 1,
    OmniboxEventProto_Suggestion_ResultType_HISTORY_URL = 2,
    OmniboxEventProto_Suggestion_ResultType_HISTORY_TITLE = 3,
    OmniboxEventProto_Suggestion_ResultType_HISTORY_BODY = 4,
    OmniboxEventProto_Suggestion_ResultType_HISTORY_KEYWORD = 5,
    OmniboxEventProto_Suggestion_ResultType_NAVSUGGEST = 6,
    OmniboxEventProto_Suggestion_ResultType_SEARCH_WHAT_YOU_TYPED = 7,
    OmniboxEventProto_Suggestion_ResultType_SEARCH_HISTORY = 8,
    OmniboxEventProto_Suggestion_ResultType_SEARCH_SUGGEST = 9,
    OmniboxEventProto_Suggestion_ResultType_SEARCH_OTHER_ENGINE = 10,
    OmniboxEventProto_Suggestion_ResultType_EXTENSION_APP = 11,
    OmniboxEventProto_Suggestion_ResultType_CONTACT = 12,
    OmniboxEventProto_Suggestion_ResultType_BOOKMARK_TITLE = 13,
    OmniboxEventProto_Suggestion_ResultType_SEARCH_SUGGEST_ENTITY = 14,
    OmniboxEventProto_Suggestion_ResultType_SEARCH_SUGGEST_TAIL = 15,
    OmniboxEventProto_Suggestion_ResultType_SEARCH_SUGGEST_PERSONALIZED = 16,
    OmniboxEventProto_Suggestion_ResultType_SEARCH_SUGGEST_PROFILE = 17,
    OmniboxEventProto_Suggestion_ResultType_APP_RESULT = 18,
    OmniboxEventProto_Suggestion_ResultType_APP = 19,
    OmniboxEventProto_Suggestion_ResultType_LEGACY_ON_DEVICE = 20,
    OmniboxEventProto_Suggestion_ResultType_NAVSUGGEST_PERSONALIZED = 21,
    OmniboxEventProto_Suggestion_ResultType_SEARCH_SUGGEST_ANSWER = 22,
    OmniboxEventProto_Suggestion_ResultType_CALCULATOR = 23,
    OmniboxEventProto_Suggestion_ResultType_CLIPBOARD = 24,
    OmniboxEventProto_Suggestion_ResultType_PHYSICAL_WEB = 25,
    OmniboxEventProto_Suggestion_ResultType_PHYSICAL_WEB_OVERFLOW = 26
};
bool OmniboxEventProto_Suggestion_ResultType_IsValid(int value);
const OmniboxEventProto_Suggestion_ResultType OmniboxEventProto_Suggestion_ResultType_ResultType_MIN = OmniboxEventProto_Suggestion_ResultType_UNKNOWN_RESULT_TYPE;
const OmniboxEventProto_Suggestion_ResultType OmniboxEventProto_Suggestion_ResultType_ResultType_MAX = OmniboxEventProto_Suggestion_ResultType_PHYSICAL_WEB_OVERFLOW;
const int OmniboxEventProto_Suggestion_ResultType_ResultType_ARRAYSIZE = OmniboxEventProto_Suggestion_ResultType_ResultType_MAX + 1;

enum OmniboxEventProto_PageClassification {
    OmniboxEventProto_PageClassification_INVALID_SPEC = 0,
    OmniboxEventProto_PageClassification_NTP = 1,
    OmniboxEventProto_PageClassification_BLANK = 2,
    OmniboxEventProto_PageClassification_HOME_PAGE = 3,
    OmniboxEventProto_PageClassification_OTHER = 4,
    OmniboxEventProto_PageClassification_OBSOLETE_INSTANT_NTP = 5,
    OmniboxEventProto_PageClassification_OBSOLETE_SEARCH_RESULT_PAGE_DOING_SEARCH_TERM_REPLACEMENT = 6,
    OmniboxEventProto_PageClassification_INSTANT_NTP_WITH_OMNIBOX_AS_STARTING_FOCUS = 7,
    OmniboxEventProto_PageClassification_INSTANT_NTP_WITH_FAKEBOX_AS_STARTING_FOCUS = 8,
    OmniboxEventProto_PageClassification_SEARCH_RESULT_PAGE_NO_SEARCH_TERM_REPLACEMENT = 9,
    OmniboxEventProto_PageClassification_APP_HOME = 10,
    OmniboxEventProto_PageClassification_APP_SEARCH = 11,
    OmniboxEventProto_PageClassification_APP_MAPS = 12
};
bool OmniboxEventProto_PageClassification_IsValid(int value);
const OmniboxEventProto_PageClassification OmniboxEventProto_PageClassification_PageClassification_MIN = OmniboxEventProto_PageClassification_INVALID_SPEC;
const OmniboxEventProto_PageClassification OmniboxEventProto_PageClassification_PageClassification_MAX = OmniboxEventProto_PageClassification_APP_MAPS;
const int OmniboxEventProto_PageClassification_PageClassification_ARRAYSIZE = OmniboxEventProto_PageClassification_PageClassification_MAX + 1;

enum OmniboxEventProto_ProviderType {
    OmniboxEventProto_ProviderType_UNKNOWN_PROVIDER = 0,
    OmniboxEventProto_ProviderType_HISTORY_URL = 1,
    OmniboxEventProto_ProviderType_HISTORY_CONTENTS = 2,
    OmniboxEventProto_ProviderType_HISTORY_QUICK = 3,
    OmniboxEventProto_ProviderType_SEARCH = 4,
    OmniboxEventProto_ProviderType_KEYWORD = 5,
    OmniboxEventProto_ProviderType_BUILTIN = 6,
    OmniboxEventProto_ProviderType_SHORTCUTS = 7,
    OmniboxEventProto_ProviderType_EXTENSION_APPS = 8,
    OmniboxEventProto_ProviderType_CONTACT = 9,
    OmniboxEventProto_ProviderType_BOOKMARK = 10,
    OmniboxEventProto_ProviderType_ZERO_SUGGEST = 11,
    OmniboxEventProto_ProviderType_ON_DEVICE = 12,
    OmniboxEventProto_ProviderType_ON_DEVICE_CHROME = 13,
    OmniboxEventProto_ProviderType_CLIPBOARD_URL = 14,
    OmniboxEventProto_ProviderType_PHYSICAL_WEB = 15
};
bool OmniboxEventProto_ProviderType_IsValid(int value);
const OmniboxEventProto_ProviderType OmniboxEventProto_ProviderType_ProviderType_MIN = OmniboxEventProto_ProviderType_UNKNOWN_PROVIDER;
const OmniboxEventProto_ProviderType OmniboxEventProto_ProviderType_ProviderType_MAX = OmniboxEventProto_ProviderType_PHYSICAL_WEB;
const int OmniboxEventProto_ProviderType_ProviderType_ARRAYSIZE = OmniboxEventProto_ProviderType_ProviderType_MAX + 1;

// ===================================================================

class OmniboxEventProto_Suggestion : public ::google::protobuf::MessageLite {
public:
    OmniboxEventProto_Suggestion();
    virtual ~OmniboxEventProto_Suggestion();

    OmniboxEventProto_Suggestion(const OmniboxEventProto_Suggestion& from);

    inline OmniboxEventProto_Suggestion& operator=(const OmniboxEventProto_Suggestion& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const OmniboxEventProto_Suggestion& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const OmniboxEventProto_Suggestion* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(OmniboxEventProto_Suggestion* other);

    // implements Message ----------------------------------------------

    inline OmniboxEventProto_Suggestion* New() const { return New(NULL); }

    OmniboxEventProto_Suggestion* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const OmniboxEventProto_Suggestion& from);
    void MergeFrom(const OmniboxEventProto_Suggestion& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(OmniboxEventProto_Suggestion* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef OmniboxEventProto_Suggestion_ResultType ResultType;
    static const ResultType UNKNOWN_RESULT_TYPE = OmniboxEventProto_Suggestion_ResultType_UNKNOWN_RESULT_TYPE;
    static const ResultType URL_WHAT_YOU_TYPED = OmniboxEventProto_Suggestion_ResultType_URL_WHAT_YOU_TYPED;
    static const ResultType HISTORY_URL = OmniboxEventProto_Suggestion_ResultType_HISTORY_URL;
    static const ResultType HISTORY_TITLE = OmniboxEventProto_Suggestion_ResultType_HISTORY_TITLE;
    static const ResultType HISTORY_BODY = OmniboxEventProto_Suggestion_ResultType_HISTORY_BODY;
    static const ResultType HISTORY_KEYWORD = OmniboxEventProto_Suggestion_ResultType_HISTORY_KEYWORD;
    static const ResultType NAVSUGGEST = OmniboxEventProto_Suggestion_ResultType_NAVSUGGEST;
    static const ResultType SEARCH_WHAT_YOU_TYPED = OmniboxEventProto_Suggestion_ResultType_SEARCH_WHAT_YOU_TYPED;
    static const ResultType SEARCH_HISTORY = OmniboxEventProto_Suggestion_ResultType_SEARCH_HISTORY;
    static const ResultType SEARCH_SUGGEST = OmniboxEventProto_Suggestion_ResultType_SEARCH_SUGGEST;
    static const ResultType SEARCH_OTHER_ENGINE = OmniboxEventProto_Suggestion_ResultType_SEARCH_OTHER_ENGINE;
    static const ResultType EXTENSION_APP = OmniboxEventProto_Suggestion_ResultType_EXTENSION_APP;
    static const ResultType CONTACT = OmniboxEventProto_Suggestion_ResultType_CONTACT;
    static const ResultType BOOKMARK_TITLE = OmniboxEventProto_Suggestion_ResultType_BOOKMARK_TITLE;
    static const ResultType SEARCH_SUGGEST_ENTITY = OmniboxEventProto_Suggestion_ResultType_SEARCH_SUGGEST_ENTITY;
    static const ResultType SEARCH_SUGGEST_TAIL = OmniboxEventProto_Suggestion_ResultType_SEARCH_SUGGEST_TAIL;
    static const ResultType SEARCH_SUGGEST_PERSONALIZED = OmniboxEventProto_Suggestion_ResultType_SEARCH_SUGGEST_PERSONALIZED;
    static const ResultType SEARCH_SUGGEST_PROFILE = OmniboxEventProto_Suggestion_ResultType_SEARCH_SUGGEST_PROFILE;
    static const ResultType APP_RESULT = OmniboxEventProto_Suggestion_ResultType_APP_RESULT;
    static const ResultType APP = OmniboxEventProto_Suggestion_ResultType_APP;
    static const ResultType LEGACY_ON_DEVICE = OmniboxEventProto_Suggestion_ResultType_LEGACY_ON_DEVICE;
    static const ResultType NAVSUGGEST_PERSONALIZED = OmniboxEventProto_Suggestion_ResultType_NAVSUGGEST_PERSONALIZED;
    static const ResultType SEARCH_SUGGEST_ANSWER = OmniboxEventProto_Suggestion_ResultType_SEARCH_SUGGEST_ANSWER;
    static const ResultType CALCULATOR = OmniboxEventProto_Suggestion_ResultType_CALCULATOR;
    static const ResultType CLIPBOARD = OmniboxEventProto_Suggestion_ResultType_CLIPBOARD;
    static const ResultType PHYSICAL_WEB = OmniboxEventProto_Suggestion_ResultType_PHYSICAL_WEB;
    static const ResultType PHYSICAL_WEB_OVERFLOW = OmniboxEventProto_Suggestion_ResultType_PHYSICAL_WEB_OVERFLOW;
    static inline bool ResultType_IsValid(int value)
    {
        return OmniboxEventProto_Suggestion_ResultType_IsValid(value);
    }
    static const ResultType ResultType_MIN = OmniboxEventProto_Suggestion_ResultType_ResultType_MIN;
    static const ResultType ResultType_MAX = OmniboxEventProto_Suggestion_ResultType_ResultType_MAX;
    static const int ResultType_ARRAYSIZE = OmniboxEventProto_Suggestion_ResultType_ResultType_ARRAYSIZE;

    // accessors -------------------------------------------------------

    // optional .metrics.OmniboxEventProto.ProviderType provider = 1;
    bool has_provider() const;
    void clear_provider();
    static const int kProviderFieldNumber = 1;
    ::metrics::OmniboxEventProto_ProviderType provider() const;
    void set_provider(::metrics::OmniboxEventProto_ProviderType value);

    // optional .metrics.OmniboxEventProto.Suggestion.ResultType result_type = 2;
    bool has_result_type() const;
    void clear_result_type();
    static const int kResultTypeFieldNumber = 2;
    ::metrics::OmniboxEventProto_Suggestion_ResultType result_type() const;
    void set_result_type(::metrics::OmniboxEventProto_Suggestion_ResultType value);

    // optional int32 relevance = 3;
    bool has_relevance() const;
    void clear_relevance();
    static const int kRelevanceFieldNumber = 3;
    ::google::protobuf::int32 relevance() const;
    void set_relevance(::google::protobuf::int32 value);

    // optional int32 typed_count = 5;
    bool has_typed_count() const;
    void clear_typed_count();
    static const int kTypedCountFieldNumber = 5;
    ::google::protobuf::int32 typed_count() const;
    void set_typed_count(::google::protobuf::int32 value);

    // optional bool is_starred = 4 [deprecated = true];
    PROTOBUF_DEPRECATED_ATTR bool has_is_starred() const;
    PROTOBUF_DEPRECATED_ATTR void clear_is_starred();
    PROTOBUF_DEPRECATED_ATTR static const int kIsStarredFieldNumber = 4;
    PROTOBUF_DEPRECATED_ATTR bool is_starred() const;
    PROTOBUF_DEPRECATED_ATTR void set_is_starred(bool value);

    // optional bool is_disabled = 6;
    bool has_is_disabled() const;
    void clear_is_disabled();
    static const int kIsDisabledFieldNumber = 6;
    bool is_disabled() const;
    void set_is_disabled(bool value);

    // @@protoc_insertion_point(class_scope:metrics.OmniboxEventProto.Suggestion)
private:
    inline void set_has_provider();
    inline void clear_has_provider();
    inline void set_has_result_type();
    inline void clear_has_result_type();
    inline void set_has_relevance();
    inline void clear_has_relevance();
    inline void set_has_typed_count();
    inline void clear_has_typed_count();
    inline void set_has_is_starred();
    inline void clear_has_is_starred();
    inline void set_has_is_disabled();
    inline void clear_has_is_disabled();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    int provider_;
    int result_type_;
    ::google::protobuf::int32 relevance_;
    ::google::protobuf::int32 typed_count_;
    bool is_starred_;
    bool is_disabled_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_omnibox_5fevent_2eproto_impl();
#else
    friend void protobuf_AddDesc_omnibox_5fevent_2eproto();
#endif
    friend void protobuf_AssignDesc_omnibox_5fevent_2eproto();
    friend void protobuf_ShutdownFile_omnibox_5fevent_2eproto();

    void InitAsDefaultInstance();
    static OmniboxEventProto_Suggestion* default_instance_;
};
// -------------------------------------------------------------------

class OmniboxEventProto_ProviderInfo : public ::google::protobuf::MessageLite {
public:
    OmniboxEventProto_ProviderInfo();
    virtual ~OmniboxEventProto_ProviderInfo();

    OmniboxEventProto_ProviderInfo(const OmniboxEventProto_ProviderInfo& from);

    inline OmniboxEventProto_ProviderInfo& operator=(const OmniboxEventProto_ProviderInfo& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const OmniboxEventProto_ProviderInfo& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const OmniboxEventProto_ProviderInfo* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(OmniboxEventProto_ProviderInfo* other);

    // implements Message ----------------------------------------------

    inline OmniboxEventProto_ProviderInfo* New() const { return New(NULL); }

    OmniboxEventProto_ProviderInfo* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const OmniboxEventProto_ProviderInfo& from);
    void MergeFrom(const OmniboxEventProto_ProviderInfo& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(OmniboxEventProto_ProviderInfo* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional .metrics.OmniboxEventProto.ProviderType provider = 1;
    bool has_provider() const;
    void clear_provider();
    static const int kProviderFieldNumber = 1;
    ::metrics::OmniboxEventProto_ProviderType provider() const;
    void set_provider(::metrics::OmniboxEventProto_ProviderType value);

    // optional bool provider_done = 2;
    bool has_provider_done() const;
    void clear_provider_done();
    static const int kProviderDoneFieldNumber = 2;
    bool provider_done() const;
    void set_provider_done(bool value);

    // repeated fixed32 field_trial_triggered = 3;
    int field_trial_triggered_size() const;
    void clear_field_trial_triggered();
    static const int kFieldTrialTriggeredFieldNumber = 3;
    ::google::protobuf::uint32 field_trial_triggered(int index) const;
    void set_field_trial_triggered(int index, ::google::protobuf::uint32 value);
    void add_field_trial_triggered(::google::protobuf::uint32 value);
    const ::google::protobuf::RepeatedField<::google::protobuf::uint32>&
    field_trial_triggered() const;
    ::google::protobuf::RepeatedField<::google::protobuf::uint32>*
    mutable_field_trial_triggered();

    // repeated fixed32 field_trial_triggered_in_session = 4;
    int field_trial_triggered_in_session_size() const;
    void clear_field_trial_triggered_in_session();
    static const int kFieldTrialTriggeredInSessionFieldNumber = 4;
    ::google::protobuf::uint32 field_trial_triggered_in_session(int index) const;
    void set_field_trial_triggered_in_session(int index, ::google::protobuf::uint32 value);
    void add_field_trial_triggered_in_session(::google::protobuf::uint32 value);
    const ::google::protobuf::RepeatedField<::google::protobuf::uint32>&
    field_trial_triggered_in_session() const;
    ::google::protobuf::RepeatedField<::google::protobuf::uint32>*
    mutable_field_trial_triggered_in_session();

    // optional int32 times_returned_results_in_session = 5;
    bool has_times_returned_results_in_session() const;
    void clear_times_returned_results_in_session();
    static const int kTimesReturnedResultsInSessionFieldNumber = 5;
    ::google::protobuf::int32 times_returned_results_in_session() const;
    void set_times_returned_results_in_session(::google::protobuf::int32 value);

    // @@protoc_insertion_point(class_scope:metrics.OmniboxEventProto.ProviderInfo)
private:
    inline void set_has_provider();
    inline void clear_has_provider();
    inline void set_has_provider_done();
    inline void clear_has_provider_done();
    inline void set_has_times_returned_results_in_session();
    inline void clear_has_times_returned_results_in_session();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    int provider_;
    bool provider_done_;
    ::google::protobuf::RepeatedField<::google::protobuf::uint32> field_trial_triggered_;
    ::google::protobuf::RepeatedField<::google::protobuf::uint32> field_trial_triggered_in_session_;
    ::google::protobuf::int32 times_returned_results_in_session_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_omnibox_5fevent_2eproto_impl();
#else
    friend void protobuf_AddDesc_omnibox_5fevent_2eproto();
#endif
    friend void protobuf_AssignDesc_omnibox_5fevent_2eproto();
    friend void protobuf_ShutdownFile_omnibox_5fevent_2eproto();

    void InitAsDefaultInstance();
    static OmniboxEventProto_ProviderInfo* default_instance_;
};
// -------------------------------------------------------------------

class OmniboxEventProto : public ::google::protobuf::MessageLite {
public:
    OmniboxEventProto();
    virtual ~OmniboxEventProto();

    OmniboxEventProto(const OmniboxEventProto& from);

    inline OmniboxEventProto& operator=(const OmniboxEventProto& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const OmniboxEventProto& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const OmniboxEventProto* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(OmniboxEventProto* other);

    // implements Message ----------------------------------------------

    inline OmniboxEventProto* New() const { return New(NULL); }

    OmniboxEventProto* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const OmniboxEventProto& from);
    void MergeFrom(const OmniboxEventProto& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(OmniboxEventProto* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef OmniboxEventProto_Suggestion Suggestion;
    typedef OmniboxEventProto_ProviderInfo ProviderInfo;

    typedef OmniboxEventProto_PageClassification PageClassification;
    static const PageClassification INVALID_SPEC = OmniboxEventProto_PageClassification_INVALID_SPEC;
    static const PageClassification NTP = OmniboxEventProto_PageClassification_NTP;
    static const PageClassification BLANK = OmniboxEventProto_PageClassification_BLANK;
    static const PageClassification HOME_PAGE = OmniboxEventProto_PageClassification_HOME_PAGE;
    static const PageClassification OTHER = OmniboxEventProto_PageClassification_OTHER;
    static const PageClassification OBSOLETE_INSTANT_NTP = OmniboxEventProto_PageClassification_OBSOLETE_INSTANT_NTP;
    static const PageClassification OBSOLETE_SEARCH_RESULT_PAGE_DOING_SEARCH_TERM_REPLACEMENT = OmniboxEventProto_PageClassification_OBSOLETE_SEARCH_RESULT_PAGE_DOING_SEARCH_TERM_REPLACEMENT;
    static const PageClassification INSTANT_NTP_WITH_OMNIBOX_AS_STARTING_FOCUS = OmniboxEventProto_PageClassification_INSTANT_NTP_WITH_OMNIBOX_AS_STARTING_FOCUS;
    static const PageClassification INSTANT_NTP_WITH_FAKEBOX_AS_STARTING_FOCUS = OmniboxEventProto_PageClassification_INSTANT_NTP_WITH_FAKEBOX_AS_STARTING_FOCUS;
    static const PageClassification SEARCH_RESULT_PAGE_NO_SEARCH_TERM_REPLACEMENT = OmniboxEventProto_PageClassification_SEARCH_RESULT_PAGE_NO_SEARCH_TERM_REPLACEMENT;
    static const PageClassification APP_HOME = OmniboxEventProto_PageClassification_APP_HOME;
    static const PageClassification APP_SEARCH = OmniboxEventProto_PageClassification_APP_SEARCH;
    static const PageClassification APP_MAPS = OmniboxEventProto_PageClassification_APP_MAPS;
    static inline bool PageClassification_IsValid(int value)
    {
        return OmniboxEventProto_PageClassification_IsValid(value);
    }
    static const PageClassification PageClassification_MIN = OmniboxEventProto_PageClassification_PageClassification_MIN;
    static const PageClassification PageClassification_MAX = OmniboxEventProto_PageClassification_PageClassification_MAX;
    static const int PageClassification_ARRAYSIZE = OmniboxEventProto_PageClassification_PageClassification_ARRAYSIZE;

    typedef OmniboxEventProto_ProviderType ProviderType;
    static const ProviderType UNKNOWN_PROVIDER = OmniboxEventProto_ProviderType_UNKNOWN_PROVIDER;
    static const ProviderType HISTORY_URL = OmniboxEventProto_ProviderType_HISTORY_URL;
    static const ProviderType HISTORY_CONTENTS = OmniboxEventProto_ProviderType_HISTORY_CONTENTS;
    static const ProviderType HISTORY_QUICK = OmniboxEventProto_ProviderType_HISTORY_QUICK;
    static const ProviderType SEARCH = OmniboxEventProto_ProviderType_SEARCH;
    static const ProviderType KEYWORD = OmniboxEventProto_ProviderType_KEYWORD;
    static const ProviderType BUILTIN = OmniboxEventProto_ProviderType_BUILTIN;
    static const ProviderType SHORTCUTS = OmniboxEventProto_ProviderType_SHORTCUTS;
    static const ProviderType EXTENSION_APPS = OmniboxEventProto_ProviderType_EXTENSION_APPS;
    static const ProviderType CONTACT = OmniboxEventProto_ProviderType_CONTACT;
    static const ProviderType BOOKMARK = OmniboxEventProto_ProviderType_BOOKMARK;
    static const ProviderType ZERO_SUGGEST = OmniboxEventProto_ProviderType_ZERO_SUGGEST;
    static const ProviderType ON_DEVICE = OmniboxEventProto_ProviderType_ON_DEVICE;
    static const ProviderType ON_DEVICE_CHROME = OmniboxEventProto_ProviderType_ON_DEVICE_CHROME;
    static const ProviderType CLIPBOARD_URL = OmniboxEventProto_ProviderType_CLIPBOARD_URL;
    static const ProviderType PHYSICAL_WEB = OmniboxEventProto_ProviderType_PHYSICAL_WEB;
    static inline bool ProviderType_IsValid(int value)
    {
        return OmniboxEventProto_ProviderType_IsValid(value);
    }
    static const ProviderType ProviderType_MIN = OmniboxEventProto_ProviderType_ProviderType_MIN;
    static const ProviderType ProviderType_MAX = OmniboxEventProto_ProviderType_ProviderType_MAX;
    static const int ProviderType_ARRAYSIZE = OmniboxEventProto_ProviderType_ProviderType_ARRAYSIZE;

    // accessors -------------------------------------------------------

    // optional int64 time = 1;
    bool has_time() const;
    void clear_time();
    static const int kTimeFieldNumber = 1;
    ::google::protobuf::int64 time() const;
    void set_time(::google::protobuf::int64 value);

    // optional int32 tab_id = 2;
    bool has_tab_id() const;
    void clear_tab_id();
    static const int kTabIdFieldNumber = 2;
    ::google::protobuf::int32 tab_id() const;
    void set_tab_id(::google::protobuf::int32 value);

    // optional int32 typed_length = 3;
    bool has_typed_length() const;
    void clear_typed_length();
    static const int kTypedLengthFieldNumber = 3;
    ::google::protobuf::int32 typed_length() const;
    void set_typed_length(::google::protobuf::int32 value);

    // optional bool just_deleted_text = 11;
    bool has_just_deleted_text() const;
    void clear_just_deleted_text();
    static const int kJustDeletedTextFieldNumber = 11;
    bool just_deleted_text() const;
    void set_just_deleted_text(bool value);

    // optional int32 num_typed_terms = 4;
    bool has_num_typed_terms() const;
    void clear_num_typed_terms();
    static const int kNumTypedTermsFieldNumber = 4;
    ::google::protobuf::int32 num_typed_terms() const;
    void set_num_typed_terms(::google::protobuf::int32 value);

    // optional int32 selected_index = 5;
    bool has_selected_index() const;
    void clear_selected_index();
    static const int kSelectedIndexFieldNumber = 5;
    ::google::protobuf::int32 selected_index() const;
    void set_selected_index(::google::protobuf::int32 value);

    // optional bool DEPRECATED_is_top_result_hidden_in_dropdown = 14 [deprecated = true];
    PROTOBUF_DEPRECATED_ATTR bool has_deprecated_is_top_result_hidden_in_dropdown() const;
    PROTOBUF_DEPRECATED_ATTR void clear_deprecated_is_top_result_hidden_in_dropdown();
    PROTOBUF_DEPRECATED_ATTR static const int kDEPRECATEDIsTopResultHiddenInDropdownFieldNumber = 14;
    PROTOBUF_DEPRECATED_ATTR bool deprecated_is_top_result_hidden_in_dropdown() const;
    PROTOBUF_DEPRECATED_ATTR void set_deprecated_is_top_result_hidden_in_dropdown(bool value);

    // optional bool is_popup_open = 15;
    bool has_is_popup_open() const;
    void clear_is_popup_open();
    static const int kIsPopupOpenFieldNumber = 15;
    bool is_popup_open() const;
    void set_is_popup_open(bool value);

    // optional bool is_paste_and_go = 16;
    bool has_is_paste_and_go() const;
    void clear_is_paste_and_go();
    static const int kIsPasteAndGoFieldNumber = 16;
    bool is_paste_and_go() const;
    void set_is_paste_and_go(bool value);

    // optional int32 completed_length = 6;
    bool has_completed_length() const;
    void clear_completed_length();
    static const int kCompletedLengthFieldNumber = 6;
    ::google::protobuf::int32 completed_length() const;
    void set_completed_length(::google::protobuf::int32 value);

    // optional int64 typing_duration_ms = 7;
    bool has_typing_duration_ms() const;
    void clear_typing_duration_ms();
    static const int kTypingDurationMsFieldNumber = 7;
    ::google::protobuf::int64 typing_duration_ms() const;
    void set_typing_duration_ms(::google::protobuf::int64 value);

    // optional int64 duration_since_last_default_match_update_ms = 13;
    bool has_duration_since_last_default_match_update_ms() const;
    void clear_duration_since_last_default_match_update_ms();
    static const int kDurationSinceLastDefaultMatchUpdateMsFieldNumber = 13;
    ::google::protobuf::int64 duration_since_last_default_match_update_ms() const;
    void set_duration_since_last_default_match_update_ms(::google::protobuf::int64 value);

    // optional .metrics.OmniboxEventProto.PageClassification current_page_classification = 10;
    bool has_current_page_classification() const;
    void clear_current_page_classification();
    static const int kCurrentPageClassificationFieldNumber = 10;
    ::metrics::OmniboxEventProto_PageClassification current_page_classification() const;
    void set_current_page_classification(::metrics::OmniboxEventProto_PageClassification value);

    // optional .metrics.OmniboxInputType.Type input_type = 8;
    bool has_input_type() const;
    void clear_input_type();
    static const int kInputTypeFieldNumber = 8;
    ::metrics::OmniboxInputType::Type input_type() const;
    void set_input_type(::metrics::OmniboxInputType::Type value);

    // repeated .metrics.OmniboxEventProto.Suggestion suggestion = 9;
    int suggestion_size() const;
    void clear_suggestion();
    static const int kSuggestionFieldNumber = 9;
    const ::metrics::OmniboxEventProto_Suggestion& suggestion(int index) const;
    ::metrics::OmniboxEventProto_Suggestion* mutable_suggestion(int index);
    ::metrics::OmniboxEventProto_Suggestion* add_suggestion();
    ::google::protobuf::RepeatedPtrField<::metrics::OmniboxEventProto_Suggestion>*
    mutable_suggestion();
    const ::google::protobuf::RepeatedPtrField<::metrics::OmniboxEventProto_Suggestion>&
    suggestion() const;

    // repeated .metrics.OmniboxEventProto.ProviderInfo provider_info = 12;
    int provider_info_size() const;
    void clear_provider_info();
    static const int kProviderInfoFieldNumber = 12;
    const ::metrics::OmniboxEventProto_ProviderInfo& provider_info(int index) const;
    ::metrics::OmniboxEventProto_ProviderInfo* mutable_provider_info(int index);
    ::metrics::OmniboxEventProto_ProviderInfo* add_provider_info();
    ::google::protobuf::RepeatedPtrField<::metrics::OmniboxEventProto_ProviderInfo>*
    mutable_provider_info();
    const ::google::protobuf::RepeatedPtrField<::metrics::OmniboxEventProto_ProviderInfo>&
    provider_info() const;

    // @@protoc_insertion_point(class_scope:metrics.OmniboxEventProto)
private:
    inline void set_has_time();
    inline void clear_has_time();
    inline void set_has_tab_id();
    inline void clear_has_tab_id();
    inline void set_has_typed_length();
    inline void clear_has_typed_length();
    inline void set_has_just_deleted_text();
    inline void clear_has_just_deleted_text();
    inline void set_has_num_typed_terms();
    inline void clear_has_num_typed_terms();
    inline void set_has_selected_index();
    inline void clear_has_selected_index();
    inline void set_has_deprecated_is_top_result_hidden_in_dropdown();
    inline void clear_has_deprecated_is_top_result_hidden_in_dropdown();
    inline void set_has_is_popup_open();
    inline void clear_has_is_popup_open();
    inline void set_has_is_paste_and_go();
    inline void clear_has_is_paste_and_go();
    inline void set_has_completed_length();
    inline void clear_has_completed_length();
    inline void set_has_typing_duration_ms();
    inline void clear_has_typing_duration_ms();
    inline void set_has_duration_since_last_default_match_update_ms();
    inline void clear_has_duration_since_last_default_match_update_ms();
    inline void set_has_current_page_classification();
    inline void clear_has_current_page_classification();
    inline void set_has_input_type();
    inline void clear_has_input_type();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::int64 time_;
    ::google::protobuf::int32 tab_id_;
    ::google::protobuf::int32 typed_length_;
    ::google::protobuf::int32 num_typed_terms_;
    ::google::protobuf::int32 selected_index_;
    bool just_deleted_text_;
    bool deprecated_is_top_result_hidden_in_dropdown_;
    bool is_popup_open_;
    bool is_paste_and_go_;
    ::google::protobuf::int32 completed_length_;
    ::google::protobuf::int64 typing_duration_ms_;
    ::google::protobuf::int64 duration_since_last_default_match_update_ms_;
    int current_page_classification_;
    int input_type_;
    ::google::protobuf::RepeatedPtrField<::metrics::OmniboxEventProto_Suggestion> suggestion_;
    ::google::protobuf::RepeatedPtrField<::metrics::OmniboxEventProto_ProviderInfo> provider_info_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_omnibox_5fevent_2eproto_impl();
#else
    friend void protobuf_AddDesc_omnibox_5fevent_2eproto();
#endif
    friend void protobuf_AssignDesc_omnibox_5fevent_2eproto();
    friend void protobuf_ShutdownFile_omnibox_5fevent_2eproto();

    void InitAsDefaultInstance();
    static OmniboxEventProto* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OmniboxEventProto_Suggestion

// optional .metrics.OmniboxEventProto.ProviderType provider = 1;
inline bool OmniboxEventProto_Suggestion::has_provider() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OmniboxEventProto_Suggestion::set_has_provider()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void OmniboxEventProto_Suggestion::clear_has_provider()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void OmniboxEventProto_Suggestion::clear_provider()
{
    provider_ = 0;
    clear_has_provider();
}
inline ::metrics::OmniboxEventProto_ProviderType OmniboxEventProto_Suggestion::provider() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.Suggestion.provider)
    return static_cast<::metrics::OmniboxEventProto_ProviderType>(provider_);
}
inline void OmniboxEventProto_Suggestion::set_provider(::metrics::OmniboxEventProto_ProviderType value)
{
    assert(::metrics::OmniboxEventProto_ProviderType_IsValid(value));
    set_has_provider();
    provider_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.Suggestion.provider)
}

// optional .metrics.OmniboxEventProto.Suggestion.ResultType result_type = 2;
inline bool OmniboxEventProto_Suggestion::has_result_type() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OmniboxEventProto_Suggestion::set_has_result_type()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void OmniboxEventProto_Suggestion::clear_has_result_type()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void OmniboxEventProto_Suggestion::clear_result_type()
{
    result_type_ = 0;
    clear_has_result_type();
}
inline ::metrics::OmniboxEventProto_Suggestion_ResultType OmniboxEventProto_Suggestion::result_type() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.Suggestion.result_type)
    return static_cast<::metrics::OmniboxEventProto_Suggestion_ResultType>(result_type_);
}
inline void OmniboxEventProto_Suggestion::set_result_type(::metrics::OmniboxEventProto_Suggestion_ResultType value)
{
    assert(::metrics::OmniboxEventProto_Suggestion_ResultType_IsValid(value));
    set_has_result_type();
    result_type_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.Suggestion.result_type)
}

// optional int32 relevance = 3;
inline bool OmniboxEventProto_Suggestion::has_relevance() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OmniboxEventProto_Suggestion::set_has_relevance()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void OmniboxEventProto_Suggestion::clear_has_relevance()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void OmniboxEventProto_Suggestion::clear_relevance()
{
    relevance_ = 0;
    clear_has_relevance();
}
inline ::google::protobuf::int32 OmniboxEventProto_Suggestion::relevance() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.Suggestion.relevance)
    return relevance_;
}
inline void OmniboxEventProto_Suggestion::set_relevance(::google::protobuf::int32 value)
{
    set_has_relevance();
    relevance_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.Suggestion.relevance)
}

// optional int32 typed_count = 5;
inline bool OmniboxEventProto_Suggestion::has_typed_count() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OmniboxEventProto_Suggestion::set_has_typed_count()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void OmniboxEventProto_Suggestion::clear_has_typed_count()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void OmniboxEventProto_Suggestion::clear_typed_count()
{
    typed_count_ = 0;
    clear_has_typed_count();
}
inline ::google::protobuf::int32 OmniboxEventProto_Suggestion::typed_count() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.Suggestion.typed_count)
    return typed_count_;
}
inline void OmniboxEventProto_Suggestion::set_typed_count(::google::protobuf::int32 value)
{
    set_has_typed_count();
    typed_count_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.Suggestion.typed_count)
}

// optional bool is_starred = 4 [deprecated = true];
inline bool OmniboxEventProto_Suggestion::has_is_starred() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OmniboxEventProto_Suggestion::set_has_is_starred()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void OmniboxEventProto_Suggestion::clear_has_is_starred()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void OmniboxEventProto_Suggestion::clear_is_starred()
{
    is_starred_ = false;
    clear_has_is_starred();
}
inline bool OmniboxEventProto_Suggestion::is_starred() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.Suggestion.is_starred)
    return is_starred_;
}
inline void OmniboxEventProto_Suggestion::set_is_starred(bool value)
{
    set_has_is_starred();
    is_starred_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.Suggestion.is_starred)
}

// optional bool is_disabled = 6;
inline bool OmniboxEventProto_Suggestion::has_is_disabled() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OmniboxEventProto_Suggestion::set_has_is_disabled()
{
    _has_bits_[0] |= 0x00000020u;
}
inline void OmniboxEventProto_Suggestion::clear_has_is_disabled()
{
    _has_bits_[0] &= ~0x00000020u;
}
inline void OmniboxEventProto_Suggestion::clear_is_disabled()
{
    is_disabled_ = false;
    clear_has_is_disabled();
}
inline bool OmniboxEventProto_Suggestion::is_disabled() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.Suggestion.is_disabled)
    return is_disabled_;
}
inline void OmniboxEventProto_Suggestion::set_is_disabled(bool value)
{
    set_has_is_disabled();
    is_disabled_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.Suggestion.is_disabled)
}

// -------------------------------------------------------------------

// OmniboxEventProto_ProviderInfo

// optional .metrics.OmniboxEventProto.ProviderType provider = 1;
inline bool OmniboxEventProto_ProviderInfo::has_provider() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OmniboxEventProto_ProviderInfo::set_has_provider()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void OmniboxEventProto_ProviderInfo::clear_has_provider()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void OmniboxEventProto_ProviderInfo::clear_provider()
{
    provider_ = 0;
    clear_has_provider();
}
inline ::metrics::OmniboxEventProto_ProviderType OmniboxEventProto_ProviderInfo::provider() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.ProviderInfo.provider)
    return static_cast<::metrics::OmniboxEventProto_ProviderType>(provider_);
}
inline void OmniboxEventProto_ProviderInfo::set_provider(::metrics::OmniboxEventProto_ProviderType value)
{
    assert(::metrics::OmniboxEventProto_ProviderType_IsValid(value));
    set_has_provider();
    provider_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.ProviderInfo.provider)
}

// optional bool provider_done = 2;
inline bool OmniboxEventProto_ProviderInfo::has_provider_done() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OmniboxEventProto_ProviderInfo::set_has_provider_done()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void OmniboxEventProto_ProviderInfo::clear_has_provider_done()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void OmniboxEventProto_ProviderInfo::clear_provider_done()
{
    provider_done_ = false;
    clear_has_provider_done();
}
inline bool OmniboxEventProto_ProviderInfo::provider_done() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.ProviderInfo.provider_done)
    return provider_done_;
}
inline void OmniboxEventProto_ProviderInfo::set_provider_done(bool value)
{
    set_has_provider_done();
    provider_done_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.ProviderInfo.provider_done)
}

// repeated fixed32 field_trial_triggered = 3;
inline int OmniboxEventProto_ProviderInfo::field_trial_triggered_size() const
{
    return field_trial_triggered_.size();
}
inline void OmniboxEventProto_ProviderInfo::clear_field_trial_triggered()
{
    field_trial_triggered_.Clear();
}
inline ::google::protobuf::uint32 OmniboxEventProto_ProviderInfo::field_trial_triggered(int index) const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.ProviderInfo.field_trial_triggered)
    return field_trial_triggered_.Get(index);
}
inline void OmniboxEventProto_ProviderInfo::set_field_trial_triggered(int index, ::google::protobuf::uint32 value)
{
    field_trial_triggered_.Set(index, value);
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.ProviderInfo.field_trial_triggered)
}
inline void OmniboxEventProto_ProviderInfo::add_field_trial_triggered(::google::protobuf::uint32 value)
{
    field_trial_triggered_.Add(value);
    // @@protoc_insertion_point(field_add:metrics.OmniboxEventProto.ProviderInfo.field_trial_triggered)
}
inline const ::google::protobuf::RepeatedField<::google::protobuf::uint32>&
OmniboxEventProto_ProviderInfo::field_trial_triggered() const
{
    // @@protoc_insertion_point(field_list:metrics.OmniboxEventProto.ProviderInfo.field_trial_triggered)
    return field_trial_triggered_;
}
inline ::google::protobuf::RepeatedField<::google::protobuf::uint32>*
OmniboxEventProto_ProviderInfo::mutable_field_trial_triggered()
{
    // @@protoc_insertion_point(field_mutable_list:metrics.OmniboxEventProto.ProviderInfo.field_trial_triggered)
    return &field_trial_triggered_;
}

// repeated fixed32 field_trial_triggered_in_session = 4;
inline int OmniboxEventProto_ProviderInfo::field_trial_triggered_in_session_size() const
{
    return field_trial_triggered_in_session_.size();
}
inline void OmniboxEventProto_ProviderInfo::clear_field_trial_triggered_in_session()
{
    field_trial_triggered_in_session_.Clear();
}
inline ::google::protobuf::uint32 OmniboxEventProto_ProviderInfo::field_trial_triggered_in_session(int index) const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.ProviderInfo.field_trial_triggered_in_session)
    return field_trial_triggered_in_session_.Get(index);
}
inline void OmniboxEventProto_ProviderInfo::set_field_trial_triggered_in_session(int index, ::google::protobuf::uint32 value)
{
    field_trial_triggered_in_session_.Set(index, value);
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.ProviderInfo.field_trial_triggered_in_session)
}
inline void OmniboxEventProto_ProviderInfo::add_field_trial_triggered_in_session(::google::protobuf::uint32 value)
{
    field_trial_triggered_in_session_.Add(value);
    // @@protoc_insertion_point(field_add:metrics.OmniboxEventProto.ProviderInfo.field_trial_triggered_in_session)
}
inline const ::google::protobuf::RepeatedField<::google::protobuf::uint32>&
OmniboxEventProto_ProviderInfo::field_trial_triggered_in_session() const
{
    // @@protoc_insertion_point(field_list:metrics.OmniboxEventProto.ProviderInfo.field_trial_triggered_in_session)
    return field_trial_triggered_in_session_;
}
inline ::google::protobuf::RepeatedField<::google::protobuf::uint32>*
OmniboxEventProto_ProviderInfo::mutable_field_trial_triggered_in_session()
{
    // @@protoc_insertion_point(field_mutable_list:metrics.OmniboxEventProto.ProviderInfo.field_trial_triggered_in_session)
    return &field_trial_triggered_in_session_;
}

// optional int32 times_returned_results_in_session = 5;
inline bool OmniboxEventProto_ProviderInfo::has_times_returned_results_in_session() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OmniboxEventProto_ProviderInfo::set_has_times_returned_results_in_session()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void OmniboxEventProto_ProviderInfo::clear_has_times_returned_results_in_session()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void OmniboxEventProto_ProviderInfo::clear_times_returned_results_in_session()
{
    times_returned_results_in_session_ = 0;
    clear_has_times_returned_results_in_session();
}
inline ::google::protobuf::int32 OmniboxEventProto_ProviderInfo::times_returned_results_in_session() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.ProviderInfo.times_returned_results_in_session)
    return times_returned_results_in_session_;
}
inline void OmniboxEventProto_ProviderInfo::set_times_returned_results_in_session(::google::protobuf::int32 value)
{
    set_has_times_returned_results_in_session();
    times_returned_results_in_session_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.ProviderInfo.times_returned_results_in_session)
}

// -------------------------------------------------------------------

// OmniboxEventProto

// optional int64 time = 1;
inline bool OmniboxEventProto::has_time() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OmniboxEventProto::set_has_time()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void OmniboxEventProto::clear_has_time()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void OmniboxEventProto::clear_time()
{
    time_ = GOOGLE_LONGLONG(0);
    clear_has_time();
}
inline ::google::protobuf::int64 OmniboxEventProto::time() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.time)
    return time_;
}
inline void OmniboxEventProto::set_time(::google::protobuf::int64 value)
{
    set_has_time();
    time_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.time)
}

// optional int32 tab_id = 2;
inline bool OmniboxEventProto::has_tab_id() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OmniboxEventProto::set_has_tab_id()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void OmniboxEventProto::clear_has_tab_id()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void OmniboxEventProto::clear_tab_id()
{
    tab_id_ = 0;
    clear_has_tab_id();
}
inline ::google::protobuf::int32 OmniboxEventProto::tab_id() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.tab_id)
    return tab_id_;
}
inline void OmniboxEventProto::set_tab_id(::google::protobuf::int32 value)
{
    set_has_tab_id();
    tab_id_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.tab_id)
}

// optional int32 typed_length = 3;
inline bool OmniboxEventProto::has_typed_length() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OmniboxEventProto::set_has_typed_length()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void OmniboxEventProto::clear_has_typed_length()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void OmniboxEventProto::clear_typed_length()
{
    typed_length_ = 0;
    clear_has_typed_length();
}
inline ::google::protobuf::int32 OmniboxEventProto::typed_length() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.typed_length)
    return typed_length_;
}
inline void OmniboxEventProto::set_typed_length(::google::protobuf::int32 value)
{
    set_has_typed_length();
    typed_length_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.typed_length)
}

// optional bool just_deleted_text = 11;
inline bool OmniboxEventProto::has_just_deleted_text() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OmniboxEventProto::set_has_just_deleted_text()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void OmniboxEventProto::clear_has_just_deleted_text()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void OmniboxEventProto::clear_just_deleted_text()
{
    just_deleted_text_ = false;
    clear_has_just_deleted_text();
}
inline bool OmniboxEventProto::just_deleted_text() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.just_deleted_text)
    return just_deleted_text_;
}
inline void OmniboxEventProto::set_just_deleted_text(bool value)
{
    set_has_just_deleted_text();
    just_deleted_text_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.just_deleted_text)
}

// optional int32 num_typed_terms = 4;
inline bool OmniboxEventProto::has_num_typed_terms() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OmniboxEventProto::set_has_num_typed_terms()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void OmniboxEventProto::clear_has_num_typed_terms()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void OmniboxEventProto::clear_num_typed_terms()
{
    num_typed_terms_ = 0;
    clear_has_num_typed_terms();
}
inline ::google::protobuf::int32 OmniboxEventProto::num_typed_terms() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.num_typed_terms)
    return num_typed_terms_;
}
inline void OmniboxEventProto::set_num_typed_terms(::google::protobuf::int32 value)
{
    set_has_num_typed_terms();
    num_typed_terms_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.num_typed_terms)
}

// optional int32 selected_index = 5;
inline bool OmniboxEventProto::has_selected_index() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OmniboxEventProto::set_has_selected_index()
{
    _has_bits_[0] |= 0x00000020u;
}
inline void OmniboxEventProto::clear_has_selected_index()
{
    _has_bits_[0] &= ~0x00000020u;
}
inline void OmniboxEventProto::clear_selected_index()
{
    selected_index_ = 0;
    clear_has_selected_index();
}
inline ::google::protobuf::int32 OmniboxEventProto::selected_index() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.selected_index)
    return selected_index_;
}
inline void OmniboxEventProto::set_selected_index(::google::protobuf::int32 value)
{
    set_has_selected_index();
    selected_index_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.selected_index)
}

// optional bool DEPRECATED_is_top_result_hidden_in_dropdown = 14 [deprecated = true];
inline bool OmniboxEventProto::has_deprecated_is_top_result_hidden_in_dropdown() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OmniboxEventProto::set_has_deprecated_is_top_result_hidden_in_dropdown()
{
    _has_bits_[0] |= 0x00000040u;
}
inline void OmniboxEventProto::clear_has_deprecated_is_top_result_hidden_in_dropdown()
{
    _has_bits_[0] &= ~0x00000040u;
}
inline void OmniboxEventProto::clear_deprecated_is_top_result_hidden_in_dropdown()
{
    deprecated_is_top_result_hidden_in_dropdown_ = false;
    clear_has_deprecated_is_top_result_hidden_in_dropdown();
}
inline bool OmniboxEventProto::deprecated_is_top_result_hidden_in_dropdown() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.DEPRECATED_is_top_result_hidden_in_dropdown)
    return deprecated_is_top_result_hidden_in_dropdown_;
}
inline void OmniboxEventProto::set_deprecated_is_top_result_hidden_in_dropdown(bool value)
{
    set_has_deprecated_is_top_result_hidden_in_dropdown();
    deprecated_is_top_result_hidden_in_dropdown_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.DEPRECATED_is_top_result_hidden_in_dropdown)
}

// optional bool is_popup_open = 15;
inline bool OmniboxEventProto::has_is_popup_open() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OmniboxEventProto::set_has_is_popup_open()
{
    _has_bits_[0] |= 0x00000080u;
}
inline void OmniboxEventProto::clear_has_is_popup_open()
{
    _has_bits_[0] &= ~0x00000080u;
}
inline void OmniboxEventProto::clear_is_popup_open()
{
    is_popup_open_ = false;
    clear_has_is_popup_open();
}
inline bool OmniboxEventProto::is_popup_open() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.is_popup_open)
    return is_popup_open_;
}
inline void OmniboxEventProto::set_is_popup_open(bool value)
{
    set_has_is_popup_open();
    is_popup_open_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.is_popup_open)
}

// optional bool is_paste_and_go = 16;
inline bool OmniboxEventProto::has_is_paste_and_go() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OmniboxEventProto::set_has_is_paste_and_go()
{
    _has_bits_[0] |= 0x00000100u;
}
inline void OmniboxEventProto::clear_has_is_paste_and_go()
{
    _has_bits_[0] &= ~0x00000100u;
}
inline void OmniboxEventProto::clear_is_paste_and_go()
{
    is_paste_and_go_ = false;
    clear_has_is_paste_and_go();
}
inline bool OmniboxEventProto::is_paste_and_go() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.is_paste_and_go)
    return is_paste_and_go_;
}
inline void OmniboxEventProto::set_is_paste_and_go(bool value)
{
    set_has_is_paste_and_go();
    is_paste_and_go_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.is_paste_and_go)
}

// optional int32 completed_length = 6;
inline bool OmniboxEventProto::has_completed_length() const
{
    return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OmniboxEventProto::set_has_completed_length()
{
    _has_bits_[0] |= 0x00000200u;
}
inline void OmniboxEventProto::clear_has_completed_length()
{
    _has_bits_[0] &= ~0x00000200u;
}
inline void OmniboxEventProto::clear_completed_length()
{
    completed_length_ = 0;
    clear_has_completed_length();
}
inline ::google::protobuf::int32 OmniboxEventProto::completed_length() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.completed_length)
    return completed_length_;
}
inline void OmniboxEventProto::set_completed_length(::google::protobuf::int32 value)
{
    set_has_completed_length();
    completed_length_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.completed_length)
}

// optional int64 typing_duration_ms = 7;
inline bool OmniboxEventProto::has_typing_duration_ms() const
{
    return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OmniboxEventProto::set_has_typing_duration_ms()
{
    _has_bits_[0] |= 0x00000400u;
}
inline void OmniboxEventProto::clear_has_typing_duration_ms()
{
    _has_bits_[0] &= ~0x00000400u;
}
inline void OmniboxEventProto::clear_typing_duration_ms()
{
    typing_duration_ms_ = GOOGLE_LONGLONG(0);
    clear_has_typing_duration_ms();
}
inline ::google::protobuf::int64 OmniboxEventProto::typing_duration_ms() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.typing_duration_ms)
    return typing_duration_ms_;
}
inline void OmniboxEventProto::set_typing_duration_ms(::google::protobuf::int64 value)
{
    set_has_typing_duration_ms();
    typing_duration_ms_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.typing_duration_ms)
}

// optional int64 duration_since_last_default_match_update_ms = 13;
inline bool OmniboxEventProto::has_duration_since_last_default_match_update_ms() const
{
    return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OmniboxEventProto::set_has_duration_since_last_default_match_update_ms()
{
    _has_bits_[0] |= 0x00000800u;
}
inline void OmniboxEventProto::clear_has_duration_since_last_default_match_update_ms()
{
    _has_bits_[0] &= ~0x00000800u;
}
inline void OmniboxEventProto::clear_duration_since_last_default_match_update_ms()
{
    duration_since_last_default_match_update_ms_ = GOOGLE_LONGLONG(0);
    clear_has_duration_since_last_default_match_update_ms();
}
inline ::google::protobuf::int64 OmniboxEventProto::duration_since_last_default_match_update_ms() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.duration_since_last_default_match_update_ms)
    return duration_since_last_default_match_update_ms_;
}
inline void OmniboxEventProto::set_duration_since_last_default_match_update_ms(::google::protobuf::int64 value)
{
    set_has_duration_since_last_default_match_update_ms();
    duration_since_last_default_match_update_ms_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.duration_since_last_default_match_update_ms)
}

// optional .metrics.OmniboxEventProto.PageClassification current_page_classification = 10;
inline bool OmniboxEventProto::has_current_page_classification() const
{
    return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void OmniboxEventProto::set_has_current_page_classification()
{
    _has_bits_[0] |= 0x00001000u;
}
inline void OmniboxEventProto::clear_has_current_page_classification()
{
    _has_bits_[0] &= ~0x00001000u;
}
inline void OmniboxEventProto::clear_current_page_classification()
{
    current_page_classification_ = 0;
    clear_has_current_page_classification();
}
inline ::metrics::OmniboxEventProto_PageClassification OmniboxEventProto::current_page_classification() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.current_page_classification)
    return static_cast<::metrics::OmniboxEventProto_PageClassification>(current_page_classification_);
}
inline void OmniboxEventProto::set_current_page_classification(::metrics::OmniboxEventProto_PageClassification value)
{
    assert(::metrics::OmniboxEventProto_PageClassification_IsValid(value));
    set_has_current_page_classification();
    current_page_classification_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.current_page_classification)
}

// optional .metrics.OmniboxInputType.Type input_type = 8;
inline bool OmniboxEventProto::has_input_type() const
{
    return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OmniboxEventProto::set_has_input_type()
{
    _has_bits_[0] |= 0x00002000u;
}
inline void OmniboxEventProto::clear_has_input_type()
{
    _has_bits_[0] &= ~0x00002000u;
}
inline void OmniboxEventProto::clear_input_type()
{
    input_type_ = 0;
    clear_has_input_type();
}
inline ::metrics::OmniboxInputType::Type OmniboxEventProto::input_type() const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.input_type)
    return static_cast<::metrics::OmniboxInputType::Type>(input_type_);
}
inline void OmniboxEventProto::set_input_type(::metrics::OmniboxInputType::Type value)
{
    assert(::metrics::OmniboxInputType::Type_IsValid(value));
    set_has_input_type();
    input_type_ = value;
    // @@protoc_insertion_point(field_set:metrics.OmniboxEventProto.input_type)
}

// repeated .metrics.OmniboxEventProto.Suggestion suggestion = 9;
inline int OmniboxEventProto::suggestion_size() const
{
    return suggestion_.size();
}
inline void OmniboxEventProto::clear_suggestion()
{
    suggestion_.Clear();
}
inline const ::metrics::OmniboxEventProto_Suggestion& OmniboxEventProto::suggestion(int index) const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.suggestion)
    return suggestion_.Get(index);
}
inline ::metrics::OmniboxEventProto_Suggestion* OmniboxEventProto::mutable_suggestion(int index)
{
    // @@protoc_insertion_point(field_mutable:metrics.OmniboxEventProto.suggestion)
    return suggestion_.Mutable(index);
}
inline ::metrics::OmniboxEventProto_Suggestion* OmniboxEventProto::add_suggestion()
{
    // @@protoc_insertion_point(field_add:metrics.OmniboxEventProto.suggestion)
    return suggestion_.Add();
}
inline ::google::protobuf::RepeatedPtrField<::metrics::OmniboxEventProto_Suggestion>*
OmniboxEventProto::mutable_suggestion()
{
    // @@protoc_insertion_point(field_mutable_list:metrics.OmniboxEventProto.suggestion)
    return &suggestion_;
}
inline const ::google::protobuf::RepeatedPtrField<::metrics::OmniboxEventProto_Suggestion>&
OmniboxEventProto::suggestion() const
{
    // @@protoc_insertion_point(field_list:metrics.OmniboxEventProto.suggestion)
    return suggestion_;
}

// repeated .metrics.OmniboxEventProto.ProviderInfo provider_info = 12;
inline int OmniboxEventProto::provider_info_size() const
{
    return provider_info_.size();
}
inline void OmniboxEventProto::clear_provider_info()
{
    provider_info_.Clear();
}
inline const ::metrics::OmniboxEventProto_ProviderInfo& OmniboxEventProto::provider_info(int index) const
{
    // @@protoc_insertion_point(field_get:metrics.OmniboxEventProto.provider_info)
    return provider_info_.Get(index);
}
inline ::metrics::OmniboxEventProto_ProviderInfo* OmniboxEventProto::mutable_provider_info(int index)
{
    // @@protoc_insertion_point(field_mutable:metrics.OmniboxEventProto.provider_info)
    return provider_info_.Mutable(index);
}
inline ::metrics::OmniboxEventProto_ProviderInfo* OmniboxEventProto::add_provider_info()
{
    // @@protoc_insertion_point(field_add:metrics.OmniboxEventProto.provider_info)
    return provider_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField<::metrics::OmniboxEventProto_ProviderInfo>*
OmniboxEventProto::mutable_provider_info()
{
    // @@protoc_insertion_point(field_mutable_list:metrics.OmniboxEventProto.provider_info)
    return &provider_info_;
}
inline const ::google::protobuf::RepeatedPtrField<::metrics::OmniboxEventProto_ProviderInfo>&
OmniboxEventProto::provider_info() const
{
    // @@protoc_insertion_point(field_list:metrics.OmniboxEventProto.provider_info)
    return provider_info_;
}

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// @@protoc_insertion_point(namespace_scope)

} // namespace metrics

#ifndef SWIG
namespace google {
namespace protobuf {

    template <>
    struct is_proto_enum<::metrics::OmniboxEventProto_Suggestion_ResultType> : ::google::protobuf::internal::true_type {
    };
    template <>
    struct is_proto_enum<::metrics::OmniboxEventProto_PageClassification> : ::google::protobuf::internal::true_type {
    };
    template <>
    struct is_proto_enum<::metrics::OmniboxEventProto_ProviderType> : ::google::protobuf::internal::true_type {
    };

} // namespace protobuf
} // namespace google
#endif // SWIG

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_omnibox_5fevent_2eproto__INCLUDED
