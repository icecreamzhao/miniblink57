// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: translate_event.proto

#ifndef PROTOBUF_translate_5fevent_2eproto__INCLUDED
#define PROTOBUF_translate_5fevent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace metrics {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_translate_5fevent_2eproto();
void protobuf_AssignDesc_translate_5fevent_2eproto();
void protobuf_ShutdownFile_translate_5fevent_2eproto();

class TranslateEventProto;

enum TranslateEventProto_RankerResponse {
    TranslateEventProto_RankerResponse_SHOW = 0,
    TranslateEventProto_RankerResponse_DONT_SHOW = 1,
    TranslateEventProto_RankerResponse_NOT_QUERIED = 2
};
bool TranslateEventProto_RankerResponse_IsValid(int value);
const TranslateEventProto_RankerResponse TranslateEventProto_RankerResponse_RankerResponse_MIN = TranslateEventProto_RankerResponse_SHOW;
const TranslateEventProto_RankerResponse TranslateEventProto_RankerResponse_RankerResponse_MAX = TranslateEventProto_RankerResponse_NOT_QUERIED;
const int TranslateEventProto_RankerResponse_RankerResponse_ARRAYSIZE = TranslateEventProto_RankerResponse_RankerResponse_MAX + 1;

enum TranslateEventProto_EventType {
    TranslateEventProto_EventType_UNKNOWN = 0,
    TranslateEventProto_EventType_USER_DECLINE = 1,
    TranslateEventProto_EventType_USER_ACCEPT = 2,
    TranslateEventProto_EventType_USER_DISMISS = 3,
    TranslateEventProto_EventType_USER_IGNORE = 4,
    TranslateEventProto_EventType_USER_NEVER_TRANSLATE_LANGUAGE = 5,
    TranslateEventProto_EventType_USER_NEVER_TRANSLATE_SITE = 6,
    TranslateEventProto_EventType_USER_ALWAYS_TRANSLATE_LANGUAGE = 7,
    TranslateEventProto_EventType_USER_CONTEXT_MENU_TRANSLATE = 8,
    TranslateEventProto_EventType_USER_REVERT = 9,
    TranslateEventProto_EventType_AUTOMATICALLY_TRANSLATED = 10,
    TranslateEventProto_EventType_DISABLED_BY_PREF = 11,
    TranslateEventProto_EventType_LANGUAGE_DISABLED_BY_USER_CONFIG = 12,
    TranslateEventProto_EventType_URL_DISABLED_BY_USER_CONFIG = 13,
    TranslateEventProto_EventType_LANGUAGE_DISABLED_BY_AUTO_BLACKLIST = 14,
    TranslateEventProto_EventType_DISABLED_BY_RANKER = 15,
    TranslateEventProto_EventType_UNSUPPORTED_LANGUAGE = 16,
    TranslateEventProto_EventType_UNSUPPORTED_URL = 17,
    TranslateEventProto_EventType_MATCHES_PREVIOUS_LANGUAGE = 18,
    TranslateEventProto_EventType_BROWSER_WINDOW_IS_INVALID = 19,
    TranslateEventProto_EventType_BROWSER_WINDOW_NOT_ACTIVE = 20,
    TranslateEventProto_EventType_BROWSER_WINDOW_IS_MINIMIZED = 21,
    TranslateEventProto_EventType_WEB_CONTENTS_NOT_ACTIVE = 22,
    TranslateEventProto_EventType_EDITABLE_FIELD_IS_ACTIVE = 23
};
bool TranslateEventProto_EventType_IsValid(int value);
const TranslateEventProto_EventType TranslateEventProto_EventType_EventType_MIN = TranslateEventProto_EventType_UNKNOWN;
const TranslateEventProto_EventType TranslateEventProto_EventType_EventType_MAX = TranslateEventProto_EventType_EDITABLE_FIELD_IS_ACTIVE;
const int TranslateEventProto_EventType_EventType_ARRAYSIZE = TranslateEventProto_EventType_EventType_MAX + 1;

// ===================================================================

class TranslateEventProto : public ::google::protobuf::MessageLite {
public:
    TranslateEventProto();
    virtual ~TranslateEventProto();

    TranslateEventProto(const TranslateEventProto& from);

    inline TranslateEventProto& operator=(const TranslateEventProto& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const TranslateEventProto& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const TranslateEventProto* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(TranslateEventProto* other);

    // implements Message ----------------------------------------------

    inline TranslateEventProto* New() const { return New(NULL); }

    TranslateEventProto* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const TranslateEventProto& from);
    void MergeFrom(const TranslateEventProto& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(TranslateEventProto* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef TranslateEventProto_RankerResponse RankerResponse;
    static const RankerResponse SHOW = TranslateEventProto_RankerResponse_SHOW;
    static const RankerResponse DONT_SHOW = TranslateEventProto_RankerResponse_DONT_SHOW;
    static const RankerResponse NOT_QUERIED = TranslateEventProto_RankerResponse_NOT_QUERIED;
    static inline bool RankerResponse_IsValid(int value)
    {
        return TranslateEventProto_RankerResponse_IsValid(value);
    }
    static const RankerResponse RankerResponse_MIN = TranslateEventProto_RankerResponse_RankerResponse_MIN;
    static const RankerResponse RankerResponse_MAX = TranslateEventProto_RankerResponse_RankerResponse_MAX;
    static const int RankerResponse_ARRAYSIZE = TranslateEventProto_RankerResponse_RankerResponse_ARRAYSIZE;

    typedef TranslateEventProto_EventType EventType;
    static const EventType UNKNOWN = TranslateEventProto_EventType_UNKNOWN;
    static const EventType USER_DECLINE = TranslateEventProto_EventType_USER_DECLINE;
    static const EventType USER_ACCEPT = TranslateEventProto_EventType_USER_ACCEPT;
    static const EventType USER_DISMISS = TranslateEventProto_EventType_USER_DISMISS;
    static const EventType USER_IGNORE = TranslateEventProto_EventType_USER_IGNORE;
    static const EventType USER_NEVER_TRANSLATE_LANGUAGE = TranslateEventProto_EventType_USER_NEVER_TRANSLATE_LANGUAGE;
    static const EventType USER_NEVER_TRANSLATE_SITE = TranslateEventProto_EventType_USER_NEVER_TRANSLATE_SITE;
    static const EventType USER_ALWAYS_TRANSLATE_LANGUAGE = TranslateEventProto_EventType_USER_ALWAYS_TRANSLATE_LANGUAGE;
    static const EventType USER_CONTEXT_MENU_TRANSLATE = TranslateEventProto_EventType_USER_CONTEXT_MENU_TRANSLATE;
    static const EventType USER_REVERT = TranslateEventProto_EventType_USER_REVERT;
    static const EventType AUTOMATICALLY_TRANSLATED = TranslateEventProto_EventType_AUTOMATICALLY_TRANSLATED;
    static const EventType DISABLED_BY_PREF = TranslateEventProto_EventType_DISABLED_BY_PREF;
    static const EventType LANGUAGE_DISABLED_BY_USER_CONFIG = TranslateEventProto_EventType_LANGUAGE_DISABLED_BY_USER_CONFIG;
    static const EventType URL_DISABLED_BY_USER_CONFIG = TranslateEventProto_EventType_URL_DISABLED_BY_USER_CONFIG;
    static const EventType LANGUAGE_DISABLED_BY_AUTO_BLACKLIST = TranslateEventProto_EventType_LANGUAGE_DISABLED_BY_AUTO_BLACKLIST;
    static const EventType DISABLED_BY_RANKER = TranslateEventProto_EventType_DISABLED_BY_RANKER;
    static const EventType UNSUPPORTED_LANGUAGE = TranslateEventProto_EventType_UNSUPPORTED_LANGUAGE;
    static const EventType UNSUPPORTED_URL = TranslateEventProto_EventType_UNSUPPORTED_URL;
    static const EventType MATCHES_PREVIOUS_LANGUAGE = TranslateEventProto_EventType_MATCHES_PREVIOUS_LANGUAGE;
    static const EventType BROWSER_WINDOW_IS_INVALID = TranslateEventProto_EventType_BROWSER_WINDOW_IS_INVALID;
    static const EventType BROWSER_WINDOW_NOT_ACTIVE = TranslateEventProto_EventType_BROWSER_WINDOW_NOT_ACTIVE;
    static const EventType BROWSER_WINDOW_IS_MINIMIZED = TranslateEventProto_EventType_BROWSER_WINDOW_IS_MINIMIZED;
    static const EventType WEB_CONTENTS_NOT_ACTIVE = TranslateEventProto_EventType_WEB_CONTENTS_NOT_ACTIVE;
    static const EventType EDITABLE_FIELD_IS_ACTIVE = TranslateEventProto_EventType_EDITABLE_FIELD_IS_ACTIVE;
    static inline bool EventType_IsValid(int value)
    {
        return TranslateEventProto_EventType_IsValid(value);
    }
    static const EventType EventType_MIN = TranslateEventProto_EventType_EventType_MIN;
    static const EventType EventType_MAX = TranslateEventProto_EventType_EventType_MAX;
    static const int EventType_ARRAYSIZE = TranslateEventProto_EventType_EventType_ARRAYSIZE;

    // accessors -------------------------------------------------------

    // optional string source_language = 1;
    bool has_source_language() const;
    void clear_source_language();
    static const int kSourceLanguageFieldNumber = 1;
    const ::std::string& source_language() const;
    void set_source_language(const ::std::string& value);
    void set_source_language(const char* value);
    void set_source_language(const char* value, size_t size);
    ::std::string* mutable_source_language();
    ::std::string* release_source_language();
    void set_allocated_source_language(::std::string* source_language);

    // optional string target_language = 2;
    bool has_target_language() const;
    void clear_target_language();
    static const int kTargetLanguageFieldNumber = 2;
    const ::std::string& target_language() const;
    void set_target_language(const ::std::string& value);
    void set_target_language(const char* value);
    void set_target_language(const char* value, size_t size);
    ::std::string* mutable_target_language();
    ::std::string* release_target_language();
    void set_allocated_target_language(::std::string* target_language);

    // optional int32 accept_count = 3;
    bool has_accept_count() const;
    void clear_accept_count();
    static const int kAcceptCountFieldNumber = 3;
    ::google::protobuf::int32 accept_count() const;
    void set_accept_count(::google::protobuf::int32 value);

    // optional int32 decline_count = 4;
    bool has_decline_count() const;
    void clear_decline_count();
    static const int kDeclineCountFieldNumber = 4;
    ::google::protobuf::int32 decline_count() const;
    void set_decline_count(::google::protobuf::int32 value);

    // optional int32 ignore_count = 5;
    bool has_ignore_count() const;
    void clear_ignore_count();
    static const int kIgnoreCountFieldNumber = 5;
    ::google::protobuf::int32 ignore_count() const;
    void set_ignore_count(::google::protobuf::int32 value);

    // repeated string language_list = 6;
    int language_list_size() const;
    void clear_language_list();
    static const int kLanguageListFieldNumber = 6;
    const ::std::string& language_list(int index) const;
    ::std::string* mutable_language_list(int index);
    void set_language_list(int index, const ::std::string& value);
    void set_language_list(int index, const char* value);
    void set_language_list(int index, const char* value, size_t size);
    ::std::string* add_language_list();
    void add_language_list(const ::std::string& value);
    void add_language_list(const char* value);
    void add_language_list(const char* value, size_t size);
    const ::google::protobuf::RepeatedPtrField<::std::string>& language_list() const;
    ::google::protobuf::RepeatedPtrField<::std::string>* mutable_language_list();

    // optional uint32 ranker_version = 7;
    bool has_ranker_version() const;
    void clear_ranker_version();
    static const int kRankerVersionFieldNumber = 7;
    ::google::protobuf::uint32 ranker_version() const;
    void set_ranker_version(::google::protobuf::uint32 value);

    // optional int64 ranker_request_timestamp_sec = 8;
    bool has_ranker_request_timestamp_sec() const;
    void clear_ranker_request_timestamp_sec();
    static const int kRankerRequestTimestampSecFieldNumber = 8;
    ::google::protobuf::int64 ranker_request_timestamp_sec() const;
    void set_ranker_request_timestamp_sec(::google::protobuf::int64 value);

    // optional .metrics.TranslateEventProto.RankerResponse ranker_response = 9;
    bool has_ranker_response() const;
    void clear_ranker_response();
    static const int kRankerResponseFieldNumber = 9;
    ::metrics::TranslateEventProto_RankerResponse ranker_response() const;
    void set_ranker_response(::metrics::TranslateEventProto_RankerResponse value);

    // optional .metrics.TranslateEventProto.EventType event_type = 10;
    bool has_event_type() const;
    void clear_event_type();
    static const int kEventTypeFieldNumber = 10;
    ::metrics::TranslateEventProto_EventType event_type() const;
    void set_event_type(::metrics::TranslateEventProto_EventType value);

    // optional int64 event_timestamp_sec = 11;
    bool has_event_timestamp_sec() const;
    void clear_event_timestamp_sec();
    static const int kEventTimestampSecFieldNumber = 11;
    ::google::protobuf::int64 event_timestamp_sec() const;
    void set_event_timestamp_sec(::google::protobuf::int64 value);

    // optional string modified_source_language = 12;
    bool has_modified_source_language() const;
    void clear_modified_source_language();
    static const int kModifiedSourceLanguageFieldNumber = 12;
    const ::std::string& modified_source_language() const;
    void set_modified_source_language(const ::std::string& value);
    void set_modified_source_language(const char* value);
    void set_modified_source_language(const char* value, size_t size);
    ::std::string* mutable_modified_source_language();
    ::std::string* release_modified_source_language();
    void set_allocated_modified_source_language(::std::string* modified_source_language);

    // optional string modified_target_language = 13;
    bool has_modified_target_language() const;
    void clear_modified_target_language();
    static const int kModifiedTargetLanguageFieldNumber = 13;
    const ::std::string& modified_target_language() const;
    void set_modified_target_language(const ::std::string& value);
    void set_modified_target_language(const char* value);
    void set_modified_target_language(const char* value, size_t size);
    ::std::string* mutable_modified_target_language();
    ::std::string* release_modified_target_language();
    void set_allocated_modified_target_language(::std::string* modified_target_language);

    // @@protoc_insertion_point(class_scope:metrics.TranslateEventProto)
private:
    inline void set_has_source_language();
    inline void clear_has_source_language();
    inline void set_has_target_language();
    inline void clear_has_target_language();
    inline void set_has_accept_count();
    inline void clear_has_accept_count();
    inline void set_has_decline_count();
    inline void clear_has_decline_count();
    inline void set_has_ignore_count();
    inline void clear_has_ignore_count();
    inline void set_has_ranker_version();
    inline void clear_has_ranker_version();
    inline void set_has_ranker_request_timestamp_sec();
    inline void clear_has_ranker_request_timestamp_sec();
    inline void set_has_ranker_response();
    inline void clear_has_ranker_response();
    inline void set_has_event_type();
    inline void clear_has_event_type();
    inline void set_has_event_timestamp_sec();
    inline void clear_has_event_timestamp_sec();
    inline void set_has_modified_source_language();
    inline void clear_has_modified_source_language();
    inline void set_has_modified_target_language();
    inline void clear_has_modified_target_language();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr source_language_;
    ::google::protobuf::internal::ArenaStringPtr target_language_;
    ::google::protobuf::int32 accept_count_;
    ::google::protobuf::int32 decline_count_;
    ::google::protobuf::RepeatedPtrField<::std::string> language_list_;
    ::google::protobuf::int32 ignore_count_;
    ::google::protobuf::uint32 ranker_version_;
    ::google::protobuf::int64 ranker_request_timestamp_sec_;
    int ranker_response_;
    int event_type_;
    ::google::protobuf::int64 event_timestamp_sec_;
    ::google::protobuf::internal::ArenaStringPtr modified_source_language_;
    ::google::protobuf::internal::ArenaStringPtr modified_target_language_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_translate_5fevent_2eproto_impl();
#else
    friend void protobuf_AddDesc_translate_5fevent_2eproto();
#endif
    friend void protobuf_AssignDesc_translate_5fevent_2eproto();
    friend void protobuf_ShutdownFile_translate_5fevent_2eproto();

    void InitAsDefaultInstance();
    static TranslateEventProto* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TranslateEventProto

// optional string source_language = 1;
inline bool TranslateEventProto::has_source_language() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TranslateEventProto::set_has_source_language()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void TranslateEventProto::clear_has_source_language()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void TranslateEventProto::clear_source_language()
{
    source_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_source_language();
}
inline const ::std::string& TranslateEventProto::source_language() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.source_language)
    return source_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TranslateEventProto::set_source_language(const ::std::string& value)
{
    set_has_source_language();
    source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.source_language)
}
inline void TranslateEventProto::set_source_language(const char* value)
{
    set_has_source_language();
    source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.source_language)
}
inline void TranslateEventProto::set_source_language(const char* value, size_t size)
{
    set_has_source_language();
    source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.source_language)
}
inline ::std::string* TranslateEventProto::mutable_source_language()
{
    set_has_source_language();
    // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.source_language)
    return source_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TranslateEventProto::release_source_language()
{
    // @@protoc_insertion_point(field_release:metrics.TranslateEventProto.source_language)
    clear_has_source_language();
    return source_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TranslateEventProto::set_allocated_source_language(::std::string* source_language)
{
    if (source_language != NULL) {
        set_has_source_language();
    } else {
        clear_has_source_language();
    }
    source_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_language);
    // @@protoc_insertion_point(field_set_allocated:metrics.TranslateEventProto.source_language)
}

// optional string target_language = 2;
inline bool TranslateEventProto::has_target_language() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TranslateEventProto::set_has_target_language()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void TranslateEventProto::clear_has_target_language()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void TranslateEventProto::clear_target_language()
{
    target_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_target_language();
}
inline const ::std::string& TranslateEventProto::target_language() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.target_language)
    return target_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TranslateEventProto::set_target_language(const ::std::string& value)
{
    set_has_target_language();
    target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.target_language)
}
inline void TranslateEventProto::set_target_language(const char* value)
{
    set_has_target_language();
    target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.target_language)
}
inline void TranslateEventProto::set_target_language(const char* value, size_t size)
{
    set_has_target_language();
    target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.target_language)
}
inline ::std::string* TranslateEventProto::mutable_target_language()
{
    set_has_target_language();
    // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.target_language)
    return target_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TranslateEventProto::release_target_language()
{
    // @@protoc_insertion_point(field_release:metrics.TranslateEventProto.target_language)
    clear_has_target_language();
    return target_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TranslateEventProto::set_allocated_target_language(::std::string* target_language)
{
    if (target_language != NULL) {
        set_has_target_language();
    } else {
        clear_has_target_language();
    }
    target_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_language);
    // @@protoc_insertion_point(field_set_allocated:metrics.TranslateEventProto.target_language)
}

// optional int32 accept_count = 3;
inline bool TranslateEventProto::has_accept_count() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TranslateEventProto::set_has_accept_count()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void TranslateEventProto::clear_has_accept_count()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void TranslateEventProto::clear_accept_count()
{
    accept_count_ = 0;
    clear_has_accept_count();
}
inline ::google::protobuf::int32 TranslateEventProto::accept_count() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.accept_count)
    return accept_count_;
}
inline void TranslateEventProto::set_accept_count(::google::protobuf::int32 value)
{
    set_has_accept_count();
    accept_count_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.accept_count)
}

// optional int32 decline_count = 4;
inline bool TranslateEventProto::has_decline_count() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TranslateEventProto::set_has_decline_count()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void TranslateEventProto::clear_has_decline_count()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void TranslateEventProto::clear_decline_count()
{
    decline_count_ = 0;
    clear_has_decline_count();
}
inline ::google::protobuf::int32 TranslateEventProto::decline_count() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.decline_count)
    return decline_count_;
}
inline void TranslateEventProto::set_decline_count(::google::protobuf::int32 value)
{
    set_has_decline_count();
    decline_count_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.decline_count)
}

// optional int32 ignore_count = 5;
inline bool TranslateEventProto::has_ignore_count() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TranslateEventProto::set_has_ignore_count()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void TranslateEventProto::clear_has_ignore_count()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void TranslateEventProto::clear_ignore_count()
{
    ignore_count_ = 0;
    clear_has_ignore_count();
}
inline ::google::protobuf::int32 TranslateEventProto::ignore_count() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.ignore_count)
    return ignore_count_;
}
inline void TranslateEventProto::set_ignore_count(::google::protobuf::int32 value)
{
    set_has_ignore_count();
    ignore_count_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.ignore_count)
}

// repeated string language_list = 6;
inline int TranslateEventProto::language_list_size() const
{
    return language_list_.size();
}
inline void TranslateEventProto::clear_language_list()
{
    language_list_.Clear();
}
inline const ::std::string& TranslateEventProto::language_list(int index) const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.language_list)
    return language_list_.Get(index);
}
inline ::std::string* TranslateEventProto::mutable_language_list(int index)
{
    // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.language_list)
    return language_list_.Mutable(index);
}
inline void TranslateEventProto::set_language_list(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.language_list)
    language_list_.Mutable(index)->assign(value);
}
inline void TranslateEventProto::set_language_list(int index, const char* value)
{
    language_list_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.language_list)
}
inline void TranslateEventProto::set_language_list(int index, const char* value, size_t size)
{
    language_list_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.language_list)
}
inline ::std::string* TranslateEventProto::add_language_list()
{
    // @@protoc_insertion_point(field_add_mutable:metrics.TranslateEventProto.language_list)
    return language_list_.Add();
}
inline void TranslateEventProto::add_language_list(const ::std::string& value)
{
    language_list_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:metrics.TranslateEventProto.language_list)
}
inline void TranslateEventProto::add_language_list(const char* value)
{
    language_list_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:metrics.TranslateEventProto.language_list)
}
inline void TranslateEventProto::add_language_list(const char* value, size_t size)
{
    language_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:metrics.TranslateEventProto.language_list)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
TranslateEventProto::language_list() const
{
    // @@protoc_insertion_point(field_list:metrics.TranslateEventProto.language_list)
    return language_list_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
TranslateEventProto::mutable_language_list()
{
    // @@protoc_insertion_point(field_mutable_list:metrics.TranslateEventProto.language_list)
    return &language_list_;
}

// optional uint32 ranker_version = 7;
inline bool TranslateEventProto::has_ranker_version() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TranslateEventProto::set_has_ranker_version()
{
    _has_bits_[0] |= 0x00000040u;
}
inline void TranslateEventProto::clear_has_ranker_version()
{
    _has_bits_[0] &= ~0x00000040u;
}
inline void TranslateEventProto::clear_ranker_version()
{
    ranker_version_ = 0u;
    clear_has_ranker_version();
}
inline ::google::protobuf::uint32 TranslateEventProto::ranker_version() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.ranker_version)
    return ranker_version_;
}
inline void TranslateEventProto::set_ranker_version(::google::protobuf::uint32 value)
{
    set_has_ranker_version();
    ranker_version_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.ranker_version)
}

// optional int64 ranker_request_timestamp_sec = 8;
inline bool TranslateEventProto::has_ranker_request_timestamp_sec() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TranslateEventProto::set_has_ranker_request_timestamp_sec()
{
    _has_bits_[0] |= 0x00000080u;
}
inline void TranslateEventProto::clear_has_ranker_request_timestamp_sec()
{
    _has_bits_[0] &= ~0x00000080u;
}
inline void TranslateEventProto::clear_ranker_request_timestamp_sec()
{
    ranker_request_timestamp_sec_ = GOOGLE_LONGLONG(0);
    clear_has_ranker_request_timestamp_sec();
}
inline ::google::protobuf::int64 TranslateEventProto::ranker_request_timestamp_sec() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.ranker_request_timestamp_sec)
    return ranker_request_timestamp_sec_;
}
inline void TranslateEventProto::set_ranker_request_timestamp_sec(::google::protobuf::int64 value)
{
    set_has_ranker_request_timestamp_sec();
    ranker_request_timestamp_sec_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.ranker_request_timestamp_sec)
}

// optional .metrics.TranslateEventProto.RankerResponse ranker_response = 9;
inline bool TranslateEventProto::has_ranker_response() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TranslateEventProto::set_has_ranker_response()
{
    _has_bits_[0] |= 0x00000100u;
}
inline void TranslateEventProto::clear_has_ranker_response()
{
    _has_bits_[0] &= ~0x00000100u;
}
inline void TranslateEventProto::clear_ranker_response()
{
    ranker_response_ = 0;
    clear_has_ranker_response();
}
inline ::metrics::TranslateEventProto_RankerResponse TranslateEventProto::ranker_response() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.ranker_response)
    return static_cast<::metrics::TranslateEventProto_RankerResponse>(ranker_response_);
}
inline void TranslateEventProto::set_ranker_response(::metrics::TranslateEventProto_RankerResponse value)
{
    assert(::metrics::TranslateEventProto_RankerResponse_IsValid(value));
    set_has_ranker_response();
    ranker_response_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.ranker_response)
}

// optional .metrics.TranslateEventProto.EventType event_type = 10;
inline bool TranslateEventProto::has_event_type() const
{
    return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TranslateEventProto::set_has_event_type()
{
    _has_bits_[0] |= 0x00000200u;
}
inline void TranslateEventProto::clear_has_event_type()
{
    _has_bits_[0] &= ~0x00000200u;
}
inline void TranslateEventProto::clear_event_type()
{
    event_type_ = 0;
    clear_has_event_type();
}
inline ::metrics::TranslateEventProto_EventType TranslateEventProto::event_type() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.event_type)
    return static_cast<::metrics::TranslateEventProto_EventType>(event_type_);
}
inline void TranslateEventProto::set_event_type(::metrics::TranslateEventProto_EventType value)
{
    assert(::metrics::TranslateEventProto_EventType_IsValid(value));
    set_has_event_type();
    event_type_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.event_type)
}

// optional int64 event_timestamp_sec = 11;
inline bool TranslateEventProto::has_event_timestamp_sec() const
{
    return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TranslateEventProto::set_has_event_timestamp_sec()
{
    _has_bits_[0] |= 0x00000400u;
}
inline void TranslateEventProto::clear_has_event_timestamp_sec()
{
    _has_bits_[0] &= ~0x00000400u;
}
inline void TranslateEventProto::clear_event_timestamp_sec()
{
    event_timestamp_sec_ = GOOGLE_LONGLONG(0);
    clear_has_event_timestamp_sec();
}
inline ::google::protobuf::int64 TranslateEventProto::event_timestamp_sec() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.event_timestamp_sec)
    return event_timestamp_sec_;
}
inline void TranslateEventProto::set_event_timestamp_sec(::google::protobuf::int64 value)
{
    set_has_event_timestamp_sec();
    event_timestamp_sec_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.event_timestamp_sec)
}

// optional string modified_source_language = 12;
inline bool TranslateEventProto::has_modified_source_language() const
{
    return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TranslateEventProto::set_has_modified_source_language()
{
    _has_bits_[0] |= 0x00000800u;
}
inline void TranslateEventProto::clear_has_modified_source_language()
{
    _has_bits_[0] &= ~0x00000800u;
}
inline void TranslateEventProto::clear_modified_source_language()
{
    modified_source_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_modified_source_language();
}
inline const ::std::string& TranslateEventProto::modified_source_language() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.modified_source_language)
    return modified_source_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TranslateEventProto::set_modified_source_language(const ::std::string& value)
{
    set_has_modified_source_language();
    modified_source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.modified_source_language)
}
inline void TranslateEventProto::set_modified_source_language(const char* value)
{
    set_has_modified_source_language();
    modified_source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.modified_source_language)
}
inline void TranslateEventProto::set_modified_source_language(const char* value, size_t size)
{
    set_has_modified_source_language();
    modified_source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.modified_source_language)
}
inline ::std::string* TranslateEventProto::mutable_modified_source_language()
{
    set_has_modified_source_language();
    // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.modified_source_language)
    return modified_source_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TranslateEventProto::release_modified_source_language()
{
    // @@protoc_insertion_point(field_release:metrics.TranslateEventProto.modified_source_language)
    clear_has_modified_source_language();
    return modified_source_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TranslateEventProto::set_allocated_modified_source_language(::std::string* modified_source_language)
{
    if (modified_source_language != NULL) {
        set_has_modified_source_language();
    } else {
        clear_has_modified_source_language();
    }
    modified_source_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modified_source_language);
    // @@protoc_insertion_point(field_set_allocated:metrics.TranslateEventProto.modified_source_language)
}

// optional string modified_target_language = 13;
inline bool TranslateEventProto::has_modified_target_language() const
{
    return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TranslateEventProto::set_has_modified_target_language()
{
    _has_bits_[0] |= 0x00001000u;
}
inline void TranslateEventProto::clear_has_modified_target_language()
{
    _has_bits_[0] &= ~0x00001000u;
}
inline void TranslateEventProto::clear_modified_target_language()
{
    modified_target_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_modified_target_language();
}
inline const ::std::string& TranslateEventProto::modified_target_language() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.modified_target_language)
    return modified_target_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TranslateEventProto::set_modified_target_language(const ::std::string& value)
{
    set_has_modified_target_language();
    modified_target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.modified_target_language)
}
inline void TranslateEventProto::set_modified_target_language(const char* value)
{
    set_has_modified_target_language();
    modified_target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.modified_target_language)
}
inline void TranslateEventProto::set_modified_target_language(const char* value, size_t size)
{
    set_has_modified_target_language();
    modified_target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.modified_target_language)
}
inline ::std::string* TranslateEventProto::mutable_modified_target_language()
{
    set_has_modified_target_language();
    // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.modified_target_language)
    return modified_target_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TranslateEventProto::release_modified_target_language()
{
    // @@protoc_insertion_point(field_release:metrics.TranslateEventProto.modified_target_language)
    clear_has_modified_target_language();
    return modified_target_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TranslateEventProto::set_allocated_modified_target_language(::std::string* modified_target_language)
{
    if (modified_target_language != NULL) {
        set_has_modified_target_language();
    } else {
        clear_has_modified_target_language();
    }
    modified_target_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modified_target_language);
    // @@protoc_insertion_point(field_set_allocated:metrics.TranslateEventProto.modified_target_language)
}

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace metrics

#ifndef SWIG
namespace google {
namespace protobuf {

    template <>
    struct is_proto_enum<::metrics::TranslateEventProto_RankerResponse> : ::google::protobuf::internal::true_type {
    };
    template <>
    struct is_proto_enum<::metrics::TranslateEventProto_EventType> : ::google::protobuf::internal::true_type {
    };

} // namespace protobuf
} // namespace google
#endif // SWIG

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_translate_5fevent_2eproto__INCLUDED
