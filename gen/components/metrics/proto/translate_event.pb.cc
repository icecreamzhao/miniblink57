// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: translate_event.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "translate_event.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace metrics {

void protobuf_ShutdownFile_translate_5fevent_2eproto()
{
    delete TranslateEventProto::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_translate_5fevent_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_translate_5fevent_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    TranslateEventProto::default_instance_ = new TranslateEventProto();
    TranslateEventProto::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_translate_5fevent_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_translate_5fevent_2eproto_once_);
void protobuf_AddDesc_translate_5fevent_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_translate_5fevent_2eproto_once_,
        &protobuf_AddDesc_translate_5fevent_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_translate_5fevent_2eproto {
    StaticDescriptorInitializer_translate_5fevent_2eproto()
    {
        protobuf_AddDesc_translate_5fevent_2eproto();
    }
} static_descriptor_initializer_translate_5fevent_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForTranslateEventProto(
    TranslateEventProto* ptr)
{
    return ptr->mutable_unknown_fields();
}

bool TranslateEventProto_RankerResponse_IsValid(int value)
{
    switch (value) {
    case 0:
    case 1:
    case 2:
        return true;
    default:
        return false;
    }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TranslateEventProto_RankerResponse TranslateEventProto::SHOW;
const TranslateEventProto_RankerResponse TranslateEventProto::DONT_SHOW;
const TranslateEventProto_RankerResponse TranslateEventProto::NOT_QUERIED;
const TranslateEventProto_RankerResponse TranslateEventProto::RankerResponse_MIN;
const TranslateEventProto_RankerResponse TranslateEventProto::RankerResponse_MAX;
const int TranslateEventProto::RankerResponse_ARRAYSIZE;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
bool TranslateEventProto_EventType_IsValid(int value)
{
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
        return true;
    default:
        return false;
    }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TranslateEventProto_EventType TranslateEventProto::UNKNOWN;
const TranslateEventProto_EventType TranslateEventProto::USER_DECLINE;
const TranslateEventProto_EventType TranslateEventProto::USER_ACCEPT;
const TranslateEventProto_EventType TranslateEventProto::USER_DISMISS;
const TranslateEventProto_EventType TranslateEventProto::USER_IGNORE;
const TranslateEventProto_EventType TranslateEventProto::USER_NEVER_TRANSLATE_LANGUAGE;
const TranslateEventProto_EventType TranslateEventProto::USER_NEVER_TRANSLATE_SITE;
const TranslateEventProto_EventType TranslateEventProto::USER_ALWAYS_TRANSLATE_LANGUAGE;
const TranslateEventProto_EventType TranslateEventProto::USER_CONTEXT_MENU_TRANSLATE;
const TranslateEventProto_EventType TranslateEventProto::USER_REVERT;
const TranslateEventProto_EventType TranslateEventProto::AUTOMATICALLY_TRANSLATED;
const TranslateEventProto_EventType TranslateEventProto::DISABLED_BY_PREF;
const TranslateEventProto_EventType TranslateEventProto::LANGUAGE_DISABLED_BY_USER_CONFIG;
const TranslateEventProto_EventType TranslateEventProto::URL_DISABLED_BY_USER_CONFIG;
const TranslateEventProto_EventType TranslateEventProto::LANGUAGE_DISABLED_BY_AUTO_BLACKLIST;
const TranslateEventProto_EventType TranslateEventProto::DISABLED_BY_RANKER;
const TranslateEventProto_EventType TranslateEventProto::UNSUPPORTED_LANGUAGE;
const TranslateEventProto_EventType TranslateEventProto::UNSUPPORTED_URL;
const TranslateEventProto_EventType TranslateEventProto::MATCHES_PREVIOUS_LANGUAGE;
const TranslateEventProto_EventType TranslateEventProto::BROWSER_WINDOW_IS_INVALID;
const TranslateEventProto_EventType TranslateEventProto::BROWSER_WINDOW_NOT_ACTIVE;
const TranslateEventProto_EventType TranslateEventProto::BROWSER_WINDOW_IS_MINIMIZED;
const TranslateEventProto_EventType TranslateEventProto::WEB_CONTENTS_NOT_ACTIVE;
const TranslateEventProto_EventType TranslateEventProto::EDITABLE_FIELD_IS_ACTIVE;
const TranslateEventProto_EventType TranslateEventProto::EventType_MIN;
const TranslateEventProto_EventType TranslateEventProto::EventType_MAX;
const int TranslateEventProto::EventType_ARRAYSIZE;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TranslateEventProto::kSourceLanguageFieldNumber;
const int TranslateEventProto::kTargetLanguageFieldNumber;
const int TranslateEventProto::kAcceptCountFieldNumber;
const int TranslateEventProto::kDeclineCountFieldNumber;
const int TranslateEventProto::kIgnoreCountFieldNumber;
const int TranslateEventProto::kLanguageListFieldNumber;
const int TranslateEventProto::kRankerVersionFieldNumber;
const int TranslateEventProto::kRankerRequestTimestampSecFieldNumber;
const int TranslateEventProto::kRankerResponseFieldNumber;
const int TranslateEventProto::kEventTypeFieldNumber;
const int TranslateEventProto::kEventTimestampSecFieldNumber;
const int TranslateEventProto::kModifiedSourceLanguageFieldNumber;
const int TranslateEventProto::kModifiedTargetLanguageFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

TranslateEventProto::TranslateEventProto()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:metrics.TranslateEventProto)
}

void TranslateEventProto::InitAsDefaultInstance()
{
}

TranslateEventProto::TranslateEventProto(const TranslateEventProto& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:metrics.TranslateEventProto)
}

void TranslateEventProto::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    source_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    target_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    accept_count_ = 0;
    decline_count_ = 0;
    ignore_count_ = 0;
    ranker_version_ = 0u;
    ranker_request_timestamp_sec_ = GOOGLE_LONGLONG(0);
    ranker_response_ = 0;
    event_type_ = 0;
    event_timestamp_sec_ = GOOGLE_LONGLONG(0);
    modified_source_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    modified_target_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TranslateEventProto::~TranslateEventProto()
{
    // @@protoc_insertion_point(destructor:metrics.TranslateEventProto)
    SharedDtor();
}

void TranslateEventProto::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    source_language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    target_language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    modified_source_language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    modified_target_language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void TranslateEventProto::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TranslateEventProto& TranslateEventProto::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_translate_5fevent_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_translate_5fevent_2eproto();
#endif
    return *default_instance_;
}

TranslateEventProto* TranslateEventProto::default_instance_ = NULL;

TranslateEventProto* TranslateEventProto::New(::google::protobuf::Arena* arena) const
{
    TranslateEventProto* n = new TranslateEventProto;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void TranslateEventProto::Clear()
{
// @@protoc_insertion_point(message_clear_start:metrics.TranslateEventProto)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                         \
    _Pragma("clang diagnostic push")                                                                          \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(TranslateEventProto, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<TranslateEventProto*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    if (_has_bits_[0 / 32] & 223u) {
        ZR_(accept_count_, decline_count_);
        ZR_(ignore_count_, ranker_request_timestamp_sec_);
        if (has_source_language()) {
            source_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_target_language()) {
            target_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }
    if (_has_bits_[8 / 32] & 7936u) {
        ZR_(ranker_response_, event_timestamp_sec_);
        if (has_modified_source_language()) {
            modified_source_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        if (has_modified_target_language()) {
            modified_target_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
    }

#undef ZR_HELPER_
#undef ZR_

    language_list_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TranslateEventProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForTranslateEventProto, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:metrics.TranslateEventProto)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional string source_language = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_source_language()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_target_language;
            break;
        }

        // optional string target_language = 2;
        case 2: {
            if (tag == 18) {
            parse_target_language:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_target_language()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_accept_count;
            break;
        }

        // optional int32 accept_count = 3;
        case 3: {
            if (tag == 24) {
            parse_accept_count:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &accept_count_)));
                set_has_accept_count();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(32))
                goto parse_decline_count;
            break;
        }

        // optional int32 decline_count = 4;
        case 4: {
            if (tag == 32) {
            parse_decline_count:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &decline_count_)));
                set_has_decline_count();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(40))
                goto parse_ignore_count;
            break;
        }

        // optional int32 ignore_count = 5;
        case 5: {
            if (tag == 40) {
            parse_ignore_count:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &ignore_count_)));
                set_has_ignore_count();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(50))
                goto parse_language_list;
            break;
        }

        // repeated string language_list = 6;
        case 6: {
            if (tag == 50) {
            parse_language_list:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->add_language_list()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(50))
                goto parse_language_list;
            if (input->ExpectTag(56))
                goto parse_ranker_version;
            break;
        }

        // optional uint32 ranker_version = 7;
        case 7: {
            if (tag == 56) {
            parse_ranker_version:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                    input, &ranker_version_)));
                set_has_ranker_version();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(64))
                goto parse_ranker_request_timestamp_sec;
            break;
        }

        // optional int64 ranker_request_timestamp_sec = 8;
        case 8: {
            if (tag == 64) {
            parse_ranker_request_timestamp_sec:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &ranker_request_timestamp_sec_)));
                set_has_ranker_request_timestamp_sec();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(72))
                goto parse_ranker_response;
            break;
        }

        // optional .metrics.TranslateEventProto.RankerResponse ranker_response = 9;
        case 9: {
            if (tag == 72) {
            parse_ranker_response:
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::metrics::TranslateEventProto_RankerResponse_IsValid(value)) {
                    set_ranker_response(static_cast<::metrics::TranslateEventProto_RankerResponse>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(72);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(80))
                goto parse_event_type;
            break;
        }

        // optional .metrics.TranslateEventProto.EventType event_type = 10;
        case 10: {
            if (tag == 80) {
            parse_event_type:
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::metrics::TranslateEventProto_EventType_IsValid(value)) {
                    set_event_type(static_cast<::metrics::TranslateEventProto_EventType>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(80);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(88))
                goto parse_event_timestamp_sec;
            break;
        }

        // optional int64 event_timestamp_sec = 11;
        case 11: {
            if (tag == 88) {
            parse_event_timestamp_sec:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &event_timestamp_sec_)));
                set_has_event_timestamp_sec();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(98))
                goto parse_modified_source_language;
            break;
        }

        // optional string modified_source_language = 12;
        case 12: {
            if (tag == 98) {
            parse_modified_source_language:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_modified_source_language()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(106))
                goto parse_modified_target_language;
            break;
        }

        // optional string modified_target_language = 13;
        case 13: {
            if (tag == 106) {
            parse_modified_target_language:
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_modified_target_language()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:metrics.TranslateEventProto)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:metrics.TranslateEventProto)
    return false;
#undef DO_
}

void TranslateEventProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:metrics.TranslateEventProto)
    // optional string source_language = 1;
    if (has_source_language()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->source_language(), output);
    }

    // optional string target_language = 2;
    if (has_target_language()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            2, this->target_language(), output);
    }

    // optional int32 accept_count = 3;
    if (has_accept_count()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->accept_count(), output);
    }

    // optional int32 decline_count = 4;
    if (has_decline_count()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->decline_count(), output);
    }

    // optional int32 ignore_count = 5;
    if (has_ignore_count()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ignore_count(), output);
    }

    // repeated string language_list = 6;
    for (int i = 0; i < this->language_list_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteString(
            6, this->language_list(i), output);
    }

    // optional uint32 ranker_version = 7;
    if (has_ranker_version()) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->ranker_version(), output);
    }

    // optional int64 ranker_request_timestamp_sec = 8;
    if (has_ranker_request_timestamp_sec()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->ranker_request_timestamp_sec(), output);
    }

    // optional .metrics.TranslateEventProto.RankerResponse ranker_response = 9;
    if (has_ranker_response()) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            9, this->ranker_response(), output);
    }

    // optional .metrics.TranslateEventProto.EventType event_type = 10;
    if (has_event_type()) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            10, this->event_type(), output);
    }

    // optional int64 event_timestamp_sec = 11;
    if (has_event_timestamp_sec()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->event_timestamp_sec(), output);
    }

    // optional string modified_source_language = 12;
    if (has_modified_source_language()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            12, this->modified_source_language(), output);
    }

    // optional string modified_target_language = 13;
    if (has_modified_target_language()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            13, this->modified_target_language(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:metrics.TranslateEventProto)
}

int TranslateEventProto::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:metrics.TranslateEventProto)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 223u) {
        // optional string source_language = 1;
        if (has_source_language()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->source_language());
        }

        // optional string target_language = 2;
        if (has_target_language()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->target_language());
        }

        // optional int32 accept_count = 3;
        if (has_accept_count()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->accept_count());
        }

        // optional int32 decline_count = 4;
        if (has_decline_count()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->decline_count());
        }

        // optional int32 ignore_count = 5;
        if (has_ignore_count()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->ignore_count());
        }

        // optional uint32 ranker_version = 7;
        if (has_ranker_version()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(this->ranker_version());
        }

        // optional int64 ranker_request_timestamp_sec = 8;
        if (has_ranker_request_timestamp_sec()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->ranker_request_timestamp_sec());
        }
    }
    if (_has_bits_[8 / 32] & 7936u) {
        // optional .metrics.TranslateEventProto.RankerResponse ranker_response = 9;
        if (has_ranker_response()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->ranker_response());
        }

        // optional .metrics.TranslateEventProto.EventType event_type = 10;
        if (has_event_type()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->event_type());
        }

        // optional int64 event_timestamp_sec = 11;
        if (has_event_timestamp_sec()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->event_timestamp_sec());
        }

        // optional string modified_source_language = 12;
        if (has_modified_source_language()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->modified_source_language());
        }

        // optional string modified_target_language = 13;
        if (has_modified_target_language()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->modified_target_language());
        }
    }
    // repeated string language_list = 6;
    total_size += 1 * this->language_list_size();
    for (int i = 0; i < this->language_list_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this->language_list(i));
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void TranslateEventProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const TranslateEventProto*>(&from));
}

void TranslateEventProto::MergeFrom(const TranslateEventProto& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:metrics.TranslateEventProto)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    language_list_.MergeFrom(from.language_list_);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_source_language()) {
            set_has_source_language();
            source_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_language_);
        }
        if (from.has_target_language()) {
            set_has_target_language();
            target_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_language_);
        }
        if (from.has_accept_count()) {
            set_accept_count(from.accept_count());
        }
        if (from.has_decline_count()) {
            set_decline_count(from.decline_count());
        }
        if (from.has_ignore_count()) {
            set_ignore_count(from.ignore_count());
        }
        if (from.has_ranker_version()) {
            set_ranker_version(from.ranker_version());
        }
        if (from.has_ranker_request_timestamp_sec()) {
            set_ranker_request_timestamp_sec(from.ranker_request_timestamp_sec());
        }
    }
    if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
        if (from.has_ranker_response()) {
            set_ranker_response(from.ranker_response());
        }
        if (from.has_event_type()) {
            set_event_type(from.event_type());
        }
        if (from.has_event_timestamp_sec()) {
            set_event_timestamp_sec(from.event_timestamp_sec());
        }
        if (from.has_modified_source_language()) {
            set_has_modified_source_language();
            modified_source_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modified_source_language_);
        }
        if (from.has_modified_target_language()) {
            set_has_modified_target_language();
            modified_target_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modified_target_language_);
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void TranslateEventProto::CopyFrom(const TranslateEventProto& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:metrics.TranslateEventProto)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool TranslateEventProto::IsInitialized() const
{

    return true;
}

void TranslateEventProto::Swap(TranslateEventProto* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void TranslateEventProto::InternalSwap(TranslateEventProto* other)
{
    source_language_.Swap(&other->source_language_);
    target_language_.Swap(&other->target_language_);
    std::swap(accept_count_, other->accept_count_);
    std::swap(decline_count_, other->decline_count_);
    std::swap(ignore_count_, other->ignore_count_);
    language_list_.UnsafeArenaSwap(&other->language_list_);
    std::swap(ranker_version_, other->ranker_version_);
    std::swap(ranker_request_timestamp_sec_, other->ranker_request_timestamp_sec_);
    std::swap(ranker_response_, other->ranker_response_);
    std::swap(event_type_, other->event_type_);
    std::swap(event_timestamp_sec_, other->event_timestamp_sec_);
    modified_source_language_.Swap(&other->modified_source_language_);
    modified_target_language_.Swap(&other->modified_target_language_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string TranslateEventProto::GetTypeName() const
{
    return "metrics.TranslateEventProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TranslateEventProto

// optional string source_language = 1;
bool TranslateEventProto::has_source_language() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void TranslateEventProto::set_has_source_language()
{
    _has_bits_[0] |= 0x00000001u;
}
void TranslateEventProto::clear_has_source_language()
{
    _has_bits_[0] &= ~0x00000001u;
}
void TranslateEventProto::clear_source_language()
{
    source_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_source_language();
}
const ::std::string& TranslateEventProto::source_language() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.source_language)
    return source_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslateEventProto::set_source_language(const ::std::string& value)
{
    set_has_source_language();
    source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.source_language)
}
void TranslateEventProto::set_source_language(const char* value)
{
    set_has_source_language();
    source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.source_language)
}
void TranslateEventProto::set_source_language(const char* value, size_t size)
{
    set_has_source_language();
    source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.source_language)
}
::std::string* TranslateEventProto::mutable_source_language()
{
    set_has_source_language();
    // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.source_language)
    return source_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TranslateEventProto::release_source_language()
{
    // @@protoc_insertion_point(field_release:metrics.TranslateEventProto.source_language)
    clear_has_source_language();
    return source_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslateEventProto::set_allocated_source_language(::std::string* source_language)
{
    if (source_language != NULL) {
        set_has_source_language();
    } else {
        clear_has_source_language();
    }
    source_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_language);
    // @@protoc_insertion_point(field_set_allocated:metrics.TranslateEventProto.source_language)
}

// optional string target_language = 2;
bool TranslateEventProto::has_target_language() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void TranslateEventProto::set_has_target_language()
{
    _has_bits_[0] |= 0x00000002u;
}
void TranslateEventProto::clear_has_target_language()
{
    _has_bits_[0] &= ~0x00000002u;
}
void TranslateEventProto::clear_target_language()
{
    target_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_target_language();
}
const ::std::string& TranslateEventProto::target_language() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.target_language)
    return target_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslateEventProto::set_target_language(const ::std::string& value)
{
    set_has_target_language();
    target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.target_language)
}
void TranslateEventProto::set_target_language(const char* value)
{
    set_has_target_language();
    target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.target_language)
}
void TranslateEventProto::set_target_language(const char* value, size_t size)
{
    set_has_target_language();
    target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.target_language)
}
::std::string* TranslateEventProto::mutable_target_language()
{
    set_has_target_language();
    // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.target_language)
    return target_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TranslateEventProto::release_target_language()
{
    // @@protoc_insertion_point(field_release:metrics.TranslateEventProto.target_language)
    clear_has_target_language();
    return target_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslateEventProto::set_allocated_target_language(::std::string* target_language)
{
    if (target_language != NULL) {
        set_has_target_language();
    } else {
        clear_has_target_language();
    }
    target_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_language);
    // @@protoc_insertion_point(field_set_allocated:metrics.TranslateEventProto.target_language)
}

// optional int32 accept_count = 3;
bool TranslateEventProto::has_accept_count() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void TranslateEventProto::set_has_accept_count()
{
    _has_bits_[0] |= 0x00000004u;
}
void TranslateEventProto::clear_has_accept_count()
{
    _has_bits_[0] &= ~0x00000004u;
}
void TranslateEventProto::clear_accept_count()
{
    accept_count_ = 0;
    clear_has_accept_count();
}
::google::protobuf::int32 TranslateEventProto::accept_count() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.accept_count)
    return accept_count_;
}
void TranslateEventProto::set_accept_count(::google::protobuf::int32 value)
{
    set_has_accept_count();
    accept_count_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.accept_count)
}

// optional int32 decline_count = 4;
bool TranslateEventProto::has_decline_count() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void TranslateEventProto::set_has_decline_count()
{
    _has_bits_[0] |= 0x00000008u;
}
void TranslateEventProto::clear_has_decline_count()
{
    _has_bits_[0] &= ~0x00000008u;
}
void TranslateEventProto::clear_decline_count()
{
    decline_count_ = 0;
    clear_has_decline_count();
}
::google::protobuf::int32 TranslateEventProto::decline_count() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.decline_count)
    return decline_count_;
}
void TranslateEventProto::set_decline_count(::google::protobuf::int32 value)
{
    set_has_decline_count();
    decline_count_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.decline_count)
}

// optional int32 ignore_count = 5;
bool TranslateEventProto::has_ignore_count() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
void TranslateEventProto::set_has_ignore_count()
{
    _has_bits_[0] |= 0x00000010u;
}
void TranslateEventProto::clear_has_ignore_count()
{
    _has_bits_[0] &= ~0x00000010u;
}
void TranslateEventProto::clear_ignore_count()
{
    ignore_count_ = 0;
    clear_has_ignore_count();
}
::google::protobuf::int32 TranslateEventProto::ignore_count() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.ignore_count)
    return ignore_count_;
}
void TranslateEventProto::set_ignore_count(::google::protobuf::int32 value)
{
    set_has_ignore_count();
    ignore_count_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.ignore_count)
}

// repeated string language_list = 6;
int TranslateEventProto::language_list_size() const
{
    return language_list_.size();
}
void TranslateEventProto::clear_language_list()
{
    language_list_.Clear();
}
const ::std::string& TranslateEventProto::language_list(int index) const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.language_list)
    return language_list_.Get(index);
}
::std::string* TranslateEventProto::mutable_language_list(int index)
{
    // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.language_list)
    return language_list_.Mutable(index);
}
void TranslateEventProto::set_language_list(int index, const ::std::string& value)
{
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.language_list)
    language_list_.Mutable(index)->assign(value);
}
void TranslateEventProto::set_language_list(int index, const char* value)
{
    language_list_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.language_list)
}
void TranslateEventProto::set_language_list(int index, const char* value, size_t size)
{
    language_list_.Mutable(index)->assign(
        reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.language_list)
}
::std::string* TranslateEventProto::add_language_list()
{
    // @@protoc_insertion_point(field_add_mutable:metrics.TranslateEventProto.language_list)
    return language_list_.Add();
}
void TranslateEventProto::add_language_list(const ::std::string& value)
{
    language_list_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:metrics.TranslateEventProto.language_list)
}
void TranslateEventProto::add_language_list(const char* value)
{
    language_list_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:metrics.TranslateEventProto.language_list)
}
void TranslateEventProto::add_language_list(const char* value, size_t size)
{
    language_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:metrics.TranslateEventProto.language_list)
}
const ::google::protobuf::RepeatedPtrField<::std::string>&
TranslateEventProto::language_list() const
{
    // @@protoc_insertion_point(field_list:metrics.TranslateEventProto.language_list)
    return language_list_;
}
::google::protobuf::RepeatedPtrField<::std::string>*
TranslateEventProto::mutable_language_list()
{
    // @@protoc_insertion_point(field_mutable_list:metrics.TranslateEventProto.language_list)
    return &language_list_;
}

// optional uint32 ranker_version = 7;
bool TranslateEventProto::has_ranker_version() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
void TranslateEventProto::set_has_ranker_version()
{
    _has_bits_[0] |= 0x00000040u;
}
void TranslateEventProto::clear_has_ranker_version()
{
    _has_bits_[0] &= ~0x00000040u;
}
void TranslateEventProto::clear_ranker_version()
{
    ranker_version_ = 0u;
    clear_has_ranker_version();
}
::google::protobuf::uint32 TranslateEventProto::ranker_version() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.ranker_version)
    return ranker_version_;
}
void TranslateEventProto::set_ranker_version(::google::protobuf::uint32 value)
{
    set_has_ranker_version();
    ranker_version_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.ranker_version)
}

// optional int64 ranker_request_timestamp_sec = 8;
bool TranslateEventProto::has_ranker_request_timestamp_sec() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
void TranslateEventProto::set_has_ranker_request_timestamp_sec()
{
    _has_bits_[0] |= 0x00000080u;
}
void TranslateEventProto::clear_has_ranker_request_timestamp_sec()
{
    _has_bits_[0] &= ~0x00000080u;
}
void TranslateEventProto::clear_ranker_request_timestamp_sec()
{
    ranker_request_timestamp_sec_ = GOOGLE_LONGLONG(0);
    clear_has_ranker_request_timestamp_sec();
}
::google::protobuf::int64 TranslateEventProto::ranker_request_timestamp_sec() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.ranker_request_timestamp_sec)
    return ranker_request_timestamp_sec_;
}
void TranslateEventProto::set_ranker_request_timestamp_sec(::google::protobuf::int64 value)
{
    set_has_ranker_request_timestamp_sec();
    ranker_request_timestamp_sec_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.ranker_request_timestamp_sec)
}

// optional .metrics.TranslateEventProto.RankerResponse ranker_response = 9;
bool TranslateEventProto::has_ranker_response() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
void TranslateEventProto::set_has_ranker_response()
{
    _has_bits_[0] |= 0x00000100u;
}
void TranslateEventProto::clear_has_ranker_response()
{
    _has_bits_[0] &= ~0x00000100u;
}
void TranslateEventProto::clear_ranker_response()
{
    ranker_response_ = 0;
    clear_has_ranker_response();
}
::metrics::TranslateEventProto_RankerResponse TranslateEventProto::ranker_response() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.ranker_response)
    return static_cast<::metrics::TranslateEventProto_RankerResponse>(ranker_response_);
}
void TranslateEventProto::set_ranker_response(::metrics::TranslateEventProto_RankerResponse value)
{
    assert(::metrics::TranslateEventProto_RankerResponse_IsValid(value));
    set_has_ranker_response();
    ranker_response_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.ranker_response)
}

// optional .metrics.TranslateEventProto.EventType event_type = 10;
bool TranslateEventProto::has_event_type() const
{
    return (_has_bits_[0] & 0x00000200u) != 0;
}
void TranslateEventProto::set_has_event_type()
{
    _has_bits_[0] |= 0x00000200u;
}
void TranslateEventProto::clear_has_event_type()
{
    _has_bits_[0] &= ~0x00000200u;
}
void TranslateEventProto::clear_event_type()
{
    event_type_ = 0;
    clear_has_event_type();
}
::metrics::TranslateEventProto_EventType TranslateEventProto::event_type() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.event_type)
    return static_cast<::metrics::TranslateEventProto_EventType>(event_type_);
}
void TranslateEventProto::set_event_type(::metrics::TranslateEventProto_EventType value)
{
    assert(::metrics::TranslateEventProto_EventType_IsValid(value));
    set_has_event_type();
    event_type_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.event_type)
}

// optional int64 event_timestamp_sec = 11;
bool TranslateEventProto::has_event_timestamp_sec() const
{
    return (_has_bits_[0] & 0x00000400u) != 0;
}
void TranslateEventProto::set_has_event_timestamp_sec()
{
    _has_bits_[0] |= 0x00000400u;
}
void TranslateEventProto::clear_has_event_timestamp_sec()
{
    _has_bits_[0] &= ~0x00000400u;
}
void TranslateEventProto::clear_event_timestamp_sec()
{
    event_timestamp_sec_ = GOOGLE_LONGLONG(0);
    clear_has_event_timestamp_sec();
}
::google::protobuf::int64 TranslateEventProto::event_timestamp_sec() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.event_timestamp_sec)
    return event_timestamp_sec_;
}
void TranslateEventProto::set_event_timestamp_sec(::google::protobuf::int64 value)
{
    set_has_event_timestamp_sec();
    event_timestamp_sec_ = value;
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.event_timestamp_sec)
}

// optional string modified_source_language = 12;
bool TranslateEventProto::has_modified_source_language() const
{
    return (_has_bits_[0] & 0x00000800u) != 0;
}
void TranslateEventProto::set_has_modified_source_language()
{
    _has_bits_[0] |= 0x00000800u;
}
void TranslateEventProto::clear_has_modified_source_language()
{
    _has_bits_[0] &= ~0x00000800u;
}
void TranslateEventProto::clear_modified_source_language()
{
    modified_source_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_modified_source_language();
}
const ::std::string& TranslateEventProto::modified_source_language() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.modified_source_language)
    return modified_source_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslateEventProto::set_modified_source_language(const ::std::string& value)
{
    set_has_modified_source_language();
    modified_source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.modified_source_language)
}
void TranslateEventProto::set_modified_source_language(const char* value)
{
    set_has_modified_source_language();
    modified_source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.modified_source_language)
}
void TranslateEventProto::set_modified_source_language(const char* value, size_t size)
{
    set_has_modified_source_language();
    modified_source_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.modified_source_language)
}
::std::string* TranslateEventProto::mutable_modified_source_language()
{
    set_has_modified_source_language();
    // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.modified_source_language)
    return modified_source_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TranslateEventProto::release_modified_source_language()
{
    // @@protoc_insertion_point(field_release:metrics.TranslateEventProto.modified_source_language)
    clear_has_modified_source_language();
    return modified_source_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslateEventProto::set_allocated_modified_source_language(::std::string* modified_source_language)
{
    if (modified_source_language != NULL) {
        set_has_modified_source_language();
    } else {
        clear_has_modified_source_language();
    }
    modified_source_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modified_source_language);
    // @@protoc_insertion_point(field_set_allocated:metrics.TranslateEventProto.modified_source_language)
}

// optional string modified_target_language = 13;
bool TranslateEventProto::has_modified_target_language() const
{
    return (_has_bits_[0] & 0x00001000u) != 0;
}
void TranslateEventProto::set_has_modified_target_language()
{
    _has_bits_[0] |= 0x00001000u;
}
void TranslateEventProto::clear_has_modified_target_language()
{
    _has_bits_[0] &= ~0x00001000u;
}
void TranslateEventProto::clear_modified_target_language()
{
    modified_target_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_modified_target_language();
}
const ::std::string& TranslateEventProto::modified_target_language() const
{
    // @@protoc_insertion_point(field_get:metrics.TranslateEventProto.modified_target_language)
    return modified_target_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslateEventProto::set_modified_target_language(const ::std::string& value)
{
    set_has_modified_target_language();
    modified_target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:metrics.TranslateEventProto.modified_target_language)
}
void TranslateEventProto::set_modified_target_language(const char* value)
{
    set_has_modified_target_language();
    modified_target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:metrics.TranslateEventProto.modified_target_language)
}
void TranslateEventProto::set_modified_target_language(const char* value, size_t size)
{
    set_has_modified_target_language();
    modified_target_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:metrics.TranslateEventProto.modified_target_language)
}
::std::string* TranslateEventProto::mutable_modified_target_language()
{
    set_has_modified_target_language();
    // @@protoc_insertion_point(field_mutable:metrics.TranslateEventProto.modified_target_language)
    return modified_target_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TranslateEventProto::release_modified_target_language()
{
    // @@protoc_insertion_point(field_release:metrics.TranslateEventProto.modified_target_language)
    clear_has_modified_target_language();
    return modified_target_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TranslateEventProto::set_allocated_modified_target_language(::std::string* modified_target_language)
{
    if (modified_target_language != NULL) {
        set_has_modified_target_language();
    } else {
        clear_has_modified_target_language();
    }
    modified_target_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modified_target_language);
    // @@protoc_insertion_point(field_set_allocated:metrics.TranslateEventProto.modified_target_language)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace metrics

// @@protoc_insertion_point(global_scope)
