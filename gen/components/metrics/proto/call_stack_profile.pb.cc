// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: call_stack_profile.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "call_stack_profile.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace metrics {

void protobuf_ShutdownFile_call_5fstack_5fprofile_2eproto()
{
    delete CallStackProfile::default_instance_;
    delete CallStackProfile_Entry::default_instance_;
    delete CallStackProfile_Sample::default_instance_;
    delete CallStackProfile_ModuleIdentifier::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_call_5fstack_5fprofile_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_call_5fstack_5fprofile_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    ::metrics::protobuf_AddDesc_execution_5fcontext_2eproto();
    CallStackProfile::default_instance_ = new CallStackProfile();
    CallStackProfile_Entry::default_instance_ = new CallStackProfile_Entry();
    CallStackProfile_Sample::default_instance_ = new CallStackProfile_Sample();
    CallStackProfile_ModuleIdentifier::default_instance_ = new CallStackProfile_ModuleIdentifier();
    CallStackProfile::default_instance_->InitAsDefaultInstance();
    CallStackProfile_Entry::default_instance_->InitAsDefaultInstance();
    CallStackProfile_Sample::default_instance_->InitAsDefaultInstance();
    CallStackProfile_ModuleIdentifier::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_call_5fstack_5fprofile_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_call_5fstack_5fprofile_2eproto_once_);
void protobuf_AddDesc_call_5fstack_5fprofile_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_call_5fstack_5fprofile_2eproto_once_,
        &protobuf_AddDesc_call_5fstack_5fprofile_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_call_5fstack_5fprofile_2eproto {
    StaticDescriptorInitializer_call_5fstack_5fprofile_2eproto()
    {
        protobuf_AddDesc_call_5fstack_5fprofile_2eproto();
    }
} static_descriptor_initializer_call_5fstack_5fprofile_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForCallStackProfile(
    CallStackProfile* ptr)
{
    return ptr->mutable_unknown_fields();
}

static ::std::string* MutableUnknownFieldsForCallStackProfile_Entry(
    CallStackProfile_Entry* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallStackProfile_Entry::kAddressFieldNumber;
const int CallStackProfile_Entry::kModuleIdIndexFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

CallStackProfile_Entry::CallStackProfile_Entry()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:metrics.CallStackProfile.Entry)
}

void CallStackProfile_Entry::InitAsDefaultInstance()
{
}

CallStackProfile_Entry::CallStackProfile_Entry(const CallStackProfile_Entry& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:metrics.CallStackProfile.Entry)
}

void CallStackProfile_Entry::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    address_ = GOOGLE_ULONGLONG(0);
    module_id_index_ = 0;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CallStackProfile_Entry::~CallStackProfile_Entry()
{
    // @@protoc_insertion_point(destructor:metrics.CallStackProfile.Entry)
    SharedDtor();
}

void CallStackProfile_Entry::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void CallStackProfile_Entry::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CallStackProfile_Entry& CallStackProfile_Entry::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_call_5fstack_5fprofile_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_call_5fstack_5fprofile_2eproto();
#endif
    return *default_instance_;
}

CallStackProfile_Entry* CallStackProfile_Entry::default_instance_ = NULL;

CallStackProfile_Entry* CallStackProfile_Entry::New(::google::protobuf::Arena* arena) const
{
    CallStackProfile_Entry* n = new CallStackProfile_Entry;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void CallStackProfile_Entry::Clear()
{
// @@protoc_insertion_point(message_clear_start:metrics.CallStackProfile.Entry)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                            \
    _Pragma("clang diagnostic push")                                                                             \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(CallStackProfile_Entry, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<CallStackProfile_Entry*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    ZR_(address_, module_id_index_);

#undef ZR_HELPER_
#undef ZR_

    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CallStackProfile_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForCallStackProfile_Entry, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:metrics.CallStackProfile.Entry)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional uint64 address = 1;
        case 1: {
            if (tag == 8) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                    input, &address_)));
                set_has_address();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(16))
                goto parse_module_id_index;
            break;
        }

        // optional int32 module_id_index = 2;
        case 2: {
            if (tag == 16) {
            parse_module_id_index:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &module_id_index_)));
                set_has_module_id_index();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:metrics.CallStackProfile.Entry)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:metrics.CallStackProfile.Entry)
    return false;
#undef DO_
}

void CallStackProfile_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:metrics.CallStackProfile.Entry)
    // optional uint64 address = 1;
    if (has_address()) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->address(), output);
    }

    // optional int32 module_id_index = 2;
    if (has_module_id_index()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->module_id_index(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:metrics.CallStackProfile.Entry)
}

int CallStackProfile_Entry::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:metrics.CallStackProfile.Entry)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 3u) {
        // optional uint64 address = 1;
        if (has_address()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->address());
        }

        // optional int32 module_id_index = 2;
        if (has_module_id_index()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->module_id_index());
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void CallStackProfile_Entry::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const CallStackProfile_Entry*>(&from));
}

void CallStackProfile_Entry::MergeFrom(const CallStackProfile_Entry& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:metrics.CallStackProfile.Entry)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_address()) {
            set_address(from.address());
        }
        if (from.has_module_id_index()) {
            set_module_id_index(from.module_id_index());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void CallStackProfile_Entry::CopyFrom(const CallStackProfile_Entry& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:metrics.CallStackProfile.Entry)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool CallStackProfile_Entry::IsInitialized() const
{

    return true;
}

void CallStackProfile_Entry::Swap(CallStackProfile_Entry* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void CallStackProfile_Entry::InternalSwap(CallStackProfile_Entry* other)
{
    std::swap(address_, other->address_);
    std::swap(module_id_index_, other->module_id_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string CallStackProfile_Entry::GetTypeName() const
{
    return "metrics.CallStackProfile.Entry";
}

// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForCallStackProfile_Sample(
    CallStackProfile_Sample* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallStackProfile_Sample::kEntryFieldNumber;
const int CallStackProfile_Sample::kCountFieldNumber;
const int CallStackProfile_Sample::kProcessPhaseFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

CallStackProfile_Sample::CallStackProfile_Sample()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:metrics.CallStackProfile.Sample)
}

void CallStackProfile_Sample::InitAsDefaultInstance()
{
}

CallStackProfile_Sample::CallStackProfile_Sample(const CallStackProfile_Sample& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:metrics.CallStackProfile.Sample)
}

void CallStackProfile_Sample::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    count_ = GOOGLE_LONGLONG(0);
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CallStackProfile_Sample::~CallStackProfile_Sample()
{
    // @@protoc_insertion_point(destructor:metrics.CallStackProfile.Sample)
    SharedDtor();
}

void CallStackProfile_Sample::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void CallStackProfile_Sample::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CallStackProfile_Sample& CallStackProfile_Sample::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_call_5fstack_5fprofile_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_call_5fstack_5fprofile_2eproto();
#endif
    return *default_instance_;
}

CallStackProfile_Sample* CallStackProfile_Sample::default_instance_ = NULL;

CallStackProfile_Sample* CallStackProfile_Sample::New(::google::protobuf::Arena* arena) const
{
    CallStackProfile_Sample* n = new CallStackProfile_Sample;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void CallStackProfile_Sample::Clear()
{
    // @@protoc_insertion_point(message_clear_start:metrics.CallStackProfile.Sample)
    count_ = GOOGLE_LONGLONG(0);
    entry_.Clear();
    process_phase_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CallStackProfile_Sample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForCallStackProfile_Sample, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:metrics.CallStackProfile.Sample)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // repeated .metrics.CallStackProfile.Entry entry = 1;
        case 1: {
            if (tag == 10) {
                DO_(input->IncrementRecursionDepth());
            parse_loop_entry:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                    input, add_entry()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(10))
                goto parse_loop_entry;
            input->UnsafeDecrementRecursionDepth();
            if (input->ExpectTag(16))
                goto parse_count;
            break;
        }

        // optional int64 count = 2;
        case 2: {
            if (tag == 16) {
            parse_count:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &count_)));
                set_has_count();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_process_phase;
            break;
        }

        // repeated .metrics.ProcessPhase process_phase = 3;
        case 3: {
            if (tag == 24) {
            parse_process_phase:
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                    input, &value)));
                if (::metrics::ProcessPhase_IsValid(value)) {
                    add_process_phase(static_cast<::metrics::ProcessPhase>(value));
                } else {
                    unknown_fields_stream.WriteVarint32(tag);
                    unknown_fields_stream.WriteVarint32(value);
                }
            } else if (tag == 26) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumPreserveUnknowns(
                    input,
                    3,
                    ::metrics::ProcessPhase_IsValid,
                    &unknown_fields_stream,
                    this->mutable_process_phase())));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(24))
                goto parse_process_phase;
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:metrics.CallStackProfile.Sample)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:metrics.CallStackProfile.Sample)
    return false;
#undef DO_
}

void CallStackProfile_Sample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:metrics.CallStackProfile.Sample)
    // repeated .metrics.CallStackProfile.Entry entry = 1;
    for (unsigned int i = 0, n = this->entry_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            1, this->entry(i), output);
    }

    // optional int64 count = 2;
    if (has_count()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->count(), output);
    }

    // repeated .metrics.ProcessPhase process_phase = 3;
    for (int i = 0; i < this->process_phase_size(); i++) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(
            3, this->process_phase(i), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:metrics.CallStackProfile.Sample)
}

int CallStackProfile_Sample::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:metrics.CallStackProfile.Sample)
    int total_size = 0;

    // optional int64 count = 2;
    if (has_count()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->count());
    }

    // repeated .metrics.CallStackProfile.Entry entry = 1;
    total_size += 1 * this->entry_size();
    for (int i = 0; i < this->entry_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
            this->entry(i));
    }

    // repeated .metrics.ProcessPhase process_phase = 3;
    {
        int data_size = 0;
        for (int i = 0; i < this->process_phase_size(); i++) {
            data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
                this->process_phase(i));
        }
        total_size += 1 * this->process_phase_size() + data_size;
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void CallStackProfile_Sample::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const CallStackProfile_Sample*>(&from));
}

void CallStackProfile_Sample::MergeFrom(const CallStackProfile_Sample& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:metrics.CallStackProfile.Sample)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    entry_.MergeFrom(from.entry_);
    process_phase_.MergeFrom(from.process_phase_);
    if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
        if (from.has_count()) {
            set_count(from.count());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void CallStackProfile_Sample::CopyFrom(const CallStackProfile_Sample& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:metrics.CallStackProfile.Sample)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool CallStackProfile_Sample::IsInitialized() const
{

    return true;
}

void CallStackProfile_Sample::Swap(CallStackProfile_Sample* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void CallStackProfile_Sample::InternalSwap(CallStackProfile_Sample* other)
{
    entry_.UnsafeArenaSwap(&other->entry_);
    std::swap(count_, other->count_);
    process_phase_.UnsafeArenaSwap(&other->process_phase_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string CallStackProfile_Sample::GetTypeName() const
{
    return "metrics.CallStackProfile.Sample";
}

// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForCallStackProfile_ModuleIdentifier(
    CallStackProfile_ModuleIdentifier* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallStackProfile_ModuleIdentifier::kBuildIdFieldNumber;
const int CallStackProfile_ModuleIdentifier::kNameMd5PrefixFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

CallStackProfile_ModuleIdentifier::CallStackProfile_ModuleIdentifier()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:metrics.CallStackProfile.ModuleIdentifier)
}

void CallStackProfile_ModuleIdentifier::InitAsDefaultInstance()
{
}

CallStackProfile_ModuleIdentifier::CallStackProfile_ModuleIdentifier(const CallStackProfile_ModuleIdentifier& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:metrics.CallStackProfile.ModuleIdentifier)
}

void CallStackProfile_ModuleIdentifier::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    build_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    name_md5_prefix_ = GOOGLE_ULONGLONG(0);
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CallStackProfile_ModuleIdentifier::~CallStackProfile_ModuleIdentifier()
{
    // @@protoc_insertion_point(destructor:metrics.CallStackProfile.ModuleIdentifier)
    SharedDtor();
}

void CallStackProfile_ModuleIdentifier::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    build_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void CallStackProfile_ModuleIdentifier::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CallStackProfile_ModuleIdentifier& CallStackProfile_ModuleIdentifier::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_call_5fstack_5fprofile_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_call_5fstack_5fprofile_2eproto();
#endif
    return *default_instance_;
}

CallStackProfile_ModuleIdentifier* CallStackProfile_ModuleIdentifier::default_instance_ = NULL;

CallStackProfile_ModuleIdentifier* CallStackProfile_ModuleIdentifier::New(::google::protobuf::Arena* arena) const
{
    CallStackProfile_ModuleIdentifier* n = new CallStackProfile_ModuleIdentifier;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void CallStackProfile_ModuleIdentifier::Clear()
{
    // @@protoc_insertion_point(message_clear_start:metrics.CallStackProfile.ModuleIdentifier)
    if (_has_bits_[0 / 32] & 3u) {
        if (has_build_id()) {
            build_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }
        name_md5_prefix_ = GOOGLE_ULONGLONG(0);
    }
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CallStackProfile_ModuleIdentifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForCallStackProfile_ModuleIdentifier, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:metrics.CallStackProfile.ModuleIdentifier)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional string build_id = 1;
        case 1: {
            if (tag == 10) {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                    input, this->mutable_build_id()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(17))
                goto parse_name_md5_prefix;
            break;
        }

        // optional fixed64 name_md5_prefix = 2;
        case 2: {
            if (tag == 17) {
            parse_name_md5_prefix:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                    input, &name_md5_prefix_)));
                set_has_name_md5_prefix();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:metrics.CallStackProfile.ModuleIdentifier)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:metrics.CallStackProfile.ModuleIdentifier)
    return false;
#undef DO_
}

void CallStackProfile_ModuleIdentifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:metrics.CallStackProfile.ModuleIdentifier)
    // optional string build_id = 1;
    if (has_build_id()) {
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->build_id(), output);
    }

    // optional fixed64 name_md5_prefix = 2;
    if (has_name_md5_prefix()) {
        ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->name_md5_prefix(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:metrics.CallStackProfile.ModuleIdentifier)
}

int CallStackProfile_ModuleIdentifier::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:metrics.CallStackProfile.ModuleIdentifier)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 3u) {
        // optional string build_id = 1;
        if (has_build_id()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->build_id());
        }

        // optional fixed64 name_md5_prefix = 2;
        if (has_name_md5_prefix()) {
            total_size += 1 + 8;
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void CallStackProfile_ModuleIdentifier::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const CallStackProfile_ModuleIdentifier*>(&from));
}

void CallStackProfile_ModuleIdentifier::MergeFrom(const CallStackProfile_ModuleIdentifier& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:metrics.CallStackProfile.ModuleIdentifier)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_build_id()) {
            set_has_build_id();
            build_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_id_);
        }
        if (from.has_name_md5_prefix()) {
            set_name_md5_prefix(from.name_md5_prefix());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void CallStackProfile_ModuleIdentifier::CopyFrom(const CallStackProfile_ModuleIdentifier& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:metrics.CallStackProfile.ModuleIdentifier)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool CallStackProfile_ModuleIdentifier::IsInitialized() const
{

    return true;
}

void CallStackProfile_ModuleIdentifier::Swap(CallStackProfile_ModuleIdentifier* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void CallStackProfile_ModuleIdentifier::InternalSwap(CallStackProfile_ModuleIdentifier* other)
{
    build_id_.Swap(&other->build_id_);
    std::swap(name_md5_prefix_, other->name_md5_prefix_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string CallStackProfile_ModuleIdentifier::GetTypeName() const
{
    return "metrics.CallStackProfile.ModuleIdentifier";
}

// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallStackProfile::kSampleFieldNumber;
const int CallStackProfile::kModuleIdFieldNumber;
const int CallStackProfile::kProfileDurationMsFieldNumber;
const int CallStackProfile::kSamplingPeriodMsFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

CallStackProfile::CallStackProfile()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:metrics.CallStackProfile)
}

void CallStackProfile::InitAsDefaultInstance()
{
}

CallStackProfile::CallStackProfile(const CallStackProfile& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:metrics.CallStackProfile)
}

void CallStackProfile::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    profile_duration_ms_ = 0;
    sampling_period_ms_ = 0;
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CallStackProfile::~CallStackProfile()
{
    // @@protoc_insertion_point(destructor:metrics.CallStackProfile)
    SharedDtor();
}

void CallStackProfile::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void CallStackProfile::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CallStackProfile& CallStackProfile::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_call_5fstack_5fprofile_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_call_5fstack_5fprofile_2eproto();
#endif
    return *default_instance_;
}

CallStackProfile* CallStackProfile::default_instance_ = NULL;

CallStackProfile* CallStackProfile::New(::google::protobuf::Arena* arena) const
{
    CallStackProfile* n = new CallStackProfile;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void CallStackProfile::Clear()
{
// @@protoc_insertion_point(message_clear_start:metrics.CallStackProfile)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                      \
    _Pragma("clang diagnostic push")                                                                       \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(CallStackProfile, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<CallStackProfile*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    ZR_(profile_duration_ms_, sampling_period_ms_);

#undef ZR_HELPER_
#undef ZR_

    sample_.Clear();
    module_id_.Clear();
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CallStackProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForCallStackProfile, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:metrics.CallStackProfile)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // repeated .metrics.CallStackProfile.Sample sample = 1;
        case 1: {
            if (tag == 10) {
                DO_(input->IncrementRecursionDepth());
            parse_loop_sample:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                    input, add_sample()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(10))
                goto parse_loop_sample;
            if (input->ExpectTag(18))
                goto parse_loop_module_id;
            input->UnsafeDecrementRecursionDepth();
            break;
        }

        // repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;
        case 2: {
            if (tag == 18) {
                DO_(input->IncrementRecursionDepth());
            parse_loop_module_id:
                DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                    input, add_module_id()));
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(18))
                goto parse_loop_module_id;
            input->UnsafeDecrementRecursionDepth();
            if (input->ExpectTag(24))
                goto parse_profile_duration_ms;
            break;
        }

        // optional int32 profile_duration_ms = 3;
        case 3: {
            if (tag == 24) {
            parse_profile_duration_ms:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &profile_duration_ms_)));
                set_has_profile_duration_ms();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(32))
                goto parse_sampling_period_ms;
            break;
        }

        // optional int32 sampling_period_ms = 4;
        case 4: {
            if (tag == 32) {
            parse_sampling_period_ms:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                    input, &sampling_period_ms_)));
                set_has_sampling_period_ms();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:metrics.CallStackProfile)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:metrics.CallStackProfile)
    return false;
#undef DO_
}

void CallStackProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:metrics.CallStackProfile)
    // repeated .metrics.CallStackProfile.Sample sample = 1;
    for (unsigned int i = 0, n = this->sample_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            1, this->sample(i), output);
    }

    // repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;
    for (unsigned int i = 0, n = this->module_id_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            2, this->module_id(i), output);
    }

    // optional int32 profile_duration_ms = 3;
    if (has_profile_duration_ms()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->profile_duration_ms(), output);
    }

    // optional int32 sampling_period_ms = 4;
    if (has_sampling_period_ms()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sampling_period_ms(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:metrics.CallStackProfile)
}

int CallStackProfile::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:metrics.CallStackProfile)
    int total_size = 0;

    if (_has_bits_[2 / 32] & 12u) {
        // optional int32 profile_duration_ms = 3;
        if (has_profile_duration_ms()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->profile_duration_ms());
        }

        // optional int32 sampling_period_ms = 4;
        if (has_sampling_period_ms()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->sampling_period_ms());
        }
    }
    // repeated .metrics.CallStackProfile.Sample sample = 1;
    total_size += 1 * this->sample_size();
    for (int i = 0; i < this->sample_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
            this->sample(i));
    }

    // repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;
    total_size += 1 * this->module_id_size();
    for (int i = 0; i < this->module_id_size(); i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
            this->module_id(i));
    }

    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void CallStackProfile::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const CallStackProfile*>(&from));
}

void CallStackProfile::MergeFrom(const CallStackProfile& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:metrics.CallStackProfile)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    sample_.MergeFrom(from.sample_);
    module_id_.MergeFrom(from.module_id_);
    if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
        if (from.has_profile_duration_ms()) {
            set_profile_duration_ms(from.profile_duration_ms());
        }
        if (from.has_sampling_period_ms()) {
            set_sampling_period_ms(from.sampling_period_ms());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void CallStackProfile::CopyFrom(const CallStackProfile& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:metrics.CallStackProfile)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool CallStackProfile::IsInitialized() const
{

    return true;
}

void CallStackProfile::Swap(CallStackProfile* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void CallStackProfile::InternalSwap(CallStackProfile* other)
{
    sample_.UnsafeArenaSwap(&other->sample_);
    module_id_.UnsafeArenaSwap(&other->module_id_);
    std::swap(profile_duration_ms_, other->profile_duration_ms_);
    std::swap(sampling_period_ms_, other->sampling_period_ms_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string CallStackProfile::GetTypeName() const
{
    return "metrics.CallStackProfile";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallStackProfile_Entry

// optional uint64 address = 1;
bool CallStackProfile_Entry::has_address() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void CallStackProfile_Entry::set_has_address()
{
    _has_bits_[0] |= 0x00000001u;
}
void CallStackProfile_Entry::clear_has_address()
{
    _has_bits_[0] &= ~0x00000001u;
}
void CallStackProfile_Entry::clear_address()
{
    address_ = GOOGLE_ULONGLONG(0);
    clear_has_address();
}
::google::protobuf::uint64 CallStackProfile_Entry::address() const
{
    // @@protoc_insertion_point(field_get:metrics.CallStackProfile.Entry.address)
    return address_;
}
void CallStackProfile_Entry::set_address(::google::protobuf::uint64 value)
{
    set_has_address();
    address_ = value;
    // @@protoc_insertion_point(field_set:metrics.CallStackProfile.Entry.address)
}

// optional int32 module_id_index = 2;
bool CallStackProfile_Entry::has_module_id_index() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void CallStackProfile_Entry::set_has_module_id_index()
{
    _has_bits_[0] |= 0x00000002u;
}
void CallStackProfile_Entry::clear_has_module_id_index()
{
    _has_bits_[0] &= ~0x00000002u;
}
void CallStackProfile_Entry::clear_module_id_index()
{
    module_id_index_ = 0;
    clear_has_module_id_index();
}
::google::protobuf::int32 CallStackProfile_Entry::module_id_index() const
{
    // @@protoc_insertion_point(field_get:metrics.CallStackProfile.Entry.module_id_index)
    return module_id_index_;
}
void CallStackProfile_Entry::set_module_id_index(::google::protobuf::int32 value)
{
    set_has_module_id_index();
    module_id_index_ = value;
    // @@protoc_insertion_point(field_set:metrics.CallStackProfile.Entry.module_id_index)
}

// -------------------------------------------------------------------

// CallStackProfile_Sample

// repeated .metrics.CallStackProfile.Entry entry = 1;
int CallStackProfile_Sample::entry_size() const
{
    return entry_.size();
}
void CallStackProfile_Sample::clear_entry()
{
    entry_.Clear();
}
const ::metrics::CallStackProfile_Entry& CallStackProfile_Sample::entry(int index) const
{
    // @@protoc_insertion_point(field_get:metrics.CallStackProfile.Sample.entry)
    return entry_.Get(index);
}
::metrics::CallStackProfile_Entry* CallStackProfile_Sample::mutable_entry(int index)
{
    // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.Sample.entry)
    return entry_.Mutable(index);
}
::metrics::CallStackProfile_Entry* CallStackProfile_Sample::add_entry()
{
    // @@protoc_insertion_point(field_add:metrics.CallStackProfile.Sample.entry)
    return entry_.Add();
}
::google::protobuf::RepeatedPtrField<::metrics::CallStackProfile_Entry>*
CallStackProfile_Sample::mutable_entry()
{
    // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.Sample.entry)
    return &entry_;
}
const ::google::protobuf::RepeatedPtrField<::metrics::CallStackProfile_Entry>&
CallStackProfile_Sample::entry() const
{
    // @@protoc_insertion_point(field_list:metrics.CallStackProfile.Sample.entry)
    return entry_;
}

// optional int64 count = 2;
bool CallStackProfile_Sample::has_count() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void CallStackProfile_Sample::set_has_count()
{
    _has_bits_[0] |= 0x00000002u;
}
void CallStackProfile_Sample::clear_has_count()
{
    _has_bits_[0] &= ~0x00000002u;
}
void CallStackProfile_Sample::clear_count()
{
    count_ = GOOGLE_LONGLONG(0);
    clear_has_count();
}
::google::protobuf::int64 CallStackProfile_Sample::count() const
{
    // @@protoc_insertion_point(field_get:metrics.CallStackProfile.Sample.count)
    return count_;
}
void CallStackProfile_Sample::set_count(::google::protobuf::int64 value)
{
    set_has_count();
    count_ = value;
    // @@protoc_insertion_point(field_set:metrics.CallStackProfile.Sample.count)
}

// repeated .metrics.ProcessPhase process_phase = 3;
int CallStackProfile_Sample::process_phase_size() const
{
    return process_phase_.size();
}
void CallStackProfile_Sample::clear_process_phase()
{
    process_phase_.Clear();
}
::metrics::ProcessPhase CallStackProfile_Sample::process_phase(int index) const
{
    // @@protoc_insertion_point(field_get:metrics.CallStackProfile.Sample.process_phase)
    return static_cast<::metrics::ProcessPhase>(process_phase_.Get(index));
}
void CallStackProfile_Sample::set_process_phase(int index, ::metrics::ProcessPhase value)
{
    assert(::metrics::ProcessPhase_IsValid(value));
    process_phase_.Set(index, value);
    // @@protoc_insertion_point(field_set:metrics.CallStackProfile.Sample.process_phase)
}
void CallStackProfile_Sample::add_process_phase(::metrics::ProcessPhase value)
{
    assert(::metrics::ProcessPhase_IsValid(value));
    process_phase_.Add(value);
    // @@protoc_insertion_point(field_add:metrics.CallStackProfile.Sample.process_phase)
}
const ::google::protobuf::RepeatedField<int>&
CallStackProfile_Sample::process_phase() const
{
    // @@protoc_insertion_point(field_list:metrics.CallStackProfile.Sample.process_phase)
    return process_phase_;
}
::google::protobuf::RepeatedField<int>*
CallStackProfile_Sample::mutable_process_phase()
{
    // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.Sample.process_phase)
    return &process_phase_;
}

// -------------------------------------------------------------------

// CallStackProfile_ModuleIdentifier

// optional string build_id = 1;
bool CallStackProfile_ModuleIdentifier::has_build_id() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void CallStackProfile_ModuleIdentifier::set_has_build_id()
{
    _has_bits_[0] |= 0x00000001u;
}
void CallStackProfile_ModuleIdentifier::clear_has_build_id()
{
    _has_bits_[0] &= ~0x00000001u;
}
void CallStackProfile_ModuleIdentifier::clear_build_id()
{
    build_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_build_id();
}
const ::std::string& CallStackProfile_ModuleIdentifier::build_id() const
{
    // @@protoc_insertion_point(field_get:metrics.CallStackProfile.ModuleIdentifier.build_id)
    return build_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallStackProfile_ModuleIdentifier::set_build_id(const ::std::string& value)
{
    set_has_build_id();
    build_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:metrics.CallStackProfile.ModuleIdentifier.build_id)
}
void CallStackProfile_ModuleIdentifier::set_build_id(const char* value)
{
    set_has_build_id();
    build_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:metrics.CallStackProfile.ModuleIdentifier.build_id)
}
void CallStackProfile_ModuleIdentifier::set_build_id(const char* value, size_t size)
{
    set_has_build_id();
    build_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:metrics.CallStackProfile.ModuleIdentifier.build_id)
}
::std::string* CallStackProfile_ModuleIdentifier::mutable_build_id()
{
    set_has_build_id();
    // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.ModuleIdentifier.build_id)
    return build_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CallStackProfile_ModuleIdentifier::release_build_id()
{
    // @@protoc_insertion_point(field_release:metrics.CallStackProfile.ModuleIdentifier.build_id)
    clear_has_build_id();
    return build_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallStackProfile_ModuleIdentifier::set_allocated_build_id(::std::string* build_id)
{
    if (build_id != NULL) {
        set_has_build_id();
    } else {
        clear_has_build_id();
    }
    build_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), build_id);
    // @@protoc_insertion_point(field_set_allocated:metrics.CallStackProfile.ModuleIdentifier.build_id)
}

// optional fixed64 name_md5_prefix = 2;
bool CallStackProfile_ModuleIdentifier::has_name_md5_prefix() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void CallStackProfile_ModuleIdentifier::set_has_name_md5_prefix()
{
    _has_bits_[0] |= 0x00000002u;
}
void CallStackProfile_ModuleIdentifier::clear_has_name_md5_prefix()
{
    _has_bits_[0] &= ~0x00000002u;
}
void CallStackProfile_ModuleIdentifier::clear_name_md5_prefix()
{
    name_md5_prefix_ = GOOGLE_ULONGLONG(0);
    clear_has_name_md5_prefix();
}
::google::protobuf::uint64 CallStackProfile_ModuleIdentifier::name_md5_prefix() const
{
    // @@protoc_insertion_point(field_get:metrics.CallStackProfile.ModuleIdentifier.name_md5_prefix)
    return name_md5_prefix_;
}
void CallStackProfile_ModuleIdentifier::set_name_md5_prefix(::google::protobuf::uint64 value)
{
    set_has_name_md5_prefix();
    name_md5_prefix_ = value;
    // @@protoc_insertion_point(field_set:metrics.CallStackProfile.ModuleIdentifier.name_md5_prefix)
}

// -------------------------------------------------------------------

// CallStackProfile

// repeated .metrics.CallStackProfile.Sample sample = 1;
int CallStackProfile::sample_size() const
{
    return sample_.size();
}
void CallStackProfile::clear_sample()
{
    sample_.Clear();
}
const ::metrics::CallStackProfile_Sample& CallStackProfile::sample(int index) const
{
    // @@protoc_insertion_point(field_get:metrics.CallStackProfile.sample)
    return sample_.Get(index);
}
::metrics::CallStackProfile_Sample* CallStackProfile::mutable_sample(int index)
{
    // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.sample)
    return sample_.Mutable(index);
}
::metrics::CallStackProfile_Sample* CallStackProfile::add_sample()
{
    // @@protoc_insertion_point(field_add:metrics.CallStackProfile.sample)
    return sample_.Add();
}
::google::protobuf::RepeatedPtrField<::metrics::CallStackProfile_Sample>*
CallStackProfile::mutable_sample()
{
    // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.sample)
    return &sample_;
}
const ::google::protobuf::RepeatedPtrField<::metrics::CallStackProfile_Sample>&
CallStackProfile::sample() const
{
    // @@protoc_insertion_point(field_list:metrics.CallStackProfile.sample)
    return sample_;
}

// repeated .metrics.CallStackProfile.ModuleIdentifier module_id = 2;
int CallStackProfile::module_id_size() const
{
    return module_id_.size();
}
void CallStackProfile::clear_module_id()
{
    module_id_.Clear();
}
const ::metrics::CallStackProfile_ModuleIdentifier& CallStackProfile::module_id(int index) const
{
    // @@protoc_insertion_point(field_get:metrics.CallStackProfile.module_id)
    return module_id_.Get(index);
}
::metrics::CallStackProfile_ModuleIdentifier* CallStackProfile::mutable_module_id(int index)
{
    // @@protoc_insertion_point(field_mutable:metrics.CallStackProfile.module_id)
    return module_id_.Mutable(index);
}
::metrics::CallStackProfile_ModuleIdentifier* CallStackProfile::add_module_id()
{
    // @@protoc_insertion_point(field_add:metrics.CallStackProfile.module_id)
    return module_id_.Add();
}
::google::protobuf::RepeatedPtrField<::metrics::CallStackProfile_ModuleIdentifier>*
CallStackProfile::mutable_module_id()
{
    // @@protoc_insertion_point(field_mutable_list:metrics.CallStackProfile.module_id)
    return &module_id_;
}
const ::google::protobuf::RepeatedPtrField<::metrics::CallStackProfile_ModuleIdentifier>&
CallStackProfile::module_id() const
{
    // @@protoc_insertion_point(field_list:metrics.CallStackProfile.module_id)
    return module_id_;
}

// optional int32 profile_duration_ms = 3;
bool CallStackProfile::has_profile_duration_ms() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
void CallStackProfile::set_has_profile_duration_ms()
{
    _has_bits_[0] |= 0x00000004u;
}
void CallStackProfile::clear_has_profile_duration_ms()
{
    _has_bits_[0] &= ~0x00000004u;
}
void CallStackProfile::clear_profile_duration_ms()
{
    profile_duration_ms_ = 0;
    clear_has_profile_duration_ms();
}
::google::protobuf::int32 CallStackProfile::profile_duration_ms() const
{
    // @@protoc_insertion_point(field_get:metrics.CallStackProfile.profile_duration_ms)
    return profile_duration_ms_;
}
void CallStackProfile::set_profile_duration_ms(::google::protobuf::int32 value)
{
    set_has_profile_duration_ms();
    profile_duration_ms_ = value;
    // @@protoc_insertion_point(field_set:metrics.CallStackProfile.profile_duration_ms)
}

// optional int32 sampling_period_ms = 4;
bool CallStackProfile::has_sampling_period_ms() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
void CallStackProfile::set_has_sampling_period_ms()
{
    _has_bits_[0] |= 0x00000008u;
}
void CallStackProfile::clear_has_sampling_period_ms()
{
    _has_bits_[0] &= ~0x00000008u;
}
void CallStackProfile::clear_sampling_period_ms()
{
    sampling_period_ms_ = 0;
    clear_has_sampling_period_ms();
}
::google::protobuf::int32 CallStackProfile::sampling_period_ms() const
{
    // @@protoc_insertion_point(field_get:metrics.CallStackProfile.sampling_period_ms)
    return sampling_period_ms_;
}
void CallStackProfile::set_sampling_period_ms(::google::protobuf::int32 value)
{
    set_has_sampling_period_ms();
    sampling_period_ms_ = value;
    // @@protoc_insertion_point(field_set:metrics.CallStackProfile.sampling_period_ms)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace metrics

// @@protoc_insertion_point(global_scope)
