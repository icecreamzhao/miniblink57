// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_action_event.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "user_action_event.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace metrics {

void protobuf_ShutdownFile_user_5faction_5fevent_2eproto()
{
    delete UserActionEventProto::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_user_5faction_5fevent_2eproto_impl()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_user_5faction_5fevent_2eproto()
{
    static bool already_here = false;
    if (already_here)
        return;
    already_here = true;
    GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
    UserActionEventProto::default_instance_ = new UserActionEventProto();
    UserActionEventProto::default_instance_->InitAsDefaultInstance();
    ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_user_5faction_5fevent_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_user_5faction_5fevent_2eproto_once_);
void protobuf_AddDesc_user_5faction_5fevent_2eproto()
{
    ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_user_5faction_5fevent_2eproto_once_,
        &protobuf_AddDesc_user_5faction_5fevent_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_user_5faction_5fevent_2eproto {
    StaticDescriptorInitializer_user_5faction_5fevent_2eproto()
    {
        protobuf_AddDesc_user_5faction_5fevent_2eproto();
    }
} static_descriptor_initializer_user_5faction_5fevent_2eproto_;
#endif

namespace {

    static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
    GOOGLE_ATTRIBUTE_NOINLINE static void MergeFromFail(int line)
    {
        GOOGLE_CHECK(false) << __FILE__ << ":" << line;
    }

} // namespace

// ===================================================================

static ::std::string* MutableUnknownFieldsForUserActionEventProto(
    UserActionEventProto* ptr)
{
    return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserActionEventProto::kNameHashFieldNumber;
const int UserActionEventProto::kTimeFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

UserActionEventProto::UserActionEventProto()
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    // @@protoc_insertion_point(constructor:metrics.UserActionEventProto)
}

void UserActionEventProto::InitAsDefaultInstance()
{
}

UserActionEventProto::UserActionEventProto(const UserActionEventProto& from)
    : ::google::protobuf::MessageLite()
    , _arena_ptr_(NULL)
{
    SharedCtor();
    MergeFrom(from);
    // @@protoc_insertion_point(copy_constructor:metrics.UserActionEventProto)
}

void UserActionEventProto::SharedCtor()
{
    ::google::protobuf::internal::GetEmptyString();
    _cached_size_ = 0;
    _unknown_fields_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    name_hash_ = GOOGLE_ULONGLONG(0);
    time_ = GOOGLE_LONGLONG(0);
    ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserActionEventProto::~UserActionEventProto()
{
    // @@protoc_insertion_point(destructor:metrics.UserActionEventProto)
    SharedDtor();
}

void UserActionEventProto::SharedDtor()
{
    _unknown_fields_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    if (this != &default_instance()) {
#else
    if (this != default_instance_) {
#endif
    }
}

void UserActionEventProto::SetCachedSize(int size) const
{
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const UserActionEventProto& UserActionEventProto::default_instance()
{
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    protobuf_AddDesc_user_5faction_5fevent_2eproto();
#else
    if (default_instance_ == NULL)
        protobuf_AddDesc_user_5faction_5fevent_2eproto();
#endif
    return *default_instance_;
}

UserActionEventProto* UserActionEventProto::default_instance_ = NULL;

UserActionEventProto* UserActionEventProto::New(::google::protobuf::Arena* arena) const
{
    UserActionEventProto* n = new UserActionEventProto;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void UserActionEventProto::Clear()
{
// @@protoc_insertion_point(message_clear_start:metrics.UserActionEventProto)
#if defined(__clang__)
#define ZR_HELPER_(f)                                                                                          \
    _Pragma("clang diagnostic push")                                                                           \
        _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") __builtin_offsetof(UserActionEventProto, f) \
            _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>( \
    &reinterpret_cast<UserActionEventProto*>(16)->f)
#endif

#define ZR_(first, last)                                          \
    do {                                                          \
        ::memset(&first, 0,                                       \
            ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last)); \
    } while (0)

    ZR_(name_hash_, time_);

#undef ZR_HELPER_
#undef ZR_

    ::memset(_has_bits_, 0, sizeof(_has_bits_));
    _unknown_fields_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UserActionEventProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION)                   \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
    ::google::protobuf::uint32 tag;
    ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
        ::google::protobuf::internal::NewPermanentCallback(
            &MutableUnknownFieldsForUserActionEventProto, this));
    ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
        &unknown_fields_string, false);
    // @@protoc_insertion_point(parse_start:metrics.UserActionEventProto)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
        // optional fixed64 name_hash = 1;
        case 1: {
            if (tag == 9) {
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                    input, &name_hash_)));
                set_has_name_hash();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectTag(16))
                goto parse_time;
            break;
        }

        // optional int64 time = 2;
        case 2: {
            if (tag == 16) {
            parse_time:
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                    ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                    input, &time_)));
                set_has_time();
            } else {
                goto handle_unusual;
            }
            if (input->ExpectAtEnd())
                goto success;
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0 || ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) == ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormatLite::SkipField(
                input, tag, &unknown_fields_stream));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:metrics.UserActionEventProto)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:metrics.UserActionEventProto)
    return false;
#undef DO_
}

void UserActionEventProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:metrics.UserActionEventProto)
    // optional fixed64 name_hash = 1;
    if (has_name_hash()) {
        ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->name_hash(), output);
    }

    // optional int64 time = 2;
    if (has_time()) {
        ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time(), output);
    }

    output->WriteRaw(unknown_fields().data(),
        static_cast<int>(unknown_fields().size()));
    // @@protoc_insertion_point(serialize_end:metrics.UserActionEventProto)
}

int UserActionEventProto::ByteSize() const
{
    // @@protoc_insertion_point(message_byte_size_start:metrics.UserActionEventProto)
    int total_size = 0;

    if (_has_bits_[0 / 32] & 3u) {
        // optional fixed64 name_hash = 1;
        if (has_name_hash()) {
            total_size += 1 + 8;
        }

        // optional int64 time = 2;
        if (has_time()) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->time());
        }
    }
    total_size += unknown_fields().size();

    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = total_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void UserActionEventProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from)
{
    MergeFrom(*::google::protobuf::down_cast<const UserActionEventProto*>(&from));
}

void UserActionEventProto::MergeFrom(const UserActionEventProto& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:metrics.UserActionEventProto)
    if (GOOGLE_PREDICT_FALSE(&from == this))
        MergeFromFail(__LINE__);
    if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
        if (from.has_name_hash()) {
            set_name_hash(from.name_hash());
        }
        if (from.has_time()) {
            set_time(from.time());
        }
    }
    if (!from.unknown_fields().empty()) {
        mutable_unknown_fields()->append(from.unknown_fields());
    }
}

void UserActionEventProto::CopyFrom(const UserActionEventProto& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:metrics.UserActionEventProto)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool UserActionEventProto::IsInitialized() const
{

    return true;
}

void UserActionEventProto::Swap(UserActionEventProto* other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void UserActionEventProto::InternalSwap(UserActionEventProto* other)
{
    std::swap(name_hash_, other->name_hash_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
}

::std::string UserActionEventProto::GetTypeName() const
{
    return "metrics.UserActionEventProto";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserActionEventProto

// optional fixed64 name_hash = 1;
bool UserActionEventProto::has_name_hash() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserActionEventProto::set_has_name_hash()
{
    _has_bits_[0] |= 0x00000001u;
}
void UserActionEventProto::clear_has_name_hash()
{
    _has_bits_[0] &= ~0x00000001u;
}
void UserActionEventProto::clear_name_hash()
{
    name_hash_ = GOOGLE_ULONGLONG(0);
    clear_has_name_hash();
}
::google::protobuf::uint64 UserActionEventProto::name_hash() const
{
    // @@protoc_insertion_point(field_get:metrics.UserActionEventProto.name_hash)
    return name_hash_;
}
void UserActionEventProto::set_name_hash(::google::protobuf::uint64 value)
{
    set_has_name_hash();
    name_hash_ = value;
    // @@protoc_insertion_point(field_set:metrics.UserActionEventProto.name_hash)
}

// optional int64 time = 2;
bool UserActionEventProto::has_time() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserActionEventProto::set_has_time()
{
    _has_bits_[0] |= 0x00000002u;
}
void UserActionEventProto::clear_has_time()
{
    _has_bits_[0] &= ~0x00000002u;
}
void UserActionEventProto::clear_time()
{
    time_ = GOOGLE_LONGLONG(0);
    clear_has_time();
}
::google::protobuf::int64 UserActionEventProto::time() const
{
    // @@protoc_insertion_point(field_get:metrics.UserActionEventProto.time)
    return time_;
}
void UserActionEventProto::set_time(::google::protobuf::int64 value)
{
    set_has_time();
    time_ = value;
    // @@protoc_insertion_point(field_set:metrics.UserActionEventProto.time)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace metrics

// @@protoc_insertion_point(global_scope)
