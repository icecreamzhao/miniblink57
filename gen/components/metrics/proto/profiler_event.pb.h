// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: profiler_event.proto

#ifndef PROTOBUF_profiler_5fevent_2eproto__INCLUDED
#define PROTOBUF_profiler_5fevent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace metrics {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_profiler_5fevent_2eproto();
void protobuf_AssignDesc_profiler_5fevent_2eproto();
void protobuf_ShutdownFile_profiler_5fevent_2eproto();

class ProfilerEventProto;
class ProfilerEventProto_TrackedObject;

enum ProfilerEventProto_TrackedObject_ProcessType {
    ProfilerEventProto_TrackedObject_ProcessType_UNKNOWN = 0,
    ProfilerEventProto_TrackedObject_ProcessType_BROWSER = 1,
    ProfilerEventProto_TrackedObject_ProcessType_RENDERER = 2,
    ProfilerEventProto_TrackedObject_ProcessType_PLUGIN = 3,
    ProfilerEventProto_TrackedObject_ProcessType_WORKER = 4,
    ProfilerEventProto_TrackedObject_ProcessType_NACL_LOADER = 5,
    ProfilerEventProto_TrackedObject_ProcessType_UTILITY = 6,
    ProfilerEventProto_TrackedObject_ProcessType_PROFILE_IMPORT = 7,
    ProfilerEventProto_TrackedObject_ProcessType_ZYGOTE = 8,
    ProfilerEventProto_TrackedObject_ProcessType_SANDBOX_HELPER = 9,
    ProfilerEventProto_TrackedObject_ProcessType_NACL_BROKER = 10,
    ProfilerEventProto_TrackedObject_ProcessType_GPU = 11,
    ProfilerEventProto_TrackedObject_ProcessType_PPAPI_PLUGIN = 12,
    ProfilerEventProto_TrackedObject_ProcessType_PPAPI_BROKER = 13
};
bool ProfilerEventProto_TrackedObject_ProcessType_IsValid(int value);
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject_ProcessType_ProcessType_MIN = ProfilerEventProto_TrackedObject_ProcessType_UNKNOWN;
const ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject_ProcessType_ProcessType_MAX = ProfilerEventProto_TrackedObject_ProcessType_PPAPI_BROKER;
const int ProfilerEventProto_TrackedObject_ProcessType_ProcessType_ARRAYSIZE = ProfilerEventProto_TrackedObject_ProcessType_ProcessType_MAX + 1;

enum ProfilerEventProto_ProfileVersion {
    ProfilerEventProto_ProfileVersion_VERSION_UNKNOWN = 0,
    ProfilerEventProto_ProfileVersion_VERSION_STARTUP_PROFILE = 1,
    ProfilerEventProto_ProfileVersion_VERSION_SPLIT_PROFILE = 2
};
bool ProfilerEventProto_ProfileVersion_IsValid(int value);
const ProfilerEventProto_ProfileVersion ProfilerEventProto_ProfileVersion_ProfileVersion_MIN = ProfilerEventProto_ProfileVersion_VERSION_UNKNOWN;
const ProfilerEventProto_ProfileVersion ProfilerEventProto_ProfileVersion_ProfileVersion_MAX = ProfilerEventProto_ProfileVersion_VERSION_SPLIT_PROFILE;
const int ProfilerEventProto_ProfileVersion_ProfileVersion_ARRAYSIZE = ProfilerEventProto_ProfileVersion_ProfileVersion_MAX + 1;

enum ProfilerEventProto_TimeSource {
    ProfilerEventProto_TimeSource_UNKNOWN_TIME_SOURCE = 0,
    ProfilerEventProto_TimeSource_WALL_CLOCK_TIME = 1
};
bool ProfilerEventProto_TimeSource_IsValid(int value);
const ProfilerEventProto_TimeSource ProfilerEventProto_TimeSource_TimeSource_MIN = ProfilerEventProto_TimeSource_UNKNOWN_TIME_SOURCE;
const ProfilerEventProto_TimeSource ProfilerEventProto_TimeSource_TimeSource_MAX = ProfilerEventProto_TimeSource_WALL_CLOCK_TIME;
const int ProfilerEventProto_TimeSource_TimeSource_ARRAYSIZE = ProfilerEventProto_TimeSource_TimeSource_MAX + 1;

enum ProfilerEventProto_ProfilerEvent {
    ProfilerEventProto_ProfilerEvent_EVENT_FIRST_NONEMPTY_PAINT = 0
};
bool ProfilerEventProto_ProfilerEvent_IsValid(int value);
const ProfilerEventProto_ProfilerEvent ProfilerEventProto_ProfilerEvent_ProfilerEvent_MIN = ProfilerEventProto_ProfilerEvent_EVENT_FIRST_NONEMPTY_PAINT;
const ProfilerEventProto_ProfilerEvent ProfilerEventProto_ProfilerEvent_ProfilerEvent_MAX = ProfilerEventProto_ProfilerEvent_EVENT_FIRST_NONEMPTY_PAINT;
const int ProfilerEventProto_ProfilerEvent_ProfilerEvent_ARRAYSIZE = ProfilerEventProto_ProfilerEvent_ProfilerEvent_MAX + 1;

// ===================================================================

class ProfilerEventProto_TrackedObject : public ::google::protobuf::MessageLite {
public:
    ProfilerEventProto_TrackedObject();
    virtual ~ProfilerEventProto_TrackedObject();

    ProfilerEventProto_TrackedObject(const ProfilerEventProto_TrackedObject& from);

    inline ProfilerEventProto_TrackedObject& operator=(const ProfilerEventProto_TrackedObject& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const ProfilerEventProto_TrackedObject& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const ProfilerEventProto_TrackedObject* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(ProfilerEventProto_TrackedObject* other);

    // implements Message ----------------------------------------------

    inline ProfilerEventProto_TrackedObject* New() const { return New(NULL); }

    ProfilerEventProto_TrackedObject* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const ProfilerEventProto_TrackedObject& from);
    void MergeFrom(const ProfilerEventProto_TrackedObject& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(ProfilerEventProto_TrackedObject* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef ProfilerEventProto_TrackedObject_ProcessType ProcessType;
    static const ProcessType UNKNOWN = ProfilerEventProto_TrackedObject_ProcessType_UNKNOWN;
    static const ProcessType BROWSER = ProfilerEventProto_TrackedObject_ProcessType_BROWSER;
    static const ProcessType RENDERER = ProfilerEventProto_TrackedObject_ProcessType_RENDERER;
    static const ProcessType PLUGIN = ProfilerEventProto_TrackedObject_ProcessType_PLUGIN;
    static const ProcessType WORKER = ProfilerEventProto_TrackedObject_ProcessType_WORKER;
    static const ProcessType NACL_LOADER = ProfilerEventProto_TrackedObject_ProcessType_NACL_LOADER;
    static const ProcessType UTILITY = ProfilerEventProto_TrackedObject_ProcessType_UTILITY;
    static const ProcessType PROFILE_IMPORT = ProfilerEventProto_TrackedObject_ProcessType_PROFILE_IMPORT;
    static const ProcessType ZYGOTE = ProfilerEventProto_TrackedObject_ProcessType_ZYGOTE;
    static const ProcessType SANDBOX_HELPER = ProfilerEventProto_TrackedObject_ProcessType_SANDBOX_HELPER;
    static const ProcessType NACL_BROKER = ProfilerEventProto_TrackedObject_ProcessType_NACL_BROKER;
    static const ProcessType GPU = ProfilerEventProto_TrackedObject_ProcessType_GPU;
    static const ProcessType PPAPI_PLUGIN = ProfilerEventProto_TrackedObject_ProcessType_PPAPI_PLUGIN;
    static const ProcessType PPAPI_BROKER = ProfilerEventProto_TrackedObject_ProcessType_PPAPI_BROKER;
    static inline bool ProcessType_IsValid(int value)
    {
        return ProfilerEventProto_TrackedObject_ProcessType_IsValid(value);
    }
    static const ProcessType ProcessType_MIN = ProfilerEventProto_TrackedObject_ProcessType_ProcessType_MIN;
    static const ProcessType ProcessType_MAX = ProfilerEventProto_TrackedObject_ProcessType_ProcessType_MAX;
    static const int ProcessType_ARRAYSIZE = ProfilerEventProto_TrackedObject_ProcessType_ProcessType_ARRAYSIZE;

    // accessors -------------------------------------------------------

    // optional fixed64 birth_thread_name_hash = 1;
    bool has_birth_thread_name_hash() const;
    void clear_birth_thread_name_hash();
    static const int kBirthThreadNameHashFieldNumber = 1;
    ::google::protobuf::uint64 birth_thread_name_hash() const;
    void set_birth_thread_name_hash(::google::protobuf::uint64 value);

    // optional fixed64 exec_thread_name_hash = 2;
    bool has_exec_thread_name_hash() const;
    void clear_exec_thread_name_hash();
    static const int kExecThreadNameHashFieldNumber = 2;
    ::google::protobuf::uint64 exec_thread_name_hash() const;
    void set_exec_thread_name_hash(::google::protobuf::uint64 value);

    // optional fixed64 source_file_name_hash = 3;
    bool has_source_file_name_hash() const;
    void clear_source_file_name_hash();
    static const int kSourceFileNameHashFieldNumber = 3;
    ::google::protobuf::uint64 source_file_name_hash() const;
    void set_source_file_name_hash(::google::protobuf::uint64 value);

    // optional fixed64 source_function_name_hash = 4;
    bool has_source_function_name_hash() const;
    void clear_source_function_name_hash();
    static const int kSourceFunctionNameHashFieldNumber = 4;
    ::google::protobuf::uint64 source_function_name_hash() const;
    void set_source_function_name_hash(::google::protobuf::uint64 value);

    // optional int32 source_line_number = 5;
    bool has_source_line_number() const;
    void clear_source_line_number();
    static const int kSourceLineNumberFieldNumber = 5;
    ::google::protobuf::int32 source_line_number() const;
    void set_source_line_number(::google::protobuf::int32 value);

    // optional int32 exec_count = 6;
    bool has_exec_count() const;
    void clear_exec_count();
    static const int kExecCountFieldNumber = 6;
    ::google::protobuf::int32 exec_count() const;
    void set_exec_count(::google::protobuf::int32 value);

    // optional int32 exec_time_total = 7;
    bool has_exec_time_total() const;
    void clear_exec_time_total();
    static const int kExecTimeTotalFieldNumber = 7;
    ::google::protobuf::int32 exec_time_total() const;
    void set_exec_time_total(::google::protobuf::int32 value);

    // optional int32 exec_time_sampled = 8;
    bool has_exec_time_sampled() const;
    void clear_exec_time_sampled();
    static const int kExecTimeSampledFieldNumber = 8;
    ::google::protobuf::int32 exec_time_sampled() const;
    void set_exec_time_sampled(::google::protobuf::int32 value);

    // optional int32 queue_time_total = 9;
    bool has_queue_time_total() const;
    void clear_queue_time_total();
    static const int kQueueTimeTotalFieldNumber = 9;
    ::google::protobuf::int32 queue_time_total() const;
    void set_queue_time_total(::google::protobuf::int32 value);

    // optional int32 queue_time_sampled = 10;
    bool has_queue_time_sampled() const;
    void clear_queue_time_sampled();
    static const int kQueueTimeSampledFieldNumber = 10;
    ::google::protobuf::int32 queue_time_sampled() const;
    void set_queue_time_sampled(::google::protobuf::int32 value);

    // optional .metrics.ProfilerEventProto.TrackedObject.ProcessType process_type = 11;
    bool has_process_type() const;
    void clear_process_type();
    static const int kProcessTypeFieldNumber = 11;
    ::metrics::ProfilerEventProto_TrackedObject_ProcessType process_type() const;
    void set_process_type(::metrics::ProfilerEventProto_TrackedObject_ProcessType value);

    // optional uint32 process_id = 12;
    bool has_process_id() const;
    void clear_process_id();
    static const int kProcessIdFieldNumber = 12;
    ::google::protobuf::uint32 process_id() const;
    void set_process_id(::google::protobuf::uint32 value);

    // @@protoc_insertion_point(class_scope:metrics.ProfilerEventProto.TrackedObject)
private:
    inline void set_has_birth_thread_name_hash();
    inline void clear_has_birth_thread_name_hash();
    inline void set_has_exec_thread_name_hash();
    inline void clear_has_exec_thread_name_hash();
    inline void set_has_source_file_name_hash();
    inline void clear_has_source_file_name_hash();
    inline void set_has_source_function_name_hash();
    inline void clear_has_source_function_name_hash();
    inline void set_has_source_line_number();
    inline void clear_has_source_line_number();
    inline void set_has_exec_count();
    inline void clear_has_exec_count();
    inline void set_has_exec_time_total();
    inline void clear_has_exec_time_total();
    inline void set_has_exec_time_sampled();
    inline void clear_has_exec_time_sampled();
    inline void set_has_queue_time_total();
    inline void clear_has_queue_time_total();
    inline void set_has_queue_time_sampled();
    inline void clear_has_queue_time_sampled();
    inline void set_has_process_type();
    inline void clear_has_process_type();
    inline void set_has_process_id();
    inline void clear_has_process_id();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::uint64 birth_thread_name_hash_;
    ::google::protobuf::uint64 exec_thread_name_hash_;
    ::google::protobuf::uint64 source_file_name_hash_;
    ::google::protobuf::uint64 source_function_name_hash_;
    ::google::protobuf::int32 source_line_number_;
    ::google::protobuf::int32 exec_count_;
    ::google::protobuf::int32 exec_time_total_;
    ::google::protobuf::int32 exec_time_sampled_;
    ::google::protobuf::int32 queue_time_total_;
    ::google::protobuf::int32 queue_time_sampled_;
    int process_type_;
    ::google::protobuf::uint32 process_id_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_profiler_5fevent_2eproto_impl();
#else
    friend void protobuf_AddDesc_profiler_5fevent_2eproto();
#endif
    friend void protobuf_AssignDesc_profiler_5fevent_2eproto();
    friend void protobuf_ShutdownFile_profiler_5fevent_2eproto();

    void InitAsDefaultInstance();
    static ProfilerEventProto_TrackedObject* default_instance_;
};
// -------------------------------------------------------------------

class ProfilerEventProto : public ::google::protobuf::MessageLite {
public:
    ProfilerEventProto();
    virtual ~ProfilerEventProto();

    ProfilerEventProto(const ProfilerEventProto& from);

    inline ProfilerEventProto& operator=(const ProfilerEventProto& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const ProfilerEventProto& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const ProfilerEventProto* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(ProfilerEventProto* other);

    // implements Message ----------------------------------------------

    inline ProfilerEventProto* New() const { return New(NULL); }

    ProfilerEventProto* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const ProfilerEventProto& from);
    void MergeFrom(const ProfilerEventProto& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(ProfilerEventProto* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef ProfilerEventProto_TrackedObject TrackedObject;

    typedef ProfilerEventProto_ProfileVersion ProfileVersion;
    static const ProfileVersion VERSION_UNKNOWN = ProfilerEventProto_ProfileVersion_VERSION_UNKNOWN;
    static const ProfileVersion VERSION_STARTUP_PROFILE = ProfilerEventProto_ProfileVersion_VERSION_STARTUP_PROFILE;
    static const ProfileVersion VERSION_SPLIT_PROFILE = ProfilerEventProto_ProfileVersion_VERSION_SPLIT_PROFILE;
    static inline bool ProfileVersion_IsValid(int value)
    {
        return ProfilerEventProto_ProfileVersion_IsValid(value);
    }
    static const ProfileVersion ProfileVersion_MIN = ProfilerEventProto_ProfileVersion_ProfileVersion_MIN;
    static const ProfileVersion ProfileVersion_MAX = ProfilerEventProto_ProfileVersion_ProfileVersion_MAX;
    static const int ProfileVersion_ARRAYSIZE = ProfilerEventProto_ProfileVersion_ProfileVersion_ARRAYSIZE;

    typedef ProfilerEventProto_TimeSource TimeSource;
    static const TimeSource UNKNOWN_TIME_SOURCE = ProfilerEventProto_TimeSource_UNKNOWN_TIME_SOURCE;
    static const TimeSource WALL_CLOCK_TIME = ProfilerEventProto_TimeSource_WALL_CLOCK_TIME;
    static inline bool TimeSource_IsValid(int value)
    {
        return ProfilerEventProto_TimeSource_IsValid(value);
    }
    static const TimeSource TimeSource_MIN = ProfilerEventProto_TimeSource_TimeSource_MIN;
    static const TimeSource TimeSource_MAX = ProfilerEventProto_TimeSource_TimeSource_MAX;
    static const int TimeSource_ARRAYSIZE = ProfilerEventProto_TimeSource_TimeSource_ARRAYSIZE;

    typedef ProfilerEventProto_ProfilerEvent ProfilerEvent;
    static const ProfilerEvent EVENT_FIRST_NONEMPTY_PAINT = ProfilerEventProto_ProfilerEvent_EVENT_FIRST_NONEMPTY_PAINT;
    static inline bool ProfilerEvent_IsValid(int value)
    {
        return ProfilerEventProto_ProfilerEvent_IsValid(value);
    }
    static const ProfilerEvent ProfilerEvent_MIN = ProfilerEventProto_ProfilerEvent_ProfilerEvent_MIN;
    static const ProfilerEvent ProfilerEvent_MAX = ProfilerEventProto_ProfilerEvent_ProfilerEvent_MAX;
    static const int ProfilerEvent_ARRAYSIZE = ProfilerEventProto_ProfilerEvent_ProfilerEvent_ARRAYSIZE;

    // accessors -------------------------------------------------------

    // optional .metrics.ProfilerEventProto.ProfileVersion profile_version = 1;
    bool has_profile_version() const;
    void clear_profile_version();
    static const int kProfileVersionFieldNumber = 1;
    ::metrics::ProfilerEventProto_ProfileVersion profile_version() const;
    void set_profile_version(::metrics::ProfilerEventProto_ProfileVersion value);

    // optional .metrics.ProfilerEventProto.TimeSource time_source = 2;
    bool has_time_source() const;
    void clear_time_source();
    static const int kTimeSourceFieldNumber = 2;
    ::metrics::ProfilerEventProto_TimeSource time_source() const;
    void set_time_source(::metrics::ProfilerEventProto_TimeSource value);

    // repeated .metrics.ProfilerEventProto.ProfilerEvent past_session_event = 4;
    int past_session_event_size() const;
    void clear_past_session_event();
    static const int kPastSessionEventFieldNumber = 4;
    ::metrics::ProfilerEventProto_ProfilerEvent past_session_event(int index) const;
    void set_past_session_event(int index, ::metrics::ProfilerEventProto_ProfilerEvent value);
    void add_past_session_event(::metrics::ProfilerEventProto_ProfilerEvent value);
    const ::google::protobuf::RepeatedField<int>& past_session_event() const;
    ::google::protobuf::RepeatedField<int>* mutable_past_session_event();

    // optional int64 profiling_start_ms = 5;
    bool has_profiling_start_ms() const;
    void clear_profiling_start_ms();
    static const int kProfilingStartMsFieldNumber = 5;
    ::google::protobuf::int64 profiling_start_ms() const;
    void set_profiling_start_ms(::google::protobuf::int64 value);

    // optional int64 profiling_finish_ms = 6;
    bool has_profiling_finish_ms() const;
    void clear_profiling_finish_ms();
    static const int kProfilingFinishMsFieldNumber = 6;
    ::google::protobuf::int64 profiling_finish_ms() const;
    void set_profiling_finish_ms(::google::protobuf::int64 value);

    // repeated .metrics.ProfilerEventProto.TrackedObject tracked_object = 3;
    int tracked_object_size() const;
    void clear_tracked_object();
    static const int kTrackedObjectFieldNumber = 3;
    const ::metrics::ProfilerEventProto_TrackedObject& tracked_object(int index) const;
    ::metrics::ProfilerEventProto_TrackedObject* mutable_tracked_object(int index);
    ::metrics::ProfilerEventProto_TrackedObject* add_tracked_object();
    ::google::protobuf::RepeatedPtrField<::metrics::ProfilerEventProto_TrackedObject>*
    mutable_tracked_object();
    const ::google::protobuf::RepeatedPtrField<::metrics::ProfilerEventProto_TrackedObject>&
    tracked_object() const;

    // @@protoc_insertion_point(class_scope:metrics.ProfilerEventProto)
private:
    inline void set_has_profile_version();
    inline void clear_has_profile_version();
    inline void set_has_time_source();
    inline void clear_has_time_source();
    inline void set_has_profiling_start_ms();
    inline void clear_has_profiling_start_ms();
    inline void set_has_profiling_finish_ms();
    inline void clear_has_profiling_finish_ms();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    int profile_version_;
    int time_source_;
    ::google::protobuf::RepeatedField<int> past_session_event_;
    ::google::protobuf::int64 profiling_start_ms_;
    ::google::protobuf::int64 profiling_finish_ms_;
    ::google::protobuf::RepeatedPtrField<::metrics::ProfilerEventProto_TrackedObject> tracked_object_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_profiler_5fevent_2eproto_impl();
#else
    friend void protobuf_AddDesc_profiler_5fevent_2eproto();
#endif
    friend void protobuf_AssignDesc_profiler_5fevent_2eproto();
    friend void protobuf_ShutdownFile_profiler_5fevent_2eproto();

    void InitAsDefaultInstance();
    static ProfilerEventProto* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ProfilerEventProto_TrackedObject

// optional fixed64 birth_thread_name_hash = 1;
inline bool ProfilerEventProto_TrackedObject::has_birth_thread_name_hash() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProfilerEventProto_TrackedObject::set_has_birth_thread_name_hash()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void ProfilerEventProto_TrackedObject::clear_has_birth_thread_name_hash()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void ProfilerEventProto_TrackedObject::clear_birth_thread_name_hash()
{
    birth_thread_name_hash_ = GOOGLE_ULONGLONG(0);
    clear_has_birth_thread_name_hash();
}
inline ::google::protobuf::uint64 ProfilerEventProto_TrackedObject::birth_thread_name_hash() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.birth_thread_name_hash)
    return birth_thread_name_hash_;
}
inline void ProfilerEventProto_TrackedObject::set_birth_thread_name_hash(::google::protobuf::uint64 value)
{
    set_has_birth_thread_name_hash();
    birth_thread_name_hash_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.birth_thread_name_hash)
}

// optional fixed64 exec_thread_name_hash = 2;
inline bool ProfilerEventProto_TrackedObject::has_exec_thread_name_hash() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProfilerEventProto_TrackedObject::set_has_exec_thread_name_hash()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void ProfilerEventProto_TrackedObject::clear_has_exec_thread_name_hash()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void ProfilerEventProto_TrackedObject::clear_exec_thread_name_hash()
{
    exec_thread_name_hash_ = GOOGLE_ULONGLONG(0);
    clear_has_exec_thread_name_hash();
}
inline ::google::protobuf::uint64 ProfilerEventProto_TrackedObject::exec_thread_name_hash() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.exec_thread_name_hash)
    return exec_thread_name_hash_;
}
inline void ProfilerEventProto_TrackedObject::set_exec_thread_name_hash(::google::protobuf::uint64 value)
{
    set_has_exec_thread_name_hash();
    exec_thread_name_hash_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.exec_thread_name_hash)
}

// optional fixed64 source_file_name_hash = 3;
inline bool ProfilerEventProto_TrackedObject::has_source_file_name_hash() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProfilerEventProto_TrackedObject::set_has_source_file_name_hash()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void ProfilerEventProto_TrackedObject::clear_has_source_file_name_hash()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void ProfilerEventProto_TrackedObject::clear_source_file_name_hash()
{
    source_file_name_hash_ = GOOGLE_ULONGLONG(0);
    clear_has_source_file_name_hash();
}
inline ::google::protobuf::uint64 ProfilerEventProto_TrackedObject::source_file_name_hash() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.source_file_name_hash)
    return source_file_name_hash_;
}
inline void ProfilerEventProto_TrackedObject::set_source_file_name_hash(::google::protobuf::uint64 value)
{
    set_has_source_file_name_hash();
    source_file_name_hash_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.source_file_name_hash)
}

// optional fixed64 source_function_name_hash = 4;
inline bool ProfilerEventProto_TrackedObject::has_source_function_name_hash() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProfilerEventProto_TrackedObject::set_has_source_function_name_hash()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void ProfilerEventProto_TrackedObject::clear_has_source_function_name_hash()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void ProfilerEventProto_TrackedObject::clear_source_function_name_hash()
{
    source_function_name_hash_ = GOOGLE_ULONGLONG(0);
    clear_has_source_function_name_hash();
}
inline ::google::protobuf::uint64 ProfilerEventProto_TrackedObject::source_function_name_hash() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.source_function_name_hash)
    return source_function_name_hash_;
}
inline void ProfilerEventProto_TrackedObject::set_source_function_name_hash(::google::protobuf::uint64 value)
{
    set_has_source_function_name_hash();
    source_function_name_hash_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.source_function_name_hash)
}

// optional int32 source_line_number = 5;
inline bool ProfilerEventProto_TrackedObject::has_source_line_number() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProfilerEventProto_TrackedObject::set_has_source_line_number()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void ProfilerEventProto_TrackedObject::clear_has_source_line_number()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void ProfilerEventProto_TrackedObject::clear_source_line_number()
{
    source_line_number_ = 0;
    clear_has_source_line_number();
}
inline ::google::protobuf::int32 ProfilerEventProto_TrackedObject::source_line_number() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.source_line_number)
    return source_line_number_;
}
inline void ProfilerEventProto_TrackedObject::set_source_line_number(::google::protobuf::int32 value)
{
    set_has_source_line_number();
    source_line_number_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.source_line_number)
}

// optional int32 exec_count = 6;
inline bool ProfilerEventProto_TrackedObject::has_exec_count() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProfilerEventProto_TrackedObject::set_has_exec_count()
{
    _has_bits_[0] |= 0x00000020u;
}
inline void ProfilerEventProto_TrackedObject::clear_has_exec_count()
{
    _has_bits_[0] &= ~0x00000020u;
}
inline void ProfilerEventProto_TrackedObject::clear_exec_count()
{
    exec_count_ = 0;
    clear_has_exec_count();
}
inline ::google::protobuf::int32 ProfilerEventProto_TrackedObject::exec_count() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.exec_count)
    return exec_count_;
}
inline void ProfilerEventProto_TrackedObject::set_exec_count(::google::protobuf::int32 value)
{
    set_has_exec_count();
    exec_count_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.exec_count)
}

// optional int32 exec_time_total = 7;
inline bool ProfilerEventProto_TrackedObject::has_exec_time_total() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProfilerEventProto_TrackedObject::set_has_exec_time_total()
{
    _has_bits_[0] |= 0x00000040u;
}
inline void ProfilerEventProto_TrackedObject::clear_has_exec_time_total()
{
    _has_bits_[0] &= ~0x00000040u;
}
inline void ProfilerEventProto_TrackedObject::clear_exec_time_total()
{
    exec_time_total_ = 0;
    clear_has_exec_time_total();
}
inline ::google::protobuf::int32 ProfilerEventProto_TrackedObject::exec_time_total() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.exec_time_total)
    return exec_time_total_;
}
inline void ProfilerEventProto_TrackedObject::set_exec_time_total(::google::protobuf::int32 value)
{
    set_has_exec_time_total();
    exec_time_total_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.exec_time_total)
}

// optional int32 exec_time_sampled = 8;
inline bool ProfilerEventProto_TrackedObject::has_exec_time_sampled() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProfilerEventProto_TrackedObject::set_has_exec_time_sampled()
{
    _has_bits_[0] |= 0x00000080u;
}
inline void ProfilerEventProto_TrackedObject::clear_has_exec_time_sampled()
{
    _has_bits_[0] &= ~0x00000080u;
}
inline void ProfilerEventProto_TrackedObject::clear_exec_time_sampled()
{
    exec_time_sampled_ = 0;
    clear_has_exec_time_sampled();
}
inline ::google::protobuf::int32 ProfilerEventProto_TrackedObject::exec_time_sampled() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.exec_time_sampled)
    return exec_time_sampled_;
}
inline void ProfilerEventProto_TrackedObject::set_exec_time_sampled(::google::protobuf::int32 value)
{
    set_has_exec_time_sampled();
    exec_time_sampled_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.exec_time_sampled)
}

// optional int32 queue_time_total = 9;
inline bool ProfilerEventProto_TrackedObject::has_queue_time_total() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProfilerEventProto_TrackedObject::set_has_queue_time_total()
{
    _has_bits_[0] |= 0x00000100u;
}
inline void ProfilerEventProto_TrackedObject::clear_has_queue_time_total()
{
    _has_bits_[0] &= ~0x00000100u;
}
inline void ProfilerEventProto_TrackedObject::clear_queue_time_total()
{
    queue_time_total_ = 0;
    clear_has_queue_time_total();
}
inline ::google::protobuf::int32 ProfilerEventProto_TrackedObject::queue_time_total() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.queue_time_total)
    return queue_time_total_;
}
inline void ProfilerEventProto_TrackedObject::set_queue_time_total(::google::protobuf::int32 value)
{
    set_has_queue_time_total();
    queue_time_total_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.queue_time_total)
}

// optional int32 queue_time_sampled = 10;
inline bool ProfilerEventProto_TrackedObject::has_queue_time_sampled() const
{
    return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProfilerEventProto_TrackedObject::set_has_queue_time_sampled()
{
    _has_bits_[0] |= 0x00000200u;
}
inline void ProfilerEventProto_TrackedObject::clear_has_queue_time_sampled()
{
    _has_bits_[0] &= ~0x00000200u;
}
inline void ProfilerEventProto_TrackedObject::clear_queue_time_sampled()
{
    queue_time_sampled_ = 0;
    clear_has_queue_time_sampled();
}
inline ::google::protobuf::int32 ProfilerEventProto_TrackedObject::queue_time_sampled() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.queue_time_sampled)
    return queue_time_sampled_;
}
inline void ProfilerEventProto_TrackedObject::set_queue_time_sampled(::google::protobuf::int32 value)
{
    set_has_queue_time_sampled();
    queue_time_sampled_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.queue_time_sampled)
}

// optional .metrics.ProfilerEventProto.TrackedObject.ProcessType process_type = 11;
inline bool ProfilerEventProto_TrackedObject::has_process_type() const
{
    return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProfilerEventProto_TrackedObject::set_has_process_type()
{
    _has_bits_[0] |= 0x00000400u;
}
inline void ProfilerEventProto_TrackedObject::clear_has_process_type()
{
    _has_bits_[0] &= ~0x00000400u;
}
inline void ProfilerEventProto_TrackedObject::clear_process_type()
{
    process_type_ = 0;
    clear_has_process_type();
}
inline ::metrics::ProfilerEventProto_TrackedObject_ProcessType ProfilerEventProto_TrackedObject::process_type() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.process_type)
    return static_cast<::metrics::ProfilerEventProto_TrackedObject_ProcessType>(process_type_);
}
inline void ProfilerEventProto_TrackedObject::set_process_type(::metrics::ProfilerEventProto_TrackedObject_ProcessType value)
{
    assert(::metrics::ProfilerEventProto_TrackedObject_ProcessType_IsValid(value));
    set_has_process_type();
    process_type_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.process_type)
}

// optional uint32 process_id = 12;
inline bool ProfilerEventProto_TrackedObject::has_process_id() const
{
    return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProfilerEventProto_TrackedObject::set_has_process_id()
{
    _has_bits_[0] |= 0x00000800u;
}
inline void ProfilerEventProto_TrackedObject::clear_has_process_id()
{
    _has_bits_[0] &= ~0x00000800u;
}
inline void ProfilerEventProto_TrackedObject::clear_process_id()
{
    process_id_ = 0u;
    clear_has_process_id();
}
inline ::google::protobuf::uint32 ProfilerEventProto_TrackedObject::process_id() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.TrackedObject.process_id)
    return process_id_;
}
inline void ProfilerEventProto_TrackedObject::set_process_id(::google::protobuf::uint32 value)
{
    set_has_process_id();
    process_id_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.TrackedObject.process_id)
}

// -------------------------------------------------------------------

// ProfilerEventProto

// optional .metrics.ProfilerEventProto.ProfileVersion profile_version = 1;
inline bool ProfilerEventProto::has_profile_version() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProfilerEventProto::set_has_profile_version()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void ProfilerEventProto::clear_has_profile_version()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void ProfilerEventProto::clear_profile_version()
{
    profile_version_ = 0;
    clear_has_profile_version();
}
inline ::metrics::ProfilerEventProto_ProfileVersion ProfilerEventProto::profile_version() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.profile_version)
    return static_cast<::metrics::ProfilerEventProto_ProfileVersion>(profile_version_);
}
inline void ProfilerEventProto::set_profile_version(::metrics::ProfilerEventProto_ProfileVersion value)
{
    assert(::metrics::ProfilerEventProto_ProfileVersion_IsValid(value));
    set_has_profile_version();
    profile_version_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.profile_version)
}

// optional .metrics.ProfilerEventProto.TimeSource time_source = 2;
inline bool ProfilerEventProto::has_time_source() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProfilerEventProto::set_has_time_source()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void ProfilerEventProto::clear_has_time_source()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void ProfilerEventProto::clear_time_source()
{
    time_source_ = 0;
    clear_has_time_source();
}
inline ::metrics::ProfilerEventProto_TimeSource ProfilerEventProto::time_source() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.time_source)
    return static_cast<::metrics::ProfilerEventProto_TimeSource>(time_source_);
}
inline void ProfilerEventProto::set_time_source(::metrics::ProfilerEventProto_TimeSource value)
{
    assert(::metrics::ProfilerEventProto_TimeSource_IsValid(value));
    set_has_time_source();
    time_source_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.time_source)
}

// repeated .metrics.ProfilerEventProto.ProfilerEvent past_session_event = 4;
inline int ProfilerEventProto::past_session_event_size() const
{
    return past_session_event_.size();
}
inline void ProfilerEventProto::clear_past_session_event()
{
    past_session_event_.Clear();
}
inline ::metrics::ProfilerEventProto_ProfilerEvent ProfilerEventProto::past_session_event(int index) const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.past_session_event)
    return static_cast<::metrics::ProfilerEventProto_ProfilerEvent>(past_session_event_.Get(index));
}
inline void ProfilerEventProto::set_past_session_event(int index, ::metrics::ProfilerEventProto_ProfilerEvent value)
{
    assert(::metrics::ProfilerEventProto_ProfilerEvent_IsValid(value));
    past_session_event_.Set(index, value);
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.past_session_event)
}
inline void ProfilerEventProto::add_past_session_event(::metrics::ProfilerEventProto_ProfilerEvent value)
{
    assert(::metrics::ProfilerEventProto_ProfilerEvent_IsValid(value));
    past_session_event_.Add(value);
    // @@protoc_insertion_point(field_add:metrics.ProfilerEventProto.past_session_event)
}
inline const ::google::protobuf::RepeatedField<int>&
ProfilerEventProto::past_session_event() const
{
    // @@protoc_insertion_point(field_list:metrics.ProfilerEventProto.past_session_event)
    return past_session_event_;
}
inline ::google::protobuf::RepeatedField<int>*
ProfilerEventProto::mutable_past_session_event()
{
    // @@protoc_insertion_point(field_mutable_list:metrics.ProfilerEventProto.past_session_event)
    return &past_session_event_;
}

// optional int64 profiling_start_ms = 5;
inline bool ProfilerEventProto::has_profiling_start_ms() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProfilerEventProto::set_has_profiling_start_ms()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void ProfilerEventProto::clear_has_profiling_start_ms()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void ProfilerEventProto::clear_profiling_start_ms()
{
    profiling_start_ms_ = GOOGLE_LONGLONG(0);
    clear_has_profiling_start_ms();
}
inline ::google::protobuf::int64 ProfilerEventProto::profiling_start_ms() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.profiling_start_ms)
    return profiling_start_ms_;
}
inline void ProfilerEventProto::set_profiling_start_ms(::google::protobuf::int64 value)
{
    set_has_profiling_start_ms();
    profiling_start_ms_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.profiling_start_ms)
}

// optional int64 profiling_finish_ms = 6;
inline bool ProfilerEventProto::has_profiling_finish_ms() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProfilerEventProto::set_has_profiling_finish_ms()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void ProfilerEventProto::clear_has_profiling_finish_ms()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void ProfilerEventProto::clear_profiling_finish_ms()
{
    profiling_finish_ms_ = GOOGLE_LONGLONG(0);
    clear_has_profiling_finish_ms();
}
inline ::google::protobuf::int64 ProfilerEventProto::profiling_finish_ms() const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.profiling_finish_ms)
    return profiling_finish_ms_;
}
inline void ProfilerEventProto::set_profiling_finish_ms(::google::protobuf::int64 value)
{
    set_has_profiling_finish_ms();
    profiling_finish_ms_ = value;
    // @@protoc_insertion_point(field_set:metrics.ProfilerEventProto.profiling_finish_ms)
}

// repeated .metrics.ProfilerEventProto.TrackedObject tracked_object = 3;
inline int ProfilerEventProto::tracked_object_size() const
{
    return tracked_object_.size();
}
inline void ProfilerEventProto::clear_tracked_object()
{
    tracked_object_.Clear();
}
inline const ::metrics::ProfilerEventProto_TrackedObject& ProfilerEventProto::tracked_object(int index) const
{
    // @@protoc_insertion_point(field_get:metrics.ProfilerEventProto.tracked_object)
    return tracked_object_.Get(index);
}
inline ::metrics::ProfilerEventProto_TrackedObject* ProfilerEventProto::mutable_tracked_object(int index)
{
    // @@protoc_insertion_point(field_mutable:metrics.ProfilerEventProto.tracked_object)
    return tracked_object_.Mutable(index);
}
inline ::metrics::ProfilerEventProto_TrackedObject* ProfilerEventProto::add_tracked_object()
{
    // @@protoc_insertion_point(field_add:metrics.ProfilerEventProto.tracked_object)
    return tracked_object_.Add();
}
inline ::google::protobuf::RepeatedPtrField<::metrics::ProfilerEventProto_TrackedObject>*
ProfilerEventProto::mutable_tracked_object()
{
    // @@protoc_insertion_point(field_mutable_list:metrics.ProfilerEventProto.tracked_object)
    return &tracked_object_;
}
inline const ::google::protobuf::RepeatedPtrField<::metrics::ProfilerEventProto_TrackedObject>&
ProfilerEventProto::tracked_object() const
{
    // @@protoc_insertion_point(field_list:metrics.ProfilerEventProto.tracked_object)
    return tracked_object_;
}

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// @@protoc_insertion_point(namespace_scope)

} // namespace metrics

#ifndef SWIG
namespace google {
namespace protobuf {

    template <>
    struct is_proto_enum<::metrics::ProfilerEventProto_TrackedObject_ProcessType> : ::google::protobuf::internal::true_type {
    };
    template <>
    struct is_proto_enum<::metrics::ProfilerEventProto_ProfileVersion> : ::google::protobuf::internal::true_type {
    };
    template <>
    struct is_proto_enum<::metrics::ProfilerEventProto_TimeSource> : ::google::protobuf::internal::true_type {
    };
    template <>
    struct is_proto_enum<::metrics::ProfilerEventProto_ProfilerEvent> : ::google::protobuf::internal::true_type {
    };

} // namespace protobuf
} // namespace google
#endif // SWIG

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_profiler_5fevent_2eproto__INCLUDED
