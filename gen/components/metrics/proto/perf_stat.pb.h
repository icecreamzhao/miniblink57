// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perf_stat.proto

#ifndef PROTOBUF_perf_5fstat_2eproto__INCLUDED
#define PROTOBUF_perf_5fstat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace metrics {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_perf_5fstat_2eproto();
void protobuf_AssignDesc_perf_5fstat_2eproto();
void protobuf_ShutdownFile_perf_5fstat_2eproto();

class PerfStatProto;
class PerfStatProto_PerfStatLine;

// ===================================================================

class PerfStatProto_PerfStatLine : public ::google::protobuf::MessageLite {
public:
    PerfStatProto_PerfStatLine();
    virtual ~PerfStatProto_PerfStatLine();

    PerfStatProto_PerfStatLine(const PerfStatProto_PerfStatLine& from);

    inline PerfStatProto_PerfStatLine& operator=(const PerfStatProto_PerfStatLine& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const PerfStatProto_PerfStatLine& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const PerfStatProto_PerfStatLine* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(PerfStatProto_PerfStatLine* other);

    // implements Message ----------------------------------------------

    inline PerfStatProto_PerfStatLine* New() const { return New(NULL); }

    PerfStatProto_PerfStatLine* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const PerfStatProto_PerfStatLine& from);
    void MergeFrom(const PerfStatProto_PerfStatLine& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(PerfStatProto_PerfStatLine* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional uint64 time_ms = 1;
    bool has_time_ms() const;
    void clear_time_ms();
    static const int kTimeMsFieldNumber = 1;
    ::google::protobuf::uint64 time_ms() const;
    void set_time_ms(::google::protobuf::uint64 value);

    // optional uint64 count = 2;
    bool has_count() const;
    void clear_count();
    static const int kCountFieldNumber = 2;
    ::google::protobuf::uint64 count() const;
    void set_count(::google::protobuf::uint64 value);

    // optional string event = 3;
    bool has_event() const;
    void clear_event();
    static const int kEventFieldNumber = 3;
    const ::std::string& event() const;
    void set_event(const ::std::string& value);
    void set_event(const char* value);
    void set_event(const char* value, size_t size);
    ::std::string* mutable_event();
    ::std::string* release_event();
    void set_allocated_event(::std::string* event);

    // @@protoc_insertion_point(class_scope:metrics.PerfStatProto.PerfStatLine)
private:
    inline void set_has_time_ms();
    inline void clear_has_time_ms();
    inline void set_has_count();
    inline void clear_has_count();
    inline void set_has_event();
    inline void clear_has_event();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::uint64 time_ms_;
    ::google::protobuf::uint64 count_;
    ::google::protobuf::internal::ArenaStringPtr event_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_perf_5fstat_2eproto_impl();
#else
    friend void protobuf_AddDesc_perf_5fstat_2eproto();
#endif
    friend void protobuf_AssignDesc_perf_5fstat_2eproto();
    friend void protobuf_ShutdownFile_perf_5fstat_2eproto();

    void InitAsDefaultInstance();
    static PerfStatProto_PerfStatLine* default_instance_;
};
// -------------------------------------------------------------------

class PerfStatProto : public ::google::protobuf::MessageLite {
public:
    PerfStatProto();
    virtual ~PerfStatProto();

    PerfStatProto(const PerfStatProto& from);

    inline PerfStatProto& operator=(const PerfStatProto& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const PerfStatProto& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const PerfStatProto* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(PerfStatProto* other);

    // implements Message ----------------------------------------------

    inline PerfStatProto* New() const { return New(NULL); }

    PerfStatProto* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const PerfStatProto& from);
    void MergeFrom(const PerfStatProto& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(PerfStatProto* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef PerfStatProto_PerfStatLine PerfStatLine;

    // accessors -------------------------------------------------------

    // repeated .metrics.PerfStatProto.PerfStatLine line = 1;
    int line_size() const;
    void clear_line();
    static const int kLineFieldNumber = 1;
    const ::metrics::PerfStatProto_PerfStatLine& line(int index) const;
    ::metrics::PerfStatProto_PerfStatLine* mutable_line(int index);
    ::metrics::PerfStatProto_PerfStatLine* add_line();
    ::google::protobuf::RepeatedPtrField<::metrics::PerfStatProto_PerfStatLine>*
    mutable_line();
    const ::google::protobuf::RepeatedPtrField<::metrics::PerfStatProto_PerfStatLine>&
    line() const;

    // optional string command_line = 2;
    bool has_command_line() const;
    void clear_command_line();
    static const int kCommandLineFieldNumber = 2;
    const ::std::string& command_line() const;
    void set_command_line(const ::std::string& value);
    void set_command_line(const char* value);
    void set_command_line(const char* value, size_t size);
    ::std::string* mutable_command_line();
    ::std::string* release_command_line();
    void set_allocated_command_line(::std::string* command_line);

    // @@protoc_insertion_point(class_scope:metrics.PerfStatProto)
private:
    inline void set_has_command_line();
    inline void clear_has_command_line();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::RepeatedPtrField<::metrics::PerfStatProto_PerfStatLine> line_;
    ::google::protobuf::internal::ArenaStringPtr command_line_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_perf_5fstat_2eproto_impl();
#else
    friend void protobuf_AddDesc_perf_5fstat_2eproto();
#endif
    friend void protobuf_AssignDesc_perf_5fstat_2eproto();
    friend void protobuf_ShutdownFile_perf_5fstat_2eproto();

    void InitAsDefaultInstance();
    static PerfStatProto* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PerfStatProto_PerfStatLine

// optional uint64 time_ms = 1;
inline bool PerfStatProto_PerfStatLine::has_time_ms() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PerfStatProto_PerfStatLine::set_has_time_ms()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void PerfStatProto_PerfStatLine::clear_has_time_ms()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void PerfStatProto_PerfStatLine::clear_time_ms()
{
    time_ms_ = GOOGLE_ULONGLONG(0);
    clear_has_time_ms();
}
inline ::google::protobuf::uint64 PerfStatProto_PerfStatLine::time_ms() const
{
    // @@protoc_insertion_point(field_get:metrics.PerfStatProto.PerfStatLine.time_ms)
    return time_ms_;
}
inline void PerfStatProto_PerfStatLine::set_time_ms(::google::protobuf::uint64 value)
{
    set_has_time_ms();
    time_ms_ = value;
    // @@protoc_insertion_point(field_set:metrics.PerfStatProto.PerfStatLine.time_ms)
}

// optional uint64 count = 2;
inline bool PerfStatProto_PerfStatLine::has_count() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PerfStatProto_PerfStatLine::set_has_count()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void PerfStatProto_PerfStatLine::clear_has_count()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void PerfStatProto_PerfStatLine::clear_count()
{
    count_ = GOOGLE_ULONGLONG(0);
    clear_has_count();
}
inline ::google::protobuf::uint64 PerfStatProto_PerfStatLine::count() const
{
    // @@protoc_insertion_point(field_get:metrics.PerfStatProto.PerfStatLine.count)
    return count_;
}
inline void PerfStatProto_PerfStatLine::set_count(::google::protobuf::uint64 value)
{
    set_has_count();
    count_ = value;
    // @@protoc_insertion_point(field_set:metrics.PerfStatProto.PerfStatLine.count)
}

// optional string event = 3;
inline bool PerfStatProto_PerfStatLine::has_event() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PerfStatProto_PerfStatLine::set_has_event()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void PerfStatProto_PerfStatLine::clear_has_event()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void PerfStatProto_PerfStatLine::clear_event()
{
    event_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_event();
}
inline const ::std::string& PerfStatProto_PerfStatLine::event() const
{
    // @@protoc_insertion_point(field_get:metrics.PerfStatProto.PerfStatLine.event)
    return event_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PerfStatProto_PerfStatLine::set_event(const ::std::string& value)
{
    set_has_event();
    event_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:metrics.PerfStatProto.PerfStatLine.event)
}
inline void PerfStatProto_PerfStatLine::set_event(const char* value)
{
    set_has_event();
    event_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:metrics.PerfStatProto.PerfStatLine.event)
}
inline void PerfStatProto_PerfStatLine::set_event(const char* value, size_t size)
{
    set_has_event();
    event_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:metrics.PerfStatProto.PerfStatLine.event)
}
inline ::std::string* PerfStatProto_PerfStatLine::mutable_event()
{
    set_has_event();
    // @@protoc_insertion_point(field_mutable:metrics.PerfStatProto.PerfStatLine.event)
    return event_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PerfStatProto_PerfStatLine::release_event()
{
    // @@protoc_insertion_point(field_release:metrics.PerfStatProto.PerfStatLine.event)
    clear_has_event();
    return event_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PerfStatProto_PerfStatLine::set_allocated_event(::std::string* event)
{
    if (event != NULL) {
        set_has_event();
    } else {
        clear_has_event();
    }
    event_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event);
    // @@protoc_insertion_point(field_set_allocated:metrics.PerfStatProto.PerfStatLine.event)
}

// -------------------------------------------------------------------

// PerfStatProto

// repeated .metrics.PerfStatProto.PerfStatLine line = 1;
inline int PerfStatProto::line_size() const
{
    return line_.size();
}
inline void PerfStatProto::clear_line()
{
    line_.Clear();
}
inline const ::metrics::PerfStatProto_PerfStatLine& PerfStatProto::line(int index) const
{
    // @@protoc_insertion_point(field_get:metrics.PerfStatProto.line)
    return line_.Get(index);
}
inline ::metrics::PerfStatProto_PerfStatLine* PerfStatProto::mutable_line(int index)
{
    // @@protoc_insertion_point(field_mutable:metrics.PerfStatProto.line)
    return line_.Mutable(index);
}
inline ::metrics::PerfStatProto_PerfStatLine* PerfStatProto::add_line()
{
    // @@protoc_insertion_point(field_add:metrics.PerfStatProto.line)
    return line_.Add();
}
inline ::google::protobuf::RepeatedPtrField<::metrics::PerfStatProto_PerfStatLine>*
PerfStatProto::mutable_line()
{
    // @@protoc_insertion_point(field_mutable_list:metrics.PerfStatProto.line)
    return &line_;
}
inline const ::google::protobuf::RepeatedPtrField<::metrics::PerfStatProto_PerfStatLine>&
PerfStatProto::line() const
{
    // @@protoc_insertion_point(field_list:metrics.PerfStatProto.line)
    return line_;
}

// optional string command_line = 2;
inline bool PerfStatProto::has_command_line() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PerfStatProto::set_has_command_line()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void PerfStatProto::clear_has_command_line()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void PerfStatProto::clear_command_line()
{
    command_line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_command_line();
}
inline const ::std::string& PerfStatProto::command_line() const
{
    // @@protoc_insertion_point(field_get:metrics.PerfStatProto.command_line)
    return command_line_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PerfStatProto::set_command_line(const ::std::string& value)
{
    set_has_command_line();
    command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:metrics.PerfStatProto.command_line)
}
inline void PerfStatProto::set_command_line(const char* value)
{
    set_has_command_line();
    command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:metrics.PerfStatProto.command_line)
}
inline void PerfStatProto::set_command_line(const char* value, size_t size)
{
    set_has_command_line();
    command_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:metrics.PerfStatProto.command_line)
}
inline ::std::string* PerfStatProto::mutable_command_line()
{
    set_has_command_line();
    // @@protoc_insertion_point(field_mutable:metrics.PerfStatProto.command_line)
    return command_line_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PerfStatProto::release_command_line()
{
    // @@protoc_insertion_point(field_release:metrics.PerfStatProto.command_line)
    clear_has_command_line();
    return command_line_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PerfStatProto::set_allocated_command_line(::std::string* command_line)
{
    if (command_line != NULL) {
        set_has_command_line();
    } else {
        clear_has_command_line();
    }
    command_line_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command_line);
    // @@protoc_insertion_point(field_set_allocated:metrics.PerfStatProto.command_line)
}

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// @@protoc_insertion_point(namespace_scope)

} // namespace metrics

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_perf_5fstat_2eproto__INCLUDED
