// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/navigation_interception/NavigationParams

#ifndef org_chromium_components_navigation_interception_NavigationParams_JNI
#define org_chromium_components_navigation_interception_NavigationParams_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kNavigationParamsClassPath[] = "org/chromium/components/navigation_interception/NavigationParams";
// Leaking this jclass as we cannot use LazyInstance from some threads.
base::subtle::AtomicWord g_NavigationParams_clazz __attribute__((unused)) = 0;
#define NavigationParams_clazz(env) base::android::LazyGetClass(env, kNavigationParamsClassPath, &g_NavigationParams_clazz)

} // namespace

// Step 2: method stubs.

static base::subtle::AtomicWord g_NavigationParams_create = 0;
static base::android::ScopedJavaLocalRef<jobject>
Java_NavigationParams_create(JNIEnv* env, const base::android::JavaRefOrBare<jstring>& url,
    const base::android::JavaRefOrBare<jstring>& referrer,
    jboolean isPost,
    jboolean hasUserGesture,
    JniIntWrapper pageTransitionType,
    jboolean isRedirect,
    jboolean isExternalProtocol,
    jboolean isMainFrame,
    jboolean hasUserGestureCarryover)
{
    CHECK_CLAZZ(env, NavigationParams_clazz(env),
        NavigationParams_clazz(env), NULL);
    jmethodID method_id = base::android::MethodID::LazyGet<
        base::android::MethodID::TYPE_STATIC>(
        env, NavigationParams_clazz(env),
        "create",
        "("
        "Ljava/lang/String;"
        "Ljava/lang/String;"
        "Z"
        "Z"
        "I"
        "Z"
        "Z"
        "Z"
        "Z"
        ")"
        "Lorg/chromium/components/navigation_interception/NavigationParams;",
        &g_NavigationParams_create);

    jobject ret = env->CallStaticObjectMethod(NavigationParams_clazz(env),
        method_id, url.obj(), referrer.obj(), isPost, hasUserGesture,
        as_jint(pageTransitionType), isRedirect, isExternalProtocol,
        isMainFrame, hasUserGestureCarryover);
    jni_generator::CheckException(env);
    return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

// Step 3: RegisterNatives.

#endif // org_chromium_components_navigation_interception_NavigationParams_JNI
