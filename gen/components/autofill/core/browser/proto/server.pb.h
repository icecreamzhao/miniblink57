// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

#ifndef PROTOBUF_server_2eproto__INCLUDED
#define PROTOBUF_server_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
// @@protoc_insertion_point(includes)

namespace autofill {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_server_2eproto();
void protobuf_AssignDesc_server_2eproto();
void protobuf_ShutdownFile_server_2eproto();

class AutofillQueryContents;
class AutofillQueryContents_Form;
class AutofillQueryContents_Form_Field;
class AutofillQueryResponseContents;
class AutofillQueryResponseContents_Field;
class AutofillUploadContents;
class AutofillUploadContents_Field;

enum AutofillUploadContents_Field_PasswordGenerationType {
    AutofillUploadContents_Field_PasswordGenerationType_NO_GENERATION = 0,
    AutofillUploadContents_Field_PasswordGenerationType_AUTOMATICALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM = 1,
    AutofillUploadContents_Field_PasswordGenerationType_AUTOMATICALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM = 2,
    AutofillUploadContents_Field_PasswordGenerationType_MANUALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM = 3,
    AutofillUploadContents_Field_PasswordGenerationType_MANUALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM = 4,
    AutofillUploadContents_Field_PasswordGenerationType_IGNORED_GENERATION_POPUP = 5
};
bool AutofillUploadContents_Field_PasswordGenerationType_IsValid(int value);
const AutofillUploadContents_Field_PasswordGenerationType AutofillUploadContents_Field_PasswordGenerationType_PasswordGenerationType_MIN = AutofillUploadContents_Field_PasswordGenerationType_NO_GENERATION;
const AutofillUploadContents_Field_PasswordGenerationType AutofillUploadContents_Field_PasswordGenerationType_PasswordGenerationType_MAX = AutofillUploadContents_Field_PasswordGenerationType_IGNORED_GENERATION_POPUP;
const int AutofillUploadContents_Field_PasswordGenerationType_PasswordGenerationType_ARRAYSIZE = AutofillUploadContents_Field_PasswordGenerationType_PasswordGenerationType_MAX + 1;

enum AutofillUploadContents_Field_FormClassifierOutcome {
    AutofillUploadContents_Field_FormClassifierOutcome_NO_OUTCOME = 0,
    AutofillUploadContents_Field_FormClassifierOutcome_NON_GENERATION_ELEMENT = 1,
    AutofillUploadContents_Field_FormClassifierOutcome_GENERATION_ELEMENT = 2
};
bool AutofillUploadContents_Field_FormClassifierOutcome_IsValid(int value);
const AutofillUploadContents_Field_FormClassifierOutcome AutofillUploadContents_Field_FormClassifierOutcome_FormClassifierOutcome_MIN = AutofillUploadContents_Field_FormClassifierOutcome_NO_OUTCOME;
const AutofillUploadContents_Field_FormClassifierOutcome AutofillUploadContents_Field_FormClassifierOutcome_FormClassifierOutcome_MAX = AutofillUploadContents_Field_FormClassifierOutcome_GENERATION_ELEMENT;
const int AutofillUploadContents_Field_FormClassifierOutcome_FormClassifierOutcome_ARRAYSIZE = AutofillUploadContents_Field_FormClassifierOutcome_FormClassifierOutcome_MAX + 1;

// ===================================================================

class AutofillQueryContents_Form_Field : public ::google::protobuf::MessageLite {
public:
    AutofillQueryContents_Form_Field();
    virtual ~AutofillQueryContents_Form_Field();

    AutofillQueryContents_Form_Field(const AutofillQueryContents_Form_Field& from);

    inline AutofillQueryContents_Form_Field& operator=(const AutofillQueryContents_Form_Field& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const AutofillQueryContents_Form_Field& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const AutofillQueryContents_Form_Field* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillQueryContents_Form_Field* other);

    // implements Message ----------------------------------------------

    inline AutofillQueryContents_Form_Field* New() const { return New(NULL); }

    AutofillQueryContents_Form_Field* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const AutofillQueryContents_Form_Field& from);
    void MergeFrom(const AutofillQueryContents_Form_Field& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(AutofillQueryContents_Form_Field* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // required fixed32 signature = 5;
    bool has_signature() const;
    void clear_signature();
    static const int kSignatureFieldNumber = 5;
    ::google::protobuf::uint32 signature() const;
    void set_signature(::google::protobuf::uint32 value);

    // optional string name = 8;
    bool has_name() const;
    void clear_name();
    static const int kNameFieldNumber = 8;
    const ::std::string& name() const;
    void set_name(const ::std::string& value);
    void set_name(const char* value);
    void set_name(const char* value, size_t size);
    ::std::string* mutable_name();
    ::std::string* release_name();
    void set_allocated_name(::std::string* name);

    // optional string type = 9;
    bool has_type() const;
    void clear_type();
    static const int kTypeFieldNumber = 9;
    const ::std::string& type() const;
    void set_type(const ::std::string& value);
    void set_type(const char* value);
    void set_type(const char* value, size_t size);
    ::std::string* mutable_type();
    ::std::string* release_type();
    void set_allocated_type(::std::string* type);

    // @@protoc_insertion_point(class_scope:autofill.AutofillQueryContents.Form.Field)
private:
    inline void set_has_signature();
    inline void clear_has_signature();
    inline void set_has_name();
    inline void clear_has_name();
    inline void set_has_type();
    inline void clear_has_type();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::uint32 signature_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_server_2eproto_impl();
#else
    friend void protobuf_AddDesc_server_2eproto();
#endif
    friend void protobuf_AssignDesc_server_2eproto();
    friend void protobuf_ShutdownFile_server_2eproto();

    void InitAsDefaultInstance();
    static AutofillQueryContents_Form_Field* default_instance_;
};
// -------------------------------------------------------------------

class AutofillQueryContents_Form : public ::google::protobuf::MessageLite {
public:
    AutofillQueryContents_Form();
    virtual ~AutofillQueryContents_Form();

    AutofillQueryContents_Form(const AutofillQueryContents_Form& from);

    inline AutofillQueryContents_Form& operator=(const AutofillQueryContents_Form& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const AutofillQueryContents_Form& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const AutofillQueryContents_Form* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillQueryContents_Form* other);

    // implements Message ----------------------------------------------

    inline AutofillQueryContents_Form* New() const { return New(NULL); }

    AutofillQueryContents_Form* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const AutofillQueryContents_Form& from);
    void MergeFrom(const AutofillQueryContents_Form& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(AutofillQueryContents_Form* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef AutofillQueryContents_Form_Field Field;

    // accessors -------------------------------------------------------

    // required fixed64 signature = 3;
    bool has_signature() const;
    void clear_signature();
    static const int kSignatureFieldNumber = 3;
    ::google::protobuf::uint64 signature() const;
    void set_signature(::google::protobuf::uint64 value);

    // repeated group Field = 4 { ... };
    int field_size() const;
    void clear_field();
    static const int kFieldFieldNumber = 4;
    const ::autofill::AutofillQueryContents_Form_Field& field(int index) const;
    ::autofill::AutofillQueryContents_Form_Field* mutable_field(int index);
    ::autofill::AutofillQueryContents_Form_Field* add_field();
    ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryContents_Form_Field>*
    mutable_field();
    const ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryContents_Form_Field>&
    field() const;

    // @@protoc_insertion_point(class_scope:autofill.AutofillQueryContents.Form)
private:
    inline void set_has_signature();
    inline void clear_has_signature();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::uint64 signature_;
    ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryContents_Form_Field> field_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_server_2eproto_impl();
#else
    friend void protobuf_AddDesc_server_2eproto();
#endif
    friend void protobuf_AssignDesc_server_2eproto();
    friend void protobuf_ShutdownFile_server_2eproto();

    void InitAsDefaultInstance();
    static AutofillQueryContents_Form* default_instance_;
};
// -------------------------------------------------------------------

class AutofillQueryContents : public ::google::protobuf::MessageLite {
public:
    AutofillQueryContents();
    virtual ~AutofillQueryContents();

    AutofillQueryContents(const AutofillQueryContents& from);

    inline AutofillQueryContents& operator=(const AutofillQueryContents& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const AutofillQueryContents& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const AutofillQueryContents* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillQueryContents* other);

    // implements Message ----------------------------------------------

    inline AutofillQueryContents* New() const { return New(NULL); }

    AutofillQueryContents* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const AutofillQueryContents& from);
    void MergeFrom(const AutofillQueryContents& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(AutofillQueryContents* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef AutofillQueryContents_Form Form;

    // accessors -------------------------------------------------------

    // required string client_version = 1;
    bool has_client_version() const;
    void clear_client_version();
    static const int kClientVersionFieldNumber = 1;
    const ::std::string& client_version() const;
    void set_client_version(const ::std::string& value);
    void set_client_version(const char* value);
    void set_client_version(const char* value, size_t size);
    ::std::string* mutable_client_version();
    ::std::string* release_client_version();
    void set_allocated_client_version(::std::string* client_version);

    // repeated group Form = 2 { ... };
    int form_size() const;
    void clear_form();
    static const int kFormFieldNumber = 2;
    const ::autofill::AutofillQueryContents_Form& form(int index) const;
    ::autofill::AutofillQueryContents_Form* mutable_form(int index);
    ::autofill::AutofillQueryContents_Form* add_form();
    ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryContents_Form>*
    mutable_form();
    const ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryContents_Form>&
    form() const;

    // @@protoc_insertion_point(class_scope:autofill.AutofillQueryContents)
private:
    inline void set_has_client_version();
    inline void clear_has_client_version();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr client_version_;
    ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryContents_Form> form_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_server_2eproto_impl();
#else
    friend void protobuf_AddDesc_server_2eproto();
#endif
    friend void protobuf_AssignDesc_server_2eproto();
    friend void protobuf_ShutdownFile_server_2eproto();

    void InitAsDefaultInstance();
    static AutofillQueryContents* default_instance_;
};
// -------------------------------------------------------------------

class AutofillQueryResponseContents_Field : public ::google::protobuf::MessageLite {
public:
    AutofillQueryResponseContents_Field();
    virtual ~AutofillQueryResponseContents_Field();

    AutofillQueryResponseContents_Field(const AutofillQueryResponseContents_Field& from);

    inline AutofillQueryResponseContents_Field& operator=(const AutofillQueryResponseContents_Field& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const AutofillQueryResponseContents_Field& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const AutofillQueryResponseContents_Field* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillQueryResponseContents_Field* other);

    // implements Message ----------------------------------------------

    inline AutofillQueryResponseContents_Field* New() const { return New(NULL); }

    AutofillQueryResponseContents_Field* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const AutofillQueryResponseContents_Field& from);
    void MergeFrom(const AutofillQueryResponseContents_Field& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(AutofillQueryResponseContents_Field* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // required fixed32 autofill_type = 3;
    bool has_autofill_type() const;
    void clear_autofill_type();
    static const int kAutofillTypeFieldNumber = 3;
    ::google::protobuf::uint32 autofill_type() const;
    void set_autofill_type(::google::protobuf::uint32 value);

    // @@protoc_insertion_point(class_scope:autofill.AutofillQueryResponseContents.Field)
private:
    inline void set_has_autofill_type();
    inline void clear_has_autofill_type();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::uint32 autofill_type_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_server_2eproto_impl();
#else
    friend void protobuf_AddDesc_server_2eproto();
#endif
    friend void protobuf_AssignDesc_server_2eproto();
    friend void protobuf_ShutdownFile_server_2eproto();

    void InitAsDefaultInstance();
    static AutofillQueryResponseContents_Field* default_instance_;
};
// -------------------------------------------------------------------

class AutofillQueryResponseContents : public ::google::protobuf::MessageLite {
public:
    AutofillQueryResponseContents();
    virtual ~AutofillQueryResponseContents();

    AutofillQueryResponseContents(const AutofillQueryResponseContents& from);

    inline AutofillQueryResponseContents& operator=(const AutofillQueryResponseContents& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const AutofillQueryResponseContents& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const AutofillQueryResponseContents* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillQueryResponseContents* other);

    // implements Message ----------------------------------------------

    inline AutofillQueryResponseContents* New() const { return New(NULL); }

    AutofillQueryResponseContents* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const AutofillQueryResponseContents& from);
    void MergeFrom(const AutofillQueryResponseContents& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(AutofillQueryResponseContents* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef AutofillQueryResponseContents_Field Field;

    // accessors -------------------------------------------------------

    // optional bool upload_required = 1;
    bool has_upload_required() const;
    void clear_upload_required();
    static const int kUploadRequiredFieldNumber = 1;
    bool upload_required() const;
    void set_upload_required(bool value);

    // repeated group Field = 2 { ... };
    int field_size() const;
    void clear_field();
    static const int kFieldFieldNumber = 2;
    const ::autofill::AutofillQueryResponseContents_Field& field(int index) const;
    ::autofill::AutofillQueryResponseContents_Field* mutable_field(int index);
    ::autofill::AutofillQueryResponseContents_Field* add_field();
    ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryResponseContents_Field>*
    mutable_field();
    const ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryResponseContents_Field>&
    field() const;

    // @@protoc_insertion_point(class_scope:autofill.AutofillQueryResponseContents)
private:
    inline void set_has_upload_required();
    inline void clear_has_upload_required();

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryResponseContents_Field> field_;
    bool upload_required_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_server_2eproto_impl();
#else
    friend void protobuf_AddDesc_server_2eproto();
#endif
    friend void protobuf_AssignDesc_server_2eproto();
    friend void protobuf_ShutdownFile_server_2eproto();

    void InitAsDefaultInstance();
    static AutofillQueryResponseContents* default_instance_;
};
// -------------------------------------------------------------------

class AutofillUploadContents_Field : public ::google::protobuf::MessageLite {
public:
    AutofillUploadContents_Field();
    virtual ~AutofillUploadContents_Field();

    AutofillUploadContents_Field(const AutofillUploadContents_Field& from);

    inline AutofillUploadContents_Field& operator=(const AutofillUploadContents_Field& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const AutofillUploadContents_Field& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const AutofillUploadContents_Field* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillUploadContents_Field* other);

    // implements Message ----------------------------------------------

    inline AutofillUploadContents_Field* New() const { return New(NULL); }

    AutofillUploadContents_Field* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const AutofillUploadContents_Field& from);
    void MergeFrom(const AutofillUploadContents_Field& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(AutofillUploadContents_Field* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef AutofillUploadContents_Field_PasswordGenerationType PasswordGenerationType;
    static const PasswordGenerationType NO_GENERATION = AutofillUploadContents_Field_PasswordGenerationType_NO_GENERATION;
    static const PasswordGenerationType AUTOMATICALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM = AutofillUploadContents_Field_PasswordGenerationType_AUTOMATICALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM;
    static const PasswordGenerationType AUTOMATICALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM = AutofillUploadContents_Field_PasswordGenerationType_AUTOMATICALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM;
    static const PasswordGenerationType MANUALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM = AutofillUploadContents_Field_PasswordGenerationType_MANUALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM;
    static const PasswordGenerationType MANUALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM = AutofillUploadContents_Field_PasswordGenerationType_MANUALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM;
    static const PasswordGenerationType IGNORED_GENERATION_POPUP = AutofillUploadContents_Field_PasswordGenerationType_IGNORED_GENERATION_POPUP;
    static inline bool PasswordGenerationType_IsValid(int value)
    {
        return AutofillUploadContents_Field_PasswordGenerationType_IsValid(value);
    }
    static const PasswordGenerationType PasswordGenerationType_MIN = AutofillUploadContents_Field_PasswordGenerationType_PasswordGenerationType_MIN;
    static const PasswordGenerationType PasswordGenerationType_MAX = AutofillUploadContents_Field_PasswordGenerationType_PasswordGenerationType_MAX;
    static const int PasswordGenerationType_ARRAYSIZE = AutofillUploadContents_Field_PasswordGenerationType_PasswordGenerationType_ARRAYSIZE;

    typedef AutofillUploadContents_Field_FormClassifierOutcome FormClassifierOutcome;
    static const FormClassifierOutcome NO_OUTCOME = AutofillUploadContents_Field_FormClassifierOutcome_NO_OUTCOME;
    static const FormClassifierOutcome NON_GENERATION_ELEMENT = AutofillUploadContents_Field_FormClassifierOutcome_NON_GENERATION_ELEMENT;
    static const FormClassifierOutcome GENERATION_ELEMENT = AutofillUploadContents_Field_FormClassifierOutcome_GENERATION_ELEMENT;
    static inline bool FormClassifierOutcome_IsValid(int value)
    {
        return AutofillUploadContents_Field_FormClassifierOutcome_IsValid(value);
    }
    static const FormClassifierOutcome FormClassifierOutcome_MIN = AutofillUploadContents_Field_FormClassifierOutcome_FormClassifierOutcome_MIN;
    static const FormClassifierOutcome FormClassifierOutcome_MAX = AutofillUploadContents_Field_FormClassifierOutcome_FormClassifierOutcome_MAX;
    static const int FormClassifierOutcome_ARRAYSIZE = AutofillUploadContents_Field_FormClassifierOutcome_FormClassifierOutcome_ARRAYSIZE;

    // accessors -------------------------------------------------------

    // required fixed32 signature = 6;
    bool has_signature() const;
    void clear_signature();
    static const int kSignatureFieldNumber = 6;
    ::google::protobuf::uint32 signature() const;
    void set_signature(::google::protobuf::uint32 value);

    // required fixed32 autofill_type = 7;
    bool has_autofill_type() const;
    void clear_autofill_type();
    static const int kAutofillTypeFieldNumber = 7;
    ::google::protobuf::uint32 autofill_type() const;
    void set_autofill_type(::google::protobuf::uint32 value);

    // optional string name = 8;
    bool has_name() const;
    void clear_name();
    static const int kNameFieldNumber = 8;
    const ::std::string& name() const;
    void set_name(const ::std::string& value);
    void set_name(const char* value);
    void set_name(const char* value, size_t size);
    ::std::string* mutable_name();
    ::std::string* release_name();
    void set_allocated_name(::std::string* name);

    // optional string autocomplete = 9;
    bool has_autocomplete() const;
    void clear_autocomplete();
    static const int kAutocompleteFieldNumber = 9;
    const ::std::string& autocomplete() const;
    void set_autocomplete(const ::std::string& value);
    void set_autocomplete(const char* value);
    void set_autocomplete(const char* value, size_t size);
    ::std::string* mutable_autocomplete();
    ::std::string* release_autocomplete();
    void set_allocated_autocomplete(::std::string* autocomplete);

    // optional string type = 10;
    bool has_type() const;
    void clear_type();
    static const int kTypeFieldNumber = 10;
    const ::std::string& type() const;
    void set_type(const ::std::string& value);
    void set_type(const char* value);
    void set_type(const char* value, size_t size);
    ::std::string* mutable_type();
    ::std::string* release_type();
    void set_allocated_type(::std::string* type);

    // optional .autofill.AutofillUploadContents.Field.PasswordGenerationType generation_type = 17;
    bool has_generation_type() const;
    void clear_generation_type();
    static const int kGenerationTypeFieldNumber = 17;
    ::autofill::AutofillUploadContents_Field_PasswordGenerationType generation_type() const;
    void set_generation_type(::autofill::AutofillUploadContents_Field_PasswordGenerationType value);

    // optional .autofill.AutofillUploadContents.Field.FormClassifierOutcome form_classifier_outcome = 18;
    bool has_form_classifier_outcome() const;
    void clear_form_classifier_outcome();
    static const int kFormClassifierOutcomeFieldNumber = 18;
    ::autofill::AutofillUploadContents_Field_FormClassifierOutcome form_classifier_outcome() const;
    void set_form_classifier_outcome(::autofill::AutofillUploadContents_Field_FormClassifierOutcome value);

    // optional string css_classes = 19;
    bool has_css_classes() const;
    void clear_css_classes();
    static const int kCssClassesFieldNumber = 19;
    const ::std::string& css_classes() const;
    void set_css_classes(const ::std::string& value);
    void set_css_classes(const char* value);
    void set_css_classes(const char* value, size_t size);
    ::std::string* mutable_css_classes();
    ::std::string* release_css_classes();
    void set_allocated_css_classes(::std::string* css_classes);

    // optional uint32 properties_mask = 20;
    bool has_properties_mask() const;
    void clear_properties_mask();
    static const int kPropertiesMaskFieldNumber = 20;
    ::google::protobuf::uint32 properties_mask() const;
    void set_properties_mask(::google::protobuf::uint32 value);

    // @@protoc_insertion_point(class_scope:autofill.AutofillUploadContents.Field)
private:
    inline void set_has_signature();
    inline void clear_has_signature();
    inline void set_has_autofill_type();
    inline void clear_has_autofill_type();
    inline void set_has_name();
    inline void clear_has_name();
    inline void set_has_autocomplete();
    inline void clear_has_autocomplete();
    inline void set_has_type();
    inline void clear_has_type();
    inline void set_has_generation_type();
    inline void clear_has_generation_type();
    inline void set_has_form_classifier_outcome();
    inline void clear_has_form_classifier_outcome();
    inline void set_has_css_classes();
    inline void clear_has_css_classes();
    inline void set_has_properties_mask();
    inline void clear_has_properties_mask();

    // helper for ByteSize()
    int RequiredFieldsByteSizeFallback() const;

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::uint32 signature_;
    ::google::protobuf::uint32 autofill_type_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr autocomplete_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    int generation_type_;
    int form_classifier_outcome_;
    ::google::protobuf::internal::ArenaStringPtr css_classes_;
    ::google::protobuf::uint32 properties_mask_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_server_2eproto_impl();
#else
    friend void protobuf_AddDesc_server_2eproto();
#endif
    friend void protobuf_AssignDesc_server_2eproto();
    friend void protobuf_ShutdownFile_server_2eproto();

    void InitAsDefaultInstance();
    static AutofillUploadContents_Field* default_instance_;
};
// -------------------------------------------------------------------

class AutofillUploadContents : public ::google::protobuf::MessageLite {
public:
    AutofillUploadContents();
    virtual ~AutofillUploadContents();

    AutofillUploadContents(const AutofillUploadContents& from);

    inline AutofillUploadContents& operator=(const AutofillUploadContents& from)
    {
        CopyFrom(from);
        return *this;
    }

    inline const ::std::string& unknown_fields() const
    {
        return _unknown_fields_.GetNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    inline ::std::string* mutable_unknown_fields()
    {
        return _unknown_fields_.MutableNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    static const AutofillUploadContents& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const AutofillUploadContents* internal_default_instance()
    {
        return default_instance_;
    }
#endif

    GOOGLE_ATTRIBUTE_NOINLINE void Swap(AutofillUploadContents* other);

    // implements Message ----------------------------------------------

    inline AutofillUploadContents* New() const { return New(NULL); }

    AutofillUploadContents* New(::google::protobuf::Arena* arena) const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const AutofillUploadContents& from);
    void MergeFrom(const AutofillUploadContents& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    void DiscardUnknownFields();
    int GetCachedSize() const { return _cached_size_; }

private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
    void InternalSwap(AutofillUploadContents* other);

private:
    inline ::google::protobuf::Arena* GetArenaNoVirtual() const
    {
        return _arena_ptr_;
    }
    inline ::google::protobuf::Arena* MaybeArenaPtr() const
    {
        return _arena_ptr_;
    }

public:
    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    typedef AutofillUploadContents_Field Field;

    // accessors -------------------------------------------------------

    // required string client_version = 1;
    bool has_client_version() const;
    void clear_client_version();
    static const int kClientVersionFieldNumber = 1;
    const ::std::string& client_version() const;
    void set_client_version(const ::std::string& value);
    void set_client_version(const char* value);
    void set_client_version(const char* value, size_t size);
    ::std::string* mutable_client_version();
    ::std::string* release_client_version();
    void set_allocated_client_version(::std::string* client_version);

    // required fixed64 form_signature = 2;
    bool has_form_signature() const;
    void clear_form_signature();
    static const int kFormSignatureFieldNumber = 2;
    ::google::protobuf::uint64 form_signature() const;
    void set_form_signature(::google::protobuf::uint64 value);

    // required bool autofill_used = 3;
    bool has_autofill_used() const;
    void clear_autofill_used();
    static const int kAutofillUsedFieldNumber = 3;
    bool autofill_used() const;
    void set_autofill_used(bool value);

    // required string data_present = 4;
    bool has_data_present() const;
    void clear_data_present();
    static const int kDataPresentFieldNumber = 4;
    const ::std::string& data_present() const;
    void set_data_present(const ::std::string& value);
    void set_data_present(const char* value);
    void set_data_present(const char* value, size_t size);
    ::std::string* mutable_data_present();
    ::std::string* release_data_present();
    void set_allocated_data_present(::std::string* data_present);

    // repeated group Field = 5 { ... };
    int field_size() const;
    void clear_field();
    static const int kFieldFieldNumber = 5;
    const ::autofill::AutofillUploadContents_Field& field(int index) const;
    ::autofill::AutofillUploadContents_Field* mutable_field(int index);
    ::autofill::AutofillUploadContents_Field* add_field();
    ::google::protobuf::RepeatedPtrField<::autofill::AutofillUploadContents_Field>*
    mutable_field();
    const ::google::protobuf::RepeatedPtrField<::autofill::AutofillUploadContents_Field>&
    field() const;

    // optional fixed64 action_signature = 13;
    bool has_action_signature() const;
    void clear_action_signature();
    static const int kActionSignatureFieldNumber = 13;
    ::google::protobuf::uint64 action_signature() const;
    void set_action_signature(::google::protobuf::uint64 value);

    // optional fixed64 login_form_signature = 14;
    bool has_login_form_signature() const;
    void clear_login_form_signature();
    static const int kLoginFormSignatureFieldNumber = 14;
    ::google::protobuf::uint64 login_form_signature() const;
    void set_login_form_signature(::google::protobuf::uint64 value);

    // optional bool submission = 15;
    bool has_submission() const;
    void clear_submission();
    static const int kSubmissionFieldNumber = 15;
    bool submission() const;
    void set_submission(bool value);

    // optional string form_name = 16;
    bool has_form_name() const;
    void clear_form_name();
    static const int kFormNameFieldNumber = 16;
    const ::std::string& form_name() const;
    void set_form_name(const ::std::string& value);
    void set_form_name(const char* value);
    void set_form_name(const char* value, size_t size);
    ::std::string* mutable_form_name();
    ::std::string* release_form_name();
    void set_allocated_form_name(::std::string* form_name);

    // @@protoc_insertion_point(class_scope:autofill.AutofillUploadContents)
private:
    inline void set_has_client_version();
    inline void clear_has_client_version();
    inline void set_has_form_signature();
    inline void clear_has_form_signature();
    inline void set_has_autofill_used();
    inline void clear_has_autofill_used();
    inline void set_has_data_present();
    inline void clear_has_data_present();
    inline void set_has_action_signature();
    inline void clear_has_action_signature();
    inline void set_has_login_form_signature();
    inline void clear_has_login_form_signature();
    inline void set_has_submission();
    inline void clear_has_submission();
    inline void set_has_form_name();
    inline void clear_has_form_name();

    // helper for ByteSize()
    int RequiredFieldsByteSizeFallback() const;

    ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
    ::google::protobuf::Arena* _arena_ptr_;

    ::google::protobuf::uint32 _has_bits_[1];
    mutable int _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr client_version_;
    ::google::protobuf::uint64 form_signature_;
    ::google::protobuf::internal::ArenaStringPtr data_present_;
    ::google::protobuf::RepeatedPtrField<::autofill::AutofillUploadContents_Field> field_;
    ::google::protobuf::uint64 action_signature_;
    ::google::protobuf::uint64 login_form_signature_;
    ::google::protobuf::internal::ArenaStringPtr form_name_;
    bool autofill_used_;
    bool submission_;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void protobuf_AddDesc_server_2eproto_impl();
#else
    friend void protobuf_AddDesc_server_2eproto();
#endif
    friend void protobuf_AssignDesc_server_2eproto();
    friend void protobuf_ShutdownFile_server_2eproto();

    void InitAsDefaultInstance();
    static AutofillUploadContents* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AutofillQueryContents_Form_Field

// required fixed32 signature = 5;
inline bool AutofillQueryContents_Form_Field::has_signature() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillQueryContents_Form_Field::set_has_signature()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void AutofillQueryContents_Form_Field::clear_has_signature()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillQueryContents_Form_Field::clear_signature()
{
    signature_ = 0u;
    clear_has_signature();
}
inline ::google::protobuf::uint32 AutofillQueryContents_Form_Field::signature() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillQueryContents.Form.Field.signature)
    return signature_;
}
inline void AutofillQueryContents_Form_Field::set_signature(::google::protobuf::uint32 value)
{
    set_has_signature();
    signature_ = value;
    // @@protoc_insertion_point(field_set:autofill.AutofillQueryContents.Form.Field.signature)
}

// optional string name = 8;
inline bool AutofillQueryContents_Form_Field::has_name() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutofillQueryContents_Form_Field::set_has_name()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void AutofillQueryContents_Form_Field::clear_has_name()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void AutofillQueryContents_Form_Field::clear_name()
{
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_name();
}
inline const ::std::string& AutofillQueryContents_Form_Field::name() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillQueryContents.Form.Field.name)
    return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillQueryContents_Form_Field::set_name(const ::std::string& value)
{
    set_has_name();
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:autofill.AutofillQueryContents.Form.Field.name)
}
inline void AutofillQueryContents_Form_Field::set_name(const char* value)
{
    set_has_name();
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:autofill.AutofillQueryContents.Form.Field.name)
}
inline void AutofillQueryContents_Form_Field::set_name(const char* value, size_t size)
{
    set_has_name();
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:autofill.AutofillQueryContents.Form.Field.name)
}
inline ::std::string* AutofillQueryContents_Form_Field::mutable_name()
{
    set_has_name();
    // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryContents.Form.Field.name)
    return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillQueryContents_Form_Field::release_name()
{
    // @@protoc_insertion_point(field_release:autofill.AutofillQueryContents.Form.Field.name)
    clear_has_name();
    return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillQueryContents_Form_Field::set_allocated_name(::std::string* name)
{
    if (name != NULL) {
        set_has_name();
    } else {
        clear_has_name();
    }
    name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
    // @@protoc_insertion_point(field_set_allocated:autofill.AutofillQueryContents.Form.Field.name)
}

// optional string type = 9;
inline bool AutofillQueryContents_Form_Field::has_type() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AutofillQueryContents_Form_Field::set_has_type()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void AutofillQueryContents_Form_Field::clear_has_type()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void AutofillQueryContents_Form_Field::clear_type()
{
    type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_type();
}
inline const ::std::string& AutofillQueryContents_Form_Field::type() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillQueryContents.Form.Field.type)
    return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillQueryContents_Form_Field::set_type(const ::std::string& value)
{
    set_has_type();
    type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:autofill.AutofillQueryContents.Form.Field.type)
}
inline void AutofillQueryContents_Form_Field::set_type(const char* value)
{
    set_has_type();
    type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:autofill.AutofillQueryContents.Form.Field.type)
}
inline void AutofillQueryContents_Form_Field::set_type(const char* value, size_t size)
{
    set_has_type();
    type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:autofill.AutofillQueryContents.Form.Field.type)
}
inline ::std::string* AutofillQueryContents_Form_Field::mutable_type()
{
    set_has_type();
    // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryContents.Form.Field.type)
    return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillQueryContents_Form_Field::release_type()
{
    // @@protoc_insertion_point(field_release:autofill.AutofillQueryContents.Form.Field.type)
    clear_has_type();
    return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillQueryContents_Form_Field::set_allocated_type(::std::string* type)
{
    if (type != NULL) {
        set_has_type();
    } else {
        clear_has_type();
    }
    type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
    // @@protoc_insertion_point(field_set_allocated:autofill.AutofillQueryContents.Form.Field.type)
}

// -------------------------------------------------------------------

// AutofillQueryContents_Form

// required fixed64 signature = 3;
inline bool AutofillQueryContents_Form::has_signature() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillQueryContents_Form::set_has_signature()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void AutofillQueryContents_Form::clear_has_signature()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillQueryContents_Form::clear_signature()
{
    signature_ = GOOGLE_ULONGLONG(0);
    clear_has_signature();
}
inline ::google::protobuf::uint64 AutofillQueryContents_Form::signature() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillQueryContents.Form.signature)
    return signature_;
}
inline void AutofillQueryContents_Form::set_signature(::google::protobuf::uint64 value)
{
    set_has_signature();
    signature_ = value;
    // @@protoc_insertion_point(field_set:autofill.AutofillQueryContents.Form.signature)
}

// repeated group Field = 4 { ... };
inline int AutofillQueryContents_Form::field_size() const
{
    return field_.size();
}
inline void AutofillQueryContents_Form::clear_field()
{
    field_.Clear();
}
inline const ::autofill::AutofillQueryContents_Form_Field& AutofillQueryContents_Form::field(int index) const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillQueryContents.Form.field)
    return field_.Get(index);
}
inline ::autofill::AutofillQueryContents_Form_Field* AutofillQueryContents_Form::mutable_field(int index)
{
    // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryContents.Form.field)
    return field_.Mutable(index);
}
inline ::autofill::AutofillQueryContents_Form_Field* AutofillQueryContents_Form::add_field()
{
    // @@protoc_insertion_point(field_add:autofill.AutofillQueryContents.Form.field)
    return field_.Add();
}
inline ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryContents_Form_Field>*
AutofillQueryContents_Form::mutable_field()
{
    // @@protoc_insertion_point(field_mutable_list:autofill.AutofillQueryContents.Form.field)
    return &field_;
}
inline const ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryContents_Form_Field>&
AutofillQueryContents_Form::field() const
{
    // @@protoc_insertion_point(field_list:autofill.AutofillQueryContents.Form.field)
    return field_;
}

// -------------------------------------------------------------------

// AutofillQueryContents

// required string client_version = 1;
inline bool AutofillQueryContents::has_client_version() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillQueryContents::set_has_client_version()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void AutofillQueryContents::clear_has_client_version()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillQueryContents::clear_client_version()
{
    client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_client_version();
}
inline const ::std::string& AutofillQueryContents::client_version() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillQueryContents.client_version)
    return client_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillQueryContents::set_client_version(const ::std::string& value)
{
    set_has_client_version();
    client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:autofill.AutofillQueryContents.client_version)
}
inline void AutofillQueryContents::set_client_version(const char* value)
{
    set_has_client_version();
    client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:autofill.AutofillQueryContents.client_version)
}
inline void AutofillQueryContents::set_client_version(const char* value, size_t size)
{
    set_has_client_version();
    client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:autofill.AutofillQueryContents.client_version)
}
inline ::std::string* AutofillQueryContents::mutable_client_version()
{
    set_has_client_version();
    // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryContents.client_version)
    return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillQueryContents::release_client_version()
{
    // @@protoc_insertion_point(field_release:autofill.AutofillQueryContents.client_version)
    clear_has_client_version();
    return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillQueryContents::set_allocated_client_version(::std::string* client_version)
{
    if (client_version != NULL) {
        set_has_client_version();
    } else {
        clear_has_client_version();
    }
    client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
    // @@protoc_insertion_point(field_set_allocated:autofill.AutofillQueryContents.client_version)
}

// repeated group Form = 2 { ... };
inline int AutofillQueryContents::form_size() const
{
    return form_.size();
}
inline void AutofillQueryContents::clear_form()
{
    form_.Clear();
}
inline const ::autofill::AutofillQueryContents_Form& AutofillQueryContents::form(int index) const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillQueryContents.form)
    return form_.Get(index);
}
inline ::autofill::AutofillQueryContents_Form* AutofillQueryContents::mutable_form(int index)
{
    // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryContents.form)
    return form_.Mutable(index);
}
inline ::autofill::AutofillQueryContents_Form* AutofillQueryContents::add_form()
{
    // @@protoc_insertion_point(field_add:autofill.AutofillQueryContents.form)
    return form_.Add();
}
inline ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryContents_Form>*
AutofillQueryContents::mutable_form()
{
    // @@protoc_insertion_point(field_mutable_list:autofill.AutofillQueryContents.form)
    return &form_;
}
inline const ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryContents_Form>&
AutofillQueryContents::form() const
{
    // @@protoc_insertion_point(field_list:autofill.AutofillQueryContents.form)
    return form_;
}

// -------------------------------------------------------------------

// AutofillQueryResponseContents_Field

// required fixed32 autofill_type = 3;
inline bool AutofillQueryResponseContents_Field::has_autofill_type() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillQueryResponseContents_Field::set_has_autofill_type()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void AutofillQueryResponseContents_Field::clear_has_autofill_type()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillQueryResponseContents_Field::clear_autofill_type()
{
    autofill_type_ = 0u;
    clear_has_autofill_type();
}
inline ::google::protobuf::uint32 AutofillQueryResponseContents_Field::autofill_type() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponseContents.Field.autofill_type)
    return autofill_type_;
}
inline void AutofillQueryResponseContents_Field::set_autofill_type(::google::protobuf::uint32 value)
{
    set_has_autofill_type();
    autofill_type_ = value;
    // @@protoc_insertion_point(field_set:autofill.AutofillQueryResponseContents.Field.autofill_type)
}

// -------------------------------------------------------------------

// AutofillQueryResponseContents

// optional bool upload_required = 1;
inline bool AutofillQueryResponseContents::has_upload_required() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillQueryResponseContents::set_has_upload_required()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void AutofillQueryResponseContents::clear_has_upload_required()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillQueryResponseContents::clear_upload_required()
{
    upload_required_ = false;
    clear_has_upload_required();
}
inline bool AutofillQueryResponseContents::upload_required() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponseContents.upload_required)
    return upload_required_;
}
inline void AutofillQueryResponseContents::set_upload_required(bool value)
{
    set_has_upload_required();
    upload_required_ = value;
    // @@protoc_insertion_point(field_set:autofill.AutofillQueryResponseContents.upload_required)
}

// repeated group Field = 2 { ... };
inline int AutofillQueryResponseContents::field_size() const
{
    return field_.size();
}
inline void AutofillQueryResponseContents::clear_field()
{
    field_.Clear();
}
inline const ::autofill::AutofillQueryResponseContents_Field& AutofillQueryResponseContents::field(int index) const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponseContents.field)
    return field_.Get(index);
}
inline ::autofill::AutofillQueryResponseContents_Field* AutofillQueryResponseContents::mutable_field(int index)
{
    // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryResponseContents.field)
    return field_.Mutable(index);
}
inline ::autofill::AutofillQueryResponseContents_Field* AutofillQueryResponseContents::add_field()
{
    // @@protoc_insertion_point(field_add:autofill.AutofillQueryResponseContents.field)
    return field_.Add();
}
inline ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryResponseContents_Field>*
AutofillQueryResponseContents::mutable_field()
{
    // @@protoc_insertion_point(field_mutable_list:autofill.AutofillQueryResponseContents.field)
    return &field_;
}
inline const ::google::protobuf::RepeatedPtrField<::autofill::AutofillQueryResponseContents_Field>&
AutofillQueryResponseContents::field() const
{
    // @@protoc_insertion_point(field_list:autofill.AutofillQueryResponseContents.field)
    return field_;
}

// -------------------------------------------------------------------

// AutofillUploadContents_Field

// required fixed32 signature = 6;
inline bool AutofillUploadContents_Field::has_signature() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillUploadContents_Field::set_has_signature()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void AutofillUploadContents_Field::clear_has_signature()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillUploadContents_Field::clear_signature()
{
    signature_ = 0u;
    clear_has_signature();
}
inline ::google::protobuf::uint32 AutofillUploadContents_Field::signature() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.signature)
    return signature_;
}
inline void AutofillUploadContents_Field::set_signature(::google::protobuf::uint32 value)
{
    set_has_signature();
    signature_ = value;
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.signature)
}

// required fixed32 autofill_type = 7;
inline bool AutofillUploadContents_Field::has_autofill_type() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutofillUploadContents_Field::set_has_autofill_type()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void AutofillUploadContents_Field::clear_has_autofill_type()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void AutofillUploadContents_Field::clear_autofill_type()
{
    autofill_type_ = 0u;
    clear_has_autofill_type();
}
inline ::google::protobuf::uint32 AutofillUploadContents_Field::autofill_type() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.autofill_type)
    return autofill_type_;
}
inline void AutofillUploadContents_Field::set_autofill_type(::google::protobuf::uint32 value)
{
    set_has_autofill_type();
    autofill_type_ = value;
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.autofill_type)
}

// optional string name = 8;
inline bool AutofillUploadContents_Field::has_name() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AutofillUploadContents_Field::set_has_name()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void AutofillUploadContents_Field::clear_has_name()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void AutofillUploadContents_Field::clear_name()
{
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_name();
}
inline const ::std::string& AutofillUploadContents_Field::name() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.name)
    return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents_Field::set_name(const ::std::string& value)
{
    set_has_name();
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.name)
}
inline void AutofillUploadContents_Field::set_name(const char* value)
{
    set_has_name();
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.Field.name)
}
inline void AutofillUploadContents_Field::set_name(const char* value, size_t size)
{
    set_has_name();
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.Field.name)
}
inline ::std::string* AutofillUploadContents_Field::mutable_name()
{
    set_has_name();
    // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.Field.name)
    return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents_Field::release_name()
{
    // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.Field.name)
    clear_has_name();
    return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents_Field::set_allocated_name(::std::string* name)
{
    if (name != NULL) {
        set_has_name();
    } else {
        clear_has_name();
    }
    name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
    // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.Field.name)
}

// optional string autocomplete = 9;
inline bool AutofillUploadContents_Field::has_autocomplete() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AutofillUploadContents_Field::set_has_autocomplete()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void AutofillUploadContents_Field::clear_has_autocomplete()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void AutofillUploadContents_Field::clear_autocomplete()
{
    autocomplete_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_autocomplete();
}
inline const ::std::string& AutofillUploadContents_Field::autocomplete() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.autocomplete)
    return autocomplete_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents_Field::set_autocomplete(const ::std::string& value)
{
    set_has_autocomplete();
    autocomplete_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.autocomplete)
}
inline void AutofillUploadContents_Field::set_autocomplete(const char* value)
{
    set_has_autocomplete();
    autocomplete_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.Field.autocomplete)
}
inline void AutofillUploadContents_Field::set_autocomplete(const char* value, size_t size)
{
    set_has_autocomplete();
    autocomplete_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.Field.autocomplete)
}
inline ::std::string* AutofillUploadContents_Field::mutable_autocomplete()
{
    set_has_autocomplete();
    // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.Field.autocomplete)
    return autocomplete_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents_Field::release_autocomplete()
{
    // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.Field.autocomplete)
    clear_has_autocomplete();
    return autocomplete_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents_Field::set_allocated_autocomplete(::std::string* autocomplete)
{
    if (autocomplete != NULL) {
        set_has_autocomplete();
    } else {
        clear_has_autocomplete();
    }
    autocomplete_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), autocomplete);
    // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.Field.autocomplete)
}

// optional string type = 10;
inline bool AutofillUploadContents_Field::has_type() const
{
    return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AutofillUploadContents_Field::set_has_type()
{
    _has_bits_[0] |= 0x00000010u;
}
inline void AutofillUploadContents_Field::clear_has_type()
{
    _has_bits_[0] &= ~0x00000010u;
}
inline void AutofillUploadContents_Field::clear_type()
{
    type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_type();
}
inline const ::std::string& AutofillUploadContents_Field::type() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.type)
    return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents_Field::set_type(const ::std::string& value)
{
    set_has_type();
    type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.type)
}
inline void AutofillUploadContents_Field::set_type(const char* value)
{
    set_has_type();
    type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.Field.type)
}
inline void AutofillUploadContents_Field::set_type(const char* value, size_t size)
{
    set_has_type();
    type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.Field.type)
}
inline ::std::string* AutofillUploadContents_Field::mutable_type()
{
    set_has_type();
    // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.Field.type)
    return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents_Field::release_type()
{
    // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.Field.type)
    clear_has_type();
    return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents_Field::set_allocated_type(::std::string* type)
{
    if (type != NULL) {
        set_has_type();
    } else {
        clear_has_type();
    }
    type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
    // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.Field.type)
}

// optional .autofill.AutofillUploadContents.Field.PasswordGenerationType generation_type = 17;
inline bool AutofillUploadContents_Field::has_generation_type() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AutofillUploadContents_Field::set_has_generation_type()
{
    _has_bits_[0] |= 0x00000020u;
}
inline void AutofillUploadContents_Field::clear_has_generation_type()
{
    _has_bits_[0] &= ~0x00000020u;
}
inline void AutofillUploadContents_Field::clear_generation_type()
{
    generation_type_ = 0;
    clear_has_generation_type();
}
inline ::autofill::AutofillUploadContents_Field_PasswordGenerationType AutofillUploadContents_Field::generation_type() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.generation_type)
    return static_cast<::autofill::AutofillUploadContents_Field_PasswordGenerationType>(generation_type_);
}
inline void AutofillUploadContents_Field::set_generation_type(::autofill::AutofillUploadContents_Field_PasswordGenerationType value)
{
    assert(::autofill::AutofillUploadContents_Field_PasswordGenerationType_IsValid(value));
    set_has_generation_type();
    generation_type_ = value;
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.generation_type)
}

// optional .autofill.AutofillUploadContents.Field.FormClassifierOutcome form_classifier_outcome = 18;
inline bool AutofillUploadContents_Field::has_form_classifier_outcome() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AutofillUploadContents_Field::set_has_form_classifier_outcome()
{
    _has_bits_[0] |= 0x00000040u;
}
inline void AutofillUploadContents_Field::clear_has_form_classifier_outcome()
{
    _has_bits_[0] &= ~0x00000040u;
}
inline void AutofillUploadContents_Field::clear_form_classifier_outcome()
{
    form_classifier_outcome_ = 0;
    clear_has_form_classifier_outcome();
}
inline ::autofill::AutofillUploadContents_Field_FormClassifierOutcome AutofillUploadContents_Field::form_classifier_outcome() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.form_classifier_outcome)
    return static_cast<::autofill::AutofillUploadContents_Field_FormClassifierOutcome>(form_classifier_outcome_);
}
inline void AutofillUploadContents_Field::set_form_classifier_outcome(::autofill::AutofillUploadContents_Field_FormClassifierOutcome value)
{
    assert(::autofill::AutofillUploadContents_Field_FormClassifierOutcome_IsValid(value));
    set_has_form_classifier_outcome();
    form_classifier_outcome_ = value;
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.form_classifier_outcome)
}

// optional string css_classes = 19;
inline bool AutofillUploadContents_Field::has_css_classes() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AutofillUploadContents_Field::set_has_css_classes()
{
    _has_bits_[0] |= 0x00000080u;
}
inline void AutofillUploadContents_Field::clear_has_css_classes()
{
    _has_bits_[0] &= ~0x00000080u;
}
inline void AutofillUploadContents_Field::clear_css_classes()
{
    css_classes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_css_classes();
}
inline const ::std::string& AutofillUploadContents_Field::css_classes() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.css_classes)
    return css_classes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents_Field::set_css_classes(const ::std::string& value)
{
    set_has_css_classes();
    css_classes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.css_classes)
}
inline void AutofillUploadContents_Field::set_css_classes(const char* value)
{
    set_has_css_classes();
    css_classes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.Field.css_classes)
}
inline void AutofillUploadContents_Field::set_css_classes(const char* value, size_t size)
{
    set_has_css_classes();
    css_classes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.Field.css_classes)
}
inline ::std::string* AutofillUploadContents_Field::mutable_css_classes()
{
    set_has_css_classes();
    // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.Field.css_classes)
    return css_classes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents_Field::release_css_classes()
{
    // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.Field.css_classes)
    clear_has_css_classes();
    return css_classes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents_Field::set_allocated_css_classes(::std::string* css_classes)
{
    if (css_classes != NULL) {
        set_has_css_classes();
    } else {
        clear_has_css_classes();
    }
    css_classes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), css_classes);
    // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.Field.css_classes)
}

// optional uint32 properties_mask = 20;
inline bool AutofillUploadContents_Field::has_properties_mask() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AutofillUploadContents_Field::set_has_properties_mask()
{
    _has_bits_[0] |= 0x00000100u;
}
inline void AutofillUploadContents_Field::clear_has_properties_mask()
{
    _has_bits_[0] &= ~0x00000100u;
}
inline void AutofillUploadContents_Field::clear_properties_mask()
{
    properties_mask_ = 0u;
    clear_has_properties_mask();
}
inline ::google::protobuf::uint32 AutofillUploadContents_Field::properties_mask() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.Field.properties_mask)
    return properties_mask_;
}
inline void AutofillUploadContents_Field::set_properties_mask(::google::protobuf::uint32 value)
{
    set_has_properties_mask();
    properties_mask_ = value;
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.Field.properties_mask)
}

// -------------------------------------------------------------------

// AutofillUploadContents

// required string client_version = 1;
inline bool AutofillUploadContents::has_client_version() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillUploadContents::set_has_client_version()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void AutofillUploadContents::clear_has_client_version()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline void AutofillUploadContents::clear_client_version()
{
    client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_client_version();
}
inline const ::std::string& AutofillUploadContents::client_version() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.client_version)
    return client_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents::set_client_version(const ::std::string& value)
{
    set_has_client_version();
    client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.client_version)
}
inline void AutofillUploadContents::set_client_version(const char* value)
{
    set_has_client_version();
    client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.client_version)
}
inline void AutofillUploadContents::set_client_version(const char* value, size_t size)
{
    set_has_client_version();
    client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.client_version)
}
inline ::std::string* AutofillUploadContents::mutable_client_version()
{
    set_has_client_version();
    // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.client_version)
    return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents::release_client_version()
{
    // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.client_version)
    clear_has_client_version();
    return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents::set_allocated_client_version(::std::string* client_version)
{
    if (client_version != NULL) {
        set_has_client_version();
    } else {
        clear_has_client_version();
    }
    client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
    // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.client_version)
}

// required fixed64 form_signature = 2;
inline bool AutofillUploadContents::has_form_signature() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutofillUploadContents::set_has_form_signature()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void AutofillUploadContents::clear_has_form_signature()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void AutofillUploadContents::clear_form_signature()
{
    form_signature_ = GOOGLE_ULONGLONG(0);
    clear_has_form_signature();
}
inline ::google::protobuf::uint64 AutofillUploadContents::form_signature() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.form_signature)
    return form_signature_;
}
inline void AutofillUploadContents::set_form_signature(::google::protobuf::uint64 value)
{
    set_has_form_signature();
    form_signature_ = value;
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.form_signature)
}

// required bool autofill_used = 3;
inline bool AutofillUploadContents::has_autofill_used() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AutofillUploadContents::set_has_autofill_used()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void AutofillUploadContents::clear_has_autofill_used()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void AutofillUploadContents::clear_autofill_used()
{
    autofill_used_ = false;
    clear_has_autofill_used();
}
inline bool AutofillUploadContents::autofill_used() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.autofill_used)
    return autofill_used_;
}
inline void AutofillUploadContents::set_autofill_used(bool value)
{
    set_has_autofill_used();
    autofill_used_ = value;
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.autofill_used)
}

// required string data_present = 4;
inline bool AutofillUploadContents::has_data_present() const
{
    return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AutofillUploadContents::set_has_data_present()
{
    _has_bits_[0] |= 0x00000008u;
}
inline void AutofillUploadContents::clear_has_data_present()
{
    _has_bits_[0] &= ~0x00000008u;
}
inline void AutofillUploadContents::clear_data_present()
{
    data_present_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_data_present();
}
inline const ::std::string& AutofillUploadContents::data_present() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.data_present)
    return data_present_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents::set_data_present(const ::std::string& value)
{
    set_has_data_present();
    data_present_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.data_present)
}
inline void AutofillUploadContents::set_data_present(const char* value)
{
    set_has_data_present();
    data_present_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.data_present)
}
inline void AutofillUploadContents::set_data_present(const char* value, size_t size)
{
    set_has_data_present();
    data_present_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.data_present)
}
inline ::std::string* AutofillUploadContents::mutable_data_present()
{
    set_has_data_present();
    // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.data_present)
    return data_present_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents::release_data_present()
{
    // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.data_present)
    clear_has_data_present();
    return data_present_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents::set_allocated_data_present(::std::string* data_present)
{
    if (data_present != NULL) {
        set_has_data_present();
    } else {
        clear_has_data_present();
    }
    data_present_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_present);
    // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.data_present)
}

// repeated group Field = 5 { ... };
inline int AutofillUploadContents::field_size() const
{
    return field_.size();
}
inline void AutofillUploadContents::clear_field()
{
    field_.Clear();
}
inline const ::autofill::AutofillUploadContents_Field& AutofillUploadContents::field(int index) const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.field)
    return field_.Get(index);
}
inline ::autofill::AutofillUploadContents_Field* AutofillUploadContents::mutable_field(int index)
{
    // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.field)
    return field_.Mutable(index);
}
inline ::autofill::AutofillUploadContents_Field* AutofillUploadContents::add_field()
{
    // @@protoc_insertion_point(field_add:autofill.AutofillUploadContents.field)
    return field_.Add();
}
inline ::google::protobuf::RepeatedPtrField<::autofill::AutofillUploadContents_Field>*
AutofillUploadContents::mutable_field()
{
    // @@protoc_insertion_point(field_mutable_list:autofill.AutofillUploadContents.field)
    return &field_;
}
inline const ::google::protobuf::RepeatedPtrField<::autofill::AutofillUploadContents_Field>&
AutofillUploadContents::field() const
{
    // @@protoc_insertion_point(field_list:autofill.AutofillUploadContents.field)
    return field_;
}

// optional fixed64 action_signature = 13;
inline bool AutofillUploadContents::has_action_signature() const
{
    return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AutofillUploadContents::set_has_action_signature()
{
    _has_bits_[0] |= 0x00000020u;
}
inline void AutofillUploadContents::clear_has_action_signature()
{
    _has_bits_[0] &= ~0x00000020u;
}
inline void AutofillUploadContents::clear_action_signature()
{
    action_signature_ = GOOGLE_ULONGLONG(0);
    clear_has_action_signature();
}
inline ::google::protobuf::uint64 AutofillUploadContents::action_signature() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.action_signature)
    return action_signature_;
}
inline void AutofillUploadContents::set_action_signature(::google::protobuf::uint64 value)
{
    set_has_action_signature();
    action_signature_ = value;
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.action_signature)
}

// optional fixed64 login_form_signature = 14;
inline bool AutofillUploadContents::has_login_form_signature() const
{
    return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AutofillUploadContents::set_has_login_form_signature()
{
    _has_bits_[0] |= 0x00000040u;
}
inline void AutofillUploadContents::clear_has_login_form_signature()
{
    _has_bits_[0] &= ~0x00000040u;
}
inline void AutofillUploadContents::clear_login_form_signature()
{
    login_form_signature_ = GOOGLE_ULONGLONG(0);
    clear_has_login_form_signature();
}
inline ::google::protobuf::uint64 AutofillUploadContents::login_form_signature() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.login_form_signature)
    return login_form_signature_;
}
inline void AutofillUploadContents::set_login_form_signature(::google::protobuf::uint64 value)
{
    set_has_login_form_signature();
    login_form_signature_ = value;
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.login_form_signature)
}

// optional bool submission = 15;
inline bool AutofillUploadContents::has_submission() const
{
    return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AutofillUploadContents::set_has_submission()
{
    _has_bits_[0] |= 0x00000080u;
}
inline void AutofillUploadContents::clear_has_submission()
{
    _has_bits_[0] &= ~0x00000080u;
}
inline void AutofillUploadContents::clear_submission()
{
    submission_ = false;
    clear_has_submission();
}
inline bool AutofillUploadContents::submission() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.submission)
    return submission_;
}
inline void AutofillUploadContents::set_submission(bool value)
{
    set_has_submission();
    submission_ = value;
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.submission)
}

// optional string form_name = 16;
inline bool AutofillUploadContents::has_form_name() const
{
    return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AutofillUploadContents::set_has_form_name()
{
    _has_bits_[0] |= 0x00000100u;
}
inline void AutofillUploadContents::clear_has_form_name()
{
    _has_bits_[0] &= ~0x00000100u;
}
inline void AutofillUploadContents::clear_form_name()
{
    form_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_form_name();
}
inline const ::std::string& AutofillUploadContents::form_name() const
{
    // @@protoc_insertion_point(field_get:autofill.AutofillUploadContents.form_name)
    return form_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents::set_form_name(const ::std::string& value)
{
    set_has_form_name();
    form_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:autofill.AutofillUploadContents.form_name)
}
inline void AutofillUploadContents::set_form_name(const char* value)
{
    set_has_form_name();
    form_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:autofill.AutofillUploadContents.form_name)
}
inline void AutofillUploadContents::set_form_name(const char* value, size_t size)
{
    set_has_form_name();
    form_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:autofill.AutofillUploadContents.form_name)
}
inline ::std::string* AutofillUploadContents::mutable_form_name()
{
    set_has_form_name();
    // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadContents.form_name)
    return form_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AutofillUploadContents::release_form_name()
{
    // @@protoc_insertion_point(field_release:autofill.AutofillUploadContents.form_name)
    clear_has_form_name();
    return form_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillUploadContents::set_allocated_form_name(::std::string* form_name)
{
    if (form_name != NULL) {
        set_has_form_name();
    } else {
        clear_has_form_name();
    }
    form_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), form_name);
    // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadContents.form_name)
}

#endif // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// @@protoc_insertion_point(namespace_scope)

} // namespace autofill

#ifndef SWIG
namespace google {
namespace protobuf {

    template <>
    struct is_proto_enum<::autofill::AutofillUploadContents_Field_PasswordGenerationType> : ::google::protobuf::internal::true_type {
    };
    template <>
    struct is_proto_enum<::autofill::AutofillUploadContents_Field_FormClassifierOutcome> : ::google::protobuf::internal::true_type {
    };

} // namespace protobuf
} // namespace google
#endif // SWIG

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_server_2eproto__INCLUDED
